{"version":3,"file":"index.js","sources":["../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/decorator/guard/after-before.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/decorator/guard/index.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/decorator/index.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/hash/time33.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/hash/index.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/adap/index.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/js-core/mixin/mixin.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/js-core/mixin/index.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/js-core/number/number.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/js-core/number/index.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/js-core/promise/await-promise.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/js-core/promise/index.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/js-core/string/url.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/js-core/string/index.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/js-core/index.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/siyuan/mergePluginPackage.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/siyuan/index.js","../../node_modules/.pnpm/@llej+js_util@1.0.10/node_modules/@llej/js_util/dist/src/index.js","../../src/libs/api.ts","../../src/expr/constant.ts","../../src/expr/fn/get_exprBlocks.ts","../../node_modules/.pnpm/tslib@2.6.3/node_modules/tslib/tslib.es6.mjs","../../__vite-browser-external","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/shared.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/types.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/path.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/scope.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/node-path.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/path-visitor.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/equiv.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/fork.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/operators/core.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/operators/es2016.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/operators/es2020.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/operators/es2021.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/core.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/es6.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/es2016.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/es2017.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/es2018.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/es2019.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/es2020.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/es2021.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/es2022.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/es-proposals.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/jsx.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/type-annotations.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/flow.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/esprima.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/babel-core.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/babel.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/def/typescript.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/gen/namedTypes.js","../../node_modules/.pnpm/ast-types@0.16.1/node_modules/ast-types/lib/main.js","../../node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/tiny-invariant.cjs.js","../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/base64.js","../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/base64-vlq.js","../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/util.js","../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/array-set.js","../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/mapping-list.js","../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-map-generator.js","../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/binary-search.js","../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/quick-sort.js","../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-map-consumer.js","../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/lib/source-node.js","../../node_modules/.pnpm/source-map@0.6.1/node_modules/source-map/source-map.js","../../node_modules/.pnpm/recast@0.23.9/node_modules/recast/lib/util.js","../../node_modules/.pnpm/esprima@4.0.1/node_modules/esprima/dist/esprima.js","../../node_modules/.pnpm/recast@0.23.9/node_modules/recast/parsers/esprima.js","../../node_modules/.pnpm/recast@0.23.9/node_modules/recast/lib/options.js","../../node_modules/.pnpm/recast@0.23.9/node_modules/recast/lib/mapping.js","../../node_modules/.pnpm/recast@0.23.9/node_modules/recast/lib/lines.js","../../node_modules/.pnpm/recast@0.23.9/node_modules/recast/lib/comments.js","../../node_modules/.pnpm/recast@0.23.9/node_modules/recast/lib/parser.js","../../node_modules/.pnpm/recast@0.23.9/node_modules/recast/lib/fast-path.js","../../node_modules/.pnpm/recast@0.23.9/node_modules/recast/lib/patcher.js","../../node_modules/.pnpm/recast@0.23.9/node_modules/recast/lib/printer.js","../../node_modules/.pnpm/recast@0.23.9/node_modules/recast/main.js","../../src/expr/index.ts"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.run_before = exports.run_after = void 0;\n/** 函数运行之后，执行里面的回调函数,会将函数执行的值赋给他 */\nfunction run_after(f) {\n    return function name(target, propertyKey, descriptor) {\n        return Object.assign(Object.assign({}, descriptor), { value(...arg) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    const res = yield descriptor.value(...arg);\n                    yield f(res);\n                    return res;\n                });\n            } });\n    };\n}\nexports.run_after = run_after;\n/** 函数运行之前，执行里面的回调函数 */\nfunction run_before(f) {\n    return function name(target, propertyKey, descriptor) {\n        return Object.assign(Object.assign({}, descriptor), { value(...arg) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    yield f();\n                    const res = yield descriptor.value(...arg);\n                    return res;\n                });\n            } });\n    };\n}\nexports.run_before = run_before;\n//# sourceMappingURL=after-before.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./after-before\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.guard = void 0;\nconst guard = __importStar(require(\"./guard\"));\nexports.guard = guard;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hash_time33 = void 0;\n/**\n    A string hashing function based on Daniel J. Bernstein's popular 'times 33' hash algorithm.\n*/\nfunction hash_time33(text) {\n    let hash = 5381, index = text.length;\n    while (index) {\n        ///@ts-ignore\n        hash = (hash * 33) ^ text.codePointAt(--index);\n    }\n    return hash >>> 0;\n}\nexports.hash_time33 = hash_time33;\n//# sourceMappingURL=time33.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./time33\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.test = void 0;\n// export * from \"./cb-promise\";\nexports.test = 1;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.merge_obj = exports.applyMixins = void 0;\n/** mixin 多个对象的属性 */\nfunction applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            derivedCtor.prototype[name] = baseCtor.prototype[name];\n        });\n    });\n}\nexports.applyMixins = applyMixins;\n/** 创建一个新对象，然后将其他对象的属性都附加上去，后面的可能会覆盖掉前面的 */\nfunction merge_obj(...objs) {\n    let obj = {};\n    for (let i = 0; i < objs.length; i++) {\n        const el = objs[i];\n        if (el instanceof Object)\n            obj = Object.assign(Object.assign({}, obj), el);\n    }\n    return obj;\n}\nexports.merge_obj = merge_obj;\n//# sourceMappingURL=mixin.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./mixin\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.take_two_decimal_places = void 0;\n/** 取小数点后两位 */\nfunction take_two_decimal_places(num) {\n    return Number(num).toFixed(2);\n}\nexports.take_two_decimal_places = take_two_decimal_places;\n//# sourceMappingURL=number.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./number\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.awaitPromise = void 0;\n/** 包裹promise,然后回以回调 */\nfunction awaitPromise({ getPromise, \n/** 这里的也要描述类型？ */\nsucceed = (r) => { }, error = () => { }, end = () => { }, midway = () => { }, }) {\n    let running = false;\n    return function (...arg) {\n        if (running) {\n            midway();\n        }\n        else {\n            running = true;\n            const promise = getPromise.apply(this, arg);\n            promise\n                .then((r) => {\n                succeed(r);\n            })\n                .catch(error)\n                .finally(() => {\n                end();\n                running = false;\n            });\n        }\n    };\n}\nexports.awaitPromise = awaitPromise;\n//# sourceMappingURL=await-promise.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./await-promise\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._URL = void 0;\nclass _URL {\n    constructor(url) {\n        this.par_obj = _URL.getParameters(url);\n    }\n    /** 解析url中的参数 最少会返回一个{}对象 */\n    static getParameters(url_str) {\n        const url = decodeURIComponent(url_str);\n        let obj = url.match(/([^?=&]+)(=([^&]*))/g);\n        if (obj === null) {\n            return {};\n        }\n        const par = obj.reduce((a, v) => (a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1), a), {});\n        return par;\n    }\n    /** 获取对应key的值，没有的情况下返回空字符串 */\n    getValue(key) {\n        const value = this.par_obj[key];\n        if (value === undefined) {\n            return \"\";\n        }\n        return value;\n    }\n}\nexports._URL = _URL;\n//# sourceMappingURL=url.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./url\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.string = exports.promise = exports.number = exports.mixin = void 0;\nconst mixin = __importStar(require(\"./mixin\"));\nexports.mixin = mixin;\nconst number = __importStar(require(\"./number\"));\nexports.number = number;\nconst promise = __importStar(require(\"./promise\"));\nexports.promise = promise;\nconst string = __importStar(require(\"./string\"));\nexports.string = string;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergePluginPackage = void 0;\nfunction mergePluginPackage(pkg, plugin) {\n    return Object.assign(Object.assign({}, plugin), { version: pkg.version, name: pkg.name, url: pkg.repository, author: pkg.author });\n}\nexports.mergePluginPackage = mergePluginPackage;\n//# sourceMappingURL=mergePluginPackage.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bindData = exports.mergePluginPackage = void 0;\nconst mergePluginPackage_1 = require(\"./mergePluginPackage\");\nObject.defineProperty(exports, \"mergePluginPackage\", { enumerable: true, get: function () { return mergePluginPackage_1.mergePluginPackage; } });\n/** 插件专用，用于管理 data 的类型 */\nfunction bindData(opt) {\n    const { that, storageName, initValue } = opt;\n    let _value = initValue;\n    const loadValue = () => __awaiter(this, void 0, void 0, function* () {\n        const value = yield that.loadData(storageName);\n        if (value !== \"\") {\n            _value = value;\n        }\n        return _value;\n    });\n    // 立刻一次加载执行\n    loadValue();\n    return {\n        /** 会执行 loadData 然后再返回结果*/\n        loadValue,\n        value: () => _value,\n        set(value) {\n            _value = value;\n            that.saveData(storageName, _value);\n        },\n    };\n}\nexports.bindData = bindData;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.siyuan = exports.js_core = exports.adap = exports.hash = exports.decorator = void 0;\nconst decorator = __importStar(require(\"./decorator\"));\nexports.decorator = decorator;\nconst hash = __importStar(require(\"./hash\"));\nexports.hash = hash;\nconst adap = __importStar(require(\"./adap\"));\nexports.adap = adap;\nconst js_core = __importStar(require(\"./js-core\"));\nexports.js_core = js_core;\nconst siyuan = __importStar(require(\"./siyuan/\"));\nexports.siyuan = siyuan;\n//# sourceMappingURL=index.js.map","/**\n * Copyright (c) 2023 frostime. All rights reserved.\n * https://github.com/frostime/sy-plugin-template-vite\n *\n * See API Document in [API.md](https://github.com/siyuan-note/siyuan/blob/master/API.md)\n * API 文档见 [API_zh_CN.md](https://github.com/siyuan-note/siyuan/blob/master/API_zh_CN.md)\n */\n\nimport { fetchSyncPost, IWebSocketData } from \"siyuan\";\n\nasync function request(url: string, data: any) {\n  let response: IWebSocketData = await fetchSyncPost(url, data);\n  let res = response.code === 0 ? response.data : null;\n  return res;\n}\n\n// **************************************** Noteboook ****************************************\n\nexport async function lsNotebooks(): Promise<IReslsNotebooks> {\n  let url = \"/api/notebook/lsNotebooks\";\n  return request(url, \"\");\n}\n\nexport async function openNotebook(notebook: NotebookId) {\n  let url = \"/api/notebook/openNotebook\";\n  return request(url, { notebook: notebook });\n}\n\nexport async function closeNotebook(notebook: NotebookId) {\n  let url = \"/api/notebook/closeNotebook\";\n  return request(url, { notebook: notebook });\n}\n\nexport async function renameNotebook(notebook: NotebookId, name: string) {\n  let url = \"/api/notebook/renameNotebook\";\n  return request(url, { notebook: notebook, name: name });\n}\n\nexport async function createNotebook(name: string): Promise<Notebook> {\n  let url = \"/api/notebook/createNotebook\";\n  return request(url, { name: name });\n}\n\nexport async function removeNotebook(notebook: NotebookId) {\n  let url = \"/api/notebook/removeNotebook\";\n  return request(url, { notebook: notebook });\n}\n\nexport async function getNotebookConf(notebook: NotebookId): Promise<IResGetNotebookConf> {\n  let data = { notebook: notebook };\n  let url = \"/api/notebook/getNotebookConf\";\n  return request(url, data);\n}\n\nexport async function setNotebookConf(\n  notebook: NotebookId,\n  conf: NotebookConf,\n): Promise<NotebookConf> {\n  let data = { notebook: notebook, conf: conf };\n  let url = \"/api/notebook/setNotebookConf\";\n  return request(url, data);\n}\n\n// **************************************** File Tree ****************************************\nexport async function createDocWithMd(\n  notebook: NotebookId,\n  path: string,\n  markdown: string,\n): Promise<DocumentId> {\n  let data = {\n    notebook: notebook,\n    path: path,\n    markdown: markdown,\n  };\n  let url = \"/api/filetree/createDocWithMd\";\n  return request(url, data);\n}\n\nexport async function renameDoc(\n  notebook: NotebookId,\n  path: string,\n  title: string,\n): Promise<DocumentId> {\n  let data = {\n    doc: notebook,\n    path: path,\n    title: title,\n  };\n  let url = \"/api/filetree/renameDoc\";\n  return request(url, data);\n}\n\nexport async function removeDoc(notebook: NotebookId, path: string) {\n  let data = {\n    notebook: notebook,\n    path: path,\n  };\n  let url = \"/api/filetree/removeDoc\";\n  return request(url, data);\n}\n\nexport async function moveDocs(fromPaths: string[], toNotebook: NotebookId, toPath: string) {\n  let data = {\n    fromPaths: fromPaths,\n    toNotebook: toNotebook,\n    toPath: toPath,\n  };\n  let url = \"/api/filetree/moveDocs\";\n  return request(url, data);\n}\n\nexport async function getHPathByPath(notebook: NotebookId, path: string): Promise<string> {\n  let data = {\n    notebook: notebook,\n    path: path,\n  };\n  let url = \"/api/filetree/getHPathByPath\";\n  return request(url, data);\n}\n\nexport async function getHPathByID(id: BlockId): Promise<string> {\n  let data = {\n    id: id,\n  };\n  let url = \"/api/filetree/getHPathByID\";\n  return request(url, data);\n}\n\n// **************************************** Asset Files ****************************************\n\nexport async function upload(assetsDirPath: string, files: string | Blob[]): Promise<IResUpload> {\n  let form = new FormData();\n  form.append(\"assetsDirPath\", assetsDirPath);\n  for (let file of files) {\n    form.append(\"file[]\", file);\n  }\n  let url = \"/api/asset/upload\";\n  return request(url, form);\n}\n\n// **************************************** Block ****************************************\ntype DataType = \"markdown\" | \"dom\";\nexport async function insertBlock(\n  dataType: DataType,\n  data: string,\n  nextID?: BlockId,\n  previousID?: BlockId,\n  parentID?: BlockId,\n): Promise<IResdoOperations[]> {\n  let payload = {\n    dataType: dataType,\n    data: data,\n    nextID: nextID,\n    previousID: previousID,\n    parentID: parentID,\n  };\n  let url = \"/api/block/insertBlock\";\n  return request(url, payload);\n}\n\nexport async function prependBlock(\n  dataType: DataType,\n  data: string,\n  parentID: BlockId | DocumentId,\n): Promise<IResdoOperations[]> {\n  let payload = {\n    dataType: dataType,\n    data: data,\n    parentID: parentID,\n  };\n  let url = \"/api/block/prependBlock\";\n  return request(url, payload);\n}\n\nexport async function appendBlock(\n  dataType: DataType,\n  data: string,\n  parentID: BlockId | DocumentId,\n): Promise<IResdoOperations[]> {\n  let payload = {\n    dataType: dataType,\n    data: data,\n    parentID: parentID,\n  };\n  let url = \"/api/block/appendBlock\";\n  return request(url, payload);\n}\n\nexport async function updateBlock(\n  dataType: DataType,\n  data: string,\n  id: BlockId,\n): Promise<IResdoOperations[]> {\n  let payload = {\n    dataType: dataType,\n    data: data,\n    id: id,\n  };\n  let url = \"/api/block/updateBlock\";\n  return request(url, payload);\n}\n\nexport async function deleteBlock(id: BlockId): Promise<IResdoOperations[]> {\n  let data = {\n    id: id,\n  };\n  let url = \"/api/block/deleteBlock\";\n  return request(url, data);\n}\n\nexport async function moveBlock(\n  id: BlockId,\n  previousID?: PreviousID,\n  parentID?: ParentID,\n): Promise<IResdoOperations[]> {\n  let data = {\n    id: id,\n    previousID: previousID,\n    parentID: parentID,\n  };\n  let url = \"/api/block/moveBlock\";\n  return request(url, data);\n}\n\nexport async function getBlockKramdown(id: BlockId): Promise<IResGetBlockKramdown> {\n  let data = {\n    id: id,\n  };\n  let url = \"/api/block/getBlockKramdown\";\n  return request(url, data);\n}\n\nexport async function getChildBlocks(id: BlockId): Promise<IResGetChildBlock[]> {\n  let data = {\n    id: id,\n  };\n  let url = \"/api/block/getChildBlocks\";\n  return request(url, data);\n}\n\nexport async function transferBlockRef(fromID: BlockId, toID: BlockId, refIDs: BlockId[]) {\n  let data = {\n    fromID: fromID,\n    toID: toID,\n    refIDs: refIDs,\n  };\n  let url = \"/api/block/transferBlockRef\";\n  return request(url, data);\n}\n\n// **************************************** Attributes ****************************************\nexport async function setBlockAttrs(id: BlockId, attrs: { [key: string]: string }) {\n  let data = {\n    id: id,\n    attrs: attrs,\n  };\n  let url = \"/api/attr/setBlockAttrs\";\n  return request(url, data);\n}\n\nexport async function getBlockAttrs(id: BlockId): Promise<{ [key: string]: string }> {\n  let data = {\n    id: id,\n  };\n  let url = \"/api/attr/getBlockAttrs\";\n  return request(url, data);\n}\n\n// **************************************** SQL ****************************************\n\nexport async function sql(sql: string): Promise<any[]> {\n  let sqldata = {\n    stmt: sql,\n  };\n  let url = \"/api/query/sql\";\n  return request(url, sqldata);\n}\n\nexport async function getBlockByID(blockId: string): Promise<Block> {\n  let sqlScript = `select * from blocks where id ='${blockId}'`;\n  let data = await sql(sqlScript);\n  return data[0];\n}\n\n// **************************************** Template ****************************************\n\nexport async function render(id: DocumentId, path: string): Promise<IResGetTemplates> {\n  let data = {\n    id: id,\n    path: path,\n  };\n  let url = \"/api/template/render\";\n  return request(url, data);\n}\n\nexport async function renderSprig(template: string): Promise<string> {\n  let url = \"/api/template/renderSprig\";\n  return request(url, { template: template });\n}\n\n// **************************************** File ****************************************\n\n/**\n * https://github.com/siyuan-note/siyuan/blob/master/API_zh_CN.md#%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6\n * \"/data/box_id/doc_id.sy\"\n */\nexport async function getFile(path: string): Promise<any> {\n  let data = {\n    path: path,\n  };\n  let url = \"/api/file/getFile\";\n  try {\n    let file = await fetchSyncPost(url, data);\n    return file;\n  } catch (error_msg) {\n    throw error_msg\n    console.log(\"[error_msg]\", error_msg);\n    return null;\n  }\n}\n\nexport async function putFile(path: string, isDir: boolean, file: any) {\n  let form = new FormData();\n  form.append(\"path\", path);\n  form.append(\"isDir\", isDir.toString());\n  // Copyright (c) 2023, terwer.\n  // https://github.com/terwer/siyuan-plugin-importer/blob/v1.4.1/src/api/kernel-api.ts\n  form.append(\"modTime\", Math.floor(Date.now() / 1000).toString());\n  form.append(\"file\", file);\n  let url = \"/api/file/putFile\";\n  return request(url, form);\n}\n\nexport async function removeFile(path: string) {\n  let data = {\n    path: path,\n  };\n  let url = \"/api/file/removeFile\";\n  return request(url, data);\n}\n\nexport async function readDir(path: string): Promise<IResReadDir> {\n  let data = {\n    path: path,\n  };\n  let url = \"/api/file/readDir\";\n  return request(url, data);\n}\n\n// **************************************** Export ****************************************\n\nexport async function exportMdContent(id: DocumentId): Promise<IResExportMdContent> {\n  let data = {\n    id: id,\n  };\n  let url = \"/api/export/exportMdContent\";\n  return request(url, data);\n}\n\nexport async function exportResources(paths: string[], name: string): Promise<IResExportResources> {\n  let data = {\n    paths: paths,\n    name: name,\n  };\n  let url = \"/api/export/exportResources\";\n  return request(url, data);\n}\n\n// **************************************** Convert ****************************************\n\nexport type PandocArgs = string;\nexport async function pandoc(args: PandocArgs[]) {\n  let data = {\n    args: args,\n  };\n  let url = \"/api/convert/pandoc\";\n  return request(url, data);\n}\n\n// **************************************** Notification ****************************************\n\n// /api/notification/pushMsg\n// {\n//     \"msg\": \"test\",\n//     \"timeout\": 7000\n//   }\nexport async function pushMsg(msg: string, timeout: number = 7000) {\n  let payload = {\n    msg: msg,\n    timeout: timeout,\n  };\n  let url = \"/api/notification/pushMsg\";\n  return request(url, payload);\n}\n\nexport async function pushErrMsg(msg: string, timeout: number = 7000) {\n  let payload = {\n    msg: msg,\n    timeout: timeout,\n  };\n  let url = \"/api/notification/pushErrMsg\";\n  return request(url, payload);\n}\n\n// **************************************** Network ****************************************\nexport async function forwardProxy(\n  url: string,\n  method: string = \"GET\",\n  payload: any = {},\n  headers: any[] = [],\n  timeout: number = 7000,\n  contentType: string = \"text/html\",\n): Promise<IResForwardProxy> {\n  let data = {\n    url: url,\n    method: method,\n    timeout: timeout,\n    contentType: contentType,\n    headers: headers,\n    payload: payload,\n  };\n  let url1 = \"/api/network/forwardProxy\";\n  return request(url1, data);\n}\n\n// **************************************** System ****************************************\n\nexport async function bootProgress(): Promise<IResBootProgress> {\n  return request(\"/api/system/bootProgress\", {});\n}\n\nexport async function version(): Promise<string> {\n  return request(\"/api/system/version\", {});\n}\n\nexport async function currentTime(): Promise<number> {\n  return request(\"/api/system/currentTime\", {});\n}\n\nexport async function insertLocalAssets(data: {\n  assetPaths: string[];\n  isUpload: boolean;\n  id: string;\n}): Promise<{\n  succMap: {\n    [assetFileName: string]: string;\n  };\n}> {\n  return request(\"/api/asset/insertLocalAssets\", data);\n}\n","/** 用于控制插件属性显示 */\r\nexport const pluginClassName = \"expr-plugin\";\r\nexport const exprName = \"custom-expr\";\r\nexport const exprValueName = \"custom-expr-value\";","import { sql } from \"~/libs/api\";\r\nimport type { MergedBlock } from \"../type\";\r\nimport { exprName } from \"../constant\";\r\n\r\nexport async function get_exprBlocks(\r\n  /** 会查询此数组中所有id的表达式 */\r\n  exprIDs: string[],\r\n  /** 传递此参数时还会查询所有此时间后更新的 */ updated?: number,\r\n) {\r\n  const exprIDsStr = exprIDs.map((id) => `\"${id}\"`).join(\",\");\r\n\r\n  const exprBlock: MergedBlock[] =\r\n    (await sql(\r\n      `SELECT b.*,a.id AS a_id,a.\"name\" AS a_name,a.\"value\" as a_value,a.\"type\" AS a_type,a.block_id AS a_block_id,a.root_id AS a_root_id,a.box AS a_box,a.\"path\" AS a_path\r\n      FROM blocks AS  b\r\n      INNER JOIN attributes AS a\r\n      ON b.id = a.block_id\r\n      WHERE\r\n          a.name = \"${exprName}\"\r\n        AND\r\n          (\r\n            ( b.id IN (${exprIDsStr}) )\r\n            ${\r\n              updated\r\n                ? `\r\n              OR\r\n            (CAST(b.updated AS INTEGER)  > ${updated})`\r\n                : \"\"\r\n            }\r\n          )\r\n      ORDER BY b.updated DESC;`,\r\n    )) ?? [];\r\n\r\n  return exprBlock;\r\n}\r\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","export default {}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maybeSetModuleExports = void 0;\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"./types\"));\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var Type = types.Type;\n    var builtin = types.builtInTypes;\n    var isNumber = builtin.number;\n    // An example of constructing a new type with arbitrary constraints from\n    // an existing type.\n    function geq(than) {\n        return Type.from(function (value) { return isNumber.check(value) && value >= than; }, isNumber + \" >= \" + than);\n    }\n    ;\n    // Default value-returning functions that may optionally be passed as a\n    // third argument to Def.prototype.field.\n    var defaults = {\n        // Functions were used because (among other reasons) that's the most\n        // elegant way to allow for the emptyArray one always to give a new\n        // array instance.\n        \"null\": function () { return null; },\n        \"emptyArray\": function () { return []; },\n        \"false\": function () { return false; },\n        \"true\": function () { return true; },\n        \"undefined\": function () { },\n        \"use strict\": function () { return \"use strict\"; }\n    };\n    var naiveIsPrimitive = Type.or(builtin.string, builtin.number, builtin.boolean, builtin.null, builtin.undefined);\n    var isPrimitive = Type.from(function (value) {\n        if (value === null)\n            return true;\n        var type = typeof value;\n        if (type === \"object\" ||\n            type === \"function\") {\n            return false;\n        }\n        return true;\n    }, naiveIsPrimitive.toString());\n    return {\n        geq: geq,\n        defaults: defaults,\n        isPrimitive: isPrimitive,\n    };\n}\nexports.default = default_1;\n;\n// This function accepts a getter function that should return an object\n// conforming to the NodeModule interface above. Typically, this means calling\n// maybeSetModuleExports(() => module) at the very end of any module that has a\n// default export, so the default export value can replace module.exports and\n// thus CommonJS consumers can continue to rely on require(\"./that/module\")\n// returning the default-exported value, rather than always returning an exports\n// object with a default property equal to that value. This function should help\n// preserve backwards compatibility for CommonJS consumers, as a replacement for\n// the ts-add-module-exports package.\nfunction maybeSetModuleExports(moduleGetter) {\n    try {\n        var nodeModule = moduleGetter();\n        var originalExports = nodeModule.exports;\n        var defaultExport = originalExports[\"default\"];\n    }\n    catch (_a) {\n        // It's normal/acceptable for this code to throw a ReferenceError due to\n        // the moduleGetter function attempting to access a non-existent global\n        // `module` variable. That's the reason we use a getter function here:\n        // so the calling code doesn't have to do its own typeof module ===\n        // \"object\" checking (because it's always safe to pass `() => module` as\n        // an argument, even when `module` is not defined in the calling scope).\n        return;\n    }\n    if (defaultExport &&\n        defaultExport !== originalExports &&\n        typeof originalExports === \"object\") {\n        // Make all properties found in originalExports properties of the\n        // default export, including the default property itself, so that\n        // require(nodeModule.id).default === require(nodeModule.id).\n        Object.assign(defaultExport, originalExports, { \"default\": defaultExport });\n        // Object.assign only transfers enumerable properties, and\n        // __esModule is (and should remain) non-enumerable.\n        if (originalExports.__esModule) {\n            Object.defineProperty(defaultExport, \"__esModule\", { value: true });\n        }\n        // This line allows require(nodeModule.id) === defaultExport, rather\n        // than (only) require(nodeModule.id).default === defaultExport.\n        nodeModule.exports = defaultExport;\n    }\n}\nexports.maybeSetModuleExports = maybeSetModuleExports;\n//# sourceMappingURL=shared.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Def = void 0;\nvar tslib_1 = require(\"tslib\");\nvar shared_1 = require(\"./shared\");\nvar Op = Object.prototype;\nvar objToStr = Op.toString;\nvar hasOwn = Op.hasOwnProperty;\nvar BaseType = /** @class */ (function () {\n    function BaseType() {\n    }\n    BaseType.prototype.assert = function (value, deep) {\n        if (!this.check(value, deep)) {\n            var str = shallowStringify(value);\n            throw new Error(str + \" does not match type \" + this);\n        }\n        return true;\n    };\n    BaseType.prototype.arrayOf = function () {\n        var elemType = this;\n        return new ArrayType(elemType);\n    };\n    return BaseType;\n}());\nvar ArrayType = /** @class */ (function (_super) {\n    tslib_1.__extends(ArrayType, _super);\n    function ArrayType(elemType) {\n        var _this = _super.call(this) || this;\n        _this.elemType = elemType;\n        _this.kind = \"ArrayType\";\n        return _this;\n    }\n    ArrayType.prototype.toString = function () {\n        return \"[\" + this.elemType + \"]\";\n    };\n    ArrayType.prototype.check = function (value, deep) {\n        var _this = this;\n        return Array.isArray(value) && value.every(function (elem) { return _this.elemType.check(elem, deep); });\n    };\n    return ArrayType;\n}(BaseType));\nvar IdentityType = /** @class */ (function (_super) {\n    tslib_1.__extends(IdentityType, _super);\n    function IdentityType(value) {\n        var _this = _super.call(this) || this;\n        _this.value = value;\n        _this.kind = \"IdentityType\";\n        return _this;\n    }\n    IdentityType.prototype.toString = function () {\n        return String(this.value);\n    };\n    IdentityType.prototype.check = function (value, deep) {\n        var result = value === this.value;\n        if (!result && typeof deep === \"function\") {\n            deep(this, value);\n        }\n        return result;\n    };\n    return IdentityType;\n}(BaseType));\nvar ObjectType = /** @class */ (function (_super) {\n    tslib_1.__extends(ObjectType, _super);\n    function ObjectType(fields) {\n        var _this = _super.call(this) || this;\n        _this.fields = fields;\n        _this.kind = \"ObjectType\";\n        return _this;\n    }\n    ObjectType.prototype.toString = function () {\n        return \"{ \" + this.fields.join(\", \") + \" }\";\n    };\n    ObjectType.prototype.check = function (value, deep) {\n        return (objToStr.call(value) === objToStr.call({}) &&\n            this.fields.every(function (field) {\n                return field.type.check(value[field.name], deep);\n            }));\n    };\n    return ObjectType;\n}(BaseType));\nvar OrType = /** @class */ (function (_super) {\n    tslib_1.__extends(OrType, _super);\n    function OrType(types) {\n        var _this = _super.call(this) || this;\n        _this.types = types;\n        _this.kind = \"OrType\";\n        return _this;\n    }\n    OrType.prototype.toString = function () {\n        return this.types.join(\" | \");\n    };\n    OrType.prototype.check = function (value, deep) {\n        if (this.types.some(function (type) { return type.check(value, !!deep); })) {\n            return true;\n        }\n        if (typeof deep === \"function\") {\n            deep(this, value);\n        }\n        return false;\n    };\n    return OrType;\n}(BaseType));\nvar PredicateType = /** @class */ (function (_super) {\n    tslib_1.__extends(PredicateType, _super);\n    function PredicateType(name, predicate) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this.predicate = predicate;\n        _this.kind = \"PredicateType\";\n        return _this;\n    }\n    PredicateType.prototype.toString = function () {\n        return this.name;\n    };\n    PredicateType.prototype.check = function (value, deep) {\n        var result = this.predicate(value, deep);\n        if (!result && typeof deep === \"function\") {\n            deep(this, value);\n        }\n        return result;\n    };\n    return PredicateType;\n}(BaseType));\nvar Def = /** @class */ (function () {\n    function Def(type, typeName) {\n        this.type = type;\n        this.typeName = typeName;\n        this.baseNames = [];\n        this.ownFields = Object.create(null);\n        // Includes own typeName. Populated during finalization.\n        this.allSupertypes = Object.create(null);\n        // Linear inheritance hierarchy. Populated during finalization.\n        this.supertypeList = [];\n        // Includes inherited fields.\n        this.allFields = Object.create(null);\n        // Non-hidden keys of allFields.\n        this.fieldNames = [];\n        // This property will be overridden as true by individual Def instances\n        // when they are finalized.\n        this.finalized = false;\n        // False by default until .build(...) is called on an instance.\n        this.buildable = false;\n        this.buildParams = [];\n    }\n    Def.prototype.isSupertypeOf = function (that) {\n        if (that instanceof Def) {\n            if (this.finalized !== true ||\n                that.finalized !== true) {\n                throw new Error(\"\");\n            }\n            return hasOwn.call(that.allSupertypes, this.typeName);\n        }\n        else {\n            throw new Error(that + \" is not a Def\");\n        }\n    };\n    Def.prototype.checkAllFields = function (value, deep) {\n        var allFields = this.allFields;\n        if (this.finalized !== true) {\n            throw new Error(\"\" + this.typeName);\n        }\n        function checkFieldByName(name) {\n            var field = allFields[name];\n            var type = field.type;\n            var child = field.getValue(value);\n            return type.check(child, deep);\n        }\n        return value !== null &&\n            typeof value === \"object\" &&\n            Object.keys(allFields).every(checkFieldByName);\n    };\n    Def.prototype.bases = function () {\n        var supertypeNames = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            supertypeNames[_i] = arguments[_i];\n        }\n        var bases = this.baseNames;\n        if (this.finalized) {\n            if (supertypeNames.length !== bases.length) {\n                throw new Error(\"\");\n            }\n            for (var i = 0; i < supertypeNames.length; i++) {\n                if (supertypeNames[i] !== bases[i]) {\n                    throw new Error(\"\");\n                }\n            }\n            return this;\n        }\n        supertypeNames.forEach(function (baseName) {\n            // This indexOf lookup may be O(n), but the typical number of base\n            // names is very small, and indexOf is a native Array method.\n            if (bases.indexOf(baseName) < 0) {\n                bases.push(baseName);\n            }\n        });\n        return this; // For chaining.\n    };\n    return Def;\n}());\nexports.Def = Def;\nvar Field = /** @class */ (function () {\n    function Field(name, type, defaultFn, hidden) {\n        this.name = name;\n        this.type = type;\n        this.defaultFn = defaultFn;\n        this.hidden = !!hidden;\n    }\n    Field.prototype.toString = function () {\n        return JSON.stringify(this.name) + \": \" + this.type;\n    };\n    Field.prototype.getValue = function (obj) {\n        var value = obj[this.name];\n        if (typeof value !== \"undefined\") {\n            return value;\n        }\n        if (typeof this.defaultFn === \"function\") {\n            value = this.defaultFn.call(obj);\n        }\n        return value;\n    };\n    return Field;\n}());\nfunction shallowStringify(value) {\n    if (Array.isArray(value)) {\n        return \"[\" + value.map(shallowStringify).join(\", \") + \"]\";\n    }\n    if (value && typeof value === \"object\") {\n        return \"{ \" + Object.keys(value).map(function (key) {\n            return key + \": \" + value[key];\n        }).join(\", \") + \" }\";\n    }\n    return JSON.stringify(value);\n}\nfunction typesPlugin(_fork) {\n    var Type = {\n        or: function () {\n            var types = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                types[_i] = arguments[_i];\n            }\n            return new OrType(types.map(function (type) { return Type.from(type); }));\n        },\n        from: function (value, name) {\n            if (value instanceof ArrayType ||\n                value instanceof IdentityType ||\n                value instanceof ObjectType ||\n                value instanceof OrType ||\n                value instanceof PredicateType) {\n                return value;\n            }\n            // The Def type is used as a helper for constructing compound\n            // interface types for AST nodes.\n            if (value instanceof Def) {\n                return value.type;\n            }\n            // Support [ElemType] syntax.\n            if (isArray.check(value)) {\n                if (value.length !== 1) {\n                    throw new Error(\"only one element type is permitted for typed arrays\");\n                }\n                return new ArrayType(Type.from(value[0]));\n            }\n            // Support { someField: FieldType, ... } syntax.\n            if (isObject.check(value)) {\n                return new ObjectType(Object.keys(value).map(function (name) {\n                    return new Field(name, Type.from(value[name], name));\n                }));\n            }\n            if (typeof value === \"function\") {\n                var bicfIndex = builtInCtorFns.indexOf(value);\n                if (bicfIndex >= 0) {\n                    return builtInCtorTypes[bicfIndex];\n                }\n                if (typeof name !== \"string\") {\n                    throw new Error(\"missing name\");\n                }\n                return new PredicateType(name, value);\n            }\n            // As a last resort, toType returns a type that matches any value that\n            // is === from. This is primarily useful for literal values like\n            // toType(null), but it has the additional advantage of allowing\n            // toType to be a total function.\n            return new IdentityType(value);\n        },\n        // Define a type whose name is registered in a namespace (the defCache) so\n        // that future definitions will return the same type given the same name.\n        // In particular, this system allows for circular and forward definitions.\n        // The Def object d returned from Type.def may be used to configure the\n        // type d.type by calling methods such as d.bases, d.build, and d.field.\n        def: function (typeName) {\n            return hasOwn.call(defCache, typeName)\n                ? defCache[typeName]\n                : defCache[typeName] = new DefImpl(typeName);\n        },\n        hasDef: function (typeName) {\n            return hasOwn.call(defCache, typeName);\n        }\n    };\n    var builtInCtorFns = [];\n    var builtInCtorTypes = [];\n    function defBuiltInType(name, example) {\n        var objStr = objToStr.call(example);\n        var type = new PredicateType(name, function (value) { return objToStr.call(value) === objStr; });\n        if (example && typeof example.constructor === \"function\") {\n            builtInCtorFns.push(example.constructor);\n            builtInCtorTypes.push(type);\n        }\n        return type;\n    }\n    // These types check the underlying [[Class]] attribute of the given\n    // value, rather than using the problematic typeof operator. Note however\n    // that no subtyping is considered; so, for instance, isObject.check\n    // returns false for [], /./, new Date, and null.\n    var isString = defBuiltInType(\"string\", \"truthy\");\n    var isFunction = defBuiltInType(\"function\", function () { });\n    var isArray = defBuiltInType(\"array\", []);\n    var isObject = defBuiltInType(\"object\", {});\n    var isRegExp = defBuiltInType(\"RegExp\", /./);\n    var isDate = defBuiltInType(\"Date\", new Date());\n    var isNumber = defBuiltInType(\"number\", 3);\n    var isBoolean = defBuiltInType(\"boolean\", true);\n    var isNull = defBuiltInType(\"null\", null);\n    var isUndefined = defBuiltInType(\"undefined\", undefined);\n    var isBigInt = typeof BigInt === \"function\"\n        ? defBuiltInType(\"BigInt\", BigInt(1234))\n        : new PredicateType(\"BigInt\", function () { return false; });\n    var builtInTypes = {\n        string: isString,\n        function: isFunction,\n        array: isArray,\n        object: isObject,\n        RegExp: isRegExp,\n        Date: isDate,\n        number: isNumber,\n        boolean: isBoolean,\n        null: isNull,\n        undefined: isUndefined,\n        BigInt: isBigInt,\n    };\n    // In order to return the same Def instance every time Type.def is called\n    // with a particular name, those instances need to be stored in a cache.\n    var defCache = Object.create(null);\n    function defFromValue(value) {\n        if (value && typeof value === \"object\") {\n            var type = value.type;\n            if (typeof type === \"string\" &&\n                hasOwn.call(defCache, type)) {\n                var d = defCache[type];\n                if (d.finalized) {\n                    return d;\n                }\n            }\n        }\n        return null;\n    }\n    var DefImpl = /** @class */ (function (_super) {\n        tslib_1.__extends(DefImpl, _super);\n        function DefImpl(typeName) {\n            var _this = _super.call(this, new PredicateType(typeName, function (value, deep) { return _this.check(value, deep); }), typeName) || this;\n            return _this;\n        }\n        DefImpl.prototype.check = function (value, deep) {\n            if (this.finalized !== true) {\n                throw new Error(\"prematurely checking unfinalized type \" + this.typeName);\n            }\n            // A Def type can only match an object value.\n            if (value === null || typeof value !== \"object\") {\n                return false;\n            }\n            var vDef = defFromValue(value);\n            if (!vDef) {\n                // If we couldn't infer the Def associated with the given value,\n                // and we expected it to be a SourceLocation or a Position, it was\n                // probably just missing a \"type\" field (because Esprima does not\n                // assign a type property to such nodes). Be optimistic and let\n                // this.checkAllFields make the final decision.\n                if (this.typeName === \"SourceLocation\" ||\n                    this.typeName === \"Position\") {\n                    return this.checkAllFields(value, deep);\n                }\n                // Calling this.checkAllFields for any other type of node is both\n                // bad for performance and way too forgiving.\n                return false;\n            }\n            // If checking deeply and vDef === this, then we only need to call\n            // checkAllFields once. Calling checkAllFields is too strict when deep\n            // is false, because then we only care about this.isSupertypeOf(vDef).\n            if (deep && vDef === this) {\n                return this.checkAllFields(value, deep);\n            }\n            // In most cases we rely exclusively on isSupertypeOf to make O(1)\n            // subtyping determinations. This suffices in most situations outside\n            // of unit tests, since interface conformance is checked whenever new\n            // instances are created using builder functions.\n            if (!this.isSupertypeOf(vDef)) {\n                return false;\n            }\n            // The exception is when deep is true; then, we recursively check all\n            // fields.\n            if (!deep) {\n                return true;\n            }\n            // Use the more specific Def (vDef) to perform the deep check, but\n            // shallow-check fields defined by the less specific Def (this).\n            return vDef.checkAllFields(value, deep)\n                && this.checkAllFields(value, false);\n        };\n        DefImpl.prototype.build = function () {\n            var _this = this;\n            var buildParams = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                buildParams[_i] = arguments[_i];\n            }\n            // Calling Def.prototype.build multiple times has the effect of merely\n            // redefining this property.\n            this.buildParams = buildParams;\n            if (this.buildable) {\n                // If this Def is already buildable, update self.buildParams and\n                // continue using the old builder function.\n                return this;\n            }\n            // Every buildable type will have its \"type\" field filled in\n            // automatically. This includes types that are not subtypes of Node,\n            // like SourceLocation, but that seems harmless (TODO?).\n            this.field(\"type\", String, function () { return _this.typeName; });\n            // Override Dp.buildable for this Def instance.\n            this.buildable = true;\n            var addParam = function (built, param, arg, isArgAvailable) {\n                if (hasOwn.call(built, param))\n                    return;\n                var all = _this.allFields;\n                if (!hasOwn.call(all, param)) {\n                    throw new Error(\"\" + param);\n                }\n                var field = all[param];\n                var type = field.type;\n                var value;\n                if (isArgAvailable) {\n                    value = arg;\n                }\n                else if (field.defaultFn) {\n                    // Expose the partially-built object to the default\n                    // function as its `this` object.\n                    value = field.defaultFn.call(built);\n                }\n                else {\n                    var message = \"no value or default function given for field \" +\n                        JSON.stringify(param) + \" of \" + _this.typeName + \"(\" +\n                        _this.buildParams.map(function (name) {\n                            return all[name];\n                        }).join(\", \") + \")\";\n                    throw new Error(message);\n                }\n                if (!type.check(value)) {\n                    throw new Error(shallowStringify(value) +\n                        \" does not match field \" + field +\n                        \" of type \" + _this.typeName);\n                }\n                built[param] = value;\n            };\n            // Calling the builder function will construct an instance of the Def,\n            // with positional arguments mapped to the fields original passed to .build.\n            // If not enough arguments are provided, the default value for the remaining fields\n            // will be used.\n            var builder = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var argc = args.length;\n                if (!_this.finalized) {\n                    throw new Error(\"attempting to instantiate unfinalized type \" +\n                        _this.typeName);\n                }\n                var built = Object.create(nodePrototype);\n                _this.buildParams.forEach(function (param, i) {\n                    if (i < argc) {\n                        addParam(built, param, args[i], true);\n                    }\n                    else {\n                        addParam(built, param, null, false);\n                    }\n                });\n                Object.keys(_this.allFields).forEach(function (param) {\n                    // Use the default value.\n                    addParam(built, param, null, false);\n                });\n                // Make sure that the \"type\" field was filled automatically.\n                if (built.type !== _this.typeName) {\n                    throw new Error(\"\");\n                }\n                return built;\n            };\n            // Calling .from on the builder function will construct an instance of the Def,\n            // using field values from the passed object. For fields missing from the passed object,\n            // their default value will be used.\n            builder.from = function (obj) {\n                if (!_this.finalized) {\n                    throw new Error(\"attempting to instantiate unfinalized type \" +\n                        _this.typeName);\n                }\n                var built = Object.create(nodePrototype);\n                Object.keys(_this.allFields).forEach(function (param) {\n                    if (hasOwn.call(obj, param)) {\n                        addParam(built, param, obj[param], true);\n                    }\n                    else {\n                        addParam(built, param, null, false);\n                    }\n                });\n                // Make sure that the \"type\" field was filled automatically.\n                if (built.type !== _this.typeName) {\n                    throw new Error(\"\");\n                }\n                return built;\n            };\n            Object.defineProperty(builders, getBuilderName(this.typeName), {\n                enumerable: true,\n                value: builder\n            });\n            return this;\n        };\n        // The reason fields are specified using .field(...) instead of an object\n        // literal syntax is somewhat subtle: the object literal syntax would\n        // support only one key and one value, but with .field(...) we can pass\n        // any number of arguments to specify the field.\n        DefImpl.prototype.field = function (name, type, defaultFn, hidden) {\n            if (this.finalized) {\n                console.error(\"Ignoring attempt to redefine field \" +\n                    JSON.stringify(name) + \" of finalized type \" +\n                    JSON.stringify(this.typeName));\n                return this;\n            }\n            this.ownFields[name] = new Field(name, Type.from(type), defaultFn, hidden);\n            return this; // For chaining.\n        };\n        DefImpl.prototype.finalize = function () {\n            var _this = this;\n            // It's not an error to finalize a type more than once, but only the\n            // first call to .finalize does anything.\n            if (!this.finalized) {\n                var allFields = this.allFields;\n                var allSupertypes = this.allSupertypes;\n                this.baseNames.forEach(function (name) {\n                    var def = defCache[name];\n                    if (def instanceof Def) {\n                        def.finalize();\n                        extend(allFields, def.allFields);\n                        extend(allSupertypes, def.allSupertypes);\n                    }\n                    else {\n                        var message = \"unknown supertype name \" +\n                            JSON.stringify(name) +\n                            \" for subtype \" +\n                            JSON.stringify(_this.typeName);\n                        throw new Error(message);\n                    }\n                });\n                // TODO Warn if fields are overridden with incompatible types.\n                extend(allFields, this.ownFields);\n                allSupertypes[this.typeName] = this;\n                this.fieldNames.length = 0;\n                for (var fieldName in allFields) {\n                    if (hasOwn.call(allFields, fieldName) &&\n                        !allFields[fieldName].hidden) {\n                        this.fieldNames.push(fieldName);\n                    }\n                }\n                // Types are exported only once they have been finalized.\n                Object.defineProperty(namedTypes, this.typeName, {\n                    enumerable: true,\n                    value: this.type\n                });\n                this.finalized = true;\n                // A linearization of the inheritance hierarchy.\n                populateSupertypeList(this.typeName, this.supertypeList);\n                if (this.buildable &&\n                    this.supertypeList.lastIndexOf(\"Expression\") >= 0) {\n                    wrapExpressionBuilderWithStatement(this.typeName);\n                }\n            }\n        };\n        return DefImpl;\n    }(Def));\n    // Note that the list returned by this function is a copy of the internal\n    // supertypeList, *without* the typeName itself as the first element.\n    function getSupertypeNames(typeName) {\n        if (!hasOwn.call(defCache, typeName)) {\n            throw new Error(\"\");\n        }\n        var d = defCache[typeName];\n        if (d.finalized !== true) {\n            throw new Error(\"\");\n        }\n        return d.supertypeList.slice(1);\n    }\n    // Returns an object mapping from every known type in the defCache to the\n    // most specific supertype whose name is an own property of the candidates\n    // object.\n    function computeSupertypeLookupTable(candidates) {\n        var table = {};\n        var typeNames = Object.keys(defCache);\n        var typeNameCount = typeNames.length;\n        for (var i = 0; i < typeNameCount; ++i) {\n            var typeName = typeNames[i];\n            var d = defCache[typeName];\n            if (d.finalized !== true) {\n                throw new Error(\"\" + typeName);\n            }\n            for (var j = 0; j < d.supertypeList.length; ++j) {\n                var superTypeName = d.supertypeList[j];\n                if (hasOwn.call(candidates, superTypeName)) {\n                    table[typeName] = superTypeName;\n                    break;\n                }\n            }\n        }\n        return table;\n    }\n    var builders = Object.create(null);\n    // This object is used as prototype for any node created by a builder.\n    var nodePrototype = {};\n    // Call this function to define a new method to be shared by all AST\n    // nodes. The replaced method (if any) is returned for easy wrapping.\n    function defineMethod(name, func) {\n        var old = nodePrototype[name];\n        // Pass undefined as func to delete nodePrototype[name].\n        if (isUndefined.check(func)) {\n            delete nodePrototype[name];\n        }\n        else {\n            isFunction.assert(func);\n            Object.defineProperty(nodePrototype, name, {\n                enumerable: true,\n                configurable: true,\n                value: func\n            });\n        }\n        return old;\n    }\n    function getBuilderName(typeName) {\n        return typeName.replace(/^[A-Z]+/, function (upperCasePrefix) {\n            var len = upperCasePrefix.length;\n            switch (len) {\n                case 0: return \"\";\n                // If there's only one initial capital letter, just lower-case it.\n                case 1: return upperCasePrefix.toLowerCase();\n                default:\n                    // If there's more than one initial capital letter, lower-case\n                    // all but the last one, so that XMLDefaultDeclaration (for\n                    // example) becomes xmlDefaultDeclaration.\n                    return upperCasePrefix.slice(0, len - 1).toLowerCase() +\n                        upperCasePrefix.charAt(len - 1);\n            }\n        });\n    }\n    function getStatementBuilderName(typeName) {\n        typeName = getBuilderName(typeName);\n        return typeName.replace(/(Expression)?$/, \"Statement\");\n    }\n    var namedTypes = {};\n    // Like Object.keys, but aware of what fields each AST type should have.\n    function getFieldNames(object) {\n        var d = defFromValue(object);\n        if (d) {\n            return d.fieldNames.slice(0);\n        }\n        if (\"type\" in object) {\n            throw new Error(\"did not recognize object of type \" +\n                JSON.stringify(object.type));\n        }\n        return Object.keys(object);\n    }\n    // Get the value of an object property, taking object.type and default\n    // functions into account.\n    function getFieldValue(object, fieldName) {\n        var d = defFromValue(object);\n        if (d) {\n            var field = d.allFields[fieldName];\n            if (field) {\n                return field.getValue(object);\n            }\n        }\n        return object && object[fieldName];\n    }\n    // Iterate over all defined fields of an object, including those missing\n    // or undefined, passing each field name and effective value (as returned\n    // by getFieldValue) to the callback. If the object has no corresponding\n    // Def, the callback will never be called.\n    function eachField(object, callback, context) {\n        getFieldNames(object).forEach(function (name) {\n            callback.call(this, name, getFieldValue(object, name));\n        }, context);\n    }\n    // Similar to eachField, except that iteration stops as soon as the\n    // callback returns a truthy value. Like Array.prototype.some, the final\n    // result is either true or false to indicates whether the callback\n    // returned true for any element or not.\n    function someField(object, callback, context) {\n        return getFieldNames(object).some(function (name) {\n            return callback.call(this, name, getFieldValue(object, name));\n        }, context);\n    }\n    // Adds an additional builder for Expression subtypes\n    // that wraps the built Expression in an ExpressionStatements.\n    function wrapExpressionBuilderWithStatement(typeName) {\n        var wrapperName = getStatementBuilderName(typeName);\n        // skip if the builder already exists\n        if (builders[wrapperName])\n            return;\n        // the builder function to wrap with builders.ExpressionStatement\n        var wrapped = builders[getBuilderName(typeName)];\n        // skip if there is nothing to wrap\n        if (!wrapped)\n            return;\n        var builder = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return builders.expressionStatement(wrapped.apply(builders, args));\n        };\n        builder.from = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return builders.expressionStatement(wrapped.from.apply(builders, args));\n        };\n        builders[wrapperName] = builder;\n    }\n    function populateSupertypeList(typeName, list) {\n        list.length = 0;\n        list.push(typeName);\n        var lastSeen = Object.create(null);\n        for (var pos = 0; pos < list.length; ++pos) {\n            typeName = list[pos];\n            var d = defCache[typeName];\n            if (d.finalized !== true) {\n                throw new Error(\"\");\n            }\n            // If we saw typeName earlier in the breadth-first traversal,\n            // delete the last-seen occurrence.\n            if (hasOwn.call(lastSeen, typeName)) {\n                delete list[lastSeen[typeName]];\n            }\n            // Record the new index of the last-seen occurrence of typeName.\n            lastSeen[typeName] = pos;\n            // Enqueue the base names of this type.\n            list.push.apply(list, d.baseNames);\n        }\n        // Compaction loop to remove array holes.\n        for (var to = 0, from = to, len = list.length; from < len; ++from) {\n            if (hasOwn.call(list, from)) {\n                list[to++] = list[from];\n            }\n        }\n        list.length = to;\n    }\n    function extend(into, from) {\n        Object.keys(from).forEach(function (name) {\n            into[name] = from[name];\n        });\n        return into;\n    }\n    function finalize() {\n        Object.keys(defCache).forEach(function (name) {\n            defCache[name].finalize();\n        });\n    }\n    return {\n        Type: Type,\n        builtInTypes: builtInTypes,\n        getSupertypeNames: getSupertypeNames,\n        computeSupertypeLookupTable: computeSupertypeLookupTable,\n        builders: builders,\n        defineMethod: defineMethod,\n        getBuilderName: getBuilderName,\n        getStatementBuilderName: getStatementBuilderName,\n        namedTypes: namedTypes,\n        getFieldNames: getFieldNames,\n        getFieldValue: getFieldValue,\n        eachField: eachField,\n        someField: someField,\n        finalize: finalize,\n    };\n}\nexports.default = typesPlugin;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar shared_1 = require(\"./shared\");\nvar types_1 = tslib_1.__importDefault(require(\"./types\"));\nvar Op = Object.prototype;\nvar hasOwn = Op.hasOwnProperty;\nfunction pathPlugin(fork) {\n    var types = fork.use(types_1.default);\n    var isArray = types.builtInTypes.array;\n    var isNumber = types.builtInTypes.number;\n    var Path = function Path(value, parentPath, name) {\n        if (!(this instanceof Path)) {\n            throw new Error(\"Path constructor cannot be invoked without 'new'\");\n        }\n        if (parentPath) {\n            if (!(parentPath instanceof Path)) {\n                throw new Error(\"\");\n            }\n        }\n        else {\n            parentPath = null;\n            name = null;\n        }\n        // The value encapsulated by this Path, generally equal to\n        // parentPath.value[name] if we have a parentPath.\n        this.value = value;\n        // The immediate parent Path of this Path.\n        this.parentPath = parentPath;\n        // The name of the property of parentPath.value through which this\n        // Path's value was reached.\n        this.name = name;\n        // Calling path.get(\"child\") multiple times always returns the same\n        // child Path object, for both performance and consistency reasons.\n        this.__childCache = null;\n    };\n    var Pp = Path.prototype;\n    function getChildCache(path) {\n        // Lazily create the child cache. This also cheapens cache\n        // invalidation, since you can just reset path.__childCache to null.\n        return path.__childCache || (path.__childCache = Object.create(null));\n    }\n    function getChildPath(path, name) {\n        var cache = getChildCache(path);\n        var actualChildValue = path.getValueProperty(name);\n        var childPath = cache[name];\n        if (!hasOwn.call(cache, name) ||\n            // Ensure consistency between cache and reality.\n            childPath.value !== actualChildValue) {\n            childPath = cache[name] = new path.constructor(actualChildValue, path, name);\n        }\n        return childPath;\n    }\n    // This method is designed to be overridden by subclasses that need to\n    // handle missing properties, etc.\n    Pp.getValueProperty = function getValueProperty(name) {\n        return this.value[name];\n    };\n    Pp.get = function get() {\n        var names = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            names[_i] = arguments[_i];\n        }\n        var path = this;\n        var count = names.length;\n        for (var i = 0; i < count; ++i) {\n            path = getChildPath(path, names[i]);\n        }\n        return path;\n    };\n    Pp.each = function each(callback, context) {\n        var childPaths = [];\n        var len = this.value.length;\n        var i = 0;\n        // Collect all the original child paths before invoking the callback.\n        for (var i = 0; i < len; ++i) {\n            if (hasOwn.call(this.value, i)) {\n                childPaths[i] = this.get(i);\n            }\n        }\n        // Invoke the callback on just the original child paths, regardless of\n        // any modifications made to the array by the callback. I chose these\n        // semantics over cleverly invoking the callback on new elements because\n        // this way is much easier to reason about.\n        context = context || this;\n        for (i = 0; i < len; ++i) {\n            if (hasOwn.call(childPaths, i)) {\n                callback.call(context, childPaths[i]);\n            }\n        }\n    };\n    Pp.map = function map(callback, context) {\n        var result = [];\n        this.each(function (childPath) {\n            result.push(callback.call(this, childPath));\n        }, context);\n        return result;\n    };\n    Pp.filter = function filter(callback, context) {\n        var result = [];\n        this.each(function (childPath) {\n            if (callback.call(this, childPath)) {\n                result.push(childPath);\n            }\n        }, context);\n        return result;\n    };\n    function emptyMoves() { }\n    function getMoves(path, offset, start, end) {\n        isArray.assert(path.value);\n        if (offset === 0) {\n            return emptyMoves;\n        }\n        var length = path.value.length;\n        if (length < 1) {\n            return emptyMoves;\n        }\n        var argc = arguments.length;\n        if (argc === 2) {\n            start = 0;\n            end = length;\n        }\n        else if (argc === 3) {\n            start = Math.max(start, 0);\n            end = length;\n        }\n        else {\n            start = Math.max(start, 0);\n            end = Math.min(end, length);\n        }\n        isNumber.assert(start);\n        isNumber.assert(end);\n        var moves = Object.create(null);\n        var cache = getChildCache(path);\n        for (var i = start; i < end; ++i) {\n            if (hasOwn.call(path.value, i)) {\n                var childPath = path.get(i);\n                if (childPath.name !== i) {\n                    throw new Error(\"\");\n                }\n                var newIndex = i + offset;\n                childPath.name = newIndex;\n                moves[newIndex] = childPath;\n                delete cache[i];\n            }\n        }\n        delete cache.length;\n        return function () {\n            for (var newIndex in moves) {\n                var childPath = moves[newIndex];\n                if (childPath.name !== +newIndex) {\n                    throw new Error(\"\");\n                }\n                cache[newIndex] = childPath;\n                path.value[newIndex] = childPath.value;\n            }\n        };\n    }\n    Pp.shift = function shift() {\n        var move = getMoves(this, -1);\n        var result = this.value.shift();\n        move();\n        return result;\n    };\n    Pp.unshift = function unshift() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var move = getMoves(this, args.length);\n        var result = this.value.unshift.apply(this.value, args);\n        move();\n        return result;\n    };\n    Pp.push = function push() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        isArray.assert(this.value);\n        delete getChildCache(this).length;\n        return this.value.push.apply(this.value, args);\n    };\n    Pp.pop = function pop() {\n        isArray.assert(this.value);\n        var cache = getChildCache(this);\n        delete cache[this.value.length - 1];\n        delete cache.length;\n        return this.value.pop();\n    };\n    Pp.insertAt = function insertAt(index) {\n        var argc = arguments.length;\n        var move = getMoves(this, argc - 1, index);\n        if (move === emptyMoves && argc <= 1) {\n            return this;\n        }\n        index = Math.max(index, 0);\n        for (var i = 1; i < argc; ++i) {\n            this.value[index + i - 1] = arguments[i];\n        }\n        move();\n        return this;\n    };\n    Pp.insertBefore = function insertBefore() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var pp = this.parentPath;\n        var argc = args.length;\n        var insertAtArgs = [this.name];\n        for (var i = 0; i < argc; ++i) {\n            insertAtArgs.push(args[i]);\n        }\n        return pp.insertAt.apply(pp, insertAtArgs);\n    };\n    Pp.insertAfter = function insertAfter() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var pp = this.parentPath;\n        var argc = args.length;\n        var insertAtArgs = [this.name + 1];\n        for (var i = 0; i < argc; ++i) {\n            insertAtArgs.push(args[i]);\n        }\n        return pp.insertAt.apply(pp, insertAtArgs);\n    };\n    function repairRelationshipWithParent(path) {\n        if (!(path instanceof Path)) {\n            throw new Error(\"\");\n        }\n        var pp = path.parentPath;\n        if (!pp) {\n            // Orphan paths have no relationship to repair.\n            return path;\n        }\n        var parentValue = pp.value;\n        var parentCache = getChildCache(pp);\n        // Make sure parentCache[path.name] is populated.\n        if (parentValue[path.name] === path.value) {\n            parentCache[path.name] = path;\n        }\n        else if (isArray.check(parentValue)) {\n            // Something caused path.name to become out of date, so attempt to\n            // recover by searching for path.value in parentValue.\n            var i = parentValue.indexOf(path.value);\n            if (i >= 0) {\n                parentCache[path.name = i] = path;\n            }\n        }\n        else {\n            // If path.value disagrees with parentValue[path.name], and\n            // path.name is not an array index, let path.value become the new\n            // parentValue[path.name] and update parentCache accordingly.\n            parentValue[path.name] = path.value;\n            parentCache[path.name] = path;\n        }\n        if (parentValue[path.name] !== path.value) {\n            throw new Error(\"\");\n        }\n        if (path.parentPath.get(path.name) !== path) {\n            throw new Error(\"\");\n        }\n        return path;\n    }\n    Pp.replace = function replace(replacement) {\n        var results = [];\n        var parentValue = this.parentPath.value;\n        var parentCache = getChildCache(this.parentPath);\n        var count = arguments.length;\n        repairRelationshipWithParent(this);\n        if (isArray.check(parentValue)) {\n            var originalLength = parentValue.length;\n            var move = getMoves(this.parentPath, count - 1, this.name + 1);\n            var spliceArgs = [this.name, 1];\n            for (var i = 0; i < count; ++i) {\n                spliceArgs.push(arguments[i]);\n            }\n            var splicedOut = parentValue.splice.apply(parentValue, spliceArgs);\n            if (splicedOut[0] !== this.value) {\n                throw new Error(\"\");\n            }\n            if (parentValue.length !== (originalLength - 1 + count)) {\n                throw new Error(\"\");\n            }\n            move();\n            if (count === 0) {\n                delete this.value;\n                delete parentCache[this.name];\n                this.__childCache = null;\n            }\n            else {\n                if (parentValue[this.name] !== replacement) {\n                    throw new Error(\"\");\n                }\n                if (this.value !== replacement) {\n                    this.value = replacement;\n                    this.__childCache = null;\n                }\n                for (i = 0; i < count; ++i) {\n                    results.push(this.parentPath.get(this.name + i));\n                }\n                if (results[0] !== this) {\n                    throw new Error(\"\");\n                }\n            }\n        }\n        else if (count === 1) {\n            if (this.value !== replacement) {\n                this.__childCache = null;\n            }\n            this.value = parentValue[this.name] = replacement;\n            results.push(this);\n        }\n        else if (count === 0) {\n            delete parentValue[this.name];\n            delete this.value;\n            this.__childCache = null;\n            // Leave this path cached as parentCache[this.name], even though\n            // it no longer has a value defined.\n        }\n        else {\n            throw new Error(\"Could not replace path\");\n        }\n        return results;\n    };\n    return Path;\n}\nexports.default = pathPlugin;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=path.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar shared_1 = require(\"./shared\");\nvar types_1 = tslib_1.__importDefault(require(\"./types\"));\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction scopePlugin(fork) {\n    var types = fork.use(types_1.default);\n    var Type = types.Type;\n    var namedTypes = types.namedTypes;\n    var Node = namedTypes.Node;\n    var Expression = namedTypes.Expression;\n    var isArray = types.builtInTypes.array;\n    var b = types.builders;\n    var Scope = function Scope(path, parentScope) {\n        if (!(this instanceof Scope)) {\n            throw new Error(\"Scope constructor cannot be invoked without 'new'\");\n        }\n        if (!TypeParameterScopeType.check(path.value)) {\n            ScopeType.assert(path.value);\n        }\n        var depth;\n        if (parentScope) {\n            if (!(parentScope instanceof Scope)) {\n                throw new Error(\"\");\n            }\n            depth = parentScope.depth + 1;\n        }\n        else {\n            parentScope = null;\n            depth = 0;\n        }\n        Object.defineProperties(this, {\n            path: { value: path },\n            node: { value: path.value },\n            isGlobal: { value: !parentScope, enumerable: true },\n            depth: { value: depth },\n            parent: { value: parentScope },\n            bindings: { value: {} },\n            types: { value: {} },\n        });\n    };\n    var ScopeType = Type.or(\n    // Program nodes introduce global scopes.\n    namedTypes.Program, \n    // Function is the supertype of FunctionExpression,\n    // FunctionDeclaration, ArrowExpression, etc.\n    namedTypes.Function, \n    // In case you didn't know, the caught parameter shadows any variable\n    // of the same name in an outer scope.\n    namedTypes.CatchClause);\n    // These types introduce scopes that are restricted to type parameters in\n    // Flow (this doesn't apply to ECMAScript).\n    var TypeParameterScopeType = Type.or(namedTypes.Function, namedTypes.ClassDeclaration, namedTypes.ClassExpression, namedTypes.InterfaceDeclaration, namedTypes.TSInterfaceDeclaration, namedTypes.TypeAlias, namedTypes.TSTypeAliasDeclaration);\n    var FlowOrTSTypeParameterType = Type.or(namedTypes.TypeParameter, namedTypes.TSTypeParameter);\n    Scope.isEstablishedBy = function (node) {\n        return ScopeType.check(node) || TypeParameterScopeType.check(node);\n    };\n    var Sp = Scope.prototype;\n    // Will be overridden after an instance lazily calls scanScope.\n    Sp.didScan = false;\n    Sp.declares = function (name) {\n        this.scan();\n        return hasOwn.call(this.bindings, name);\n    };\n    Sp.declaresType = function (name) {\n        this.scan();\n        return hasOwn.call(this.types, name);\n    };\n    Sp.declareTemporary = function (prefix) {\n        if (prefix) {\n            if (!/^[a-z$_]/i.test(prefix)) {\n                throw new Error(\"\");\n            }\n        }\n        else {\n            prefix = \"t$\";\n        }\n        // Include this.depth in the name to make sure the name does not\n        // collide with any variables in nested/enclosing scopes.\n        prefix += this.depth.toString(36) + \"$\";\n        this.scan();\n        var index = 0;\n        while (this.declares(prefix + index)) {\n            ++index;\n        }\n        var name = prefix + index;\n        return this.bindings[name] = types.builders.identifier(name);\n    };\n    Sp.injectTemporary = function (identifier, init) {\n        identifier || (identifier = this.declareTemporary());\n        var bodyPath = this.path.get(\"body\");\n        if (namedTypes.BlockStatement.check(bodyPath.value)) {\n            bodyPath = bodyPath.get(\"body\");\n        }\n        bodyPath.unshift(b.variableDeclaration(\"var\", [b.variableDeclarator(identifier, init || null)]));\n        return identifier;\n    };\n    Sp.scan = function (force) {\n        if (force || !this.didScan) {\n            for (var name in this.bindings) {\n                // Empty out this.bindings, just in cases.\n                delete this.bindings[name];\n            }\n            for (var name in this.types) {\n                // Empty out this.types, just in cases.\n                delete this.types[name];\n            }\n            scanScope(this.path, this.bindings, this.types);\n            this.didScan = true;\n        }\n    };\n    Sp.getBindings = function () {\n        this.scan();\n        return this.bindings;\n    };\n    Sp.getTypes = function () {\n        this.scan();\n        return this.types;\n    };\n    function scanScope(path, bindings, scopeTypes) {\n        var node = path.value;\n        if (TypeParameterScopeType.check(node)) {\n            var params = path.get('typeParameters', 'params');\n            if (isArray.check(params.value)) {\n                params.each(function (childPath) {\n                    addTypeParameter(childPath, scopeTypes);\n                });\n            }\n        }\n        if (ScopeType.check(node)) {\n            if (namedTypes.CatchClause.check(node)) {\n                // A catch clause establishes a new scope but the only variable\n                // bound in that scope is the catch parameter. Any other\n                // declarations create bindings in the outer scope.\n                addPattern(path.get(\"param\"), bindings);\n            }\n            else {\n                recursiveScanScope(path, bindings, scopeTypes);\n            }\n        }\n    }\n    function recursiveScanScope(path, bindings, scopeTypes) {\n        var node = path.value;\n        if (path.parent &&\n            namedTypes.FunctionExpression.check(path.parent.node) &&\n            path.parent.node.id) {\n            addPattern(path.parent.get(\"id\"), bindings);\n        }\n        if (!node) {\n            // None of the remaining cases matter if node is falsy.\n        }\n        else if (isArray.check(node)) {\n            path.each(function (childPath) {\n                recursiveScanChild(childPath, bindings, scopeTypes);\n            });\n        }\n        else if (namedTypes.Function.check(node)) {\n            path.get(\"params\").each(function (paramPath) {\n                addPattern(paramPath, bindings);\n            });\n            recursiveScanChild(path.get(\"body\"), bindings, scopeTypes);\n            recursiveScanScope(path.get(\"typeParameters\"), bindings, scopeTypes);\n        }\n        else if ((namedTypes.TypeAlias && namedTypes.TypeAlias.check(node)) ||\n            (namedTypes.InterfaceDeclaration && namedTypes.InterfaceDeclaration.check(node)) ||\n            (namedTypes.TSTypeAliasDeclaration && namedTypes.TSTypeAliasDeclaration.check(node)) ||\n            (namedTypes.TSInterfaceDeclaration && namedTypes.TSInterfaceDeclaration.check(node))) {\n            addTypePattern(path.get(\"id\"), scopeTypes);\n        }\n        else if (namedTypes.VariableDeclarator.check(node)) {\n            addPattern(path.get(\"id\"), bindings);\n            recursiveScanChild(path.get(\"init\"), bindings, scopeTypes);\n        }\n        else if (node.type === \"ImportSpecifier\" ||\n            node.type === \"ImportNamespaceSpecifier\" ||\n            node.type === \"ImportDefaultSpecifier\") {\n            addPattern(\n            // Esprima used to use the .name field to refer to the local\n            // binding identifier for ImportSpecifier nodes, but .id for\n            // ImportNamespaceSpecifier and ImportDefaultSpecifier nodes.\n            // ESTree/Acorn/ESpree use .local for all three node types.\n            path.get(node.local ? \"local\" :\n                node.name ? \"name\" : \"id\"), bindings);\n        }\n        else if (Node.check(node) && !Expression.check(node)) {\n            types.eachField(node, function (name, child) {\n                var childPath = path.get(name);\n                if (!pathHasValue(childPath, child)) {\n                    throw new Error(\"\");\n                }\n                recursiveScanChild(childPath, bindings, scopeTypes);\n            });\n        }\n    }\n    function pathHasValue(path, value) {\n        if (path.value === value) {\n            return true;\n        }\n        // Empty arrays are probably produced by defaults.emptyArray, in which\n        // case is makes sense to regard them as equivalent, if not ===.\n        if (Array.isArray(path.value) &&\n            path.value.length === 0 &&\n            Array.isArray(value) &&\n            value.length === 0) {\n            return true;\n        }\n        return false;\n    }\n    function recursiveScanChild(path, bindings, scopeTypes) {\n        var node = path.value;\n        if (!node || Expression.check(node)) {\n            // Ignore falsy values and Expressions.\n        }\n        else if (namedTypes.FunctionDeclaration.check(node) &&\n            node.id !== null) {\n            addPattern(path.get(\"id\"), bindings);\n        }\n        else if (namedTypes.ClassDeclaration &&\n            namedTypes.ClassDeclaration.check(node) &&\n            node.id !== null) {\n            addPattern(path.get(\"id\"), bindings);\n            recursiveScanScope(path.get(\"typeParameters\"), bindings, scopeTypes);\n        }\n        else if ((namedTypes.InterfaceDeclaration &&\n            namedTypes.InterfaceDeclaration.check(node)) ||\n            (namedTypes.TSInterfaceDeclaration &&\n                namedTypes.TSInterfaceDeclaration.check(node))) {\n            addTypePattern(path.get(\"id\"), scopeTypes);\n        }\n        else if (ScopeType.check(node)) {\n            if (namedTypes.CatchClause.check(node) &&\n                // TODO Broaden this to accept any pattern.\n                namedTypes.Identifier.check(node.param)) {\n                var catchParamName = node.param.name;\n                var hadBinding = hasOwn.call(bindings, catchParamName);\n                // Any declarations that occur inside the catch body that do\n                // not have the same name as the catch parameter should count\n                // as bindings in the outer scope.\n                recursiveScanScope(path.get(\"body\"), bindings, scopeTypes);\n                // If a new binding matching the catch parameter name was\n                // created while scanning the catch body, ignore it because it\n                // actually refers to the catch parameter and not the outer\n                // scope that we're currently scanning.\n                if (!hadBinding) {\n                    delete bindings[catchParamName];\n                }\n            }\n        }\n        else {\n            recursiveScanScope(path, bindings, scopeTypes);\n        }\n    }\n    function addPattern(patternPath, bindings) {\n        var pattern = patternPath.value;\n        namedTypes.Pattern.assert(pattern);\n        if (namedTypes.Identifier.check(pattern)) {\n            if (hasOwn.call(bindings, pattern.name)) {\n                bindings[pattern.name].push(patternPath);\n            }\n            else {\n                bindings[pattern.name] = [patternPath];\n            }\n        }\n        else if (namedTypes.AssignmentPattern &&\n            namedTypes.AssignmentPattern.check(pattern)) {\n            addPattern(patternPath.get('left'), bindings);\n        }\n        else if (namedTypes.ObjectPattern &&\n            namedTypes.ObjectPattern.check(pattern)) {\n            patternPath.get('properties').each(function (propertyPath) {\n                var property = propertyPath.value;\n                if (namedTypes.Pattern.check(property)) {\n                    addPattern(propertyPath, bindings);\n                }\n                else if (namedTypes.Property.check(property) ||\n                    (namedTypes.ObjectProperty &&\n                        namedTypes.ObjectProperty.check(property))) {\n                    addPattern(propertyPath.get('value'), bindings);\n                }\n                else if (namedTypes.SpreadProperty &&\n                    namedTypes.SpreadProperty.check(property)) {\n                    addPattern(propertyPath.get('argument'), bindings);\n                }\n            });\n        }\n        else if (namedTypes.ArrayPattern &&\n            namedTypes.ArrayPattern.check(pattern)) {\n            patternPath.get('elements').each(function (elementPath) {\n                var element = elementPath.value;\n                if (namedTypes.Pattern.check(element)) {\n                    addPattern(elementPath, bindings);\n                }\n                else if (namedTypes.SpreadElement &&\n                    namedTypes.SpreadElement.check(element)) {\n                    addPattern(elementPath.get(\"argument\"), bindings);\n                }\n            });\n        }\n        else if (namedTypes.PropertyPattern &&\n            namedTypes.PropertyPattern.check(pattern)) {\n            addPattern(patternPath.get('pattern'), bindings);\n        }\n        else if ((namedTypes.SpreadElementPattern &&\n            namedTypes.SpreadElementPattern.check(pattern)) ||\n            (namedTypes.RestElement &&\n                namedTypes.RestElement.check(pattern)) ||\n            (namedTypes.SpreadPropertyPattern &&\n                namedTypes.SpreadPropertyPattern.check(pattern))) {\n            addPattern(patternPath.get('argument'), bindings);\n        }\n    }\n    function addTypePattern(patternPath, types) {\n        var pattern = patternPath.value;\n        namedTypes.Pattern.assert(pattern);\n        if (namedTypes.Identifier.check(pattern)) {\n            if (hasOwn.call(types, pattern.name)) {\n                types[pattern.name].push(patternPath);\n            }\n            else {\n                types[pattern.name] = [patternPath];\n            }\n        }\n    }\n    function addTypeParameter(parameterPath, types) {\n        var parameter = parameterPath.value;\n        FlowOrTSTypeParameterType.assert(parameter);\n        if (hasOwn.call(types, parameter.name)) {\n            types[parameter.name].push(parameterPath);\n        }\n        else {\n            types[parameter.name] = [parameterPath];\n        }\n    }\n    Sp.lookup = function (name) {\n        for (var scope = this; scope; scope = scope.parent)\n            if (scope.declares(name))\n                break;\n        return scope;\n    };\n    Sp.lookupType = function (name) {\n        for (var scope = this; scope; scope = scope.parent)\n            if (scope.declaresType(name))\n                break;\n        return scope;\n    };\n    Sp.getGlobalScope = function () {\n        var scope = this;\n        while (!scope.isGlobal)\n            scope = scope.parent;\n        return scope;\n    };\n    return Scope;\n}\nexports.default = scopePlugin;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=scope.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"./types\"));\nvar path_1 = tslib_1.__importDefault(require(\"./path\"));\nvar scope_1 = tslib_1.__importDefault(require(\"./scope\"));\nvar shared_1 = require(\"./shared\");\nfunction nodePathPlugin(fork) {\n    var types = fork.use(types_1.default);\n    var n = types.namedTypes;\n    var b = types.builders;\n    var isNumber = types.builtInTypes.number;\n    var isArray = types.builtInTypes.array;\n    var Path = fork.use(path_1.default);\n    var Scope = fork.use(scope_1.default);\n    var NodePath = function NodePath(value, parentPath, name) {\n        if (!(this instanceof NodePath)) {\n            throw new Error(\"NodePath constructor cannot be invoked without 'new'\");\n        }\n        Path.call(this, value, parentPath, name);\n    };\n    var NPp = NodePath.prototype = Object.create(Path.prototype, {\n        constructor: {\n            value: NodePath,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperties(NPp, {\n        node: {\n            get: function () {\n                Object.defineProperty(this, \"node\", {\n                    configurable: true,\n                    value: this._computeNode()\n                });\n                return this.node;\n            }\n        },\n        parent: {\n            get: function () {\n                Object.defineProperty(this, \"parent\", {\n                    configurable: true,\n                    value: this._computeParent()\n                });\n                return this.parent;\n            }\n        },\n        scope: {\n            get: function () {\n                Object.defineProperty(this, \"scope\", {\n                    configurable: true,\n                    value: this._computeScope()\n                });\n                return this.scope;\n            }\n        }\n    });\n    NPp.replace = function () {\n        delete this.node;\n        delete this.parent;\n        delete this.scope;\n        return Path.prototype.replace.apply(this, arguments);\n    };\n    NPp.prune = function () {\n        var remainingNodePath = this.parent;\n        this.replace();\n        return cleanUpNodesAfterPrune(remainingNodePath);\n    };\n    // The value of the first ancestor Path whose value is a Node.\n    NPp._computeNode = function () {\n        var value = this.value;\n        if (n.Node.check(value)) {\n            return value;\n        }\n        var pp = this.parentPath;\n        return pp && pp.node || null;\n    };\n    // The first ancestor Path whose value is a Node distinct from this.node.\n    NPp._computeParent = function () {\n        var value = this.value;\n        var pp = this.parentPath;\n        if (!n.Node.check(value)) {\n            while (pp && !n.Node.check(pp.value)) {\n                pp = pp.parentPath;\n            }\n            if (pp) {\n                pp = pp.parentPath;\n            }\n        }\n        while (pp && !n.Node.check(pp.value)) {\n            pp = pp.parentPath;\n        }\n        return pp || null;\n    };\n    // The closest enclosing scope that governs this node.\n    NPp._computeScope = function () {\n        var value = this.value;\n        var pp = this.parentPath;\n        var scope = pp && pp.scope;\n        if (n.Node.check(value) &&\n            Scope.isEstablishedBy(value)) {\n            scope = new Scope(this, scope);\n        }\n        return scope || null;\n    };\n    NPp.getValueProperty = function (name) {\n        return types.getFieldValue(this.value, name);\n    };\n    /**\n     * Determine whether this.node needs to be wrapped in parentheses in order\n     * for a parser to reproduce the same local AST structure.\n     *\n     * For instance, in the expression `(1 + 2) * 3`, the BinaryExpression\n     * whose operator is \"+\" needs parentheses, because `1 + 2 * 3` would\n     * parse differently.\n     *\n     * If assumeExpressionContext === true, we don't worry about edge cases\n     * like an anonymous FunctionExpression appearing lexically first in its\n     * enclosing statement and thus needing parentheses to avoid being parsed\n     * as a FunctionDeclaration with a missing name.\n     */\n    NPp.needsParens = function (assumeExpressionContext) {\n        var pp = this.parentPath;\n        if (!pp) {\n            return false;\n        }\n        var node = this.value;\n        // Only expressions need parentheses.\n        if (!n.Expression.check(node)) {\n            return false;\n        }\n        // Identifiers never need parentheses.\n        if (node.type === \"Identifier\") {\n            return false;\n        }\n        while (!n.Node.check(pp.value)) {\n            pp = pp.parentPath;\n            if (!pp) {\n                return false;\n            }\n        }\n        var parent = pp.value;\n        switch (node.type) {\n            case \"UnaryExpression\":\n            case \"SpreadElement\":\n            case \"SpreadProperty\":\n                return parent.type === \"MemberExpression\"\n                    && this.name === \"object\"\n                    && parent.object === node;\n            case \"BinaryExpression\":\n            case \"LogicalExpression\":\n                switch (parent.type) {\n                    case \"CallExpression\":\n                        return this.name === \"callee\"\n                            && parent.callee === node;\n                    case \"UnaryExpression\":\n                    case \"SpreadElement\":\n                    case \"SpreadProperty\":\n                        return true;\n                    case \"MemberExpression\":\n                        return this.name === \"object\"\n                            && parent.object === node;\n                    case \"BinaryExpression\":\n                    case \"LogicalExpression\": {\n                        var n_1 = node;\n                        var po = parent.operator;\n                        var pp_1 = PRECEDENCE[po];\n                        var no = n_1.operator;\n                        var np = PRECEDENCE[no];\n                        if (pp_1 > np) {\n                            return true;\n                        }\n                        if (pp_1 === np && this.name === \"right\") {\n                            if (parent.right !== n_1) {\n                                throw new Error(\"Nodes must be equal\");\n                            }\n                            return true;\n                        }\n                    }\n                    default:\n                        return false;\n                }\n            case \"SequenceExpression\":\n                switch (parent.type) {\n                    case \"ForStatement\":\n                        // Although parentheses wouldn't hurt around sequence\n                        // expressions in the head of for loops, traditional style\n                        // dictates that e.g. i++, j++ should not be wrapped with\n                        // parentheses.\n                        return false;\n                    case \"ExpressionStatement\":\n                        return this.name !== \"expression\";\n                    default:\n                        // Otherwise err on the side of overparenthesization, adding\n                        // explicit exceptions above if this proves overzealous.\n                        return true;\n                }\n            case \"YieldExpression\":\n                switch (parent.type) {\n                    case \"BinaryExpression\":\n                    case \"LogicalExpression\":\n                    case \"UnaryExpression\":\n                    case \"SpreadElement\":\n                    case \"SpreadProperty\":\n                    case \"CallExpression\":\n                    case \"MemberExpression\":\n                    case \"NewExpression\":\n                    case \"ConditionalExpression\":\n                    case \"YieldExpression\":\n                        return true;\n                    default:\n                        return false;\n                }\n            case \"Literal\":\n                return parent.type === \"MemberExpression\"\n                    && isNumber.check(node.value)\n                    && this.name === \"object\"\n                    && parent.object === node;\n            case \"AssignmentExpression\":\n            case \"ConditionalExpression\":\n                switch (parent.type) {\n                    case \"UnaryExpression\":\n                    case \"SpreadElement\":\n                    case \"SpreadProperty\":\n                    case \"BinaryExpression\":\n                    case \"LogicalExpression\":\n                        return true;\n                    case \"CallExpression\":\n                        return this.name === \"callee\"\n                            && parent.callee === node;\n                    case \"ConditionalExpression\":\n                        return this.name === \"test\"\n                            && parent.test === node;\n                    case \"MemberExpression\":\n                        return this.name === \"object\"\n                            && parent.object === node;\n                    default:\n                        return false;\n                }\n            default:\n                if (parent.type === \"NewExpression\" &&\n                    this.name === \"callee\" &&\n                    parent.callee === node) {\n                    return containsCallExpression(node);\n                }\n        }\n        if (assumeExpressionContext !== true &&\n            !this.canBeFirstInStatement() &&\n            this.firstInStatement())\n            return true;\n        return false;\n    };\n    function isBinary(node) {\n        return n.BinaryExpression.check(node)\n            || n.LogicalExpression.check(node);\n    }\n    // @ts-ignore 'isUnaryLike' is declared but its value is never read. [6133]\n    function isUnaryLike(node) {\n        return n.UnaryExpression.check(node)\n            // I considered making SpreadElement and SpreadProperty subtypes\n            // of UnaryExpression, but they're not really Expression nodes.\n            || (n.SpreadElement && n.SpreadElement.check(node))\n            || (n.SpreadProperty && n.SpreadProperty.check(node));\n    }\n    var PRECEDENCE = {};\n    [[\"||\"],\n        [\"&&\"],\n        [\"|\"],\n        [\"^\"],\n        [\"&\"],\n        [\"==\", \"===\", \"!=\", \"!==\"],\n        [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n        [\">>\", \"<<\", \">>>\"],\n        [\"+\", \"-\"],\n        [\"*\", \"/\", \"%\"]\n    ].forEach(function (tier, i) {\n        tier.forEach(function (op) {\n            PRECEDENCE[op] = i;\n        });\n    });\n    function containsCallExpression(node) {\n        if (n.CallExpression.check(node)) {\n            return true;\n        }\n        if (isArray.check(node)) {\n            return node.some(containsCallExpression);\n        }\n        if (n.Node.check(node)) {\n            return types.someField(node, function (_name, child) {\n                return containsCallExpression(child);\n            });\n        }\n        return false;\n    }\n    NPp.canBeFirstInStatement = function () {\n        var node = this.node;\n        return !n.FunctionExpression.check(node)\n            && !n.ObjectExpression.check(node);\n    };\n    NPp.firstInStatement = function () {\n        return firstInStatement(this);\n    };\n    function firstInStatement(path) {\n        for (var node, parent; path.parent; path = path.parent) {\n            node = path.node;\n            parent = path.parent.node;\n            if (n.BlockStatement.check(parent) &&\n                path.parent.name === \"body\" &&\n                path.name === 0) {\n                if (parent.body[0] !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                return true;\n            }\n            if (n.ExpressionStatement.check(parent) &&\n                path.name === \"expression\") {\n                if (parent.expression !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                return true;\n            }\n            if (n.SequenceExpression.check(parent) &&\n                path.parent.name === \"expressions\" &&\n                path.name === 0) {\n                if (parent.expressions[0] !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (n.CallExpression.check(parent) &&\n                path.name === \"callee\") {\n                if (parent.callee !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (n.MemberExpression.check(parent) &&\n                path.name === \"object\") {\n                if (parent.object !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (n.ConditionalExpression.check(parent) &&\n                path.name === \"test\") {\n                if (parent.test !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (isBinary(parent) &&\n                path.name === \"left\") {\n                if (parent.left !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            if (n.UnaryExpression.check(parent) &&\n                !parent.prefix &&\n                path.name === \"argument\") {\n                if (parent.argument !== node) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n                continue;\n            }\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Pruning certain nodes will result in empty or incomplete nodes, here we clean those nodes up.\n     */\n    function cleanUpNodesAfterPrune(remainingNodePath) {\n        if (n.VariableDeclaration.check(remainingNodePath.node)) {\n            var declarations = remainingNodePath.get('declarations').value;\n            if (!declarations || declarations.length === 0) {\n                return remainingNodePath.prune();\n            }\n        }\n        else if (n.ExpressionStatement.check(remainingNodePath.node)) {\n            if (!remainingNodePath.get('expression').value) {\n                return remainingNodePath.prune();\n            }\n        }\n        else if (n.IfStatement.check(remainingNodePath.node)) {\n            cleanUpIfStatementAfterPrune(remainingNodePath);\n        }\n        return remainingNodePath;\n    }\n    function cleanUpIfStatementAfterPrune(ifStatement) {\n        var testExpression = ifStatement.get('test').value;\n        var alternate = ifStatement.get('alternate').value;\n        var consequent = ifStatement.get('consequent').value;\n        if (!consequent && !alternate) {\n            var testExpressionStatement = b.expressionStatement(testExpression);\n            ifStatement.replace(testExpressionStatement);\n        }\n        else if (!consequent && alternate) {\n            var negatedTestExpression = b.unaryExpression('!', testExpression, true);\n            if (n.UnaryExpression.check(testExpression) && testExpression.operator === '!') {\n                negatedTestExpression = testExpression.argument;\n            }\n            ifStatement.get(\"test\").replace(negatedTestExpression);\n            ifStatement.get(\"consequent\").replace(alternate);\n            ifStatement.get(\"alternate\").replace();\n        }\n    }\n    return NodePath;\n}\nexports.default = nodePathPlugin;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=node-path.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"./types\"));\nvar node_path_1 = tslib_1.__importDefault(require(\"./node-path\"));\nvar shared_1 = require(\"./shared\");\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction pathVisitorPlugin(fork) {\n    var types = fork.use(types_1.default);\n    var NodePath = fork.use(node_path_1.default);\n    var isArray = types.builtInTypes.array;\n    var isObject = types.builtInTypes.object;\n    var isFunction = types.builtInTypes.function;\n    var undefined;\n    var PathVisitor = function PathVisitor() {\n        if (!(this instanceof PathVisitor)) {\n            throw new Error(\"PathVisitor constructor cannot be invoked without 'new'\");\n        }\n        // Permanent state.\n        this._reusableContextStack = [];\n        this._methodNameTable = computeMethodNameTable(this);\n        this._shouldVisitComments =\n            hasOwn.call(this._methodNameTable, \"Block\") ||\n                hasOwn.call(this._methodNameTable, \"Line\");\n        this.Context = makeContextConstructor(this);\n        // State reset every time PathVisitor.prototype.visit is called.\n        this._visiting = false;\n        this._changeReported = false;\n    };\n    function computeMethodNameTable(visitor) {\n        var typeNames = Object.create(null);\n        for (var methodName in visitor) {\n            if (/^visit[A-Z]/.test(methodName)) {\n                typeNames[methodName.slice(\"visit\".length)] = true;\n            }\n        }\n        var supertypeTable = types.computeSupertypeLookupTable(typeNames);\n        var methodNameTable = Object.create(null);\n        var typeNameKeys = Object.keys(supertypeTable);\n        var typeNameCount = typeNameKeys.length;\n        for (var i = 0; i < typeNameCount; ++i) {\n            var typeName = typeNameKeys[i];\n            methodName = \"visit\" + supertypeTable[typeName];\n            if (isFunction.check(visitor[methodName])) {\n                methodNameTable[typeName] = methodName;\n            }\n        }\n        return methodNameTable;\n    }\n    PathVisitor.fromMethodsObject = function fromMethodsObject(methods) {\n        if (methods instanceof PathVisitor) {\n            return methods;\n        }\n        if (!isObject.check(methods)) {\n            // An empty visitor?\n            return new PathVisitor;\n        }\n        var Visitor = function Visitor() {\n            if (!(this instanceof Visitor)) {\n                throw new Error(\"Visitor constructor cannot be invoked without 'new'\");\n            }\n            PathVisitor.call(this);\n        };\n        var Vp = Visitor.prototype = Object.create(PVp);\n        Vp.constructor = Visitor;\n        extend(Vp, methods);\n        extend(Visitor, PathVisitor);\n        isFunction.assert(Visitor.fromMethodsObject);\n        isFunction.assert(Visitor.visit);\n        return new Visitor;\n    };\n    function extend(target, source) {\n        for (var property in source) {\n            if (hasOwn.call(source, property)) {\n                target[property] = source[property];\n            }\n        }\n        return target;\n    }\n    PathVisitor.visit = function visit(node, methods) {\n        return PathVisitor.fromMethodsObject(methods).visit(node);\n    };\n    var PVp = PathVisitor.prototype;\n    PVp.visit = function () {\n        if (this._visiting) {\n            throw new Error(\"Recursively calling visitor.visit(path) resets visitor state. \" +\n                \"Try this.visit(path) or this.traverse(path) instead.\");\n        }\n        // Private state that needs to be reset before every traversal.\n        this._visiting = true;\n        this._changeReported = false;\n        this._abortRequested = false;\n        var argc = arguments.length;\n        var args = new Array(argc);\n        for (var i = 0; i < argc; ++i) {\n            args[i] = arguments[i];\n        }\n        if (!(args[0] instanceof NodePath)) {\n            args[0] = new NodePath({ root: args[0] }).get(\"root\");\n        }\n        // Called with the same arguments as .visit.\n        this.reset.apply(this, args);\n        var didNotThrow;\n        try {\n            var root = this.visitWithoutReset(args[0]);\n            didNotThrow = true;\n        }\n        finally {\n            this._visiting = false;\n            if (!didNotThrow && this._abortRequested) {\n                // If this.visitWithoutReset threw an exception and\n                // this._abortRequested was set to true, return the root of\n                // the AST instead of letting the exception propagate, so that\n                // client code does not have to provide a try-catch block to\n                // intercept the AbortRequest exception.  Other kinds of\n                // exceptions will propagate without being intercepted and\n                // rethrown by a catch block, so their stacks will accurately\n                // reflect the original throwing context.\n                return args[0].value;\n            }\n        }\n        return root;\n    };\n    PVp.AbortRequest = function AbortRequest() { };\n    PVp.abort = function () {\n        var visitor = this;\n        visitor._abortRequested = true;\n        var request = new visitor.AbortRequest();\n        // If you decide to catch this exception and stop it from propagating,\n        // make sure to call its cancel method to avoid silencing other\n        // exceptions that might be thrown later in the traversal.\n        request.cancel = function () {\n            visitor._abortRequested = false;\n        };\n        throw request;\n    };\n    PVp.reset = function (_path /*, additional arguments */) {\n        // Empty stub; may be reassigned or overridden by subclasses.\n    };\n    PVp.visitWithoutReset = function (path) {\n        if (this instanceof this.Context) {\n            // Since this.Context.prototype === this, there's a chance we\n            // might accidentally call context.visitWithoutReset. If that\n            // happens, re-invoke the method against context.visitor.\n            return this.visitor.visitWithoutReset(path);\n        }\n        if (!(path instanceof NodePath)) {\n            throw new Error(\"\");\n        }\n        var value = path.value;\n        var methodName = value &&\n            typeof value === \"object\" &&\n            typeof value.type === \"string\" &&\n            this._methodNameTable[value.type];\n        if (methodName) {\n            var context = this.acquireContext(path);\n            try {\n                return context.invokeVisitorMethod(methodName);\n            }\n            finally {\n                this.releaseContext(context);\n            }\n        }\n        else {\n            // If there was no visitor method to call, visit the children of\n            // this node generically.\n            return visitChildren(path, this);\n        }\n    };\n    function visitChildren(path, visitor) {\n        if (!(path instanceof NodePath)) {\n            throw new Error(\"\");\n        }\n        if (!(visitor instanceof PathVisitor)) {\n            throw new Error(\"\");\n        }\n        var value = path.value;\n        if (isArray.check(value)) {\n            path.each(visitor.visitWithoutReset, visitor);\n        }\n        else if (!isObject.check(value)) {\n            // No children to visit.\n        }\n        else {\n            var childNames = types.getFieldNames(value);\n            // The .comments field of the Node type is hidden, so we only\n            // visit it if the visitor defines visitBlock or visitLine, and\n            // value.comments is defined.\n            if (visitor._shouldVisitComments &&\n                value.comments &&\n                childNames.indexOf(\"comments\") < 0) {\n                childNames.push(\"comments\");\n            }\n            var childCount = childNames.length;\n            var childPaths = [];\n            for (var i = 0; i < childCount; ++i) {\n                var childName = childNames[i];\n                if (!hasOwn.call(value, childName)) {\n                    value[childName] = types.getFieldValue(value, childName);\n                }\n                childPaths.push(path.get(childName));\n            }\n            for (var i = 0; i < childCount; ++i) {\n                visitor.visitWithoutReset(childPaths[i]);\n            }\n        }\n        return path.value;\n    }\n    PVp.acquireContext = function (path) {\n        if (this._reusableContextStack.length === 0) {\n            return new this.Context(path);\n        }\n        return this._reusableContextStack.pop().reset(path);\n    };\n    PVp.releaseContext = function (context) {\n        if (!(context instanceof this.Context)) {\n            throw new Error(\"\");\n        }\n        this._reusableContextStack.push(context);\n        context.currentPath = null;\n    };\n    PVp.reportChanged = function () {\n        this._changeReported = true;\n    };\n    PVp.wasChangeReported = function () {\n        return this._changeReported;\n    };\n    function makeContextConstructor(visitor) {\n        function Context(path) {\n            if (!(this instanceof Context)) {\n                throw new Error(\"\");\n            }\n            if (!(this instanceof PathVisitor)) {\n                throw new Error(\"\");\n            }\n            if (!(path instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            Object.defineProperty(this, \"visitor\", {\n                value: visitor,\n                writable: false,\n                enumerable: true,\n                configurable: false\n            });\n            this.currentPath = path;\n            this.needToCallTraverse = true;\n            Object.seal(this);\n        }\n        if (!(visitor instanceof PathVisitor)) {\n            throw new Error(\"\");\n        }\n        // Note that the visitor object is the prototype of Context.prototype,\n        // so all visitor methods are inherited by context objects.\n        var Cp = Context.prototype = Object.create(visitor);\n        Cp.constructor = Context;\n        extend(Cp, sharedContextProtoMethods);\n        return Context;\n    }\n    // Every PathVisitor has a different this.Context constructor and\n    // this.Context.prototype object, but those prototypes can all use the\n    // same reset, invokeVisitorMethod, and traverse function objects.\n    var sharedContextProtoMethods = Object.create(null);\n    sharedContextProtoMethods.reset =\n        function reset(path) {\n            if (!(this instanceof this.Context)) {\n                throw new Error(\"\");\n            }\n            if (!(path instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            this.currentPath = path;\n            this.needToCallTraverse = true;\n            return this;\n        };\n    sharedContextProtoMethods.invokeVisitorMethod =\n        function invokeVisitorMethod(methodName) {\n            if (!(this instanceof this.Context)) {\n                throw new Error(\"\");\n            }\n            if (!(this.currentPath instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            var result = this.visitor[methodName].call(this, this.currentPath);\n            if (result === false) {\n                // Visitor methods return false to indicate that they have handled\n                // their own traversal needs, and we should not complain if\n                // this.needToCallTraverse is still true.\n                this.needToCallTraverse = false;\n            }\n            else if (result !== undefined) {\n                // Any other non-undefined value returned from the visitor method\n                // is interpreted as a replacement value.\n                this.currentPath = this.currentPath.replace(result)[0];\n                if (this.needToCallTraverse) {\n                    // If this.traverse still hasn't been called, visit the\n                    // children of the replacement node.\n                    this.traverse(this.currentPath);\n                }\n            }\n            if (this.needToCallTraverse !== false) {\n                throw new Error(\"Must either call this.traverse or return false in \" + methodName);\n            }\n            var path = this.currentPath;\n            return path && path.value;\n        };\n    sharedContextProtoMethods.traverse =\n        function traverse(path, newVisitor) {\n            if (!(this instanceof this.Context)) {\n                throw new Error(\"\");\n            }\n            if (!(path instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            if (!(this.currentPath instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            this.needToCallTraverse = false;\n            return visitChildren(path, PathVisitor.fromMethodsObject(newVisitor || this.visitor));\n        };\n    sharedContextProtoMethods.visit =\n        function visit(path, newVisitor) {\n            if (!(this instanceof this.Context)) {\n                throw new Error(\"\");\n            }\n            if (!(path instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            if (!(this.currentPath instanceof NodePath)) {\n                throw new Error(\"\");\n            }\n            this.needToCallTraverse = false;\n            return PathVisitor.fromMethodsObject(newVisitor || this.visitor).visitWithoutReset(path);\n        };\n    sharedContextProtoMethods.reportChanged = function reportChanged() {\n        this.visitor.reportChanged();\n    };\n    sharedContextProtoMethods.abort = function abort() {\n        this.needToCallTraverse = false;\n        this.visitor.abort();\n    };\n    return PathVisitor;\n}\nexports.default = pathVisitorPlugin;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=path-visitor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar shared_1 = require(\"./shared\");\nvar types_1 = tslib_1.__importDefault(require(\"./types\"));\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var getFieldNames = types.getFieldNames;\n    var getFieldValue = types.getFieldValue;\n    var isArray = types.builtInTypes.array;\n    var isObject = types.builtInTypes.object;\n    var isDate = types.builtInTypes.Date;\n    var isRegExp = types.builtInTypes.RegExp;\n    var hasOwn = Object.prototype.hasOwnProperty;\n    function astNodesAreEquivalent(a, b, problemPath) {\n        if (isArray.check(problemPath)) {\n            problemPath.length = 0;\n        }\n        else {\n            problemPath = null;\n        }\n        return areEquivalent(a, b, problemPath);\n    }\n    astNodesAreEquivalent.assert = function (a, b) {\n        var problemPath = [];\n        if (!astNodesAreEquivalent(a, b, problemPath)) {\n            if (problemPath.length === 0) {\n                if (a !== b) {\n                    throw new Error(\"Nodes must be equal\");\n                }\n            }\n            else {\n                throw new Error(\"Nodes differ in the following path: \" +\n                    problemPath.map(subscriptForProperty).join(\"\"));\n            }\n        }\n    };\n    function subscriptForProperty(property) {\n        if (/[_$a-z][_$a-z0-9]*/i.test(property)) {\n            return \".\" + property;\n        }\n        return \"[\" + JSON.stringify(property) + \"]\";\n    }\n    function areEquivalent(a, b, problemPath) {\n        if (a === b) {\n            return true;\n        }\n        if (isArray.check(a)) {\n            return arraysAreEquivalent(a, b, problemPath);\n        }\n        if (isObject.check(a)) {\n            return objectsAreEquivalent(a, b, problemPath);\n        }\n        if (isDate.check(a)) {\n            return isDate.check(b) && (+a === +b);\n        }\n        if (isRegExp.check(a)) {\n            return isRegExp.check(b) && (a.source === b.source &&\n                a.global === b.global &&\n                a.multiline === b.multiline &&\n                a.ignoreCase === b.ignoreCase);\n        }\n        return a == b;\n    }\n    function arraysAreEquivalent(a, b, problemPath) {\n        isArray.assert(a);\n        var aLength = a.length;\n        if (!isArray.check(b) || b.length !== aLength) {\n            if (problemPath) {\n                problemPath.push(\"length\");\n            }\n            return false;\n        }\n        for (var i = 0; i < aLength; ++i) {\n            if (problemPath) {\n                problemPath.push(i);\n            }\n            if (i in a !== i in b) {\n                return false;\n            }\n            if (!areEquivalent(a[i], b[i], problemPath)) {\n                return false;\n            }\n            if (problemPath) {\n                var problemPathTail = problemPath.pop();\n                if (problemPathTail !== i) {\n                    throw new Error(\"\" + problemPathTail);\n                }\n            }\n        }\n        return true;\n    }\n    function objectsAreEquivalent(a, b, problemPath) {\n        isObject.assert(a);\n        if (!isObject.check(b)) {\n            return false;\n        }\n        // Fast path for a common property of AST nodes.\n        if (a.type !== b.type) {\n            if (problemPath) {\n                problemPath.push(\"type\");\n            }\n            return false;\n        }\n        var aNames = getFieldNames(a);\n        var aNameCount = aNames.length;\n        var bNames = getFieldNames(b);\n        var bNameCount = bNames.length;\n        if (aNameCount === bNameCount) {\n            for (var i = 0; i < aNameCount; ++i) {\n                var name = aNames[i];\n                var aChild = getFieldValue(a, name);\n                var bChild = getFieldValue(b, name);\n                if (problemPath) {\n                    problemPath.push(name);\n                }\n                if (!areEquivalent(aChild, bChild, problemPath)) {\n                    return false;\n                }\n                if (problemPath) {\n                    var problemPathTail = problemPath.pop();\n                    if (problemPathTail !== name) {\n                        throw new Error(\"\" + problemPathTail);\n                    }\n                }\n            }\n            return true;\n        }\n        if (!problemPath) {\n            return false;\n        }\n        // Since aNameCount !== bNameCount, we need to find some name that's\n        // missing in aNames but present in bNames, or vice-versa.\n        var seenNames = Object.create(null);\n        for (i = 0; i < aNameCount; ++i) {\n            seenNames[aNames[i]] = true;\n        }\n        for (i = 0; i < bNameCount; ++i) {\n            name = bNames[i];\n            if (!hasOwn.call(seenNames, name)) {\n                problemPath.push(name);\n                return false;\n            }\n            delete seenNames[name];\n        }\n        for (name in seenNames) {\n            problemPath.push(name);\n            break;\n        }\n        return false;\n    }\n    return astNodesAreEquivalent;\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=equiv.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"./types\"));\nvar path_visitor_1 = tslib_1.__importDefault(require(\"./path-visitor\"));\nvar equiv_1 = tslib_1.__importDefault(require(\"./equiv\"));\nvar path_1 = tslib_1.__importDefault(require(\"./path\"));\nvar node_path_1 = tslib_1.__importDefault(require(\"./node-path\"));\nvar shared_1 = require(\"./shared\");\nfunction default_1(plugins) {\n    var fork = createFork();\n    var types = fork.use(types_1.default);\n    plugins.forEach(fork.use);\n    types.finalize();\n    var PathVisitor = fork.use(path_visitor_1.default);\n    return {\n        Type: types.Type,\n        builtInTypes: types.builtInTypes,\n        namedTypes: types.namedTypes,\n        builders: types.builders,\n        defineMethod: types.defineMethod,\n        getFieldNames: types.getFieldNames,\n        getFieldValue: types.getFieldValue,\n        eachField: types.eachField,\n        someField: types.someField,\n        getSupertypeNames: types.getSupertypeNames,\n        getBuilderName: types.getBuilderName,\n        astNodesAreEquivalent: fork.use(equiv_1.default),\n        finalize: types.finalize,\n        Path: fork.use(path_1.default),\n        NodePath: fork.use(node_path_1.default),\n        PathVisitor: PathVisitor,\n        use: fork.use,\n        visit: PathVisitor.visit,\n    };\n}\nexports.default = default_1;\n;\nfunction createFork() {\n    var used = [];\n    var usedResult = [];\n    function use(plugin) {\n        var idx = used.indexOf(plugin);\n        if (idx === -1) {\n            idx = used.length;\n            used.push(plugin);\n            usedResult[idx] = plugin(fork);\n        }\n        return usedResult[idx];\n    }\n    var fork = { use: use };\n    return fork;\n}\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=fork.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shared_1 = require(\"../../shared\");\nfunction default_1() {\n    return {\n        BinaryOperators: [\n            \"==\", \"!=\", \"===\", \"!==\",\n            \"<\", \"<=\", \">\", \">=\",\n            \"<<\", \">>\", \">>>\",\n            \"+\", \"-\", \"*\", \"/\", \"%\",\n            \"&\",\n            \"|\", \"^\", \"in\",\n            \"instanceof\",\n        ],\n        AssignmentOperators: [\n            \"=\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\",\n            \"<<=\", \">>=\", \">>>=\",\n            \"|=\", \"^=\", \"&=\",\n        ],\n        LogicalOperators: [\n            \"||\", \"&&\",\n        ],\n    };\n}\nexports.default = default_1;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=core.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar shared_1 = require(\"../../shared\");\nvar core_1 = tslib_1.__importDefault(require(\"./core\"));\nfunction default_1(fork) {\n    var result = fork.use(core_1.default);\n    // Exponentiation operators. Must run before BinaryOperators or\n    // AssignmentOperators are used (hence before fork.use(es6Def)).\n    // https://github.com/tc39/proposal-exponentiation-operator\n    if (result.BinaryOperators.indexOf(\"**\") < 0) {\n        result.BinaryOperators.push(\"**\");\n    }\n    if (result.AssignmentOperators.indexOf(\"**=\") < 0) {\n        result.AssignmentOperators.push(\"**=\");\n    }\n    return result;\n}\nexports.default = default_1;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=es2016.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar shared_1 = require(\"../../shared\");\nvar es2016_1 = tslib_1.__importDefault(require(\"./es2016\"));\nfunction default_1(fork) {\n    var result = fork.use(es2016_1.default);\n    // Nullish coalescing. Must run before LogicalOperators is used.\n    // https://github.com/tc39/proposal-nullish-coalescing\n    if (result.LogicalOperators.indexOf(\"??\") < 0) {\n        result.LogicalOperators.push(\"??\");\n    }\n    return result;\n}\nexports.default = default_1;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=es2020.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar shared_1 = require(\"../../shared\");\nvar es2020_1 = tslib_1.__importDefault(require(\"./es2020\"));\nfunction default_1(fork) {\n    var result = fork.use(es2020_1.default);\n    // Logical assignment operators. Must run before AssignmentOperators is used.\n    // https://github.com/tc39/proposal-logical-assignment\n    result.LogicalOperators.forEach(function (op) {\n        var assignOp = op + \"=\";\n        if (result.AssignmentOperators.indexOf(assignOp) < 0) {\n            result.AssignmentOperators.push(assignOp);\n        }\n    });\n    return result;\n}\nexports.default = default_1;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=es2021.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = tslib_1.__importDefault(require(\"./operators/core\"));\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar shared_1 = tslib_1.__importStar(require(\"../shared\"));\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var Type = types.Type;\n    var def = Type.def;\n    var or = Type.or;\n    var shared = fork.use(shared_1.default);\n    var defaults = shared.defaults;\n    var geq = shared.geq;\n    var _a = fork.use(core_1.default), BinaryOperators = _a.BinaryOperators, AssignmentOperators = _a.AssignmentOperators, LogicalOperators = _a.LogicalOperators;\n    // Abstract supertype of all syntactic entities that are allowed to have a\n    // .loc field.\n    def(\"Printable\")\n        .field(\"loc\", or(def(\"SourceLocation\"), null), defaults[\"null\"], true);\n    def(\"Node\")\n        .bases(\"Printable\")\n        .field(\"type\", String)\n        .field(\"comments\", or([def(\"Comment\")], null), defaults[\"null\"], true);\n    def(\"SourceLocation\")\n        .field(\"start\", def(\"Position\"))\n        .field(\"end\", def(\"Position\"))\n        .field(\"source\", or(String, null), defaults[\"null\"]);\n    def(\"Position\")\n        .field(\"line\", geq(1))\n        .field(\"column\", geq(0));\n    def(\"File\")\n        .bases(\"Node\")\n        .build(\"program\", \"name\")\n        .field(\"program\", def(\"Program\"))\n        .field(\"name\", or(String, null), defaults[\"null\"]);\n    def(\"Program\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n    def(\"Function\")\n        .bases(\"Node\")\n        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        .field(\"params\", [def(\"Pattern\")])\n        .field(\"body\", def(\"BlockStatement\"))\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"async\", Boolean, defaults[\"false\"]);\n    def(\"Statement\").bases(\"Node\");\n    // The empty .build() here means that an EmptyStatement can be constructed\n    // (i.e. it's not abstract) but that it needs no arguments.\n    def(\"EmptyStatement\").bases(\"Statement\").build();\n    def(\"BlockStatement\")\n        .bases(\"Statement\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n    // TODO Figure out how to silently coerce Expressions to\n    // ExpressionStatements where a Statement was expected.\n    def(\"ExpressionStatement\")\n        .bases(\"Statement\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"IfStatement\")\n        .bases(\"Statement\")\n        .build(\"test\", \"consequent\", \"alternate\")\n        .field(\"test\", def(\"Expression\"))\n        .field(\"consequent\", def(\"Statement\"))\n        .field(\"alternate\", or(def(\"Statement\"), null), defaults[\"null\"]);\n    def(\"LabeledStatement\")\n        .bases(\"Statement\")\n        .build(\"label\", \"body\")\n        .field(\"label\", def(\"Identifier\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"BreakStatement\")\n        .bases(\"Statement\")\n        .build(\"label\")\n        .field(\"label\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n    def(\"ContinueStatement\")\n        .bases(\"Statement\")\n        .build(\"label\")\n        .field(\"label\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n    def(\"WithStatement\")\n        .bases(\"Statement\")\n        .build(\"object\", \"body\")\n        .field(\"object\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"SwitchStatement\")\n        .bases(\"Statement\")\n        .build(\"discriminant\", \"cases\", \"lexical\")\n        .field(\"discriminant\", def(\"Expression\"))\n        .field(\"cases\", [def(\"SwitchCase\")])\n        .field(\"lexical\", Boolean, defaults[\"false\"]);\n    def(\"ReturnStatement\")\n        .bases(\"Statement\")\n        .build(\"argument\")\n        .field(\"argument\", or(def(\"Expression\"), null));\n    def(\"ThrowStatement\")\n        .bases(\"Statement\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"TryStatement\")\n        .bases(\"Statement\")\n        .build(\"block\", \"handler\", \"finalizer\")\n        .field(\"block\", def(\"BlockStatement\"))\n        .field(\"handler\", or(def(\"CatchClause\"), null), function () {\n        return this.handlers && this.handlers[0] || null;\n    })\n        .field(\"handlers\", [def(\"CatchClause\")], function () {\n        return this.handler ? [this.handler] : [];\n    }, true) // Indicates this field is hidden from eachField iteration.\n        .field(\"guardedHandlers\", [def(\"CatchClause\")], defaults.emptyArray)\n        .field(\"finalizer\", or(def(\"BlockStatement\"), null), defaults[\"null\"]);\n    def(\"CatchClause\")\n        .bases(\"Node\")\n        .build(\"param\", \"guard\", \"body\")\n        .field(\"param\", def(\"Pattern\"))\n        .field(\"guard\", or(def(\"Expression\"), null), defaults[\"null\"])\n        .field(\"body\", def(\"BlockStatement\"));\n    def(\"WhileStatement\")\n        .bases(\"Statement\")\n        .build(\"test\", \"body\")\n        .field(\"test\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"DoWhileStatement\")\n        .bases(\"Statement\")\n        .build(\"body\", \"test\")\n        .field(\"body\", def(\"Statement\"))\n        .field(\"test\", def(\"Expression\"));\n    def(\"ForStatement\")\n        .bases(\"Statement\")\n        .build(\"init\", \"test\", \"update\", \"body\")\n        .field(\"init\", or(def(\"VariableDeclaration\"), def(\"Expression\"), null))\n        .field(\"test\", or(def(\"Expression\"), null))\n        .field(\"update\", or(def(\"Expression\"), null))\n        .field(\"body\", def(\"Statement\"));\n    def(\"ForInStatement\")\n        .bases(\"Statement\")\n        .build(\"left\", \"right\", \"body\")\n        .field(\"left\", or(def(\"VariableDeclaration\"), def(\"Expression\")))\n        .field(\"right\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"DebuggerStatement\").bases(\"Statement\").build();\n    def(\"Declaration\").bases(\"Statement\");\n    def(\"FunctionDeclaration\")\n        .bases(\"Function\", \"Declaration\")\n        .build(\"id\", \"params\", \"body\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"FunctionExpression\")\n        .bases(\"Function\", \"Expression\")\n        .build(\"id\", \"params\", \"body\");\n    def(\"VariableDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"kind\", \"declarations\")\n        .field(\"kind\", or(\"var\", \"let\", \"const\"))\n        .field(\"declarations\", [def(\"VariableDeclarator\")]);\n    def(\"VariableDeclarator\")\n        .bases(\"Node\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Pattern\"))\n        .field(\"init\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"Expression\").bases(\"Node\");\n    def(\"ThisExpression\").bases(\"Expression\").build();\n    def(\"ArrayExpression\")\n        .bases(\"Expression\")\n        .build(\"elements\")\n        .field(\"elements\", [or(def(\"Expression\"), null)]);\n    def(\"ObjectExpression\")\n        .bases(\"Expression\")\n        .build(\"properties\")\n        .field(\"properties\", [def(\"Property\")]);\n    // TODO Not in the Mozilla Parser API, but used by Esprima.\n    def(\"Property\")\n        .bases(\"Node\") // Want to be able to visit Property Nodes.\n        .build(\"kind\", \"key\", \"value\")\n        .field(\"kind\", or(\"init\", \"get\", \"set\"))\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n        .field(\"value\", def(\"Expression\"));\n    def(\"SequenceExpression\")\n        .bases(\"Expression\")\n        .build(\"expressions\")\n        .field(\"expressions\", [def(\"Expression\")]);\n    var UnaryOperator = or(\"-\", \"+\", \"!\", \"~\", \"typeof\", \"void\", \"delete\");\n    def(\"UnaryExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"argument\", \"prefix\")\n        .field(\"operator\", UnaryOperator)\n        .field(\"argument\", def(\"Expression\"))\n        // Esprima doesn't bother with this field, presumably because it's\n        // always true for unary operators.\n        .field(\"prefix\", Boolean, defaults[\"true\"]);\n    var BinaryOperator = or.apply(void 0, BinaryOperators);\n    def(\"BinaryExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"left\", \"right\")\n        .field(\"operator\", BinaryOperator)\n        .field(\"left\", def(\"Expression\"))\n        .field(\"right\", def(\"Expression\"));\n    var AssignmentOperator = or.apply(void 0, AssignmentOperators);\n    def(\"AssignmentExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"left\", \"right\")\n        .field(\"operator\", AssignmentOperator)\n        .field(\"left\", or(def(\"Pattern\"), def(\"MemberExpression\")))\n        .field(\"right\", def(\"Expression\"));\n    var UpdateOperator = or(\"++\", \"--\");\n    def(\"UpdateExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"argument\", \"prefix\")\n        .field(\"operator\", UpdateOperator)\n        .field(\"argument\", def(\"Expression\"))\n        .field(\"prefix\", Boolean);\n    var LogicalOperator = or.apply(void 0, LogicalOperators);\n    def(\"LogicalExpression\")\n        .bases(\"Expression\")\n        .build(\"operator\", \"left\", \"right\")\n        .field(\"operator\", LogicalOperator)\n        .field(\"left\", def(\"Expression\"))\n        .field(\"right\", def(\"Expression\"));\n    def(\"ConditionalExpression\")\n        .bases(\"Expression\")\n        .build(\"test\", \"consequent\", \"alternate\")\n        .field(\"test\", def(\"Expression\"))\n        .field(\"consequent\", def(\"Expression\"))\n        .field(\"alternate\", def(\"Expression\"));\n    def(\"NewExpression\")\n        .bases(\"Expression\")\n        .build(\"callee\", \"arguments\")\n        .field(\"callee\", def(\"Expression\"))\n        // The Mozilla Parser API gives this type as [or(def(\"Expression\"),\n        // null)], but null values don't really make sense at the call site.\n        // TODO Report this nonsense.\n        .field(\"arguments\", [def(\"Expression\")]);\n    def(\"CallExpression\")\n        .bases(\"Expression\")\n        .build(\"callee\", \"arguments\")\n        .field(\"callee\", def(\"Expression\"))\n        // See comment for NewExpression above.\n        .field(\"arguments\", [def(\"Expression\")]);\n    def(\"MemberExpression\")\n        .bases(\"Expression\")\n        .build(\"object\", \"property\", \"computed\")\n        .field(\"object\", def(\"Expression\"))\n        .field(\"property\", or(def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean, function () {\n        var type = this.property.type;\n        if (type === 'Literal' ||\n            type === 'MemberExpression' ||\n            type === 'BinaryExpression') {\n            return true;\n        }\n        return false;\n    });\n    def(\"Pattern\").bases(\"Node\");\n    def(\"SwitchCase\")\n        .bases(\"Node\")\n        .build(\"test\", \"consequent\")\n        .field(\"test\", or(def(\"Expression\"), null))\n        .field(\"consequent\", [def(\"Statement\")]);\n    def(\"Identifier\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"name\")\n        .field(\"name\", String)\n        .field(\"optional\", Boolean, defaults[\"false\"]);\n    def(\"Literal\")\n        .bases(\"Expression\")\n        .build(\"value\")\n        .field(\"value\", or(String, Boolean, null, Number, RegExp, BigInt));\n    // Abstract (non-buildable) comment supertype. Not a Node.\n    def(\"Comment\")\n        .bases(\"Printable\")\n        .field(\"value\", String)\n        // A .leading comment comes before the node, whereas a .trailing\n        // comment comes after it. These two fields should not both be true,\n        // but they might both be false when the comment falls inside a node\n        // and the node has no children for the comment to lead or trail,\n        // e.g. { /*dangling*/ }.\n        .field(\"leading\", Boolean, defaults[\"true\"])\n        .field(\"trailing\", Boolean, defaults[\"false\"]);\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=core.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = tslib_1.__importDefault(require(\"./core\"));\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar shared_1 = tslib_1.__importStar(require(\"../shared\"));\nfunction default_1(fork) {\n    fork.use(core_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"Function\")\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"expression\", Boolean, defaults[\"false\"])\n        .field(\"defaults\", [or(def(\"Expression\"), null)], defaults.emptyArray)\n        // Legacy\n        .field(\"rest\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n    // The ESTree way of representing a ...rest parameter.\n    def(\"RestElement\")\n        .bases(\"Pattern\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Pattern\"))\n        .field(\"typeAnnotation\", // for Babylon. Flow parser puts it on the identifier\n    or(def(\"TypeAnnotation\"), def(\"TSTypeAnnotation\"), null), defaults[\"null\"]);\n    def(\"SpreadElementPattern\")\n        .bases(\"Pattern\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Pattern\"));\n    def(\"FunctionDeclaration\")\n        .build(\"id\", \"params\", \"body\", \"generator\", \"expression\")\n        // May be `null` in the context of `export default function () {}`\n        .field(\"id\", or(def(\"Identifier\"), null));\n    def(\"FunctionExpression\")\n        .build(\"id\", \"params\", \"body\", \"generator\", \"expression\");\n    def(\"ArrowFunctionExpression\")\n        .bases(\"Function\", \"Expression\")\n        .build(\"params\", \"body\", \"expression\")\n        // The forced null value here is compatible with the overridden\n        // definition of the \"id\" field in the Function interface.\n        .field(\"id\", null, defaults[\"null\"])\n        // Arrow function bodies are allowed to be expressions.\n        .field(\"body\", or(def(\"BlockStatement\"), def(\"Expression\")))\n        // The current spec forbids arrow generators, so I have taken the\n        // liberty of enforcing that. TODO Report this.\n        .field(\"generator\", false, defaults[\"false\"]);\n    def(\"ForOfStatement\")\n        .bases(\"Statement\")\n        .build(\"left\", \"right\", \"body\")\n        .field(\"left\", or(def(\"VariableDeclaration\"), def(\"Pattern\")))\n        .field(\"right\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    def(\"YieldExpression\")\n        .bases(\"Expression\")\n        .build(\"argument\", \"delegate\")\n        .field(\"argument\", or(def(\"Expression\"), null))\n        .field(\"delegate\", Boolean, defaults[\"false\"]);\n    def(\"GeneratorExpression\")\n        .bases(\"Expression\")\n        .build(\"body\", \"blocks\", \"filter\")\n        .field(\"body\", def(\"Expression\"))\n        .field(\"blocks\", [def(\"ComprehensionBlock\")])\n        .field(\"filter\", or(def(\"Expression\"), null));\n    def(\"ComprehensionExpression\")\n        .bases(\"Expression\")\n        .build(\"body\", \"blocks\", \"filter\")\n        .field(\"body\", def(\"Expression\"))\n        .field(\"blocks\", [def(\"ComprehensionBlock\")])\n        .field(\"filter\", or(def(\"Expression\"), null));\n    def(\"ComprehensionBlock\")\n        .bases(\"Node\")\n        .build(\"left\", \"right\", \"each\")\n        .field(\"left\", def(\"Pattern\"))\n        .field(\"right\", def(\"Expression\"))\n        .field(\"each\", Boolean);\n    def(\"Property\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"value\", or(def(\"Expression\"), def(\"Pattern\")))\n        .field(\"method\", Boolean, defaults[\"false\"])\n        .field(\"shorthand\", Boolean, defaults[\"false\"])\n        .field(\"computed\", Boolean, defaults[\"false\"]);\n    def(\"ObjectProperty\")\n        .field(\"shorthand\", Boolean, defaults[\"false\"]);\n    def(\"PropertyPattern\")\n        .bases(\"Pattern\")\n        .build(\"key\", \"pattern\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"pattern\", def(\"Pattern\"))\n        .field(\"computed\", Boolean, defaults[\"false\"]);\n    def(\"ObjectPattern\")\n        .bases(\"Pattern\")\n        .build(\"properties\")\n        .field(\"properties\", [or(def(\"PropertyPattern\"), def(\"Property\"))]);\n    def(\"ArrayPattern\")\n        .bases(\"Pattern\")\n        .build(\"elements\")\n        .field(\"elements\", [or(def(\"Pattern\"), null)]);\n    def(\"SpreadElement\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"ArrayExpression\")\n        .field(\"elements\", [or(def(\"Expression\"), def(\"SpreadElement\"), def(\"RestElement\"), null)]);\n    def(\"NewExpression\")\n        .field(\"arguments\", [or(def(\"Expression\"), def(\"SpreadElement\"))]);\n    def(\"CallExpression\")\n        .field(\"arguments\", [or(def(\"Expression\"), def(\"SpreadElement\"))]);\n    // Note: this node type is *not* an AssignmentExpression with a Pattern on\n    // the left-hand side! The existing AssignmentExpression type already\n    // supports destructuring assignments. AssignmentPattern nodes may appear\n    // wherever a Pattern is allowed, and the right-hand side represents a\n    // default value to be destructured against the left-hand side, if no\n    // value is otherwise provided. For example: default parameter values.\n    def(\"AssignmentPattern\")\n        .bases(\"Pattern\")\n        .build(\"left\", \"right\")\n        .field(\"left\", def(\"Pattern\"))\n        .field(\"right\", def(\"Expression\"));\n    def(\"MethodDefinition\")\n        .bases(\"Declaration\")\n        .build(\"kind\", \"key\", \"value\", \"static\")\n        .field(\"kind\", or(\"constructor\", \"method\", \"get\", \"set\"))\n        .field(\"key\", def(\"Expression\"))\n        .field(\"value\", def(\"Function\"))\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"static\", Boolean, defaults[\"false\"]);\n    var ClassBodyElement = or(def(\"MethodDefinition\"), def(\"VariableDeclarator\"), def(\"ClassPropertyDefinition\"), def(\"ClassProperty\"), def(\"StaticBlock\"));\n    def(\"ClassProperty\")\n        .bases(\"Declaration\")\n        .build(\"key\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"computed\", Boolean, defaults[\"false\"]);\n    def(\"ClassPropertyDefinition\") // static property\n        .bases(\"Declaration\")\n        .build(\"definition\")\n        // Yes, Virginia, circular definitions are permitted.\n        .field(\"definition\", ClassBodyElement);\n    def(\"ClassBody\")\n        .bases(\"Declaration\")\n        .build(\"body\")\n        .field(\"body\", [ClassBodyElement]);\n    def(\"ClassDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\", \"superClass\")\n        .field(\"id\", or(def(\"Identifier\"), null))\n        .field(\"body\", def(\"ClassBody\"))\n        .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"ClassExpression\")\n        .bases(\"Expression\")\n        .build(\"id\", \"body\", \"superClass\")\n        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        .field(\"body\", def(\"ClassBody\"))\n        .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"Super\")\n        .bases(\"Expression\")\n        .build();\n    // Specifier and ModuleSpecifier are abstract non-standard types\n    // introduced for definitional convenience.\n    def(\"Specifier\").bases(\"Node\");\n    // This supertype is shared/abused by both def/babel.js and\n    // def/esprima.js. In the future, it will be possible to load only one set\n    // of definitions appropriate for a given parser, but until then we must\n    // rely on default functions to reconcile the conflicting AST formats.\n    def(\"ModuleSpecifier\")\n        .bases(\"Specifier\")\n        // This local field is used by Babel/Acorn. It should not technically\n        // be optional in the Babel/Acorn AST format, but it must be optional\n        // in the Esprima AST format.\n        .field(\"local\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        // The id and name fields are used by Esprima. The id field should not\n        // technically be optional in the Esprima AST format, but it must be\n        // optional in the Babel/Acorn AST format.\n        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        .field(\"name\", or(def(\"Identifier\"), null), defaults[\"null\"]);\n    // import {<id [as name]>} from ...;\n    def(\"ImportSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"imported\", \"local\")\n        .field(\"imported\", def(\"Identifier\"));\n    // import <id> from ...;\n    def(\"ImportDefaultSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"local\");\n    // import <* as id> from ...;\n    def(\"ImportNamespaceSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"local\");\n    def(\"ImportDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"specifiers\", \"source\", \"importKind\")\n        .field(\"specifiers\", [or(def(\"ImportSpecifier\"), def(\"ImportNamespaceSpecifier\"), def(\"ImportDefaultSpecifier\"))], defaults.emptyArray)\n        .field(\"source\", def(\"Literal\"))\n        .field(\"importKind\", or(\"value\", \"type\"), function () {\n        return \"value\";\n    });\n    def(\"ExportNamedDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"declaration\", \"specifiers\", \"source\")\n        .field(\"declaration\", or(def(\"Declaration\"), null))\n        .field(\"specifiers\", [def(\"ExportSpecifier\")], defaults.emptyArray)\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"ExportSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"local\", \"exported\")\n        .field(\"exported\", def(\"Identifier\"));\n    def(\"ExportDefaultDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"declaration\")\n        .field(\"declaration\", or(def(\"Declaration\"), def(\"Expression\")));\n    def(\"ExportAllDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"source\")\n        .field(\"source\", def(\"Literal\"));\n    def(\"TaggedTemplateExpression\")\n        .bases(\"Expression\")\n        .build(\"tag\", \"quasi\")\n        .field(\"tag\", def(\"Expression\"))\n        .field(\"quasi\", def(\"TemplateLiteral\"));\n    def(\"TemplateLiteral\")\n        .bases(\"Expression\")\n        .build(\"quasis\", \"expressions\")\n        .field(\"quasis\", [def(\"TemplateElement\")])\n        .field(\"expressions\", [def(\"Expression\")]);\n    def(\"TemplateElement\")\n        .bases(\"Node\")\n        .build(\"value\", \"tail\")\n        .field(\"value\", { \"cooked\": String, \"raw\": String })\n        .field(\"tail\", Boolean);\n    def(\"MetaProperty\")\n        .bases(\"Expression\")\n        .build(\"meta\", \"property\")\n        .field(\"meta\", def(\"Identifier\"))\n        .field(\"property\", def(\"Identifier\"));\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=es6.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2016_1 = tslib_1.__importDefault(require(\"./operators/es2016\"));\nvar es6_1 = tslib_1.__importDefault(require(\"./es6\"));\nvar shared_1 = require(\"../shared\");\nfunction default_1(fork) {\n    // The es2016OpsDef plugin comes before es6Def so BinaryOperators and\n    // AssignmentOperators will be appropriately augmented before they are first\n    // used in the core definitions for this fork.\n    fork.use(es2016_1.default);\n    fork.use(es6_1.default);\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=es2016.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2016_1 = tslib_1.__importDefault(require(\"./es2016\"));\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar shared_1 = tslib_1.__importStar(require(\"../shared\"));\nfunction default_1(fork) {\n    fork.use(es2016_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"Function\")\n        .field(\"async\", Boolean, defaults[\"false\"]);\n    def(\"AwaitExpression\")\n        .bases(\"Expression\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=es2017.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2017_1 = tslib_1.__importDefault(require(\"./es2017\"));\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar shared_1 = tslib_1.__importStar(require(\"../shared\"));\nfunction default_1(fork) {\n    fork.use(es2017_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"ForOfStatement\")\n        .field(\"await\", Boolean, defaults[\"false\"]);\n    // Legacy\n    def(\"SpreadProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"ObjectExpression\")\n        .field(\"properties\", [or(def(\"Property\"), def(\"SpreadProperty\"), // Legacy\n        def(\"SpreadElement\"))]);\n    def(\"TemplateElement\")\n        .field(\"value\", { \"cooked\": or(String, null), \"raw\": String });\n    // Legacy\n    def(\"SpreadPropertyPattern\")\n        .bases(\"Pattern\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Pattern\"));\n    def(\"ObjectPattern\")\n        .field(\"properties\", [or(def(\"PropertyPattern\"), def(\"Property\"), def(\"RestElement\"), def(\"SpreadPropertyPattern\"))]);\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=es2018.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2018_1 = tslib_1.__importDefault(require(\"./es2018\"));\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar shared_1 = tslib_1.__importStar(require(\"../shared\"));\nfunction default_1(fork) {\n    fork.use(es2018_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"CatchClause\")\n        .field(\"param\", or(def(\"Pattern\"), null), defaults[\"null\"]);\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=es2019.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2020_1 = tslib_1.__importDefault(require(\"./operators/es2020\"));\nvar es2019_1 = tslib_1.__importDefault(require(\"./es2019\"));\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar shared_1 = tslib_1.__importStar(require(\"../shared\"));\nfunction default_1(fork) {\n    // The es2020OpsDef plugin comes before es2019Def so LogicalOperators will be\n    // appropriately augmented before first used.\n    fork.use(es2020_1.default);\n    fork.use(es2019_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var shared = fork.use(shared_1.default);\n    var defaults = shared.defaults;\n    def(\"ImportExpression\")\n        .bases(\"Expression\")\n        .build(\"source\")\n        .field(\"source\", def(\"Expression\"));\n    def(\"ExportAllDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"source\", \"exported\")\n        .field(\"source\", def(\"Literal\"))\n        .field(\"exported\", or(def(\"Identifier\"), null, void 0), defaults[\"null\"]);\n    // Optional chaining\n    def(\"ChainElement\")\n        .bases(\"Node\")\n        .field(\"optional\", Boolean, defaults[\"false\"]);\n    def(\"CallExpression\")\n        .bases(\"Expression\", \"ChainElement\");\n    def(\"MemberExpression\")\n        .bases(\"Expression\", \"ChainElement\");\n    def(\"ChainExpression\")\n        .bases(\"Expression\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"ChainElement\"));\n    def(\"OptionalCallExpression\")\n        .bases(\"CallExpression\")\n        .build(\"callee\", \"arguments\", \"optional\")\n        .field(\"optional\", Boolean, defaults[\"true\"]);\n    // Deprecated optional chaining type, doesn't work with babelParser@7.11.0 or newer\n    def(\"OptionalMemberExpression\")\n        .bases(\"MemberExpression\")\n        .build(\"object\", \"property\", \"computed\", \"optional\")\n        .field(\"optional\", Boolean, defaults[\"true\"]);\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=es2020.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2021_1 = tslib_1.__importDefault(require(\"./operators/es2021\"));\nvar es2020_1 = tslib_1.__importDefault(require(\"./es2020\"));\nvar shared_1 = require(\"../shared\");\nfunction default_1(fork) {\n    // The es2021OpsDef plugin comes before es2020Def so AssignmentOperators will\n    // be appropriately augmented before first used.\n    fork.use(es2021_1.default);\n    fork.use(es2020_1.default);\n}\nexports.default = default_1;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=es2021.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es2021_1 = tslib_1.__importDefault(require(\"./es2021\"));\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar shared_1 = require(\"../shared\");\nfunction default_1(fork) {\n    fork.use(es2021_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    def(\"StaticBlock\")\n        .bases(\"Declaration\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n}\nexports.default = default_1;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=es2022.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar shared_1 = tslib_1.__importStar(require(\"../shared\"));\nvar es2022_1 = tslib_1.__importDefault(require(\"./es2022\"));\nfunction default_1(fork) {\n    fork.use(es2022_1.default);\n    var types = fork.use(types_1.default);\n    var Type = types.Type;\n    var def = types.Type.def;\n    var or = Type.or;\n    var shared = fork.use(shared_1.default);\n    var defaults = shared.defaults;\n    def(\"AwaitExpression\")\n        .build(\"argument\", \"all\")\n        .field(\"argument\", or(def(\"Expression\"), null))\n        .field(\"all\", Boolean, defaults[\"false\"]);\n    // Decorators\n    def(\"Decorator\")\n        .bases(\"Node\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"Property\")\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    def(\"MethodDefinition\")\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    // Private names\n    def(\"PrivateName\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"ClassPrivateProperty\")\n        .bases(\"ClassProperty\")\n        .build(\"key\", \"value\")\n        .field(\"key\", def(\"PrivateName\"))\n        .field(\"value\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    // https://github.com/tc39/proposal-import-assertions\n    def(\"ImportAttribute\")\n        .bases(\"Node\")\n        .build(\"key\", \"value\")\n        .field(\"key\", or(def(\"Identifier\"), def(\"Literal\")))\n        .field(\"value\", def(\"Expression\"));\n    [\"ImportDeclaration\",\n        \"ExportAllDeclaration\",\n        \"ExportNamedDeclaration\",\n    ].forEach(function (decl) {\n        def(decl).field(\"assertions\", [def(\"ImportAttribute\")], defaults.emptyArray);\n    });\n    // https://github.com/tc39/proposal-record-tuple\n    // https://github.com/babel/babel/pull/10865\n    def(\"RecordExpression\")\n        .bases(\"Expression\")\n        .build(\"properties\")\n        .field(\"properties\", [or(def(\"ObjectProperty\"), def(\"ObjectMethod\"), def(\"SpreadElement\"))]);\n    def(\"TupleExpression\")\n        .bases(\"Expression\")\n        .build(\"elements\")\n        .field(\"elements\", [or(def(\"Expression\"), def(\"SpreadElement\"), null)]);\n    // https://github.com/tc39/proposal-js-module-blocks\n    // https://github.com/babel/babel/pull/12469\n    def(\"ModuleExpression\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", def(\"Program\"));\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=es-proposals.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es_proposals_1 = tslib_1.__importDefault(require(\"./es-proposals\"));\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar shared_1 = tslib_1.__importStar(require(\"../shared\"));\nfunction default_1(fork) {\n    fork.use(es_proposals_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    def(\"JSXAttribute\")\n        .bases(\"Node\")\n        .build(\"name\", \"value\")\n        .field(\"name\", or(def(\"JSXIdentifier\"), def(\"JSXNamespacedName\")))\n        .field(\"value\", or(def(\"Literal\"), // attr=\"value\"\n    def(\"JSXExpressionContainer\"), // attr={value}\n    def(\"JSXElement\"), // attr=<div />\n    def(\"JSXFragment\"), // attr=<></>\n    null // attr= or just attr\n    ), defaults[\"null\"]);\n    def(\"JSXIdentifier\")\n        .bases(\"Identifier\")\n        .build(\"name\")\n        .field(\"name\", String);\n    def(\"JSXNamespacedName\")\n        .bases(\"Node\")\n        .build(\"namespace\", \"name\")\n        .field(\"namespace\", def(\"JSXIdentifier\"))\n        .field(\"name\", def(\"JSXIdentifier\"));\n    def(\"JSXMemberExpression\")\n        .bases(\"MemberExpression\")\n        .build(\"object\", \"property\")\n        .field(\"object\", or(def(\"JSXIdentifier\"), def(\"JSXMemberExpression\")))\n        .field(\"property\", def(\"JSXIdentifier\"))\n        .field(\"computed\", Boolean, defaults.false);\n    var JSXElementName = or(def(\"JSXIdentifier\"), def(\"JSXNamespacedName\"), def(\"JSXMemberExpression\"));\n    def(\"JSXSpreadAttribute\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    var JSXAttributes = [or(def(\"JSXAttribute\"), def(\"JSXSpreadAttribute\"))];\n    def(\"JSXExpressionContainer\")\n        .bases(\"Expression\")\n        .build(\"expression\")\n        .field(\"expression\", or(def(\"Expression\"), def(\"JSXEmptyExpression\")));\n    var JSXChildren = [or(def(\"JSXText\"), def(\"JSXExpressionContainer\"), def(\"JSXSpreadChild\"), def(\"JSXElement\"), def(\"JSXFragment\"), def(\"Literal\") // Legacy: Esprima should return JSXText instead.\n        )];\n    def(\"JSXElement\")\n        .bases(\"Expression\")\n        .build(\"openingElement\", \"closingElement\", \"children\")\n        .field(\"openingElement\", def(\"JSXOpeningElement\"))\n        .field(\"closingElement\", or(def(\"JSXClosingElement\"), null), defaults[\"null\"])\n        .field(\"children\", JSXChildren, defaults.emptyArray)\n        .field(\"name\", JSXElementName, function () {\n        // Little-known fact: the `this` object inside a default function\n        // is none other than the partially-built object itself, and any\n        // fields initialized directly from builder function arguments\n        // (like openingElement, closingElement, and children) are\n        // guaranteed to be available.\n        return this.openingElement.name;\n    }, true) // hidden from traversal\n        .field(\"selfClosing\", Boolean, function () {\n        return this.openingElement.selfClosing;\n    }, true) // hidden from traversal\n        .field(\"attributes\", JSXAttributes, function () {\n        return this.openingElement.attributes;\n    }, true); // hidden from traversal\n    def(\"JSXOpeningElement\")\n        .bases(\"Node\")\n        .build(\"name\", \"attributes\", \"selfClosing\")\n        .field(\"name\", JSXElementName)\n        .field(\"attributes\", JSXAttributes, defaults.emptyArray)\n        .field(\"selfClosing\", Boolean, defaults[\"false\"]);\n    def(\"JSXClosingElement\")\n        .bases(\"Node\")\n        .build(\"name\")\n        .field(\"name\", JSXElementName);\n    def(\"JSXFragment\")\n        .bases(\"Expression\")\n        .build(\"openingFragment\", \"closingFragment\", \"children\")\n        .field(\"openingFragment\", def(\"JSXOpeningFragment\"))\n        .field(\"closingFragment\", def(\"JSXClosingFragment\"))\n        .field(\"children\", JSXChildren, defaults.emptyArray);\n    def(\"JSXOpeningFragment\")\n        .bases(\"Node\")\n        .build();\n    def(\"JSXClosingFragment\")\n        .bases(\"Node\")\n        .build();\n    def(\"JSXText\")\n        .bases(\"Literal\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", String)\n        .field(\"raw\", String, function () {\n        return this.value;\n    });\n    def(\"JSXEmptyExpression\")\n        .bases(\"Node\")\n        .build();\n    def(\"JSXSpreadChild\")\n        .bases(\"Node\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=jsx.js.map","\"use strict\";\n/**\n * Type annotation defs shared between Flow and TypeScript.\n * These defs could not be defined in ./flow.ts or ./typescript.ts directly\n * because they use the same name.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar shared_1 = tslib_1.__importStar(require(\"../shared\"));\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    var TypeAnnotation = or(def(\"TypeAnnotation\"), def(\"TSTypeAnnotation\"), null);\n    var TypeParamDecl = or(def(\"TypeParameterDeclaration\"), def(\"TSTypeParameterDeclaration\"), null);\n    def(\"Identifier\")\n        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n    def(\"ObjectPattern\")\n        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n    def(\"Function\")\n        .field(\"returnType\", TypeAnnotation, defaults[\"null\"])\n        .field(\"typeParameters\", TypeParamDecl, defaults[\"null\"]);\n    def(\"ClassProperty\")\n        .build(\"key\", \"value\", \"typeAnnotation\", \"static\")\n        .field(\"value\", or(def(\"Expression\"), null))\n        .field(\"static\", Boolean, defaults[\"false\"])\n        .field(\"typeAnnotation\", TypeAnnotation, defaults[\"null\"]);\n    [\"ClassDeclaration\",\n        \"ClassExpression\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .field(\"typeParameters\", TypeParamDecl, defaults[\"null\"])\n            .field(\"superTypeParameters\", or(def(\"TypeParameterInstantiation\"), def(\"TSTypeParameterInstantiation\"), null), defaults[\"null\"])\n            .field(\"implements\", or([def(\"ClassImplements\")], [def(\"TSExpressionWithTypeArguments\")]), defaults.emptyArray);\n    });\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=type-annotations.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es_proposals_1 = tslib_1.__importDefault(require(\"./es-proposals\"));\nvar type_annotations_1 = tslib_1.__importDefault(require(\"./type-annotations\"));\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar shared_1 = tslib_1.__importStar(require(\"../shared\"));\nfunction default_1(fork) {\n    fork.use(es_proposals_1.default);\n    fork.use(type_annotations_1.default);\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    // Base types\n    def(\"Flow\").bases(\"Node\");\n    def(\"FlowType\").bases(\"Flow\");\n    // Type annotations\n    def(\"AnyTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"EmptyTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"MixedTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"VoidTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"SymbolTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NumberTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"BigIntTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NumberLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Number)\n        .field(\"raw\", String);\n    // Babylon 6 differs in AST from Flow\n    // same as NumberLiteralTypeAnnotation\n    def(\"NumericLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Number)\n        .field(\"raw\", String);\n    def(\"BigIntLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", null)\n        .field(\"raw\", String);\n    def(\"StringTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"StringLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", String)\n        .field(\"raw\", String);\n    def(\"BooleanTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"BooleanLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"value\", \"raw\")\n        .field(\"value\", Boolean)\n        .field(\"raw\", String);\n    def(\"TypeAnnotation\")\n        .bases(\"Node\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"FlowType\"));\n    def(\"NullableTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"FlowType\"));\n    def(\"NullLiteralTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"NullTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ThisTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ExistsTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"ExistentialTypeParam\")\n        .bases(\"FlowType\")\n        .build();\n    def(\"FunctionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"params\", \"returnType\", \"rest\", \"typeParameters\")\n        .field(\"params\", [def(\"FunctionTypeParam\")])\n        .field(\"returnType\", def(\"FlowType\"))\n        .field(\"rest\", or(def(\"FunctionTypeParam\"), null))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null));\n    def(\"FunctionTypeParam\")\n        .bases(\"Node\")\n        .build(\"name\", \"typeAnnotation\", \"optional\")\n        .field(\"name\", or(def(\"Identifier\"), null))\n        .field(\"typeAnnotation\", def(\"FlowType\"))\n        .field(\"optional\", Boolean);\n    def(\"ArrayTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"elementType\")\n        .field(\"elementType\", def(\"FlowType\"));\n    def(\"ObjectTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"properties\", \"indexers\", \"callProperties\")\n        .field(\"properties\", [\n        or(def(\"ObjectTypeProperty\"), def(\"ObjectTypeSpreadProperty\"))\n    ])\n        .field(\"indexers\", [def(\"ObjectTypeIndexer\")], defaults.emptyArray)\n        .field(\"callProperties\", [def(\"ObjectTypeCallProperty\")], defaults.emptyArray)\n        .field(\"inexact\", or(Boolean, void 0), defaults[\"undefined\"])\n        .field(\"exact\", Boolean, defaults[\"false\"])\n        .field(\"internalSlots\", [def(\"ObjectTypeInternalSlot\")], defaults.emptyArray);\n    def(\"Variance\")\n        .bases(\"Node\")\n        .build(\"kind\")\n        .field(\"kind\", or(\"plus\", \"minus\"));\n    var LegacyVariance = or(def(\"Variance\"), \"plus\", \"minus\", null);\n    def(\"ObjectTypeProperty\")\n        .bases(\"Node\")\n        .build(\"key\", \"value\", \"optional\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\")))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"optional\", Boolean)\n        .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n    def(\"ObjectTypeIndexer\")\n        .bases(\"Node\")\n        .build(\"id\", \"key\", \"value\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"key\", def(\"FlowType\"))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"variance\", LegacyVariance, defaults[\"null\"])\n        .field(\"static\", Boolean, defaults[\"false\"]);\n    def(\"ObjectTypeCallProperty\")\n        .bases(\"Node\")\n        .build(\"value\")\n        .field(\"value\", def(\"FunctionTypeAnnotation\"))\n        .field(\"static\", Boolean, defaults[\"false\"]);\n    def(\"QualifiedTypeIdentifier\")\n        .bases(\"Node\")\n        .build(\"qualification\", \"id\")\n        .field(\"qualification\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n        .field(\"id\", def(\"Identifier\"));\n    def(\"GenericTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"id\", \"typeParameters\")\n        .field(\"id\", or(def(\"Identifier\"), def(\"QualifiedTypeIdentifier\")))\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null));\n    def(\"MemberTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"object\", \"property\")\n        .field(\"object\", def(\"Identifier\"))\n        .field(\"property\", or(def(\"MemberTypeAnnotation\"), def(\"GenericTypeAnnotation\")));\n    def(\"IndexedAccessType\")\n        .bases(\"FlowType\")\n        .build(\"objectType\", \"indexType\")\n        .field(\"objectType\", def(\"FlowType\"))\n        .field(\"indexType\", def(\"FlowType\"));\n    def(\"OptionalIndexedAccessType\")\n        .bases(\"FlowType\")\n        .build(\"objectType\", \"indexType\", \"optional\")\n        .field(\"objectType\", def(\"FlowType\"))\n        .field(\"indexType\", def(\"FlowType\"))\n        .field('optional', Boolean);\n    def(\"UnionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"IntersectionTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"TypeofTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"FlowType\"));\n    def(\"ObjectTypeSpreadProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"FlowType\"));\n    def(\"ObjectTypeInternalSlot\")\n        .bases(\"Node\")\n        .build(\"id\", \"value\", \"optional\", \"static\", \"method\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"value\", def(\"FlowType\"))\n        .field(\"optional\", Boolean)\n        .field(\"static\", Boolean)\n        .field(\"method\", Boolean);\n    def(\"TypeParameterDeclaration\")\n        .bases(\"Node\")\n        .build(\"params\")\n        .field(\"params\", [def(\"TypeParameter\")]);\n    def(\"TypeParameterInstantiation\")\n        .bases(\"Node\")\n        .build(\"params\")\n        .field(\"params\", [def(\"FlowType\")]);\n    def(\"TypeParameter\")\n        .bases(\"FlowType\")\n        .build(\"name\", \"variance\", \"bound\", \"default\")\n        .field(\"name\", String)\n        .field(\"variance\", LegacyVariance, defaults[\"null\"])\n        .field(\"bound\", or(def(\"TypeAnnotation\"), null), defaults[\"null\"])\n        .field(\"default\", or(def(\"FlowType\"), null), defaults[\"null\"]);\n    def(\"ClassProperty\")\n        .field(\"variance\", LegacyVariance, defaults[\"null\"]);\n    def(\"ClassImplements\")\n        .bases(\"Node\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"superClass\", or(def(\"Expression\"), null), defaults[\"null\"])\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n    def(\"InterfaceTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"body\", \"extends\")\n        .field(\"body\", def(\"ObjectTypeAnnotation\"))\n        .field(\"extends\", or([def(\"InterfaceExtends\")], null), defaults[\"null\"]);\n    def(\"InterfaceDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\", \"extends\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null), defaults[\"null\"])\n        .field(\"body\", def(\"ObjectTypeAnnotation\"))\n        .field(\"extends\", [def(\"InterfaceExtends\")]);\n    def(\"DeclareInterface\")\n        .bases(\"InterfaceDeclaration\")\n        .build(\"id\", \"body\", \"extends\");\n    def(\"InterfaceExtends\")\n        .bases(\"Node\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterInstantiation\"), null), defaults[\"null\"]);\n    def(\"TypeAlias\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"typeParameters\", \"right\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n        .field(\"right\", def(\"FlowType\"));\n    def(\"DeclareTypeAlias\")\n        .bases(\"TypeAlias\")\n        .build(\"id\", \"typeParameters\", \"right\");\n    def(\"OpaqueType\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"typeParameters\", \"impltype\", \"supertype\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"typeParameters\", or(def(\"TypeParameterDeclaration\"), null))\n        .field(\"impltype\", def(\"FlowType\"))\n        .field(\"supertype\", or(def(\"FlowType\"), null));\n    def(\"DeclareOpaqueType\")\n        .bases(\"OpaqueType\")\n        .build(\"id\", \"typeParameters\", \"supertype\")\n        .field(\"impltype\", or(def(\"FlowType\"), null));\n    def(\"TypeCastExpression\")\n        .bases(\"Expression\")\n        .build(\"expression\", \"typeAnnotation\")\n        .field(\"expression\", def(\"Expression\"))\n        .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n    def(\"TupleTypeAnnotation\")\n        .bases(\"FlowType\")\n        .build(\"types\")\n        .field(\"types\", [def(\"FlowType\")]);\n    def(\"DeclareVariable\")\n        .bases(\"Statement\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"DeclareFunction\")\n        .bases(\"Statement\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"predicate\", or(def(\"FlowPredicate\"), null), defaults[\"null\"]);\n    def(\"DeclareClass\")\n        .bases(\"InterfaceDeclaration\")\n        .build(\"id\");\n    def(\"DeclareModule\")\n        .bases(\"Statement\")\n        .build(\"id\", \"body\")\n        .field(\"id\", or(def(\"Identifier\"), def(\"Literal\")))\n        .field(\"body\", def(\"BlockStatement\"));\n    def(\"DeclareModuleExports\")\n        .bases(\"Statement\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"TypeAnnotation\"));\n    def(\"DeclareExportDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n        .field(\"default\", Boolean)\n        .field(\"declaration\", or(def(\"DeclareVariable\"), def(\"DeclareFunction\"), def(\"DeclareClass\"), def(\"FlowType\"), // Implies default.\n    def(\"TypeAlias\"), // Implies named type\n    def(\"DeclareOpaqueType\"), // Implies named opaque type\n    def(\"InterfaceDeclaration\"), null))\n        .field(\"specifiers\", [or(def(\"ExportSpecifier\"), def(\"ExportBatchSpecifier\"))], defaults.emptyArray)\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"DeclareExportAllDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"source\")\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"ImportDeclaration\")\n        .field(\"importKind\", or(\"value\", \"type\", \"typeof\"), function () { return \"value\"; });\n    def(\"FlowPredicate\").bases(\"Flow\");\n    def(\"InferredPredicate\")\n        .bases(\"FlowPredicate\")\n        .build();\n    def(\"DeclaredPredicate\")\n        .bases(\"FlowPredicate\")\n        .build(\"value\")\n        .field(\"value\", def(\"Expression\"));\n    def(\"Function\")\n        .field(\"predicate\", or(def(\"FlowPredicate\"), null), defaults[\"null\"]);\n    def(\"CallExpression\")\n        .field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n    def(\"NewExpression\")\n        .field(\"typeArguments\", or(null, def(\"TypeParameterInstantiation\")), defaults[\"null\"]);\n    // Enums\n    def(\"EnumDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"body\", or(def(\"EnumBooleanBody\"), def(\"EnumNumberBody\"), def(\"EnumStringBody\"), def(\"EnumSymbolBody\")));\n    def(\"EnumBooleanBody\")\n        .build(\"members\", \"explicitType\")\n        .field(\"members\", [def(\"EnumBooleanMember\")])\n        .field(\"explicitType\", Boolean);\n    def(\"EnumNumberBody\")\n        .build(\"members\", \"explicitType\")\n        .field(\"members\", [def(\"EnumNumberMember\")])\n        .field(\"explicitType\", Boolean);\n    def(\"EnumStringBody\")\n        .build(\"members\", \"explicitType\")\n        .field(\"members\", or([def(\"EnumStringMember\")], [def(\"EnumDefaultedMember\")]))\n        .field(\"explicitType\", Boolean);\n    def(\"EnumSymbolBody\")\n        .build(\"members\")\n        .field(\"members\", [def(\"EnumDefaultedMember\")]);\n    def(\"EnumBooleanMember\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"init\", or(def(\"Literal\"), Boolean));\n    def(\"EnumNumberMember\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"init\", def(\"Literal\"));\n    def(\"EnumStringMember\")\n        .build(\"id\", \"init\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"init\", def(\"Literal\"));\n    def(\"EnumDefaultedMember\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=flow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es_proposals_1 = tslib_1.__importDefault(require(\"./es-proposals\"));\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar shared_1 = tslib_1.__importStar(require(\"../shared\"));\nfunction default_1(fork) {\n    fork.use(es_proposals_1.default);\n    var types = fork.use(types_1.default);\n    var defaults = fork.use(shared_1.default).defaults;\n    var def = types.Type.def;\n    var or = types.Type.or;\n    def(\"VariableDeclaration\")\n        .field(\"declarations\", [or(def(\"VariableDeclarator\"), def(\"Identifier\") // Esprima deviation.\n        )]);\n    def(\"Property\")\n        .field(\"value\", or(def(\"Expression\"), def(\"Pattern\") // Esprima deviation.\n    ));\n    def(\"ArrayPattern\")\n        .field(\"elements\", [or(def(\"Pattern\"), def(\"SpreadElement\"), null)]);\n    def(\"ObjectPattern\")\n        .field(\"properties\", [or(def(\"Property\"), def(\"PropertyPattern\"), def(\"SpreadPropertyPattern\"), def(\"SpreadProperty\") // Used by Esprima.\n        )]);\n    // Like ModuleSpecifier, except type:\"ExportSpecifier\" and buildable.\n    // export {<id [as name]>} [from ...];\n    def(\"ExportSpecifier\")\n        .bases(\"ModuleSpecifier\")\n        .build(\"id\", \"name\");\n    // export <*> from ...;\n    def(\"ExportBatchSpecifier\")\n        .bases(\"Specifier\")\n        .build();\n    def(\"ExportDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"default\", \"declaration\", \"specifiers\", \"source\")\n        .field(\"default\", Boolean)\n        .field(\"declaration\", or(def(\"Declaration\"), def(\"Expression\"), // Implies default.\n    null))\n        .field(\"specifiers\", [or(def(\"ExportSpecifier\"), def(\"ExportBatchSpecifier\"))], defaults.emptyArray)\n        .field(\"source\", or(def(\"Literal\"), null), defaults[\"null\"]);\n    def(\"Block\")\n        .bases(\"Comment\")\n        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n    def(\"Line\")\n        .bases(\"Comment\")\n        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=esprima.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar es_proposals_1 = tslib_1.__importDefault(require(\"./es-proposals\"));\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar shared_1 = tslib_1.__importStar(require(\"../shared\"));\nfunction default_1(fork) {\n    var _a, _b, _c, _d, _e;\n    fork.use(es_proposals_1.default);\n    var types = fork.use(types_1.default);\n    var defaults = fork.use(shared_1.default).defaults;\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var isUndefined = types.builtInTypes.undefined;\n    def(\"Noop\")\n        .bases(\"Statement\")\n        .build();\n    def(\"DoExpression\")\n        .bases(\"Expression\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n    def(\"BindExpression\")\n        .bases(\"Expression\")\n        .build(\"object\", \"callee\")\n        .field(\"object\", or(def(\"Expression\"), null))\n        .field(\"callee\", def(\"Expression\"));\n    def(\"ParenthesizedExpression\")\n        .bases(\"Expression\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"ExportNamespaceSpecifier\")\n        .bases(\"Specifier\")\n        .build(\"exported\")\n        .field(\"exported\", def(\"Identifier\"));\n    def(\"ExportDefaultSpecifier\")\n        .bases(\"Specifier\")\n        .build(\"exported\")\n        .field(\"exported\", def(\"Identifier\"));\n    def(\"CommentBlock\")\n        .bases(\"Comment\")\n        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n    def(\"CommentLine\")\n        .bases(\"Comment\")\n        .build(\"value\", /*optional:*/ \"leading\", \"trailing\");\n    def(\"Directive\")\n        .bases(\"Node\")\n        .build(\"value\")\n        .field(\"value\", def(\"DirectiveLiteral\"));\n    def(\"DirectiveLiteral\")\n        .bases(\"Node\", \"Expression\")\n        .build(\"value\")\n        .field(\"value\", String, defaults[\"use strict\"]);\n    def(\"InterpreterDirective\")\n        .bases(\"Node\")\n        .build(\"value\")\n        .field(\"value\", String);\n    def(\"BlockStatement\")\n        .bases(\"Statement\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")])\n        .field(\"directives\", [def(\"Directive\")], defaults.emptyArray);\n    def(\"Program\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")])\n        .field(\"directives\", [def(\"Directive\")], defaults.emptyArray)\n        .field(\"interpreter\", or(def(\"InterpreterDirective\"), null), defaults[\"null\"]);\n    function makeLiteralExtra(rawValueType, toRaw) {\n        if (rawValueType === void 0) { rawValueType = String; }\n        return [\n            \"extra\",\n            {\n                rawValue: rawValueType,\n                raw: String,\n            },\n            function getDefault() {\n                var value = types.getFieldValue(this, \"value\");\n                return {\n                    rawValue: value,\n                    raw: toRaw ? toRaw(value) : String(value),\n                };\n            },\n        ];\n    }\n    // Split Literal\n    (_a = def(\"StringLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        .field(\"value\", String))\n        .field.apply(_a, makeLiteralExtra(String, function (val) { return JSON.stringify(val); }));\n    (_b = def(\"NumericLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        .field(\"value\", Number)\n        .field(\"raw\", or(String, null), defaults[\"null\"]))\n        .field.apply(_b, makeLiteralExtra(Number));\n    (_c = def(\"BigIntLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        // Only String really seems appropriate here, since BigInt values\n        // often exceed the limits of JS numbers.\n        .field(\"value\", or(String, Number)))\n        .field.apply(_c, makeLiteralExtra(String, function (val) { return val + \"n\"; }));\n    // https://github.com/tc39/proposal-decimal\n    // https://github.com/babel/babel/pull/11640\n    (_d = def(\"DecimalLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        .field(\"value\", String))\n        .field.apply(_d, makeLiteralExtra(String, function (val) { return val + \"m\"; }));\n    def(\"NullLiteral\")\n        .bases(\"Literal\")\n        .build()\n        .field(\"value\", null, defaults[\"null\"]);\n    def(\"BooleanLiteral\")\n        .bases(\"Literal\")\n        .build(\"value\")\n        .field(\"value\", Boolean);\n    (_e = def(\"RegExpLiteral\")\n        .bases(\"Literal\")\n        .build(\"pattern\", \"flags\")\n        .field(\"pattern\", String)\n        .field(\"flags\", String)\n        .field(\"value\", RegExp, function () {\n        return new RegExp(this.pattern, this.flags);\n    }))\n        .field.apply(_e, makeLiteralExtra(or(RegExp, isUndefined), function (exp) { return \"/\".concat(exp.pattern, \"/\").concat(exp.flags || \"\"); })).field(\"regex\", {\n        pattern: String,\n        flags: String\n    }, function () {\n        return {\n            pattern: this.pattern,\n            flags: this.flags,\n        };\n    });\n    var ObjectExpressionProperty = or(def(\"Property\"), def(\"ObjectMethod\"), def(\"ObjectProperty\"), def(\"SpreadProperty\"), def(\"SpreadElement\"));\n    // Split Property -> ObjectProperty and ObjectMethod\n    def(\"ObjectExpression\")\n        .bases(\"Expression\")\n        .build(\"properties\")\n        .field(\"properties\", [ObjectExpressionProperty]);\n    // ObjectMethod hoist .value properties to own properties\n    def(\"ObjectMethod\")\n        .bases(\"Node\", \"Function\")\n        .build(\"kind\", \"key\", \"params\", \"body\", \"computed\")\n        .field(\"kind\", or(\"method\", \"get\", \"set\"))\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"params\", [def(\"Pattern\")])\n        .field(\"body\", def(\"BlockStatement\"))\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"async\", Boolean, defaults[\"false\"])\n        .field(\"accessibility\", // TypeScript\n    or(def(\"Literal\"), null), defaults[\"null\"])\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    def(\"ObjectProperty\")\n        .bases(\"Node\")\n        .build(\"key\", \"value\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")))\n        .field(\"value\", or(def(\"Expression\"), def(\"Pattern\")))\n        .field(\"accessibility\", // TypeScript\n    or(def(\"Literal\"), null), defaults[\"null\"])\n        .field(\"computed\", Boolean, defaults[\"false\"]);\n    var ClassBodyElement = or(def(\"MethodDefinition\"), def(\"VariableDeclarator\"), def(\"ClassPropertyDefinition\"), def(\"ClassProperty\"), def(\"ClassPrivateProperty\"), def(\"ClassMethod\"), def(\"ClassPrivateMethod\"), def(\"ClassAccessorProperty\"), def(\"StaticBlock\"));\n    // MethodDefinition -> ClassMethod\n    def(\"ClassBody\")\n        .bases(\"Declaration\")\n        .build(\"body\")\n        .field(\"body\", [ClassBodyElement]);\n    def(\"ClassMethod\")\n        .bases(\"Declaration\", \"Function\")\n        .build(\"kind\", \"key\", \"params\", \"body\", \"computed\", \"static\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"Expression\")));\n    def(\"ClassPrivateMethod\")\n        .bases(\"Declaration\", \"Function\")\n        .build(\"key\", \"params\", \"body\", \"kind\", \"computed\", \"static\")\n        .field(\"key\", def(\"PrivateName\"));\n    def(\"ClassAccessorProperty\")\n        .bases(\"Declaration\")\n        .build(\"key\", \"value\", \"decorators\", \"computed\", \"static\")\n        .field(\"key\", or(def(\"Literal\"), def(\"Identifier\"), def(\"PrivateName\"), \n    // Only when .computed is true (TODO enforce this)\n    def(\"Expression\")))\n        .field(\"value\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    [\"ClassMethod\",\n        \"ClassPrivateMethod\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .field(\"kind\", or(\"get\", \"set\", \"method\", \"constructor\"), function () { return \"method\"; })\n            .field(\"body\", def(\"BlockStatement\"))\n            // For backwards compatibility only. Expect accessibility instead (see below).\n            .field(\"access\", or(\"public\", \"private\", \"protected\", null), defaults[\"null\"]);\n    });\n    [\"ClassMethod\",\n        \"ClassPrivateMethod\",\n        \"ClassAccessorProperty\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .field(\"computed\", Boolean, defaults[\"false\"])\n            .field(\"static\", Boolean, defaults[\"false\"])\n            .field(\"abstract\", Boolean, defaults[\"false\"])\n            .field(\"accessibility\", or(\"public\", \"private\", \"protected\", null), defaults[\"null\"])\n            .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"])\n            .field(\"definite\", Boolean, defaults[\"false\"])\n            .field(\"optional\", Boolean, defaults[\"false\"])\n            .field(\"override\", Boolean, defaults[\"false\"])\n            .field(\"readonly\", Boolean, defaults[\"false\"]);\n    });\n    var ObjectPatternProperty = or(def(\"Property\"), def(\"PropertyPattern\"), def(\"SpreadPropertyPattern\"), def(\"SpreadProperty\"), // Used by Esprima\n    def(\"ObjectProperty\"), // Babel 6\n    def(\"RestProperty\"), // Babel 6\n    def(\"RestElement\"));\n    // Split into RestProperty and SpreadProperty\n    def(\"ObjectPattern\")\n        .bases(\"Pattern\")\n        .build(\"properties\")\n        .field(\"properties\", [ObjectPatternProperty])\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"]);\n    def(\"SpreadProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"RestProperty\")\n        .bases(\"Node\")\n        .build(\"argument\")\n        .field(\"argument\", def(\"Expression\"));\n    def(\"ForAwaitStatement\")\n        .bases(\"Statement\")\n        .build(\"left\", \"right\", \"body\")\n        .field(\"left\", or(def(\"VariableDeclaration\"), def(\"Expression\")))\n        .field(\"right\", def(\"Expression\"))\n        .field(\"body\", def(\"Statement\"));\n    // The callee node of a dynamic import(...) expression.\n    def(\"Import\")\n        .bases(\"Expression\")\n        .build();\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=babel-core.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar babel_core_1 = tslib_1.__importDefault(require(\"./babel-core\"));\nvar flow_1 = tslib_1.__importDefault(require(\"./flow\"));\nvar shared_1 = require(\"../shared\");\nfunction default_1(fork) {\n    var types = fork.use(types_1.default);\n    var def = types.Type.def;\n    fork.use(babel_core_1.default);\n    fork.use(flow_1.default);\n    // https://github.com/babel/babel/pull/10148\n    def(\"V8IntrinsicIdentifier\")\n        .bases(\"Expression\")\n        .build(\"name\")\n        .field(\"name\", String);\n    // https://github.com/babel/babel/pull/13191\n    // https://github.com/babel/website/pull/2541\n    def(\"TopicReference\")\n        .bases(\"Expression\")\n        .build();\n}\nexports.default = default_1;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=babel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar babel_core_1 = tslib_1.__importDefault(require(\"./babel-core\"));\nvar type_annotations_1 = tslib_1.__importDefault(require(\"./type-annotations\"));\nvar types_1 = tslib_1.__importDefault(require(\"../types\"));\nvar shared_1 = tslib_1.__importStar(require(\"../shared\"));\nfunction default_1(fork) {\n    // Since TypeScript is parsed by Babylon, include the core Babylon types\n    // but omit the Flow-related types.\n    fork.use(babel_core_1.default);\n    fork.use(type_annotations_1.default);\n    var types = fork.use(types_1.default);\n    var n = types.namedTypes;\n    var def = types.Type.def;\n    var or = types.Type.or;\n    var defaults = fork.use(shared_1.default).defaults;\n    var StringLiteral = types.Type.from(function (value, deep) {\n        if (n.StringLiteral &&\n            n.StringLiteral.check(value, deep)) {\n            return true;\n        }\n        if (n.Literal &&\n            n.Literal.check(value, deep) &&\n            typeof value.value === \"string\") {\n            return true;\n        }\n        return false;\n    }, \"StringLiteral\");\n    def(\"TSType\")\n        .bases(\"Node\");\n    var TSEntityName = or(def(\"Identifier\"), def(\"TSQualifiedName\"));\n    def(\"TSTypeReference\")\n        .bases(\"TSType\", \"TSHasOptionalTypeParameterInstantiation\")\n        .build(\"typeName\", \"typeParameters\")\n        .field(\"typeName\", TSEntityName);\n    // An abstract (non-buildable) base type that provide a commonly-needed\n    // optional .typeParameters field.\n    def(\"TSHasOptionalTypeParameterInstantiation\")\n        .field(\"typeParameters\", or(def(\"TSTypeParameterInstantiation\"), null), defaults[\"null\"]);\n    // An abstract (non-buildable) base type that provide a commonly-needed\n    // optional .typeParameters field.\n    def(\"TSHasOptionalTypeParameters\")\n        .field(\"typeParameters\", or(def(\"TSTypeParameterDeclaration\"), null, void 0), defaults[\"null\"]);\n    // An abstract (non-buildable) base type that provide a commonly-needed\n    // optional .typeAnnotation field.\n    def(\"TSHasOptionalTypeAnnotation\")\n        .field(\"typeAnnotation\", or(def(\"TSTypeAnnotation\"), null), defaults[\"null\"]);\n    def(\"TSQualifiedName\")\n        .bases(\"Node\")\n        .build(\"left\", \"right\")\n        .field(\"left\", TSEntityName)\n        .field(\"right\", TSEntityName);\n    def(\"TSAsExpression\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"expression\", \"typeAnnotation\")\n        .field(\"expression\", def(\"Expression\"))\n        .field(\"typeAnnotation\", def(\"TSType\"))\n        .field(\"extra\", or({ parenthesized: Boolean }, null), defaults[\"null\"]);\n    def(\"TSTypeCastExpression\")\n        .bases(\"Expression\")\n        .build(\"expression\", \"typeAnnotation\")\n        .field(\"expression\", def(\"Expression\"))\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    def(\"TSSatisfiesExpression\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"expression\", \"typeAnnotation\")\n        .field(\"expression\", def(\"Expression\"))\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    def(\"TSNonNullExpression\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    [\n        \"TSAnyKeyword\",\n        \"TSBigIntKeyword\",\n        \"TSBooleanKeyword\",\n        \"TSNeverKeyword\",\n        \"TSNullKeyword\",\n        \"TSNumberKeyword\",\n        \"TSObjectKeyword\",\n        \"TSStringKeyword\",\n        \"TSSymbolKeyword\",\n        \"TSUndefinedKeyword\",\n        \"TSUnknownKeyword\",\n        \"TSVoidKeyword\",\n        \"TSIntrinsicKeyword\",\n        \"TSThisType\",\n    ].forEach(function (keywordType) {\n        def(keywordType)\n            .bases(\"TSType\")\n            .build();\n    });\n    def(\"TSArrayType\")\n        .bases(\"TSType\")\n        .build(\"elementType\")\n        .field(\"elementType\", def(\"TSType\"));\n    def(\"TSLiteralType\")\n        .bases(\"TSType\")\n        .build(\"literal\")\n        .field(\"literal\", or(def(\"NumericLiteral\"), def(\"StringLiteral\"), def(\"BooleanLiteral\"), def(\"TemplateLiteral\"), def(\"UnaryExpression\"), def(\"BigIntLiteral\")));\n    def(\"TemplateLiteral\")\n        // The TemplateLiteral type appears to be reused for TypeScript template\n        // literal types (instead of introducing a new TSTemplateLiteralType type),\n        // so we allow the templateLiteral.expressions array to be either all\n        // expressions or all TypeScript types.\n        .field(\"expressions\", or([def(\"Expression\")], [def(\"TSType\")]));\n    [\"TSUnionType\",\n        \"TSIntersectionType\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .bases(\"TSType\")\n            .build(\"types\")\n            .field(\"types\", [def(\"TSType\")]);\n    });\n    def(\"TSConditionalType\")\n        .bases(\"TSType\")\n        .build(\"checkType\", \"extendsType\", \"trueType\", \"falseType\")\n        .field(\"checkType\", def(\"TSType\"))\n        .field(\"extendsType\", def(\"TSType\"))\n        .field(\"trueType\", def(\"TSType\"))\n        .field(\"falseType\", def(\"TSType\"));\n    def(\"TSInferType\")\n        .bases(\"TSType\")\n        .build(\"typeParameter\")\n        .field(\"typeParameter\", def(\"TSTypeParameter\"));\n    def(\"TSParenthesizedType\")\n        .bases(\"TSType\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    var ParametersType = [or(def(\"Identifier\"), def(\"RestElement\"), def(\"ArrayPattern\"), def(\"ObjectPattern\"))];\n    [\"TSFunctionType\",\n        \"TSConstructorType\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .bases(\"TSType\", \"TSHasOptionalTypeParameters\", \"TSHasOptionalTypeAnnotation\")\n            .build(\"parameters\")\n            .field(\"parameters\", ParametersType);\n    });\n    def(\"TSDeclareFunction\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n        .build(\"id\", \"params\", \"returnType\")\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"async\", Boolean, defaults[\"false\"])\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"id\", or(def(\"Identifier\"), null), defaults[\"null\"])\n        .field(\"params\", [def(\"Pattern\")])\n        // tSFunctionTypeAnnotationCommon\n        .field(\"returnType\", or(def(\"TSTypeAnnotation\"), def(\"Noop\"), // Still used?\n    null), defaults[\"null\"]);\n    def(\"TSDeclareMethod\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n        .build(\"key\", \"params\", \"returnType\")\n        .field(\"async\", Boolean, defaults[\"false\"])\n        .field(\"generator\", Boolean, defaults[\"false\"])\n        .field(\"params\", [def(\"Pattern\")])\n        // classMethodOrPropertyCommon\n        .field(\"abstract\", Boolean, defaults[\"false\"])\n        .field(\"accessibility\", or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"])\n        .field(\"static\", Boolean, defaults[\"false\"])\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"optional\", Boolean, defaults[\"false\"])\n        .field(\"key\", or(def(\"Identifier\"), def(\"StringLiteral\"), def(\"NumericLiteral\"), \n    // Only allowed if .computed is true.\n    def(\"Expression\")))\n        // classMethodOrDeclareMethodCommon\n        .field(\"kind\", or(\"get\", \"set\", \"method\", \"constructor\"), function getDefault() { return \"method\"; })\n        .field(\"access\", // Not \"accessibility\"?\n    or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"])\n        .field(\"decorators\", or([def(\"Decorator\")], null), defaults[\"null\"])\n        // tSFunctionTypeAnnotationCommon\n        .field(\"returnType\", or(def(\"TSTypeAnnotation\"), def(\"Noop\"), // Still used?\n    null), defaults[\"null\"]);\n    def(\"TSMappedType\")\n        .bases(\"TSType\")\n        .build(\"typeParameter\", \"typeAnnotation\")\n        .field(\"readonly\", or(Boolean, \"+\", \"-\"), defaults[\"false\"])\n        .field(\"typeParameter\", def(\"TSTypeParameter\"))\n        .field(\"optional\", or(Boolean, \"+\", \"-\"), defaults[\"false\"])\n        .field(\"typeAnnotation\", or(def(\"TSType\"), null), defaults[\"null\"]);\n    def(\"TSTupleType\")\n        .bases(\"TSType\")\n        .build(\"elementTypes\")\n        .field(\"elementTypes\", [or(def(\"TSType\"), def(\"TSNamedTupleMember\"))]);\n    def(\"TSNamedTupleMember\")\n        .bases(\"TSType\")\n        .build(\"label\", \"elementType\", \"optional\")\n        .field(\"label\", def(\"Identifier\"))\n        .field(\"optional\", Boolean, defaults[\"false\"])\n        .field(\"elementType\", def(\"TSType\"));\n    def(\"TSRestType\")\n        .bases(\"TSType\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    def(\"TSOptionalType\")\n        .bases(\"TSType\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    def(\"TSIndexedAccessType\")\n        .bases(\"TSType\")\n        .build(\"objectType\", \"indexType\")\n        .field(\"objectType\", def(\"TSType\"))\n        .field(\"indexType\", def(\"TSType\"));\n    def(\"TSTypeOperator\")\n        .bases(\"TSType\")\n        .build(\"operator\")\n        .field(\"operator\", String)\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    def(\"TSTypeAnnotation\")\n        .bases(\"Node\")\n        .build(\"typeAnnotation\")\n        .field(\"typeAnnotation\", or(def(\"TSType\"), def(\"TSTypeAnnotation\")));\n    def(\"TSIndexSignature\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeAnnotation\")\n        .build(\"parameters\", \"typeAnnotation\")\n        .field(\"parameters\", [def(\"Identifier\")]) // Length === 1\n        .field(\"readonly\", Boolean, defaults[\"false\"]);\n    def(\"TSPropertySignature\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeAnnotation\")\n        .build(\"key\", \"typeAnnotation\", \"optional\")\n        .field(\"key\", def(\"Expression\"))\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"readonly\", Boolean, defaults[\"false\"])\n        .field(\"optional\", Boolean, defaults[\"false\"])\n        .field(\"initializer\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"TSMethodSignature\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\", \"TSHasOptionalTypeAnnotation\")\n        .build(\"key\", \"parameters\", \"typeAnnotation\")\n        .field(\"key\", def(\"Expression\"))\n        .field(\"computed\", Boolean, defaults[\"false\"])\n        .field(\"optional\", Boolean, defaults[\"false\"])\n        .field(\"parameters\", ParametersType);\n    def(\"TSTypePredicate\")\n        .bases(\"TSTypeAnnotation\", \"TSType\")\n        .build(\"parameterName\", \"typeAnnotation\", \"asserts\")\n        .field(\"parameterName\", or(def(\"Identifier\"), def(\"TSThisType\")))\n        .field(\"typeAnnotation\", or(def(\"TSTypeAnnotation\"), null), defaults[\"null\"])\n        .field(\"asserts\", Boolean, defaults[\"false\"]);\n    [\"TSCallSignatureDeclaration\",\n        \"TSConstructSignatureDeclaration\",\n    ].forEach(function (typeName) {\n        def(typeName)\n            .bases(\"Declaration\", \"TSHasOptionalTypeParameters\", \"TSHasOptionalTypeAnnotation\")\n            .build(\"parameters\", \"typeAnnotation\")\n            .field(\"parameters\", ParametersType);\n    });\n    def(\"TSEnumMember\")\n        .bases(\"Node\")\n        .build(\"id\", \"initializer\")\n        .field(\"id\", or(def(\"Identifier\"), StringLiteral))\n        .field(\"initializer\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"TSTypeQuery\")\n        .bases(\"TSType\")\n        .build(\"exprName\")\n        .field(\"exprName\", or(TSEntityName, def(\"TSImportType\")));\n    // Inferred from Babylon's tsParseTypeMember method.\n    var TSTypeMember = or(def(\"TSCallSignatureDeclaration\"), def(\"TSConstructSignatureDeclaration\"), def(\"TSIndexSignature\"), def(\"TSMethodSignature\"), def(\"TSPropertySignature\"));\n    def(\"TSTypeLiteral\")\n        .bases(\"TSType\")\n        .build(\"members\")\n        .field(\"members\", [TSTypeMember]);\n    def(\"TSTypeParameter\")\n        .bases(\"Identifier\")\n        .build(\"name\", \"constraint\", \"default\")\n        .field(\"name\", or(def(\"Identifier\"), String))\n        .field(\"constraint\", or(def(\"TSType\"), void 0), defaults[\"undefined\"])\n        .field(\"default\", or(def(\"TSType\"), void 0), defaults[\"undefined\"]);\n    def(\"TSTypeAssertion\")\n        .bases(\"Expression\", \"Pattern\")\n        .build(\"typeAnnotation\", \"expression\")\n        .field(\"typeAnnotation\", def(\"TSType\"))\n        .field(\"expression\", def(\"Expression\"))\n        .field(\"extra\", or({ parenthesized: Boolean }, null), defaults[\"null\"]);\n    def(\"TSTypeParameterDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"params\")\n        .field(\"params\", [def(\"TSTypeParameter\")]);\n    def(\"TSInstantiationExpression\")\n        .bases(\"Expression\", \"TSHasOptionalTypeParameterInstantiation\")\n        .build(\"expression\", \"typeParameters\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"TSTypeParameterInstantiation\")\n        .bases(\"Node\")\n        .build(\"params\")\n        .field(\"params\", [def(\"TSType\")]);\n    def(\"TSEnumDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"members\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"const\", Boolean, defaults[\"false\"])\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"members\", [def(\"TSEnumMember\")])\n        .field(\"initializer\", or(def(\"Expression\"), null), defaults[\"null\"]);\n    def(\"TSTypeAliasDeclaration\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n        .build(\"id\", \"typeAnnotation\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"typeAnnotation\", def(\"TSType\"));\n    def(\"TSModuleBlock\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", [def(\"Statement\")]);\n    def(\"TSModuleDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"body\")\n        .field(\"id\", or(StringLiteral, TSEntityName))\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"global\", Boolean, defaults[\"false\"])\n        .field(\"body\", or(def(\"TSModuleBlock\"), def(\"TSModuleDeclaration\"), null), defaults[\"null\"]);\n    def(\"TSImportType\")\n        .bases(\"TSType\", \"TSHasOptionalTypeParameterInstantiation\")\n        .build(\"argument\", \"qualifier\", \"typeParameters\")\n        .field(\"argument\", StringLiteral)\n        .field(\"qualifier\", or(TSEntityName, void 0), defaults[\"undefined\"]);\n    def(\"TSImportEqualsDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\", \"moduleReference\")\n        .field(\"id\", def(\"Identifier\"))\n        .field(\"isExport\", Boolean, defaults[\"false\"])\n        .field(\"moduleReference\", or(TSEntityName, def(\"TSExternalModuleReference\")));\n    def(\"TSExternalModuleReference\")\n        .bases(\"Declaration\")\n        .build(\"expression\")\n        .field(\"expression\", StringLiteral);\n    def(\"TSExportAssignment\")\n        .bases(\"Statement\")\n        .build(\"expression\")\n        .field(\"expression\", def(\"Expression\"));\n    def(\"TSNamespaceExportDeclaration\")\n        .bases(\"Declaration\")\n        .build(\"id\")\n        .field(\"id\", def(\"Identifier\"));\n    def(\"TSInterfaceBody\")\n        .bases(\"Node\")\n        .build(\"body\")\n        .field(\"body\", [TSTypeMember]);\n    def(\"TSExpressionWithTypeArguments\")\n        .bases(\"TSType\", \"TSHasOptionalTypeParameterInstantiation\")\n        .build(\"expression\", \"typeParameters\")\n        .field(\"expression\", TSEntityName);\n    def(\"TSInterfaceDeclaration\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeParameters\")\n        .build(\"id\", \"body\")\n        .field(\"id\", TSEntityName)\n        .field(\"declare\", Boolean, defaults[\"false\"])\n        .field(\"extends\", or([def(\"TSExpressionWithTypeArguments\")], null), defaults[\"null\"])\n        .field(\"body\", def(\"TSInterfaceBody\"));\n    def(\"TSParameterProperty\")\n        .bases(\"Pattern\")\n        .build(\"parameter\")\n        .field(\"accessibility\", or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"])\n        .field(\"readonly\", Boolean, defaults[\"false\"])\n        .field(\"parameter\", or(def(\"Identifier\"), def(\"AssignmentPattern\")));\n    def(\"ClassProperty\")\n        .field(\"access\", // Not \"accessibility\"?\n    or(\"public\", \"private\", \"protected\", void 0), defaults[\"undefined\"]);\n    def(\"ClassAccessorProperty\")\n        .bases(\"Declaration\", \"TSHasOptionalTypeAnnotation\");\n    // Defined already in es6 and babel-core.\n    def(\"ClassBody\")\n        .field(\"body\", [or(def(\"MethodDefinition\"), def(\"VariableDeclarator\"), def(\"ClassPropertyDefinition\"), def(\"ClassProperty\"), def(\"ClassPrivateProperty\"), def(\"ClassAccessorProperty\"), def(\"ClassMethod\"), def(\"ClassPrivateMethod\"), def(\"StaticBlock\"), \n        // Just need to add these types:\n        def(\"TSDeclareMethod\"), TSTypeMember)]);\n}\nexports.default = default_1;\n;\n(0, shared_1.maybeSetModuleExports)(function () { return module; });\n//# sourceMappingURL=typescript.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.namedTypes = void 0;\nvar namedTypes;\n(function (namedTypes) {\n})(namedTypes = exports.namedTypes || (exports.namedTypes = {}));\n//# sourceMappingURL=namedTypes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.visit = exports.use = exports.Type = exports.someField = exports.PathVisitor = exports.Path = exports.NodePath = exports.namedTypes = exports.getSupertypeNames = exports.getFieldValue = exports.getFieldNames = exports.getBuilderName = exports.finalize = exports.eachField = exports.defineMethod = exports.builtInTypes = exports.builders = exports.astNodesAreEquivalent = void 0;\nvar tslib_1 = require(\"tslib\");\nvar fork_1 = tslib_1.__importDefault(require(\"./fork\"));\nvar es_proposals_1 = tslib_1.__importDefault(require(\"./def/es-proposals\"));\nvar jsx_1 = tslib_1.__importDefault(require(\"./def/jsx\"));\nvar flow_1 = tslib_1.__importDefault(require(\"./def/flow\"));\nvar esprima_1 = tslib_1.__importDefault(require(\"./def/esprima\"));\nvar babel_1 = tslib_1.__importDefault(require(\"./def/babel\"));\nvar typescript_1 = tslib_1.__importDefault(require(\"./def/typescript\"));\nvar namedTypes_1 = require(\"./gen/namedTypes\");\nObject.defineProperty(exports, \"namedTypes\", { enumerable: true, get: function () { return namedTypes_1.namedTypes; } });\nvar _a = (0, fork_1.default)([\n    // Feel free to add to or remove from this list of extension modules to\n    // configure the precise type hierarchy that you need.\n    es_proposals_1.default,\n    jsx_1.default,\n    flow_1.default,\n    esprima_1.default,\n    babel_1.default,\n    typescript_1.default,\n]), astNodesAreEquivalent = _a.astNodesAreEquivalent, builders = _a.builders, builtInTypes = _a.builtInTypes, defineMethod = _a.defineMethod, eachField = _a.eachField, finalize = _a.finalize, getBuilderName = _a.getBuilderName, getFieldNames = _a.getFieldNames, getFieldValue = _a.getFieldValue, getSupertypeNames = _a.getSupertypeNames, n = _a.namedTypes, NodePath = _a.NodePath, Path = _a.Path, PathVisitor = _a.PathVisitor, someField = _a.someField, Type = _a.Type, use = _a.use, visit = _a.visit;\nexports.astNodesAreEquivalent = astNodesAreEquivalent;\nexports.builders = builders;\nexports.builtInTypes = builtInTypes;\nexports.defineMethod = defineMethod;\nexports.eachField = eachField;\nexports.finalize = finalize;\nexports.getBuilderName = getBuilderName;\nexports.getFieldNames = getFieldNames;\nexports.getFieldValue = getFieldValue;\nexports.getSupertypeNames = getSupertypeNames;\nexports.NodePath = NodePath;\nexports.Path = Path;\nexports.PathVisitor = PathVisitor;\nexports.someField = someField;\nexports.Type = Type;\nexports.use = use;\nexports.visit = visit;\n// Populate the exported fields of the namedTypes namespace, while still\n// retaining its member types.\nObject.assign(namedTypes_1.namedTypes, n);\n//# sourceMappingURL=main.js.map","'use strict';\n\nvar isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n    throw new Error(value);\n}\n\nmodule.exports = invariant;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTrailingCommaEnabled = exports.getParentExportDeclaration = exports.isExportDeclaration = exports.fixFaultyLocations = exports.getTrueLoc = exports.composeSourceMaps = exports.copyPos = exports.comparePos = exports.getUnionOfKeys = exports.getOption = exports.isBrowser = exports.getLineTerminator = void 0;\nvar tslib_1 = require(\"tslib\");\nvar tiny_invariant_1 = tslib_1.__importDefault(require(\"tiny-invariant\"));\nvar types = tslib_1.__importStar(require(\"ast-types\"));\nvar n = types.namedTypes;\nvar source_map_1 = tslib_1.__importDefault(require(\"source-map\"));\nvar SourceMapConsumer = source_map_1.default.SourceMapConsumer;\nvar SourceMapGenerator = source_map_1.default.SourceMapGenerator;\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction getLineTerminator() {\n    return isBrowser() ? \"\\n\" : require(\"os\").EOL || \"\\n\";\n}\nexports.getLineTerminator = getLineTerminator;\nfunction isBrowser() {\n    return (typeof window !== \"undefined\" && typeof window.document !== \"undefined\");\n}\nexports.isBrowser = isBrowser;\nfunction getOption(options, key, defaultValue) {\n    if (options && hasOwn.call(options, key)) {\n        return options[key];\n    }\n    return defaultValue;\n}\nexports.getOption = getOption;\nfunction getUnionOfKeys() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var result = {};\n    var argc = args.length;\n    for (var i = 0; i < argc; ++i) {\n        var keys = Object.keys(args[i]);\n        var keyCount = keys.length;\n        for (var j = 0; j < keyCount; ++j) {\n            result[keys[j]] = true;\n        }\n    }\n    return result;\n}\nexports.getUnionOfKeys = getUnionOfKeys;\nfunction comparePos(pos1, pos2) {\n    return pos1.line - pos2.line || pos1.column - pos2.column;\n}\nexports.comparePos = comparePos;\nfunction copyPos(pos) {\n    return {\n        line: pos.line,\n        column: pos.column,\n    };\n}\nexports.copyPos = copyPos;\nfunction composeSourceMaps(formerMap, latterMap) {\n    if (formerMap) {\n        if (!latterMap) {\n            return formerMap;\n        }\n    }\n    else {\n        return latterMap || null;\n    }\n    var smcFormer = new SourceMapConsumer(formerMap);\n    var smcLatter = new SourceMapConsumer(latterMap);\n    var smg = new SourceMapGenerator({\n        file: latterMap.file,\n        sourceRoot: latterMap.sourceRoot,\n    });\n    var sourcesToContents = {};\n    smcLatter.eachMapping(function (mapping) {\n        var origPos = smcFormer.originalPositionFor({\n            line: mapping.originalLine,\n            column: mapping.originalColumn,\n        });\n        var sourceName = origPos.source;\n        if (sourceName === null) {\n            return;\n        }\n        smg.addMapping({\n            source: sourceName,\n            original: copyPos(origPos),\n            generated: {\n                line: mapping.generatedLine,\n                column: mapping.generatedColumn,\n            },\n            name: mapping.name,\n        });\n        var sourceContent = smcFormer.sourceContentFor(sourceName);\n        if (sourceContent && !hasOwn.call(sourcesToContents, sourceName)) {\n            sourcesToContents[sourceName] = sourceContent;\n            smg.setSourceContent(sourceName, sourceContent);\n        }\n    });\n    return smg.toJSON();\n}\nexports.composeSourceMaps = composeSourceMaps;\nfunction getTrueLoc(node, lines) {\n    // It's possible that node is newly-created (not parsed by Esprima),\n    // in which case it probably won't have a .loc property (or an\n    // .original property for that matter). That's fine; we'll just\n    // pretty-print it as usual.\n    if (!node.loc) {\n        return null;\n    }\n    var result = {\n        start: node.loc.start,\n        end: node.loc.end,\n    };\n    function include(node) {\n        expandLoc(result, node.loc);\n    }\n    // If the node is an export declaration and its .declaration has any\n    // decorators, their locations might contribute to the true start/end\n    // positions of the export declaration node.\n    if (node.declaration &&\n        node.declaration.decorators &&\n        isExportDeclaration(node)) {\n        node.declaration.decorators.forEach(include);\n    }\n    if (comparePos(result.start, result.end) < 0) {\n        // Trim leading whitespace.\n        result.start = copyPos(result.start);\n        lines.skipSpaces(result.start, false, true);\n        if (comparePos(result.start, result.end) < 0) {\n            // Trim trailing whitespace, if the end location is not already the\n            // same as the start location.\n            result.end = copyPos(result.end);\n            lines.skipSpaces(result.end, true, true);\n        }\n    }\n    // If the node has any comments, their locations might contribute to\n    // the true start/end positions of the node.\n    if (node.comments) {\n        node.comments.forEach(include);\n    }\n    return result;\n}\nexports.getTrueLoc = getTrueLoc;\nfunction expandLoc(parentLoc, childLoc) {\n    if (parentLoc && childLoc) {\n        if (comparePos(childLoc.start, parentLoc.start) < 0) {\n            parentLoc.start = childLoc.start;\n        }\n        if (comparePos(parentLoc.end, childLoc.end) < 0) {\n            parentLoc.end = childLoc.end;\n        }\n    }\n}\nfunction fixFaultyLocations(node, lines) {\n    var loc = node.loc;\n    if (loc) {\n        if (loc.start.line < 1) {\n            loc.start.line = 1;\n        }\n        if (loc.end.line < 1) {\n            loc.end.line = 1;\n        }\n    }\n    if (node.type === \"File\") {\n        // Babylon returns File nodes whose .loc.{start,end} do not include\n        // leading or trailing whitespace.\n        loc.start = lines.firstPos();\n        loc.end = lines.lastPos();\n    }\n    fixForLoopHead(node, lines);\n    fixTemplateLiteral(node, lines);\n    if (loc && node.decorators) {\n        // Expand the .loc of the node responsible for printing the decorators\n        // (here, the decorated node) so that it includes node.decorators.\n        node.decorators.forEach(function (decorator) {\n            expandLoc(loc, decorator.loc);\n        });\n    }\n    else if (node.declaration && isExportDeclaration(node)) {\n        // Nullify .loc information for the child declaration so that we never\n        // try to reprint it without also reprinting the export declaration.\n        node.declaration.loc = null;\n        // Expand the .loc of the node responsible for printing the decorators\n        // (here, the export declaration) so that it includes node.decorators.\n        var decorators = node.declaration.decorators;\n        if (decorators) {\n            decorators.forEach(function (decorator) {\n                expandLoc(loc, decorator.loc);\n            });\n        }\n    }\n    else if ((n.MethodDefinition && n.MethodDefinition.check(node)) ||\n        (n.Property.check(node) && (node.method || node.shorthand))) {\n        // If the node is a MethodDefinition or a .method or .shorthand\n        // Property, then the location information stored in\n        // node.value.loc is very likely untrustworthy (just the {body}\n        // part of a method, or nothing in the case of shorthand\n        // properties), so we null out that information to prevent\n        // accidental reuse of bogus source code during reprinting.\n        node.value.loc = null;\n        if (n.FunctionExpression.check(node.value)) {\n            // FunctionExpression method values should be anonymous,\n            // because their .id fields are ignored anyway.\n            node.value.id = null;\n        }\n    }\n    else if (node.type === \"ObjectTypeProperty\") {\n        var loc_1 = node.loc;\n        var end = loc_1 && loc_1.end;\n        if (end) {\n            end = copyPos(end);\n            if (lines.prevPos(end) && lines.charAt(end) === \",\") {\n                // Some parsers accidentally include trailing commas in the\n                // .loc.end information for ObjectTypeProperty nodes.\n                if ((end = lines.skipSpaces(end, true, true))) {\n                    loc_1.end = end;\n                }\n            }\n        }\n    }\n}\nexports.fixFaultyLocations = fixFaultyLocations;\nfunction fixForLoopHead(node, lines) {\n    if (node.type !== \"ForStatement\") {\n        return;\n    }\n    function fix(child) {\n        var loc = child && child.loc;\n        var start = loc && loc.start;\n        var end = loc && copyPos(loc.end);\n        while (start && end && comparePos(start, end) < 0) {\n            lines.prevPos(end);\n            if (lines.charAt(end) === \";\") {\n                // Update child.loc.end to *exclude* the ';' character.\n                loc.end.line = end.line;\n                loc.end.column = end.column;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    fix(node.init);\n    fix(node.test);\n    fix(node.update);\n}\nfunction fixTemplateLiteral(node, lines) {\n    if (node.type !== \"TemplateLiteral\") {\n        return;\n    }\n    if (node.quasis.length === 0) {\n        // If there are no quasi elements, then there is nothing to fix.\n        return;\n    }\n    // node.loc is not present when using export default with a template literal\n    if (node.loc) {\n        // First we need to exclude the opening ` from the .loc of the first\n        // quasi element, in case the parser accidentally decided to include it.\n        var afterLeftBackTickPos = copyPos(node.loc.start);\n        (0, tiny_invariant_1.default)(lines.charAt(afterLeftBackTickPos) === \"`\");\n        (0, tiny_invariant_1.default)(lines.nextPos(afterLeftBackTickPos));\n        var firstQuasi = node.quasis[0];\n        if (comparePos(firstQuasi.loc.start, afterLeftBackTickPos) < 0) {\n            firstQuasi.loc.start = afterLeftBackTickPos;\n        }\n        // Next we need to exclude the closing ` from the .loc of the last quasi\n        // element, in case the parser accidentally decided to include it.\n        var rightBackTickPos = copyPos(node.loc.end);\n        (0, tiny_invariant_1.default)(lines.prevPos(rightBackTickPos));\n        (0, tiny_invariant_1.default)(lines.charAt(rightBackTickPos) === \"`\");\n        var lastQuasi = node.quasis[node.quasis.length - 1];\n        if (comparePos(rightBackTickPos, lastQuasi.loc.end) < 0) {\n            lastQuasi.loc.end = rightBackTickPos;\n        }\n    }\n    // Now we need to exclude ${ and } characters from the .loc's of all\n    // quasi elements, since some parsers accidentally include them.\n    node.expressions.forEach(function (expr, i) {\n        // Rewind from expr.loc.start over any whitespace and the ${ that\n        // precedes the expression. The position of the $ should be the same\n        // as the .loc.end of the preceding quasi element, but some parsers\n        // accidentally include the ${ in the .loc of the quasi element.\n        var dollarCurlyPos = lines.skipSpaces(expr.loc.start, true, false);\n        if (lines.prevPos(dollarCurlyPos) &&\n            lines.charAt(dollarCurlyPos) === \"{\" &&\n            lines.prevPos(dollarCurlyPos) &&\n            lines.charAt(dollarCurlyPos) === \"$\") {\n            var quasiBefore = node.quasis[i];\n            if (comparePos(dollarCurlyPos, quasiBefore.loc.end) < 0) {\n                quasiBefore.loc.end = dollarCurlyPos;\n            }\n        }\n        // Likewise, some parsers accidentally include the } that follows\n        // the expression in the .loc of the following quasi element.\n        var rightCurlyPos = lines.skipSpaces(expr.loc.end, false, false);\n        if (lines.charAt(rightCurlyPos) === \"}\") {\n            (0, tiny_invariant_1.default)(lines.nextPos(rightCurlyPos));\n            // Now rightCurlyPos is technically the position just after the }.\n            var quasiAfter = node.quasis[i + 1];\n            if (comparePos(quasiAfter.loc.start, rightCurlyPos) < 0) {\n                quasiAfter.loc.start = rightCurlyPos;\n            }\n        }\n    });\n}\nfunction isExportDeclaration(node) {\n    if (node)\n        switch (node.type) {\n            case \"ExportDeclaration\":\n            case \"ExportDefaultDeclaration\":\n            case \"ExportDefaultSpecifier\":\n            case \"DeclareExportDeclaration\":\n            case \"ExportNamedDeclaration\":\n            case \"ExportAllDeclaration\":\n                return true;\n        }\n    return false;\n}\nexports.isExportDeclaration = isExportDeclaration;\nfunction getParentExportDeclaration(path) {\n    var parentNode = path.getParentNode();\n    if (path.getName() === \"declaration\" && isExportDeclaration(parentNode)) {\n        return parentNode;\n    }\n    return null;\n}\nexports.getParentExportDeclaration = getParentExportDeclaration;\nfunction isTrailingCommaEnabled(options, context) {\n    var trailingComma = options.trailingComma;\n    if (typeof trailingComma === \"object\") {\n        return !!trailingComma[context];\n    }\n    return !!trailingComma;\n}\nexports.isTrailingCommaEnabled = isTrailingCommaEnabled;\n","(function webpackUniversalModuleDefinition(root, factory) {\n/* istanbul ignore next */\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n/* istanbul ignore next */\n\telse if(typeof exports === 'object')\n\t\texports[\"esprima\"] = factory();\n\telse\n\t\troot[\"esprima\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/* istanbul ignore if */\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/*\n\t  Copyright JS Foundation and other contributors, https://js.foundation/\n\n\t  Redistribution and use in source and binary forms, with or without\n\t  modification, are permitted provided that the following conditions are met:\n\n\t    * Redistributions of source code must retain the above copyright\n\t      notice, this list of conditions and the following disclaimer.\n\t    * Redistributions in binary form must reproduce the above copyright\n\t      notice, this list of conditions and the following disclaimer in the\n\t      documentation and/or other materials provided with the distribution.\n\n\t  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n\t  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\t  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\t  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\t  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\t  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar comment_handler_1 = __webpack_require__(1);\n\tvar jsx_parser_1 = __webpack_require__(3);\n\tvar parser_1 = __webpack_require__(8);\n\tvar tokenizer_1 = __webpack_require__(15);\n\tfunction parse(code, options, delegate) {\n\t    var commentHandler = null;\n\t    var proxyDelegate = function (node, metadata) {\n\t        if (delegate) {\n\t            delegate(node, metadata);\n\t        }\n\t        if (commentHandler) {\n\t            commentHandler.visit(node, metadata);\n\t        }\n\t    };\n\t    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;\n\t    var collectComment = false;\n\t    if (options) {\n\t        collectComment = (typeof options.comment === 'boolean' && options.comment);\n\t        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);\n\t        if (collectComment || attachComment) {\n\t            commentHandler = new comment_handler_1.CommentHandler();\n\t            commentHandler.attach = attachComment;\n\t            options.comment = true;\n\t            parserDelegate = proxyDelegate;\n\t        }\n\t    }\n\t    var isModule = false;\n\t    if (options && typeof options.sourceType === 'string') {\n\t        isModule = (options.sourceType === 'module');\n\t    }\n\t    var parser;\n\t    if (options && typeof options.jsx === 'boolean' && options.jsx) {\n\t        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);\n\t    }\n\t    else {\n\t        parser = new parser_1.Parser(code, options, parserDelegate);\n\t    }\n\t    var program = isModule ? parser.parseModule() : parser.parseScript();\n\t    var ast = program;\n\t    if (collectComment && commentHandler) {\n\t        ast.comments = commentHandler.comments;\n\t    }\n\t    if (parser.config.tokens) {\n\t        ast.tokens = parser.tokens;\n\t    }\n\t    if (parser.config.tolerant) {\n\t        ast.errors = parser.errorHandler.errors;\n\t    }\n\t    return ast;\n\t}\n\texports.parse = parse;\n\tfunction parseModule(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'module';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseModule = parseModule;\n\tfunction parseScript(code, options, delegate) {\n\t    var parsingOptions = options || {};\n\t    parsingOptions.sourceType = 'script';\n\t    return parse(code, parsingOptions, delegate);\n\t}\n\texports.parseScript = parseScript;\n\tfunction tokenize(code, options, delegate) {\n\t    var tokenizer = new tokenizer_1.Tokenizer(code, options);\n\t    var tokens;\n\t    tokens = [];\n\t    try {\n\t        while (true) {\n\t            var token = tokenizer.getNextToken();\n\t            if (!token) {\n\t                break;\n\t            }\n\t            if (delegate) {\n\t                token = delegate(token);\n\t            }\n\t            tokens.push(token);\n\t        }\n\t    }\n\t    catch (e) {\n\t        tokenizer.errorHandler.tolerate(e);\n\t    }\n\t    if (tokenizer.errorHandler.tolerant) {\n\t        tokens.errors = tokenizer.errors();\n\t    }\n\t    return tokens;\n\t}\n\texports.tokenize = tokenize;\n\tvar syntax_1 = __webpack_require__(2);\n\texports.Syntax = syntax_1.Syntax;\n\t// Sync with *.json manifests.\n\texports.version = '4.0.1';\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\tvar CommentHandler = (function () {\n\t    function CommentHandler() {\n\t        this.attach = false;\n\t        this.comments = [];\n\t        this.stack = [];\n\t        this.leading = [];\n\t        this.trailing = [];\n\t    }\n\t    CommentHandler.prototype.insertInnerComments = function (node, metadata) {\n\t        //  innnerComments for properties empty block\n\t        //  `function a() {/** comments **\\/}`\n\t        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {\n\t            var innerComments = [];\n\t            for (var i = this.leading.length - 1; i >= 0; --i) {\n\t                var entry = this.leading[i];\n\t                if (metadata.end.offset >= entry.start) {\n\t                    innerComments.unshift(entry.comment);\n\t                    this.leading.splice(i, 1);\n\t                    this.trailing.splice(i, 1);\n\t                }\n\t            }\n\t            if (innerComments.length) {\n\t                node.innerComments = innerComments;\n\t            }\n\t        }\n\t    };\n\t    CommentHandler.prototype.findTrailingComments = function (metadata) {\n\t        var trailingComments = [];\n\t        if (this.trailing.length > 0) {\n\t            for (var i = this.trailing.length - 1; i >= 0; --i) {\n\t                var entry_1 = this.trailing[i];\n\t                if (entry_1.start >= metadata.end.offset) {\n\t                    trailingComments.unshift(entry_1.comment);\n\t                }\n\t            }\n\t            this.trailing.length = 0;\n\t            return trailingComments;\n\t        }\n\t        var entry = this.stack[this.stack.length - 1];\n\t        if (entry && entry.node.trailingComments) {\n\t            var firstComment = entry.node.trailingComments[0];\n\t            if (firstComment && firstComment.range[0] >= metadata.end.offset) {\n\t                trailingComments = entry.node.trailingComments;\n\t                delete entry.node.trailingComments;\n\t            }\n\t        }\n\t        return trailingComments;\n\t    };\n\t    CommentHandler.prototype.findLeadingComments = function (metadata) {\n\t        var leadingComments = [];\n\t        var target;\n\t        while (this.stack.length > 0) {\n\t            var entry = this.stack[this.stack.length - 1];\n\t            if (entry && entry.start >= metadata.start.offset) {\n\t                target = entry.node;\n\t                this.stack.pop();\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        if (target) {\n\t            var count = target.leadingComments ? target.leadingComments.length : 0;\n\t            for (var i = count - 1; i >= 0; --i) {\n\t                var comment = target.leadingComments[i];\n\t                if (comment.range[1] <= metadata.start.offset) {\n\t                    leadingComments.unshift(comment);\n\t                    target.leadingComments.splice(i, 1);\n\t                }\n\t            }\n\t            if (target.leadingComments && target.leadingComments.length === 0) {\n\t                delete target.leadingComments;\n\t            }\n\t            return leadingComments;\n\t        }\n\t        for (var i = this.leading.length - 1; i >= 0; --i) {\n\t            var entry = this.leading[i];\n\t            if (entry.start <= metadata.start.offset) {\n\t                leadingComments.unshift(entry.comment);\n\t                this.leading.splice(i, 1);\n\t            }\n\t        }\n\t        return leadingComments;\n\t    };\n\t    CommentHandler.prototype.visitNode = function (node, metadata) {\n\t        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {\n\t            return;\n\t        }\n\t        this.insertInnerComments(node, metadata);\n\t        var trailingComments = this.findTrailingComments(metadata);\n\t        var leadingComments = this.findLeadingComments(metadata);\n\t        if (leadingComments.length > 0) {\n\t            node.leadingComments = leadingComments;\n\t        }\n\t        if (trailingComments.length > 0) {\n\t            node.trailingComments = trailingComments;\n\t        }\n\t        this.stack.push({\n\t            node: node,\n\t            start: metadata.start.offset\n\t        });\n\t    };\n\t    CommentHandler.prototype.visitComment = function (node, metadata) {\n\t        var type = (node.type[0] === 'L') ? 'Line' : 'Block';\n\t        var comment = {\n\t            type: type,\n\t            value: node.value\n\t        };\n\t        if (node.range) {\n\t            comment.range = node.range;\n\t        }\n\t        if (node.loc) {\n\t            comment.loc = node.loc;\n\t        }\n\t        this.comments.push(comment);\n\t        if (this.attach) {\n\t            var entry = {\n\t                comment: {\n\t                    type: type,\n\t                    value: node.value,\n\t                    range: [metadata.start.offset, metadata.end.offset]\n\t                },\n\t                start: metadata.start.offset\n\t            };\n\t            if (node.loc) {\n\t                entry.comment.loc = node.loc;\n\t            }\n\t            node.type = type;\n\t            this.leading.push(entry);\n\t            this.trailing.push(entry);\n\t        }\n\t    };\n\t    CommentHandler.prototype.visit = function (node, metadata) {\n\t        if (node.type === 'LineComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (node.type === 'BlockComment') {\n\t            this.visitComment(node, metadata);\n\t        }\n\t        else if (this.attach) {\n\t            this.visitNode(node, metadata);\n\t        }\n\t    };\n\t    return CommentHandler;\n\t}());\n\texports.CommentHandler = CommentHandler;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.Syntax = {\n\t    AssignmentExpression: 'AssignmentExpression',\n\t    AssignmentPattern: 'AssignmentPattern',\n\t    ArrayExpression: 'ArrayExpression',\n\t    ArrayPattern: 'ArrayPattern',\n\t    ArrowFunctionExpression: 'ArrowFunctionExpression',\n\t    AwaitExpression: 'AwaitExpression',\n\t    BlockStatement: 'BlockStatement',\n\t    BinaryExpression: 'BinaryExpression',\n\t    BreakStatement: 'BreakStatement',\n\t    CallExpression: 'CallExpression',\n\t    CatchClause: 'CatchClause',\n\t    ClassBody: 'ClassBody',\n\t    ClassDeclaration: 'ClassDeclaration',\n\t    ClassExpression: 'ClassExpression',\n\t    ConditionalExpression: 'ConditionalExpression',\n\t    ContinueStatement: 'ContinueStatement',\n\t    DoWhileStatement: 'DoWhileStatement',\n\t    DebuggerStatement: 'DebuggerStatement',\n\t    EmptyStatement: 'EmptyStatement',\n\t    ExportAllDeclaration: 'ExportAllDeclaration',\n\t    ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n\t    ExportNamedDeclaration: 'ExportNamedDeclaration',\n\t    ExportSpecifier: 'ExportSpecifier',\n\t    ExpressionStatement: 'ExpressionStatement',\n\t    ForStatement: 'ForStatement',\n\t    ForOfStatement: 'ForOfStatement',\n\t    ForInStatement: 'ForInStatement',\n\t    FunctionDeclaration: 'FunctionDeclaration',\n\t    FunctionExpression: 'FunctionExpression',\n\t    Identifier: 'Identifier',\n\t    IfStatement: 'IfStatement',\n\t    ImportDeclaration: 'ImportDeclaration',\n\t    ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n\t    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n\t    ImportSpecifier: 'ImportSpecifier',\n\t    Literal: 'Literal',\n\t    LabeledStatement: 'LabeledStatement',\n\t    LogicalExpression: 'LogicalExpression',\n\t    MemberExpression: 'MemberExpression',\n\t    MetaProperty: 'MetaProperty',\n\t    MethodDefinition: 'MethodDefinition',\n\t    NewExpression: 'NewExpression',\n\t    ObjectExpression: 'ObjectExpression',\n\t    ObjectPattern: 'ObjectPattern',\n\t    Program: 'Program',\n\t    Property: 'Property',\n\t    RestElement: 'RestElement',\n\t    ReturnStatement: 'ReturnStatement',\n\t    SequenceExpression: 'SequenceExpression',\n\t    SpreadElement: 'SpreadElement',\n\t    Super: 'Super',\n\t    SwitchCase: 'SwitchCase',\n\t    SwitchStatement: 'SwitchStatement',\n\t    TaggedTemplateExpression: 'TaggedTemplateExpression',\n\t    TemplateElement: 'TemplateElement',\n\t    TemplateLiteral: 'TemplateLiteral',\n\t    ThisExpression: 'ThisExpression',\n\t    ThrowStatement: 'ThrowStatement',\n\t    TryStatement: 'TryStatement',\n\t    UnaryExpression: 'UnaryExpression',\n\t    UpdateExpression: 'UpdateExpression',\n\t    VariableDeclaration: 'VariableDeclaration',\n\t    VariableDeclarator: 'VariableDeclarator',\n\t    WhileStatement: 'WhileStatement',\n\t    WithStatement: 'WithStatement',\n\t    YieldExpression: 'YieldExpression'\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n/* istanbul ignore next */\n\tvar __extends = (this && this.__extends) || (function () {\n\t    var extendStatics = Object.setPrototypeOf ||\n\t        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n\t        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n\t    return function (d, b) {\n\t        extendStatics(d, b);\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t})();\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar character_1 = __webpack_require__(4);\n\tvar JSXNode = __webpack_require__(5);\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\tvar Node = __webpack_require__(7);\n\tvar parser_1 = __webpack_require__(8);\n\tvar token_1 = __webpack_require__(13);\n\tvar xhtml_entities_1 = __webpack_require__(14);\n\ttoken_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';\n\ttoken_1.TokenName[101 /* Text */] = 'JSXText';\n\t// Fully qualified element name, e.g. <svg:path> returns \"svg:path\"\n\tfunction getQualifiedElementName(elementName) {\n\t    var qualifiedName;\n\t    switch (elementName.type) {\n\t        case jsx_syntax_1.JSXSyntax.JSXIdentifier:\n\t            var id = elementName;\n\t            qualifiedName = id.name;\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:\n\t            var ns = elementName;\n\t            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +\n\t                getQualifiedElementName(ns.name);\n\t            break;\n\t        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:\n\t            var expr = elementName;\n\t            qualifiedName = getQualifiedElementName(expr.object) + '.' +\n\t                getQualifiedElementName(expr.property);\n\t            break;\n\t        /* istanbul ignore next */\n\t        default:\n\t            break;\n\t    }\n\t    return qualifiedName;\n\t}\n\tvar JSXParser = (function (_super) {\n\t    __extends(JSXParser, _super);\n\t    function JSXParser(code, options, delegate) {\n\t        return _super.call(this, code, options, delegate) || this;\n\t    }\n\t    JSXParser.prototype.parsePrimaryExpression = function () {\n\t        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);\n\t    };\n\t    JSXParser.prototype.startJSX = function () {\n\t        // Unwind the scanner before the lookahead token.\n\t        this.scanner.index = this.startMarker.index;\n\t        this.scanner.lineNumber = this.startMarker.line;\n\t        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;\n\t    };\n\t    JSXParser.prototype.finishJSX = function () {\n\t        // Prime the next lookahead.\n\t        this.nextToken();\n\t    };\n\t    JSXParser.prototype.reenterJSX = function () {\n\t        this.startJSX();\n\t        this.expectJSX('}');\n\t        // Pop the closing '}' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t    };\n\t    JSXParser.prototype.createJSXNode = function () {\n\t        this.collectComments();\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.createJSXChildNode = function () {\n\t        return {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    };\n\t    JSXParser.prototype.scanXHTMLEntity = function (quote) {\n\t        var result = '&';\n\t        var valid = true;\n\t        var terminated = false;\n\t        var numeric = false;\n\t        var hex = false;\n\t        while (!this.scanner.eof() && valid && !terminated) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === quote) {\n\t                break;\n\t            }\n\t            terminated = (ch === ';');\n\t            result += ch;\n\t            ++this.scanner.index;\n\t            if (!terminated) {\n\t                switch (result.length) {\n\t                    case 2:\n\t                        // e.g. '&#123;'\n\t                        numeric = (ch === '#');\n\t                        break;\n\t                    case 3:\n\t                        if (numeric) {\n\t                            // e.g. '&#x41;'\n\t                            hex = (ch === 'x');\n\t                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));\n\t                            numeric = numeric && !hex;\n\t                        }\n\t                        break;\n\t                    default:\n\t                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));\n\t                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));\n\t                        break;\n\t                }\n\t            }\n\t        }\n\t        if (valid && terminated && result.length > 2) {\n\t            // e.g. '&#x41;' becomes just '#x41'\n\t            var str = result.substr(1, result.length - 2);\n\t            if (numeric && str.length > 1) {\n\t                result = String.fromCharCode(parseInt(str.substr(1), 10));\n\t            }\n\t            else if (hex && str.length > 2) {\n\t                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));\n\t            }\n\t            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {\n\t                result = xhtml_entities_1.XHTMLEntities[str];\n\t            }\n\t        }\n\t        return result;\n\t    };\n\t    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.\n\t    JSXParser.prototype.lexJSX = function () {\n\t        var cp = this.scanner.source.charCodeAt(this.scanner.index);\n\t        // < > / : = { }\n\t        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {\n\t            var value = this.scanner.source[this.scanner.index++];\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index - 1,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // \" '\n\t        if (cp === 34 || cp === 39) {\n\t            var start = this.scanner.index;\n\t            var quote = this.scanner.source[this.scanner.index++];\n\t            var str = '';\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source[this.scanner.index++];\n\t                if (ch === quote) {\n\t                    break;\n\t                }\n\t                else if (ch === '&') {\n\t                    str += this.scanXHTMLEntity(quote);\n\t                }\n\t                else {\n\t                    str += ch;\n\t                }\n\t            }\n\t            return {\n\t                type: 8 /* StringLiteral */,\n\t                value: str,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // ... or .\n\t        if (cp === 46) {\n\t            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);\n\t            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);\n\t            var value = (n1 === 46 && n2 === 46) ? '...' : '.';\n\t            var start = this.scanner.index;\n\t            this.scanner.index += value.length;\n\t            return {\n\t                type: 7 /* Punctuator */,\n\t                value: value,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // `\n\t        if (cp === 96) {\n\t            // Only placeholder, since it will be rescanned as a real assignment expression.\n\t            return {\n\t                type: 10 /* Template */,\n\t                value: '',\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: this.scanner.index,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        // Identifer can not contain backslash (char code 92).\n\t        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {\n\t            var start = this.scanner.index;\n\t            ++this.scanner.index;\n\t            while (!this.scanner.eof()) {\n\t                var ch = this.scanner.source.charCodeAt(this.scanner.index);\n\t                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {\n\t                    ++this.scanner.index;\n\t                }\n\t                else if (ch === 45) {\n\t                    // Hyphen (char code 45) can be part of an identifier.\n\t                    ++this.scanner.index;\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            var id = this.scanner.source.slice(start, this.scanner.index);\n\t            return {\n\t                type: 100 /* Identifier */,\n\t                value: id,\n\t                lineNumber: this.scanner.lineNumber,\n\t                lineStart: this.scanner.lineStart,\n\t                start: start,\n\t                end: this.scanner.index\n\t            };\n\t        }\n\t        return this.scanner.lex();\n\t    };\n\t    JSXParser.prototype.nextJSXToken = function () {\n\t        this.collectComments();\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = this.lexJSX();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        if (this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.nextJSXText = function () {\n\t        this.startMarker.index = this.scanner.index;\n\t        this.startMarker.line = this.scanner.lineNumber;\n\t        this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var start = this.scanner.index;\n\t        var text = '';\n\t        while (!this.scanner.eof()) {\n\t            var ch = this.scanner.source[this.scanner.index];\n\t            if (ch === '{' || ch === '<') {\n\t                break;\n\t            }\n\t            ++this.scanner.index;\n\t            text += ch;\n\t            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.scanner.lineNumber;\n\t                if (ch === '\\r' && this.scanner.source[this.scanner.index] === '\\n') {\n\t                    ++this.scanner.index;\n\t                }\n\t                this.scanner.lineStart = this.scanner.index;\n\t            }\n\t        }\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        var token = {\n\t            type: 101 /* Text */,\n\t            value: text,\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: this.scanner.lineStart,\n\t            start: start,\n\t            end: this.scanner.index\n\t        };\n\t        if ((text.length > 0) && this.config.tokens) {\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        return token;\n\t    };\n\t    JSXParser.prototype.peekJSXToken = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.lexJSX();\n\t        this.scanner.restoreState(state);\n\t        return next;\n\t    };\n\t    // Expect the next JSX token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    JSXParser.prototype.expectJSX = function (value) {\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next JSX token matches the specified punctuator.\n\t    JSXParser.prototype.matchJSX = function (value) {\n\t        var next = this.peekJSXToken();\n\t        return next.type === 7 /* Punctuator */ && next.value === value;\n\t    };\n\t    JSXParser.prototype.parseJSXIdentifier = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 100 /* Identifier */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));\n\t    };\n\t    JSXParser.prototype.parseJSXElementName = function () {\n\t        var node = this.createJSXNode();\n\t        var elementName = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = elementName;\n\t            this.expectJSX(':');\n\t            var name_1 = this.parseJSXIdentifier();\n\t            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));\n\t        }\n\t        else if (this.matchJSX('.')) {\n\t            while (this.matchJSX('.')) {\n\t                var object = elementName;\n\t                this.expectJSX('.');\n\t                var property = this.parseJSXIdentifier();\n\t                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));\n\t            }\n\t        }\n\t        return elementName;\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeName = function () {\n\t        var node = this.createJSXNode();\n\t        var attributeName;\n\t        var identifier = this.parseJSXIdentifier();\n\t        if (this.matchJSX(':')) {\n\t            var namespace = identifier;\n\t            this.expectJSX(':');\n\t            var name_2 = this.parseJSXIdentifier();\n\t            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));\n\t        }\n\t        else {\n\t            attributeName = identifier;\n\t        }\n\t        return attributeName;\n\t    };\n\t    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var token = this.nextJSXToken();\n\t        if (token.type !== 8 /* StringLiteral */) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.finishJSX();\n\t        if (this.match('}')) {\n\t            this.tolerateError('JSX attributes must only be assigned a non-empty expression');\n\t        }\n\t        var expression = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributeValue = function () {\n\t        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :\n\t            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();\n\t    };\n\t    JSXParser.prototype.parseJSXNameValueAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        var name = this.parseJSXAttributeName();\n\t        var value = null;\n\t        if (this.matchJSX('=')) {\n\t            this.expectJSX('=');\n\t            value = this.parseJSXAttributeValue();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXAttribute(name, value));\n\t    };\n\t    JSXParser.prototype.parseJSXSpreadAttribute = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        this.expectJSX('...');\n\t        this.finishJSX();\n\t        var argument = this.parseAssignmentExpression();\n\t        this.reenterJSX();\n\t        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));\n\t    };\n\t    JSXParser.prototype.parseJSXAttributes = function () {\n\t        var attributes = [];\n\t        while (!this.matchJSX('/') && !this.matchJSX('>')) {\n\t            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :\n\t                this.parseJSXNameValueAttribute();\n\t            attributes.push(attribute);\n\t        }\n\t        return attributes;\n\t    };\n\t    JSXParser.prototype.parseJSXOpeningElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXBoundaryElement = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('<');\n\t        if (this.matchJSX('/')) {\n\t            this.expectJSX('/');\n\t            var name_3 = this.parseJSXElementName();\n\t            this.expectJSX('>');\n\t            return this.finalize(node, new JSXNode.JSXClosingElement(name_3));\n\t        }\n\t        var name = this.parseJSXElementName();\n\t        var attributes = this.parseJSXAttributes();\n\t        var selfClosing = this.matchJSX('/');\n\t        if (selfClosing) {\n\t            this.expectJSX('/');\n\t        }\n\t        this.expectJSX('>');\n\t        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));\n\t    };\n\t    JSXParser.prototype.parseJSXEmptyExpression = function () {\n\t        var node = this.createJSXChildNode();\n\t        this.collectComments();\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        return this.finalize(node, new JSXNode.JSXEmptyExpression());\n\t    };\n\t    JSXParser.prototype.parseJSXExpressionContainer = function () {\n\t        var node = this.createJSXNode();\n\t        this.expectJSX('{');\n\t        var expression;\n\t        if (this.matchJSX('}')) {\n\t            expression = this.parseJSXEmptyExpression();\n\t            this.expectJSX('}');\n\t        }\n\t        else {\n\t            this.finishJSX();\n\t            expression = this.parseAssignmentExpression();\n\t            this.reenterJSX();\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));\n\t    };\n\t    JSXParser.prototype.parseJSXChildren = function () {\n\t        var children = [];\n\t        while (!this.scanner.eof()) {\n\t            var node = this.createJSXChildNode();\n\t            var token = this.nextJSXText();\n\t            if (token.start < token.end) {\n\t                var raw = this.getTokenRaw(token);\n\t                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));\n\t                children.push(child);\n\t            }\n\t            if (this.scanner.source[this.scanner.index] === '{') {\n\t                var container = this.parseJSXExpressionContainer();\n\t                children.push(container);\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return children;\n\t    };\n\t    JSXParser.prototype.parseComplexJSXElement = function (el) {\n\t        var stack = [];\n\t        while (!this.scanner.eof()) {\n\t            el.children = el.children.concat(this.parseJSXChildren());\n\t            var node = this.createJSXChildNode();\n\t            var element = this.parseJSXBoundaryElement();\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {\n\t                var opening = element;\n\t                if (opening.selfClosing) {\n\t                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));\n\t                    el.children.push(child);\n\t                }\n\t                else {\n\t                    stack.push(el);\n\t                    el = { node: node, opening: opening, closing: null, children: [] };\n\t                }\n\t            }\n\t            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {\n\t                el.closing = element;\n\t                var open_1 = getQualifiedElementName(el.opening.name);\n\t                var close_1 = getQualifiedElementName(el.closing.name);\n\t                if (open_1 !== close_1) {\n\t                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);\n\t                }\n\t                if (stack.length > 0) {\n\t                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));\n\t                    el = stack[stack.length - 1];\n\t                    el.children.push(child);\n\t                    stack.pop();\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        return el;\n\t    };\n\t    JSXParser.prototype.parseJSXElement = function () {\n\t        var node = this.createJSXNode();\n\t        var opening = this.parseJSXOpeningElement();\n\t        var children = [];\n\t        var closing = null;\n\t        if (!opening.selfClosing) {\n\t            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });\n\t            children = el.children;\n\t            closing = el.closing;\n\t        }\n\t        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));\n\t    };\n\t    JSXParser.prototype.parseJSXRoot = function () {\n\t        // Pop the opening '<' added from the lookahead.\n\t        if (this.config.tokens) {\n\t            this.tokens.pop();\n\t        }\n\t        this.startJSX();\n\t        var element = this.parseJSXElement();\n\t        this.finishJSX();\n\t        return element;\n\t    };\n\t    JSXParser.prototype.isStartOfExpression = function () {\n\t        return _super.prototype.isStartOfExpression.call(this) || this.match('<');\n\t    };\n\t    return JSXParser;\n\t}(parser_1.Parser));\n\texports.JSXParser = JSXParser;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// See also tools/generate-unicode-regex.js.\n\tvar Regex = {\n\t    // Unicode v8.0.0 NonAsciiIdentifierStart:\n\t    NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n\t    // Unicode v8.0.0 NonAsciiIdentifierPart:\n\t    NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n\t};\n\texports.Character = {\n\t    /* tslint:disable:no-bitwise */\n\t    fromCodePoint: function (cp) {\n\t        return (cp < 0x10000) ? String.fromCharCode(cp) :\n\t            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +\n\t                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-white-space\n\t    isWhiteSpace: function (cp) {\n\t        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||\n\t            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-line-terminators\n\t    isLineTerminator: function (cp) {\n\t        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    isIdentifierStart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    isIdentifierPart: function (cp) {\n\t        return (cp === 0x24) || (cp === 0x5F) ||\n\t            (cp >= 0x41 && cp <= 0x5A) ||\n\t            (cp >= 0x61 && cp <= 0x7A) ||\n\t            (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp === 0x5C) ||\n\t            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));\n\t    },\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    isDecimalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39); // 0..9\n\t    },\n\t    isHexDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x39) ||\n\t            (cp >= 0x41 && cp <= 0x46) ||\n\t            (cp >= 0x61 && cp <= 0x66); // a..f\n\t    },\n\t    isOctalDigit: function (cp) {\n\t        return (cp >= 0x30 && cp <= 0x37); // 0..7\n\t    }\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar jsx_syntax_1 = __webpack_require__(6);\n\t/* tslint:disable:max-classes-per-file */\n\tvar JSXClosingElement = (function () {\n\t    function JSXClosingElement(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;\n\t        this.name = name;\n\t    }\n\t    return JSXClosingElement;\n\t}());\n\texports.JSXClosingElement = JSXClosingElement;\n\tvar JSXElement = (function () {\n\t    function JSXElement(openingElement, children, closingElement) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXElement;\n\t        this.openingElement = openingElement;\n\t        this.children = children;\n\t        this.closingElement = closingElement;\n\t    }\n\t    return JSXElement;\n\t}());\n\texports.JSXElement = JSXElement;\n\tvar JSXEmptyExpression = (function () {\n\t    function JSXEmptyExpression() {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;\n\t    }\n\t    return JSXEmptyExpression;\n\t}());\n\texports.JSXEmptyExpression = JSXEmptyExpression;\n\tvar JSXExpressionContainer = (function () {\n\t    function JSXExpressionContainer(expression) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;\n\t        this.expression = expression;\n\t    }\n\t    return JSXExpressionContainer;\n\t}());\n\texports.JSXExpressionContainer = JSXExpressionContainer;\n\tvar JSXIdentifier = (function () {\n\t    function JSXIdentifier(name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;\n\t        this.name = name;\n\t    }\n\t    return JSXIdentifier;\n\t}());\n\texports.JSXIdentifier = JSXIdentifier;\n\tvar JSXMemberExpression = (function () {\n\t    function JSXMemberExpression(object, property) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return JSXMemberExpression;\n\t}());\n\texports.JSXMemberExpression = JSXMemberExpression;\n\tvar JSXAttribute = (function () {\n\t    function JSXAttribute(name, value) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;\n\t        this.name = name;\n\t        this.value = value;\n\t    }\n\t    return JSXAttribute;\n\t}());\n\texports.JSXAttribute = JSXAttribute;\n\tvar JSXNamespacedName = (function () {\n\t    function JSXNamespacedName(namespace, name) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;\n\t        this.namespace = namespace;\n\t        this.name = name;\n\t    }\n\t    return JSXNamespacedName;\n\t}());\n\texports.JSXNamespacedName = JSXNamespacedName;\n\tvar JSXOpeningElement = (function () {\n\t    function JSXOpeningElement(name, selfClosing, attributes) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;\n\t        this.name = name;\n\t        this.selfClosing = selfClosing;\n\t        this.attributes = attributes;\n\t    }\n\t    return JSXOpeningElement;\n\t}());\n\texports.JSXOpeningElement = JSXOpeningElement;\n\tvar JSXSpreadAttribute = (function () {\n\t    function JSXSpreadAttribute(argument) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;\n\t        this.argument = argument;\n\t    }\n\t    return JSXSpreadAttribute;\n\t}());\n\texports.JSXSpreadAttribute = JSXSpreadAttribute;\n\tvar JSXText = (function () {\n\t    function JSXText(value, raw) {\n\t        this.type = jsx_syntax_1.JSXSyntax.JSXText;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return JSXText;\n\t}());\n\texports.JSXText = JSXText;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.JSXSyntax = {\n\t    JSXAttribute: 'JSXAttribute',\n\t    JSXClosingElement: 'JSXClosingElement',\n\t    JSXElement: 'JSXElement',\n\t    JSXEmptyExpression: 'JSXEmptyExpression',\n\t    JSXExpressionContainer: 'JSXExpressionContainer',\n\t    JSXIdentifier: 'JSXIdentifier',\n\t    JSXMemberExpression: 'JSXMemberExpression',\n\t    JSXNamespacedName: 'JSXNamespacedName',\n\t    JSXOpeningElement: 'JSXOpeningElement',\n\t    JSXSpreadAttribute: 'JSXSpreadAttribute',\n\t    JSXText: 'JSXText'\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar syntax_1 = __webpack_require__(2);\n\t/* tslint:disable:max-classes-per-file */\n\tvar ArrayExpression = (function () {\n\t    function ArrayExpression(elements) {\n\t        this.type = syntax_1.Syntax.ArrayExpression;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayExpression;\n\t}());\n\texports.ArrayExpression = ArrayExpression;\n\tvar ArrayPattern = (function () {\n\t    function ArrayPattern(elements) {\n\t        this.type = syntax_1.Syntax.ArrayPattern;\n\t        this.elements = elements;\n\t    }\n\t    return ArrayPattern;\n\t}());\n\texports.ArrayPattern = ArrayPattern;\n\tvar ArrowFunctionExpression = (function () {\n\t    function ArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = false;\n\t    }\n\t    return ArrowFunctionExpression;\n\t}());\n\texports.ArrowFunctionExpression = ArrowFunctionExpression;\n\tvar AssignmentExpression = (function () {\n\t    function AssignmentExpression(operator, left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentExpression;\n\t}());\n\texports.AssignmentExpression = AssignmentExpression;\n\tvar AssignmentPattern = (function () {\n\t    function AssignmentPattern(left, right) {\n\t        this.type = syntax_1.Syntax.AssignmentPattern;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return AssignmentPattern;\n\t}());\n\texports.AssignmentPattern = AssignmentPattern;\n\tvar AsyncArrowFunctionExpression = (function () {\n\t    function AsyncArrowFunctionExpression(params, body, expression) {\n\t        this.type = syntax_1.Syntax.ArrowFunctionExpression;\n\t        this.id = null;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = expression;\n\t        this.async = true;\n\t    }\n\t    return AsyncArrowFunctionExpression;\n\t}());\n\texports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;\n\tvar AsyncFunctionDeclaration = (function () {\n\t    function AsyncFunctionDeclaration(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionDeclaration;\n\t}());\n\texports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;\n\tvar AsyncFunctionExpression = (function () {\n\t    function AsyncFunctionExpression(id, params, body) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = false;\n\t        this.expression = false;\n\t        this.async = true;\n\t    }\n\t    return AsyncFunctionExpression;\n\t}());\n\texports.AsyncFunctionExpression = AsyncFunctionExpression;\n\tvar AwaitExpression = (function () {\n\t    function AwaitExpression(argument) {\n\t        this.type = syntax_1.Syntax.AwaitExpression;\n\t        this.argument = argument;\n\t    }\n\t    return AwaitExpression;\n\t}());\n\texports.AwaitExpression = AwaitExpression;\n\tvar BinaryExpression = (function () {\n\t    function BinaryExpression(operator, left, right) {\n\t        var logical = (operator === '||' || operator === '&&');\n\t        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;\n\t        this.operator = operator;\n\t        this.left = left;\n\t        this.right = right;\n\t    }\n\t    return BinaryExpression;\n\t}());\n\texports.BinaryExpression = BinaryExpression;\n\tvar BlockStatement = (function () {\n\t    function BlockStatement(body) {\n\t        this.type = syntax_1.Syntax.BlockStatement;\n\t        this.body = body;\n\t    }\n\t    return BlockStatement;\n\t}());\n\texports.BlockStatement = BlockStatement;\n\tvar BreakStatement = (function () {\n\t    function BreakStatement(label) {\n\t        this.type = syntax_1.Syntax.BreakStatement;\n\t        this.label = label;\n\t    }\n\t    return BreakStatement;\n\t}());\n\texports.BreakStatement = BreakStatement;\n\tvar CallExpression = (function () {\n\t    function CallExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.CallExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return CallExpression;\n\t}());\n\texports.CallExpression = CallExpression;\n\tvar CatchClause = (function () {\n\t    function CatchClause(param, body) {\n\t        this.type = syntax_1.Syntax.CatchClause;\n\t        this.param = param;\n\t        this.body = body;\n\t    }\n\t    return CatchClause;\n\t}());\n\texports.CatchClause = CatchClause;\n\tvar ClassBody = (function () {\n\t    function ClassBody(body) {\n\t        this.type = syntax_1.Syntax.ClassBody;\n\t        this.body = body;\n\t    }\n\t    return ClassBody;\n\t}());\n\texports.ClassBody = ClassBody;\n\tvar ClassDeclaration = (function () {\n\t    function ClassDeclaration(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassDeclaration;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassDeclaration;\n\t}());\n\texports.ClassDeclaration = ClassDeclaration;\n\tvar ClassExpression = (function () {\n\t    function ClassExpression(id, superClass, body) {\n\t        this.type = syntax_1.Syntax.ClassExpression;\n\t        this.id = id;\n\t        this.superClass = superClass;\n\t        this.body = body;\n\t    }\n\t    return ClassExpression;\n\t}());\n\texports.ClassExpression = ClassExpression;\n\tvar ComputedMemberExpression = (function () {\n\t    function ComputedMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = true;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return ComputedMemberExpression;\n\t}());\n\texports.ComputedMemberExpression = ComputedMemberExpression;\n\tvar ConditionalExpression = (function () {\n\t    function ConditionalExpression(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.ConditionalExpression;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return ConditionalExpression;\n\t}());\n\texports.ConditionalExpression = ConditionalExpression;\n\tvar ContinueStatement = (function () {\n\t    function ContinueStatement(label) {\n\t        this.type = syntax_1.Syntax.ContinueStatement;\n\t        this.label = label;\n\t    }\n\t    return ContinueStatement;\n\t}());\n\texports.ContinueStatement = ContinueStatement;\n\tvar DebuggerStatement = (function () {\n\t    function DebuggerStatement() {\n\t        this.type = syntax_1.Syntax.DebuggerStatement;\n\t    }\n\t    return DebuggerStatement;\n\t}());\n\texports.DebuggerStatement = DebuggerStatement;\n\tvar Directive = (function () {\n\t    function Directive(expression, directive) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t        this.directive = directive;\n\t    }\n\t    return Directive;\n\t}());\n\texports.Directive = Directive;\n\tvar DoWhileStatement = (function () {\n\t    function DoWhileStatement(body, test) {\n\t        this.type = syntax_1.Syntax.DoWhileStatement;\n\t        this.body = body;\n\t        this.test = test;\n\t    }\n\t    return DoWhileStatement;\n\t}());\n\texports.DoWhileStatement = DoWhileStatement;\n\tvar EmptyStatement = (function () {\n\t    function EmptyStatement() {\n\t        this.type = syntax_1.Syntax.EmptyStatement;\n\t    }\n\t    return EmptyStatement;\n\t}());\n\texports.EmptyStatement = EmptyStatement;\n\tvar ExportAllDeclaration = (function () {\n\t    function ExportAllDeclaration(source) {\n\t        this.type = syntax_1.Syntax.ExportAllDeclaration;\n\t        this.source = source;\n\t    }\n\t    return ExportAllDeclaration;\n\t}());\n\texports.ExportAllDeclaration = ExportAllDeclaration;\n\tvar ExportDefaultDeclaration = (function () {\n\t    function ExportDefaultDeclaration(declaration) {\n\t        this.type = syntax_1.Syntax.ExportDefaultDeclaration;\n\t        this.declaration = declaration;\n\t    }\n\t    return ExportDefaultDeclaration;\n\t}());\n\texports.ExportDefaultDeclaration = ExportDefaultDeclaration;\n\tvar ExportNamedDeclaration = (function () {\n\t    function ExportNamedDeclaration(declaration, specifiers, source) {\n\t        this.type = syntax_1.Syntax.ExportNamedDeclaration;\n\t        this.declaration = declaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ExportNamedDeclaration;\n\t}());\n\texports.ExportNamedDeclaration = ExportNamedDeclaration;\n\tvar ExportSpecifier = (function () {\n\t    function ExportSpecifier(local, exported) {\n\t        this.type = syntax_1.Syntax.ExportSpecifier;\n\t        this.exported = exported;\n\t        this.local = local;\n\t    }\n\t    return ExportSpecifier;\n\t}());\n\texports.ExportSpecifier = ExportSpecifier;\n\tvar ExpressionStatement = (function () {\n\t    function ExpressionStatement(expression) {\n\t        this.type = syntax_1.Syntax.ExpressionStatement;\n\t        this.expression = expression;\n\t    }\n\t    return ExpressionStatement;\n\t}());\n\texports.ExpressionStatement = ExpressionStatement;\n\tvar ForInStatement = (function () {\n\t    function ForInStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForInStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t        this.each = false;\n\t    }\n\t    return ForInStatement;\n\t}());\n\texports.ForInStatement = ForInStatement;\n\tvar ForOfStatement = (function () {\n\t    function ForOfStatement(left, right, body) {\n\t        this.type = syntax_1.Syntax.ForOfStatement;\n\t        this.left = left;\n\t        this.right = right;\n\t        this.body = body;\n\t    }\n\t    return ForOfStatement;\n\t}());\n\texports.ForOfStatement = ForOfStatement;\n\tvar ForStatement = (function () {\n\t    function ForStatement(init, test, update, body) {\n\t        this.type = syntax_1.Syntax.ForStatement;\n\t        this.init = init;\n\t        this.test = test;\n\t        this.update = update;\n\t        this.body = body;\n\t    }\n\t    return ForStatement;\n\t}());\n\texports.ForStatement = ForStatement;\n\tvar FunctionDeclaration = (function () {\n\t    function FunctionDeclaration(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionDeclaration;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionDeclaration;\n\t}());\n\texports.FunctionDeclaration = FunctionDeclaration;\n\tvar FunctionExpression = (function () {\n\t    function FunctionExpression(id, params, body, generator) {\n\t        this.type = syntax_1.Syntax.FunctionExpression;\n\t        this.id = id;\n\t        this.params = params;\n\t        this.body = body;\n\t        this.generator = generator;\n\t        this.expression = false;\n\t        this.async = false;\n\t    }\n\t    return FunctionExpression;\n\t}());\n\texports.FunctionExpression = FunctionExpression;\n\tvar Identifier = (function () {\n\t    function Identifier(name) {\n\t        this.type = syntax_1.Syntax.Identifier;\n\t        this.name = name;\n\t    }\n\t    return Identifier;\n\t}());\n\texports.Identifier = Identifier;\n\tvar IfStatement = (function () {\n\t    function IfStatement(test, consequent, alternate) {\n\t        this.type = syntax_1.Syntax.IfStatement;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t        this.alternate = alternate;\n\t    }\n\t    return IfStatement;\n\t}());\n\texports.IfStatement = IfStatement;\n\tvar ImportDeclaration = (function () {\n\t    function ImportDeclaration(specifiers, source) {\n\t        this.type = syntax_1.Syntax.ImportDeclaration;\n\t        this.specifiers = specifiers;\n\t        this.source = source;\n\t    }\n\t    return ImportDeclaration;\n\t}());\n\texports.ImportDeclaration = ImportDeclaration;\n\tvar ImportDefaultSpecifier = (function () {\n\t    function ImportDefaultSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportDefaultSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportDefaultSpecifier;\n\t}());\n\texports.ImportDefaultSpecifier = ImportDefaultSpecifier;\n\tvar ImportNamespaceSpecifier = (function () {\n\t    function ImportNamespaceSpecifier(local) {\n\t        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;\n\t        this.local = local;\n\t    }\n\t    return ImportNamespaceSpecifier;\n\t}());\n\texports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\n\tvar ImportSpecifier = (function () {\n\t    function ImportSpecifier(local, imported) {\n\t        this.type = syntax_1.Syntax.ImportSpecifier;\n\t        this.local = local;\n\t        this.imported = imported;\n\t    }\n\t    return ImportSpecifier;\n\t}());\n\texports.ImportSpecifier = ImportSpecifier;\n\tvar LabeledStatement = (function () {\n\t    function LabeledStatement(label, body) {\n\t        this.type = syntax_1.Syntax.LabeledStatement;\n\t        this.label = label;\n\t        this.body = body;\n\t    }\n\t    return LabeledStatement;\n\t}());\n\texports.LabeledStatement = LabeledStatement;\n\tvar Literal = (function () {\n\t    function Literal(value, raw) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t    }\n\t    return Literal;\n\t}());\n\texports.Literal = Literal;\n\tvar MetaProperty = (function () {\n\t    function MetaProperty(meta, property) {\n\t        this.type = syntax_1.Syntax.MetaProperty;\n\t        this.meta = meta;\n\t        this.property = property;\n\t    }\n\t    return MetaProperty;\n\t}());\n\texports.MetaProperty = MetaProperty;\n\tvar MethodDefinition = (function () {\n\t    function MethodDefinition(key, computed, value, kind, isStatic) {\n\t        this.type = syntax_1.Syntax.MethodDefinition;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.static = isStatic;\n\t    }\n\t    return MethodDefinition;\n\t}());\n\texports.MethodDefinition = MethodDefinition;\n\tvar Module = (function () {\n\t    function Module(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'module';\n\t    }\n\t    return Module;\n\t}());\n\texports.Module = Module;\n\tvar NewExpression = (function () {\n\t    function NewExpression(callee, args) {\n\t        this.type = syntax_1.Syntax.NewExpression;\n\t        this.callee = callee;\n\t        this.arguments = args;\n\t    }\n\t    return NewExpression;\n\t}());\n\texports.NewExpression = NewExpression;\n\tvar ObjectExpression = (function () {\n\t    function ObjectExpression(properties) {\n\t        this.type = syntax_1.Syntax.ObjectExpression;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectExpression;\n\t}());\n\texports.ObjectExpression = ObjectExpression;\n\tvar ObjectPattern = (function () {\n\t    function ObjectPattern(properties) {\n\t        this.type = syntax_1.Syntax.ObjectPattern;\n\t        this.properties = properties;\n\t    }\n\t    return ObjectPattern;\n\t}());\n\texports.ObjectPattern = ObjectPattern;\n\tvar Property = (function () {\n\t    function Property(kind, key, computed, value, method, shorthand) {\n\t        this.type = syntax_1.Syntax.Property;\n\t        this.key = key;\n\t        this.computed = computed;\n\t        this.value = value;\n\t        this.kind = kind;\n\t        this.method = method;\n\t        this.shorthand = shorthand;\n\t    }\n\t    return Property;\n\t}());\n\texports.Property = Property;\n\tvar RegexLiteral = (function () {\n\t    function RegexLiteral(value, raw, pattern, flags) {\n\t        this.type = syntax_1.Syntax.Literal;\n\t        this.value = value;\n\t        this.raw = raw;\n\t        this.regex = { pattern: pattern, flags: flags };\n\t    }\n\t    return RegexLiteral;\n\t}());\n\texports.RegexLiteral = RegexLiteral;\n\tvar RestElement = (function () {\n\t    function RestElement(argument) {\n\t        this.type = syntax_1.Syntax.RestElement;\n\t        this.argument = argument;\n\t    }\n\t    return RestElement;\n\t}());\n\texports.RestElement = RestElement;\n\tvar ReturnStatement = (function () {\n\t    function ReturnStatement(argument) {\n\t        this.type = syntax_1.Syntax.ReturnStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ReturnStatement;\n\t}());\n\texports.ReturnStatement = ReturnStatement;\n\tvar Script = (function () {\n\t    function Script(body) {\n\t        this.type = syntax_1.Syntax.Program;\n\t        this.body = body;\n\t        this.sourceType = 'script';\n\t    }\n\t    return Script;\n\t}());\n\texports.Script = Script;\n\tvar SequenceExpression = (function () {\n\t    function SequenceExpression(expressions) {\n\t        this.type = syntax_1.Syntax.SequenceExpression;\n\t        this.expressions = expressions;\n\t    }\n\t    return SequenceExpression;\n\t}());\n\texports.SequenceExpression = SequenceExpression;\n\tvar SpreadElement = (function () {\n\t    function SpreadElement(argument) {\n\t        this.type = syntax_1.Syntax.SpreadElement;\n\t        this.argument = argument;\n\t    }\n\t    return SpreadElement;\n\t}());\n\texports.SpreadElement = SpreadElement;\n\tvar StaticMemberExpression = (function () {\n\t    function StaticMemberExpression(object, property) {\n\t        this.type = syntax_1.Syntax.MemberExpression;\n\t        this.computed = false;\n\t        this.object = object;\n\t        this.property = property;\n\t    }\n\t    return StaticMemberExpression;\n\t}());\n\texports.StaticMemberExpression = StaticMemberExpression;\n\tvar Super = (function () {\n\t    function Super() {\n\t        this.type = syntax_1.Syntax.Super;\n\t    }\n\t    return Super;\n\t}());\n\texports.Super = Super;\n\tvar SwitchCase = (function () {\n\t    function SwitchCase(test, consequent) {\n\t        this.type = syntax_1.Syntax.SwitchCase;\n\t        this.test = test;\n\t        this.consequent = consequent;\n\t    }\n\t    return SwitchCase;\n\t}());\n\texports.SwitchCase = SwitchCase;\n\tvar SwitchStatement = (function () {\n\t    function SwitchStatement(discriminant, cases) {\n\t        this.type = syntax_1.Syntax.SwitchStatement;\n\t        this.discriminant = discriminant;\n\t        this.cases = cases;\n\t    }\n\t    return SwitchStatement;\n\t}());\n\texports.SwitchStatement = SwitchStatement;\n\tvar TaggedTemplateExpression = (function () {\n\t    function TaggedTemplateExpression(tag, quasi) {\n\t        this.type = syntax_1.Syntax.TaggedTemplateExpression;\n\t        this.tag = tag;\n\t        this.quasi = quasi;\n\t    }\n\t    return TaggedTemplateExpression;\n\t}());\n\texports.TaggedTemplateExpression = TaggedTemplateExpression;\n\tvar TemplateElement = (function () {\n\t    function TemplateElement(value, tail) {\n\t        this.type = syntax_1.Syntax.TemplateElement;\n\t        this.value = value;\n\t        this.tail = tail;\n\t    }\n\t    return TemplateElement;\n\t}());\n\texports.TemplateElement = TemplateElement;\n\tvar TemplateLiteral = (function () {\n\t    function TemplateLiteral(quasis, expressions) {\n\t        this.type = syntax_1.Syntax.TemplateLiteral;\n\t        this.quasis = quasis;\n\t        this.expressions = expressions;\n\t    }\n\t    return TemplateLiteral;\n\t}());\n\texports.TemplateLiteral = TemplateLiteral;\n\tvar ThisExpression = (function () {\n\t    function ThisExpression() {\n\t        this.type = syntax_1.Syntax.ThisExpression;\n\t    }\n\t    return ThisExpression;\n\t}());\n\texports.ThisExpression = ThisExpression;\n\tvar ThrowStatement = (function () {\n\t    function ThrowStatement(argument) {\n\t        this.type = syntax_1.Syntax.ThrowStatement;\n\t        this.argument = argument;\n\t    }\n\t    return ThrowStatement;\n\t}());\n\texports.ThrowStatement = ThrowStatement;\n\tvar TryStatement = (function () {\n\t    function TryStatement(block, handler, finalizer) {\n\t        this.type = syntax_1.Syntax.TryStatement;\n\t        this.block = block;\n\t        this.handler = handler;\n\t        this.finalizer = finalizer;\n\t    }\n\t    return TryStatement;\n\t}());\n\texports.TryStatement = TryStatement;\n\tvar UnaryExpression = (function () {\n\t    function UnaryExpression(operator, argument) {\n\t        this.type = syntax_1.Syntax.UnaryExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = true;\n\t    }\n\t    return UnaryExpression;\n\t}());\n\texports.UnaryExpression = UnaryExpression;\n\tvar UpdateExpression = (function () {\n\t    function UpdateExpression(operator, argument, prefix) {\n\t        this.type = syntax_1.Syntax.UpdateExpression;\n\t        this.operator = operator;\n\t        this.argument = argument;\n\t        this.prefix = prefix;\n\t    }\n\t    return UpdateExpression;\n\t}());\n\texports.UpdateExpression = UpdateExpression;\n\tvar VariableDeclaration = (function () {\n\t    function VariableDeclaration(declarations, kind) {\n\t        this.type = syntax_1.Syntax.VariableDeclaration;\n\t        this.declarations = declarations;\n\t        this.kind = kind;\n\t    }\n\t    return VariableDeclaration;\n\t}());\n\texports.VariableDeclaration = VariableDeclaration;\n\tvar VariableDeclarator = (function () {\n\t    function VariableDeclarator(id, init) {\n\t        this.type = syntax_1.Syntax.VariableDeclarator;\n\t        this.id = id;\n\t        this.init = init;\n\t    }\n\t    return VariableDeclarator;\n\t}());\n\texports.VariableDeclarator = VariableDeclarator;\n\tvar WhileStatement = (function () {\n\t    function WhileStatement(test, body) {\n\t        this.type = syntax_1.Syntax.WhileStatement;\n\t        this.test = test;\n\t        this.body = body;\n\t    }\n\t    return WhileStatement;\n\t}());\n\texports.WhileStatement = WhileStatement;\n\tvar WithStatement = (function () {\n\t    function WithStatement(object, body) {\n\t        this.type = syntax_1.Syntax.WithStatement;\n\t        this.object = object;\n\t        this.body = body;\n\t    }\n\t    return WithStatement;\n\t}());\n\texports.WithStatement = WithStatement;\n\tvar YieldExpression = (function () {\n\t    function YieldExpression(argument, delegate) {\n\t        this.type = syntax_1.Syntax.YieldExpression;\n\t        this.argument = argument;\n\t        this.delegate = delegate;\n\t    }\n\t    return YieldExpression;\n\t}());\n\texports.YieldExpression = YieldExpression;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar messages_1 = __webpack_require__(11);\n\tvar Node = __webpack_require__(7);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar syntax_1 = __webpack_require__(2);\n\tvar token_1 = __webpack_require__(13);\n\tvar ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';\n\tvar Parser = (function () {\n\t    function Parser(code, options, delegate) {\n\t        if (options === void 0) { options = {}; }\n\t        this.config = {\n\t            range: (typeof options.range === 'boolean') && options.range,\n\t            loc: (typeof options.loc === 'boolean') && options.loc,\n\t            source: null,\n\t            tokens: (typeof options.tokens === 'boolean') && options.tokens,\n\t            comment: (typeof options.comment === 'boolean') && options.comment,\n\t            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant\n\t        };\n\t        if (this.config.loc && options.source && options.source !== null) {\n\t            this.config.source = String(options.source);\n\t        }\n\t        this.delegate = delegate;\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = this.config.tolerant;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = this.config.comment;\n\t        this.operatorPrecedence = {\n\t            ')': 0,\n\t            ';': 0,\n\t            ',': 0,\n\t            '=': 0,\n\t            ']': 0,\n\t            '||': 1,\n\t            '&&': 2,\n\t            '|': 3,\n\t            '^': 4,\n\t            '&': 5,\n\t            '==': 6,\n\t            '!=': 6,\n\t            '===': 6,\n\t            '!==': 6,\n\t            '<': 7,\n\t            '>': 7,\n\t            '<=': 7,\n\t            '>=': 7,\n\t            '<<': 8,\n\t            '>>': 8,\n\t            '>>>': 8,\n\t            '+': 9,\n\t            '-': 9,\n\t            '*': 11,\n\t            '/': 11,\n\t            '%': 11\n\t        };\n\t        this.lookahead = {\n\t            type: 2 /* EOF */,\n\t            value: '',\n\t            lineNumber: this.scanner.lineNumber,\n\t            lineStart: 0,\n\t            start: 0,\n\t            end: 0\n\t        };\n\t        this.hasLineTerminator = false;\n\t        this.context = {\n\t            isModule: false,\n\t            await: false,\n\t            allowIn: true,\n\t            allowStrictDirective: true,\n\t            allowYield: true,\n\t            firstCoverInitializedNameError: null,\n\t            isAssignmentTarget: false,\n\t            isBindingElement: false,\n\t            inFunctionBody: false,\n\t            inIteration: false,\n\t            inSwitch: false,\n\t            labelSet: {},\n\t            strict: false\n\t        };\n\t        this.tokens = [];\n\t        this.startMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.lastMarker = {\n\t            index: 0,\n\t            line: this.scanner.lineNumber,\n\t            column: 0\n\t        };\n\t        this.nextToken();\n\t        this.lastMarker = {\n\t            index: this.scanner.index,\n\t            line: this.scanner.lineNumber,\n\t            column: this.scanner.index - this.scanner.lineStart\n\t        };\n\t    }\n\t    Parser.prototype.throwError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.lastMarker.line;\n\t        var column = this.lastMarker.column + 1;\n\t        throw this.errorHandler.createError(index, line, column, msg);\n\t    };\n\t    Parser.prototype.tolerateError = function (messageFormat) {\n\t        var values = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            values[_i - 1] = arguments[_i];\n\t        }\n\t        var args = Array.prototype.slice.call(arguments, 1);\n\t        var msg = messageFormat.replace(/%(\\d)/g, function (whole, idx) {\n\t            assert_1.assert(idx < args.length, 'Message reference must be in range');\n\t            return args[idx];\n\t        });\n\t        var index = this.lastMarker.index;\n\t        var line = this.scanner.lineNumber;\n\t        var column = this.lastMarker.column + 1;\n\t        this.errorHandler.tolerateError(index, line, column, msg);\n\t    };\n\t    // Throw an exception because of the token.\n\t    Parser.prototype.unexpectedTokenError = function (token, message) {\n\t        var msg = message || messages_1.Messages.UnexpectedToken;\n\t        var value;\n\t        if (token) {\n\t            if (!message) {\n\t                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :\n\t                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :\n\t                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :\n\t                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :\n\t                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :\n\t                                    messages_1.Messages.UnexpectedToken;\n\t                if (token.type === 4 /* Keyword */) {\n\t                    if (this.scanner.isFutureReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.UnexpectedReserved;\n\t                    }\n\t                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                        msg = messages_1.Messages.StrictReservedWord;\n\t                    }\n\t                }\n\t            }\n\t            value = token.value;\n\t        }\n\t        else {\n\t            value = 'ILLEGAL';\n\t        }\n\t        msg = msg.replace('%0', value);\n\t        if (token && typeof token.lineNumber === 'number') {\n\t            var index = token.start;\n\t            var line = token.lineNumber;\n\t            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;\n\t            var column = token.start - lastMarkerLineStart + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t        else {\n\t            var index = this.lastMarker.index;\n\t            var line = this.lastMarker.line;\n\t            var column = this.lastMarker.column + 1;\n\t            return this.errorHandler.createError(index, line, column, msg);\n\t        }\n\t    };\n\t    Parser.prototype.throwUnexpectedToken = function (token, message) {\n\t        throw this.unexpectedTokenError(token, message);\n\t    };\n\t    Parser.prototype.tolerateUnexpectedToken = function (token, message) {\n\t        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));\n\t    };\n\t    Parser.prototype.collectComments = function () {\n\t        if (!this.config.comment) {\n\t            this.scanner.scanComments();\n\t        }\n\t        else {\n\t            var comments = this.scanner.scanComments();\n\t            if (comments.length > 0 && this.delegate) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var node = void 0;\n\t                    node = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: this.scanner.source.slice(e.slice[0], e.slice[1])\n\t                    };\n\t                    if (this.config.range) {\n\t                        node.range = e.range;\n\t                    }\n\t                    if (this.config.loc) {\n\t                        node.loc = e.loc;\n\t                    }\n\t                    var metadata = {\n\t                        start: {\n\t                            line: e.loc.start.line,\n\t                            column: e.loc.start.column,\n\t                            offset: e.range[0]\n\t                        },\n\t                        end: {\n\t                            line: e.loc.end.line,\n\t                            column: e.loc.end.column,\n\t                            offset: e.range[1]\n\t                        }\n\t                    };\n\t                    this.delegate(node, metadata);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    // From internal representation to an external structure\n\t    Parser.prototype.getTokenRaw = function (token) {\n\t        return this.scanner.source.slice(token.start, token.end);\n\t    };\n\t    Parser.prototype.convertToken = function (token) {\n\t        var t = {\n\t            type: token_1.TokenName[token.type],\n\t            value: this.getTokenRaw(token)\n\t        };\n\t        if (this.config.range) {\n\t            t.range = [token.start, token.end];\n\t        }\n\t        if (this.config.loc) {\n\t            t.loc = {\n\t                start: {\n\t                    line: this.startMarker.line,\n\t                    column: this.startMarker.column\n\t                },\n\t                end: {\n\t                    line: this.scanner.lineNumber,\n\t                    column: this.scanner.index - this.scanner.lineStart\n\t                }\n\t            };\n\t        }\n\t        if (token.type === 9 /* RegularExpression */) {\n\t            var pattern = token.pattern;\n\t            var flags = token.flags;\n\t            t.regex = { pattern: pattern, flags: flags };\n\t        }\n\t        return t;\n\t    };\n\t    Parser.prototype.nextToken = function () {\n\t        var token = this.lookahead;\n\t        this.lastMarker.index = this.scanner.index;\n\t        this.lastMarker.line = this.scanner.lineNumber;\n\t        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        this.collectComments();\n\t        if (this.scanner.index !== this.startMarker.index) {\n\t            this.startMarker.index = this.scanner.index;\n\t            this.startMarker.line = this.scanner.lineNumber;\n\t            this.startMarker.column = this.scanner.index - this.scanner.lineStart;\n\t        }\n\t        var next = this.scanner.lex();\n\t        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);\n\t        if (next && this.context.strict && next.type === 3 /* Identifier */) {\n\t            if (this.scanner.isStrictModeReservedWord(next.value)) {\n\t                next.type = 4 /* Keyword */;\n\t            }\n\t        }\n\t        this.lookahead = next;\n\t        if (this.config.tokens && next.type !== 2 /* EOF */) {\n\t            this.tokens.push(this.convertToken(next));\n\t        }\n\t        return token;\n\t    };\n\t    Parser.prototype.nextRegexToken = function () {\n\t        this.collectComments();\n\t        var token = this.scanner.scanRegExp();\n\t        if (this.config.tokens) {\n\t            // Pop the previous token, '/' or '/='\n\t            // This is added from the lookahead token.\n\t            this.tokens.pop();\n\t            this.tokens.push(this.convertToken(token));\n\t        }\n\t        // Prime the next lookahead.\n\t        this.lookahead = token;\n\t        this.nextToken();\n\t        return token;\n\t    };\n\t    Parser.prototype.createNode = function () {\n\t        return {\n\t            index: this.startMarker.index,\n\t            line: this.startMarker.line,\n\t            column: this.startMarker.column\n\t        };\n\t    };\n\t    Parser.prototype.startNode = function (token, lastLineStart) {\n\t        if (lastLineStart === void 0) { lastLineStart = 0; }\n\t        var column = token.start - token.lineStart;\n\t        var line = token.lineNumber;\n\t        if (column < 0) {\n\t            column += lastLineStart;\n\t            line--;\n\t        }\n\t        return {\n\t            index: token.start,\n\t            line: line,\n\t            column: column\n\t        };\n\t    };\n\t    Parser.prototype.finalize = function (marker, node) {\n\t        if (this.config.range) {\n\t            node.range = [marker.index, this.lastMarker.index];\n\t        }\n\t        if (this.config.loc) {\n\t            node.loc = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column\n\t                }\n\t            };\n\t            if (this.config.source) {\n\t                node.loc.source = this.config.source;\n\t            }\n\t        }\n\t        if (this.delegate) {\n\t            var metadata = {\n\t                start: {\n\t                    line: marker.line,\n\t                    column: marker.column,\n\t                    offset: marker.index\n\t                },\n\t                end: {\n\t                    line: this.lastMarker.line,\n\t                    column: this.lastMarker.column,\n\t                    offset: this.lastMarker.index\n\t                }\n\t            };\n\t            this.delegate(node, metadata);\n\t        }\n\t        return node;\n\t    };\n\t    // Expect the next token to match the specified punctuator.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expect = function (value) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 7 /* Punctuator */ || token.value !== value) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().\n\t    Parser.prototype.expectCommaSeparator = function () {\n\t        if (this.config.tolerant) {\n\t            var token = this.lookahead;\n\t            if (token.type === 7 /* Punctuator */ && token.value === ',') {\n\t                this.nextToken();\n\t            }\n\t            else if (token.type === 7 /* Punctuator */ && token.value === ';') {\n\t                this.nextToken();\n\t                this.tolerateUnexpectedToken(token);\n\t            }\n\t            else {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);\n\t            }\n\t        }\n\t        else {\n\t            this.expect(',');\n\t        }\n\t    };\n\t    // Expect the next token to match the specified keyword.\n\t    // If not, an exception will be thrown.\n\t    Parser.prototype.expectKeyword = function (keyword) {\n\t        var token = this.nextToken();\n\t        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t    };\n\t    // Return true if the next token matches the specified punctuator.\n\t    Parser.prototype.match = function (value) {\n\t        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;\n\t    };\n\t    // Return true if the next token matches the specified keyword\n\t    Parser.prototype.matchKeyword = function (keyword) {\n\t        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token matches the specified contextual keyword\n\t    // (where an identifier is sometimes a keyword depending on the context)\n\t    Parser.prototype.matchContextualKeyword = function (keyword) {\n\t        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;\n\t    };\n\t    // Return true if the next token is an assignment operator\n\t    Parser.prototype.matchAssign = function () {\n\t        if (this.lookahead.type !== 7 /* Punctuator */) {\n\t            return false;\n\t        }\n\t        var op = this.lookahead.value;\n\t        return op === '=' ||\n\t            op === '*=' ||\n\t            op === '**=' ||\n\t            op === '/=' ||\n\t            op === '%=' ||\n\t            op === '+=' ||\n\t            op === '-=' ||\n\t            op === '<<=' ||\n\t            op === '>>=' ||\n\t            op === '>>>=' ||\n\t            op === '&=' ||\n\t            op === '^=' ||\n\t            op === '|=';\n\t    };\n\t    // Cover grammar support.\n\t    //\n\t    // When an assignment expression position starts with an left parenthesis, the determination of the type\n\t    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)\n\t    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.\n\t    //\n\t    // There are three productions that can be parsed in a parentheses pair that needs to be determined\n\t    // after the outermost pair is closed. They are:\n\t    //\n\t    //   1. AssignmentExpression\n\t    //   2. BindingElements\n\t    //   3. AssignmentTargets\n\t    //\n\t    // In order to avoid exponential backtracking, we use two flags to denote if the production can be\n\t    // binding element or assignment target.\n\t    //\n\t    // The three productions have the relationship:\n\t    //\n\t    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression\n\t    //\n\t    // with a single exception that CoverInitializedName when used directly in an Expression, generates\n\t    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the\n\t    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.\n\t    //\n\t    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not\n\t    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore\n\t    // the CoverInitializedName check is conducted.\n\t    //\n\t    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates\n\t    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential\n\t    // pattern. The CoverInitializedName check is deferred.\n\t    Parser.prototype.isolateCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        if (this.context.firstCoverInitializedNameError !== null) {\n\t            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);\n\t        }\n\t        this.context.isBindingElement = previousIsBindingElement;\n\t        this.context.isAssignmentTarget = previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.inheritCoverGrammar = function (parseFunction) {\n\t        var previousIsBindingElement = this.context.isBindingElement;\n\t        var previousIsAssignmentTarget = this.context.isAssignmentTarget;\n\t        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;\n\t        this.context.isBindingElement = true;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.firstCoverInitializedNameError = null;\n\t        var result = parseFunction.call(this);\n\t        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;\n\t        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;\n\t        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;\n\t        return result;\n\t    };\n\t    Parser.prototype.consumeSemicolon = function () {\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else if (!this.hasLineTerminator) {\n\t            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.lastMarker.index = this.startMarker.index;\n\t            this.lastMarker.line = this.startMarker.line;\n\t            this.lastMarker.column = this.startMarker.column;\n\t        }\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-primary-expression\n\t    Parser.prototype.parsePrimaryExpression = function () {\n\t        var node = this.createNode();\n\t        var expr;\n\t        var token, raw;\n\t        switch (this.lookahead.type) {\n\t            case 3 /* Identifier */:\n\t                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {\n\t                    this.tolerateUnexpectedToken(this.lookahead);\n\t                }\n\t                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                break;\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t                if (this.context.strict && this.lookahead.octal) {\n\t                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 1 /* BooleanLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));\n\t                break;\n\t            case 5 /* NullLiteral */:\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                token = this.nextToken();\n\t                raw = this.getTokenRaw(token);\n\t                expr = this.finalize(node, new Node.Literal(null, raw));\n\t                break;\n\t            case 10 /* Template */:\n\t                expr = this.parseTemplateLiteral();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                switch (this.lookahead.value) {\n\t                    case '(':\n\t                        this.context.isBindingElement = false;\n\t                        expr = this.inheritCoverGrammar(this.parseGroupExpression);\n\t                        break;\n\t                    case '[':\n\t                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);\n\t                        break;\n\t                    case '{':\n\t                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);\n\t                        break;\n\t                    case '/':\n\t                    case '/=':\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                        this.scanner.index = this.startMarker.index;\n\t                        token = this.nextRegexToken();\n\t                        raw = this.getTokenRaw(token);\n\t                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));\n\t                        break;\n\t                    default:\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                }\n\t                break;\n\t            case 4 /* Keyword */:\n\t                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {\n\t                    expr = this.parseIdentifierName();\n\t                }\n\t                else if (!this.context.strict && this.matchKeyword('let')) {\n\t                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));\n\t                }\n\t                else {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    if (this.matchKeyword('function')) {\n\t                        expr = this.parseFunctionExpression();\n\t                    }\n\t                    else if (this.matchKeyword('this')) {\n\t                        this.nextToken();\n\t                        expr = this.finalize(node, new Node.ThisExpression());\n\t                    }\n\t                    else if (this.matchKeyword('class')) {\n\t                        expr = this.parseClassExpression();\n\t                    }\n\t                    else {\n\t                        expr = this.throwUnexpectedToken(this.nextToken());\n\t                    }\n\t                }\n\t                break;\n\t            default:\n\t                expr = this.throwUnexpectedToken(this.nextToken());\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-array-initializer\n\t    Parser.prototype.parseSpreadElement = function () {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t        return this.finalize(node, new Node.SpreadElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayInitializer = function () {\n\t        var node = this.createNode();\n\t        var elements = [];\n\t        this.expect('[');\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else if (this.match('...')) {\n\t                var element = this.parseSpreadElement();\n\t                if (!this.match(']')) {\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    this.expect(',');\n\t                }\n\t                elements.push(element);\n\t            }\n\t            else {\n\t                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayExpression(elements));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-object-initializer\n\t    Parser.prototype.parsePropertyMethod = function (params) {\n\t        this.context.isAssignmentTarget = false;\n\t        this.context.isBindingElement = false;\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = params.simple;\n\t        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);\n\t        if (this.context.strict && params.firstRestricted) {\n\t            this.tolerateUnexpectedToken(params.firstRestricted, params.message);\n\t        }\n\t        if (this.context.strict && params.stricted) {\n\t            this.tolerateUnexpectedToken(params.stricted, params.message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        return body;\n\t    };\n\t    Parser.prototype.parsePropertyMethodFunction = function () {\n\t        var isGenerator = false;\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parsePropertyMethodAsyncFunction = function () {\n\t        var node = this.createNode();\n\t        var previousAllowYield = this.context.allowYield;\n\t        var previousAwait = this.context.await;\n\t        this.context.allowYield = false;\n\t        this.context.await = true;\n\t        var params = this.parseFormalParameters();\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        this.context.await = previousAwait;\n\t        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));\n\t    };\n\t    Parser.prototype.parseObjectPropertyKey = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var key;\n\t        switch (token.type) {\n\t            case 8 /* StringLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t                if (this.context.strict && token.octal) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                var raw = this.getTokenRaw(token);\n\t                key = this.finalize(node, new Node.Literal(token.value, raw));\n\t                break;\n\t            case 3 /* Identifier */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 4 /* Keyword */:\n\t                key = this.finalize(node, new Node.Identifier(token.value));\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                if (token.value === '[') {\n\t                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    this.expect(']');\n\t                }\n\t                else {\n\t                    key = this.throwUnexpectedToken(token);\n\t                }\n\t                break;\n\t            default:\n\t                key = this.throwUnexpectedToken(token);\n\t        }\n\t        return key;\n\t    };\n\t    Parser.prototype.isPropertyKey = function (key, value) {\n\t        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||\n\t            (key.type === syntax_1.Syntax.Literal && key.value === value);\n\t    };\n\t    Parser.prototype.parseObjectProperty = function (hasProto) {\n\t        var node = this.createNode();\n\t        var token = this.lookahead;\n\t        var kind;\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var shorthand = false;\n\t        var isAsync = false;\n\t        if (token.type === 3 /* Identifier */) {\n\t            var id = token.value;\n\t            this.nextToken();\n\t            computed = this.match('[');\n\t            isAsync = !this.hasLineTerminator && (id === 'async') &&\n\t                !this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');\n\t            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));\n\t        }\n\t        else if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {\n\t            kind = 'get';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.context.allowYield = false;\n\t            value = this.parseGetterMethod();\n\t        }\n\t        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {\n\t            kind = 'set';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseSetterMethod();\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        else {\n\t            if (!key) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            kind = 'init';\n\t            if (this.match(':') && !isAsync) {\n\t                if (!computed && this.isPropertyKey(key, '__proto__')) {\n\t                    if (hasProto.value) {\n\t                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);\n\t                    }\n\t                    hasProto.value = true;\n\t                }\n\t                this.nextToken();\n\t                value = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t            }\n\t            else if (this.match('(')) {\n\t                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t                method = true;\n\t            }\n\t            else if (token.type === 3 /* Identifier */) {\n\t                var id = this.finalize(node, new Node.Identifier(token.value));\n\t                if (this.match('=')) {\n\t                    this.context.firstCoverInitializedNameError = this.lookahead;\n\t                    this.nextToken();\n\t                    shorthand = true;\n\t                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    value = this.finalize(node, new Node.AssignmentPattern(id, init));\n\t                }\n\t                else {\n\t                    shorthand = true;\n\t                    value = id;\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectInitializer = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var properties = [];\n\t        var hasProto = { value: false };\n\t        while (!this.match('}')) {\n\t            properties.push(this.parseObjectProperty(hasProto));\n\t            if (!this.match('}')) {\n\t                this.expectCommaSeparator();\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectExpression(properties));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literals\n\t    Parser.prototype.parseTemplateHead = function () {\n\t        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateElement = function () {\n\t        if (this.lookahead.type !== 10 /* Template */) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        var raw = token.value;\n\t        var cooked = token.cooked;\n\t        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));\n\t    };\n\t    Parser.prototype.parseTemplateLiteral = function () {\n\t        var node = this.createNode();\n\t        var expressions = [];\n\t        var quasis = [];\n\t        var quasi = this.parseTemplateHead();\n\t        quasis.push(quasi);\n\t        while (!quasi.tail) {\n\t            expressions.push(this.parseExpression());\n\t            quasi = this.parseTemplateElement();\n\t            quasis.push(quasi);\n\t        }\n\t        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-grouping-operator\n\t    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t            case syntax_1.Syntax.MemberExpression:\n\t            case syntax_1.Syntax.RestElement:\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                break;\n\t            case syntax_1.Syntax.SpreadElement:\n\t                expr.type = syntax_1.Syntax.RestElement;\n\t                this.reinterpretExpressionAsPattern(expr.argument);\n\t                break;\n\t            case syntax_1.Syntax.ArrayExpression:\n\t                expr.type = syntax_1.Syntax.ArrayPattern;\n\t                for (var i = 0; i < expr.elements.length; i++) {\n\t                    if (expr.elements[i] !== null) {\n\t                        this.reinterpretExpressionAsPattern(expr.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectExpression:\n\t                expr.type = syntax_1.Syntax.ObjectPattern;\n\t                for (var i = 0; i < expr.properties.length; i++) {\n\t                    this.reinterpretExpressionAsPattern(expr.properties[i].value);\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.AssignmentExpression:\n\t                expr.type = syntax_1.Syntax.AssignmentPattern;\n\t                delete expr.operator;\n\t                this.reinterpretExpressionAsPattern(expr.left);\n\t                break;\n\t            default:\n\t                // Allow other node type for tolerant parsing.\n\t                break;\n\t        }\n\t    };\n\t    Parser.prototype.parseGroupExpression = function () {\n\t        var expr;\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.nextToken();\n\t            if (!this.match('=>')) {\n\t                this.expect('=>');\n\t            }\n\t            expr = {\n\t                type: ArrowParameterPlaceHolder,\n\t                params: [],\n\t                async: false\n\t            };\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var params = [];\n\t            if (this.match('...')) {\n\t                expr = this.parseRestElement(params);\n\t                this.expect(')');\n\t                if (!this.match('=>')) {\n\t                    this.expect('=>');\n\t                }\n\t                expr = {\n\t                    type: ArrowParameterPlaceHolder,\n\t                    params: [expr],\n\t                    async: false\n\t                };\n\t            }\n\t            else {\n\t                var arrow = false;\n\t                this.context.isBindingElement = true;\n\t                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                if (this.match(',')) {\n\t                    var expressions = [];\n\t                    this.context.isAssignmentTarget = false;\n\t                    expressions.push(expr);\n\t                    while (this.lookahead.type !== 2 /* EOF */) {\n\t                        if (!this.match(',')) {\n\t                            break;\n\t                        }\n\t                        this.nextToken();\n\t                        if (this.match(')')) {\n\t                            this.nextToken();\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else if (this.match('...')) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            expressions.push(this.parseRestElement(params));\n\t                            this.expect(')');\n\t                            if (!this.match('=>')) {\n\t                                this.expect('=>');\n\t                            }\n\t                            this.context.isBindingElement = false;\n\t                            for (var i = 0; i < expressions.length; i++) {\n\t                                this.reinterpretExpressionAsPattern(expressions[i]);\n\t                            }\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: expressions,\n\t                                async: false\n\t                            };\n\t                        }\n\t                        else {\n\t                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        if (arrow) {\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!arrow) {\n\t                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t                    }\n\t                }\n\t                if (!arrow) {\n\t                    this.expect(')');\n\t                    if (this.match('=>')) {\n\t                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {\n\t                            arrow = true;\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: [expr],\n\t                                async: false\n\t                            };\n\t                        }\n\t                        if (!arrow) {\n\t                            if (!this.context.isBindingElement) {\n\t                                this.throwUnexpectedToken(this.lookahead);\n\t                            }\n\t                            if (expr.type === syntax_1.Syntax.SequenceExpression) {\n\t                                for (var i = 0; i < expr.expressions.length; i++) {\n\t                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);\n\t                                }\n\t                            }\n\t                            else {\n\t                                this.reinterpretExpressionAsPattern(expr);\n\t                            }\n\t                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);\n\t                            expr = {\n\t                                type: ArrowParameterPlaceHolder,\n\t                                params: parameters,\n\t                                async: false\n\t                            };\n\t                        }\n\t                    }\n\t                    this.context.isBindingElement = false;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions\n\t    Parser.prototype.parseArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.isIdentifierName = function (token) {\n\t        return token.type === 3 /* Identifier */ ||\n\t            token.type === 4 /* Keyword */ ||\n\t            token.type === 1 /* BooleanLiteral */ ||\n\t            token.type === 5 /* NullLiteral */;\n\t    };\n\t    Parser.prototype.parseIdentifierName = function () {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (!this.isIdentifierName(token)) {\n\t            this.throwUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseNewExpression = function () {\n\t        var node = this.createNode();\n\t        var id = this.parseIdentifierName();\n\t        assert_1.assert(id.name === 'new', 'New expression must start with `new`');\n\t        var expr;\n\t        if (this.match('.')) {\n\t            this.nextToken();\n\t            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {\n\t                var property = this.parseIdentifierName();\n\t                expr = new Node.MetaProperty(id, property);\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);\n\t            var args = this.match('(') ? this.parseArguments() : [];\n\t            expr = new Node.NewExpression(callee, args);\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return this.finalize(node, expr);\n\t    };\n\t    Parser.prototype.parseAsyncArgument = function () {\n\t        var arg = this.parseAssignmentExpression();\n\t        this.context.firstCoverInitializedNameError = null;\n\t        return arg;\n\t    };\n\t    Parser.prototype.parseAsyncArguments = function () {\n\t        this.expect('(');\n\t        var args = [];\n\t        if (!this.match(')')) {\n\t            while (true) {\n\t                var expr = this.match('...') ? this.parseSpreadElement() :\n\t                    this.isolateCoverGrammar(this.parseAsyncArgument);\n\t                args.push(expr);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expectCommaSeparator();\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return args;\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {\n\t        var startToken = this.lookahead;\n\t        var maybeAsync = this.matchContextualKeyword('async');\n\t        var previousAllowIn = this.context.allowIn;\n\t        this.context.allowIn = true;\n\t        var expr;\n\t        if (this.matchKeyword('super') && this.context.inFunctionBody) {\n\t            expr = this.createNode();\n\t            this.nextToken();\n\t            expr = this.finalize(expr, new Node.Super());\n\t            if (!this.match('(') && !this.match('.') && !this.match('[')) {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        }\n\t        while (true) {\n\t            if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('(')) {\n\t                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = false;\n\t                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();\n\t                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));\n\t                if (asyncArrow && this.match('=>')) {\n\t                    for (var i = 0; i < args.length; ++i) {\n\t                        this.reinterpretExpressionAsPattern(args[i]);\n\t                    }\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: args,\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            else if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        this.context.allowIn = previousAllowIn;\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseSuper = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('super');\n\t        if (!this.match('[') && !this.match('.')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return this.finalize(node, new Node.Super());\n\t    };\n\t    Parser.prototype.parseLeftHandSideExpression = function () {\n\t        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');\n\t        var node = this.startNode(this.lookahead);\n\t        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :\n\t            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);\n\t        while (true) {\n\t            if (this.match('[')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('[');\n\t                var property = this.isolateCoverGrammar(this.parseExpression);\n\t                this.expect(']');\n\t                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));\n\t            }\n\t            else if (this.match('.')) {\n\t                this.context.isBindingElement = false;\n\t                this.context.isAssignmentTarget = true;\n\t                this.expect('.');\n\t                var property = this.parseIdentifierName();\n\t                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));\n\t            }\n\t            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {\n\t                var quasi = this.parseTemplateLiteral();\n\t                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-update-expressions\n\t    Parser.prototype.parseUpdateExpression = function () {\n\t        var expr;\n\t        var startToken = this.lookahead;\n\t        if (this.match('++') || this.match('--')) {\n\t            var node = this.startNode(startToken);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictLHSPrefix);\n\t            }\n\t            if (!this.context.isAssignmentTarget) {\n\t                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t            }\n\t            var prefix = true;\n\t            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else {\n\t            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {\n\t                if (this.match('++') || this.match('--')) {\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {\n\t                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);\n\t                    }\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    this.context.isAssignmentTarget = false;\n\t                    this.context.isBindingElement = false;\n\t                    var operator = this.nextToken().value;\n\t                    var prefix = false;\n\t                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-unary-operators\n\t    Parser.prototype.parseAwaitExpression = function () {\n\t        var node = this.createNode();\n\t        this.nextToken();\n\t        var argument = this.parseUnaryExpression();\n\t        return this.finalize(node, new Node.AwaitExpression(argument));\n\t    };\n\t    Parser.prototype.parseUnaryExpression = function () {\n\t        var expr;\n\t        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||\n\t            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {\n\t            var node = this.startNode(this.lookahead);\n\t            var token = this.nextToken();\n\t            expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));\n\t            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {\n\t                this.tolerateError(messages_1.Messages.StrictDelete);\n\t            }\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        else if (this.context.await && this.matchContextualKeyword('await')) {\n\t            expr = this.parseAwaitExpression();\n\t        }\n\t        else {\n\t            expr = this.parseUpdateExpression();\n\t        }\n\t        return expr;\n\t    };\n\t    Parser.prototype.parseExponentiationExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);\n\t        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exp-operator\n\t    // https://tc39.github.io/ecma262/#sec-multiplicative-operators\n\t    // https://tc39.github.io/ecma262/#sec-additive-operators\n\t    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators\n\t    // https://tc39.github.io/ecma262/#sec-relational-operators\n\t    // https://tc39.github.io/ecma262/#sec-equality-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators\n\t    // https://tc39.github.io/ecma262/#sec-binary-logical-operators\n\t    Parser.prototype.binaryPrecedence = function (token) {\n\t        var op = token.value;\n\t        var precedence;\n\t        if (token.type === 7 /* Punctuator */) {\n\t            precedence = this.operatorPrecedence[op] || 0;\n\t        }\n\t        else if (token.type === 4 /* Keyword */) {\n\t            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;\n\t        }\n\t        else {\n\t            precedence = 0;\n\t        }\n\t        return precedence;\n\t    };\n\t    Parser.prototype.parseBinaryExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);\n\t        var token = this.lookahead;\n\t        var prec = this.binaryPrecedence(token);\n\t        if (prec > 0) {\n\t            this.nextToken();\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t            var markers = [startToken, this.lookahead];\n\t            var left = expr;\n\t            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);\n\t            var stack = [left, token.value, right];\n\t            var precedences = [prec];\n\t            while (true) {\n\t                prec = this.binaryPrecedence(this.lookahead);\n\t                if (prec <= 0) {\n\t                    break;\n\t                }\n\t                // Reduce: make a binary expression from the three topmost entries.\n\t                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {\n\t                    right = stack.pop();\n\t                    var operator = stack.pop();\n\t                    precedences.pop();\n\t                    left = stack.pop();\n\t                    markers.pop();\n\t                    var node = this.startNode(markers[markers.length - 1]);\n\t                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));\n\t                }\n\t                // Shift.\n\t                stack.push(this.nextToken().value);\n\t                precedences.push(prec);\n\t                markers.push(this.lookahead);\n\t                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));\n\t            }\n\t            // Final reduce to clean-up the stack.\n\t            var i = stack.length - 1;\n\t            expr = stack[i];\n\t            var lastMarker = markers.pop();\n\t            while (i > 1) {\n\t                var marker = markers.pop();\n\t                var lastLineStart = lastMarker && lastMarker.lineStart;\n\t                var node = this.startNode(marker, lastLineStart);\n\t                var operator = stack[i - 1];\n\t                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));\n\t                i -= 2;\n\t                lastMarker = marker;\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-conditional-operator\n\t    Parser.prototype.parseConditionalExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);\n\t        if (this.match('?')) {\n\t            this.nextToken();\n\t            var previousAllowIn = this.context.allowIn;\n\t            this.context.allowIn = true;\n\t            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowIn = previousAllowIn;\n\t            this.expect(':');\n\t            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));\n\t            this.context.isAssignmentTarget = false;\n\t            this.context.isBindingElement = false;\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-assignment-operators\n\t    Parser.prototype.checkPatternParam = function (options, param) {\n\t        switch (param.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                this.validateParam(options, param, param.name);\n\t                break;\n\t            case syntax_1.Syntax.RestElement:\n\t                this.checkPatternParam(options, param.argument);\n\t                break;\n\t            case syntax_1.Syntax.AssignmentPattern:\n\t                this.checkPatternParam(options, param.left);\n\t                break;\n\t            case syntax_1.Syntax.ArrayPattern:\n\t                for (var i = 0; i < param.elements.length; i++) {\n\t                    if (param.elements[i] !== null) {\n\t                        this.checkPatternParam(options, param.elements[i]);\n\t                    }\n\t                }\n\t                break;\n\t            case syntax_1.Syntax.ObjectPattern:\n\t                for (var i = 0; i < param.properties.length; i++) {\n\t                    this.checkPatternParam(options, param.properties[i].value);\n\t                }\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t    };\n\t    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {\n\t        var params = [expr];\n\t        var options;\n\t        var asyncArrow = false;\n\t        switch (expr.type) {\n\t            case syntax_1.Syntax.Identifier:\n\t                break;\n\t            case ArrowParameterPlaceHolder:\n\t                params = expr.params;\n\t                asyncArrow = expr.async;\n\t                break;\n\t            default:\n\t                return null;\n\t        }\n\t        options = {\n\t            simple: true,\n\t            paramSet: {}\n\t        };\n\t        for (var i = 0; i < params.length; ++i) {\n\t            var param = params[i];\n\t            if (param.type === syntax_1.Syntax.AssignmentPattern) {\n\t                if (param.right.type === syntax_1.Syntax.YieldExpression) {\n\t                    if (param.right.argument) {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                    param.right.type = syntax_1.Syntax.Identifier;\n\t                    param.right.name = 'yield';\n\t                    delete param.right.argument;\n\t                    delete param.right.delegate;\n\t                }\n\t            }\n\t            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {\n\t                this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            this.checkPatternParam(options, param);\n\t            params[i] = param;\n\t        }\n\t        if (this.context.strict || !this.context.allowYield) {\n\t            for (var i = 0; i < params.length; ++i) {\n\t                var param = params[i];\n\t                if (param.type === syntax_1.Syntax.YieldExpression) {\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t                }\n\t            }\n\t        }\n\t        if (options.message === messages_1.Messages.StrictParamDupe) {\n\t            var token = this.context.strict ? options.stricted : options.firstRestricted;\n\t            this.throwUnexpectedToken(token, options.message);\n\t        }\n\t        return {\n\t            simple: options.simple,\n\t            params: params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.parseAssignmentExpression = function () {\n\t        var expr;\n\t        if (!this.context.allowYield && this.matchKeyword('yield')) {\n\t            expr = this.parseYieldExpression();\n\t        }\n\t        else {\n\t            var startToken = this.lookahead;\n\t            var token = startToken;\n\t            expr = this.parseConditionalExpression();\n\t            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {\n\t                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {\n\t                    var arg = this.parsePrimaryExpression();\n\t                    this.reinterpretExpressionAsPattern(arg);\n\t                    expr = {\n\t                        type: ArrowParameterPlaceHolder,\n\t                        params: [arg],\n\t                        async: true\n\t                    };\n\t                }\n\t            }\n\t            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {\n\t                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions\n\t                this.context.isAssignmentTarget = false;\n\t                this.context.isBindingElement = false;\n\t                var isAsync = expr.async;\n\t                var list = this.reinterpretAsCoverFormalsList(expr);\n\t                if (list) {\n\t                    if (this.hasLineTerminator) {\n\t                        this.tolerateUnexpectedToken(this.lookahead);\n\t                    }\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                    var previousStrict = this.context.strict;\n\t                    var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t                    this.context.allowStrictDirective = list.simple;\n\t                    var previousAllowYield = this.context.allowYield;\n\t                    var previousAwait = this.context.await;\n\t                    this.context.allowYield = true;\n\t                    this.context.await = isAsync;\n\t                    var node = this.startNode(startToken);\n\t                    this.expect('=>');\n\t                    var body = void 0;\n\t                    if (this.match('{')) {\n\t                        var previousAllowIn = this.context.allowIn;\n\t                        this.context.allowIn = true;\n\t                        body = this.parseFunctionSourceElements();\n\t                        this.context.allowIn = previousAllowIn;\n\t                    }\n\t                    else {\n\t                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    }\n\t                    var expression = body.type !== syntax_1.Syntax.BlockStatement;\n\t                    if (this.context.strict && list.firstRestricted) {\n\t                        this.throwUnexpectedToken(list.firstRestricted, list.message);\n\t                    }\n\t                    if (this.context.strict && list.stricted) {\n\t                        this.tolerateUnexpectedToken(list.stricted, list.message);\n\t                    }\n\t                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :\n\t                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));\n\t                    this.context.strict = previousStrict;\n\t                    this.context.allowStrictDirective = previousAllowStrictDirective;\n\t                    this.context.allowYield = previousAllowYield;\n\t                    this.context.await = previousAwait;\n\t                }\n\t            }\n\t            else {\n\t                if (this.matchAssign()) {\n\t                    if (!this.context.isAssignmentTarget) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);\n\t                    }\n\t                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {\n\t                        var id = expr;\n\t                        if (this.scanner.isRestrictedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);\n\t                        }\n\t                        if (this.scanner.isStrictModeReservedWord(id.name)) {\n\t                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t                        }\n\t                    }\n\t                    if (!this.match('=')) {\n\t                        this.context.isAssignmentTarget = false;\n\t                        this.context.isBindingElement = false;\n\t                    }\n\t                    else {\n\t                        this.reinterpretExpressionAsPattern(expr);\n\t                    }\n\t                    token = this.nextToken();\n\t                    var operator = token.value;\n\t                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));\n\t                    this.context.firstCoverInitializedNameError = null;\n\t                }\n\t            }\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comma-operator\n\t    Parser.prototype.parseExpression = function () {\n\t        var startToken = this.lookahead;\n\t        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        if (this.match(',')) {\n\t            var expressions = [];\n\t            expressions.push(expr);\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                if (!this.match(',')) {\n\t                    break;\n\t                }\n\t                this.nextToken();\n\t                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t            }\n\t            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));\n\t        }\n\t        return expr;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-block\n\t    Parser.prototype.parseStatementListItem = function () {\n\t        var statement;\n\t        this.context.isAssignmentTarget = true;\n\t        this.context.isBindingElement = true;\n\t        if (this.lookahead.type === 4 /* Keyword */) {\n\t            switch (this.lookahead.value) {\n\t                case 'export':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);\n\t                    }\n\t                    statement = this.parseExportDeclaration();\n\t                    break;\n\t                case 'import':\n\t                    if (!this.context.isModule) {\n\t                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);\n\t                    }\n\t                    statement = this.parseImportDeclaration();\n\t                    break;\n\t                case 'const':\n\t                    statement = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'function':\n\t                    statement = this.parseFunctionDeclaration();\n\t                    break;\n\t                case 'class':\n\t                    statement = this.parseClassDeclaration();\n\t                    break;\n\t                case 'let':\n\t                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();\n\t                    break;\n\t                default:\n\t                    statement = this.parseStatement();\n\t                    break;\n\t            }\n\t        }\n\t        else {\n\t            statement = this.parseStatement();\n\t        }\n\t        return statement;\n\t    };\n\t    Parser.prototype.parseBlock = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var block = [];\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            block.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.BlockStatement(block));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations\n\t    Parser.prototype.parseLexicalBinding = function (kind, options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, kind);\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (kind === 'const') {\n\t            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {\n\t                if (this.match('=')) {\n\t                    this.nextToken();\n\t                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t                }\n\t                else {\n\t                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');\n\t                }\n\t            }\n\t        }\n\t        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {\n\t            this.expect('=');\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseBindingList = function (kind, options) {\n\t        var list = [this.parseLexicalBinding(kind, options)];\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseLexicalBinding(kind, options));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.isLexicalDeclaration = function () {\n\t        var state = this.scanner.saveState();\n\t        this.scanner.scanComments();\n\t        var next = this.scanner.lex();\n\t        this.scanner.restoreState(state);\n\t        return (next.type === 3 /* Identifier */) ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '[') ||\n\t            (next.type === 7 /* Punctuator */ && next.value === '{') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'let') ||\n\t            (next.type === 4 /* Keyword */ && next.value === 'yield');\n\t    };\n\t    Parser.prototype.parseLexicalDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var kind = this.nextToken().value;\n\t        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');\n\t        var declarations = this.parseBindingList(kind, options);\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns\n\t    Parser.prototype.parseBindingRestElement = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params, kind);\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseArrayPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        this.expect('[');\n\t        var elements = [];\n\t        while (!this.match(']')) {\n\t            if (this.match(',')) {\n\t                this.nextToken();\n\t                elements.push(null);\n\t            }\n\t            else {\n\t                if (this.match('...')) {\n\t                    elements.push(this.parseBindingRestElement(params, kind));\n\t                    break;\n\t                }\n\t                else {\n\t                    elements.push(this.parsePatternWithDefault(params, kind));\n\t                }\n\t                if (!this.match(']')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t        }\n\t        this.expect(']');\n\t        return this.finalize(node, new Node.ArrayPattern(elements));\n\t    };\n\t    Parser.prototype.parsePropertyPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var computed = false;\n\t        var shorthand = false;\n\t        var method = false;\n\t        var key;\n\t        var value;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            var keyToken = this.lookahead;\n\t            key = this.parseVariableIdentifier();\n\t            var init = this.finalize(node, new Node.Identifier(keyToken.value));\n\t            if (this.match('=')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                this.nextToken();\n\t                var expr = this.parseAssignmentExpression();\n\t                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));\n\t            }\n\t            else if (!this.match(':')) {\n\t                params.push(keyToken);\n\t                shorthand = true;\n\t                value = init;\n\t            }\n\t            else {\n\t                this.expect(':');\n\t                value = this.parsePatternWithDefault(params, kind);\n\t            }\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            this.expect(':');\n\t            value = this.parsePatternWithDefault(params, kind);\n\t        }\n\t        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));\n\t    };\n\t    Parser.prototype.parseObjectPattern = function (params, kind) {\n\t        var node = this.createNode();\n\t        var properties = [];\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            properties.push(this.parsePropertyPattern(params, kind));\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return this.finalize(node, new Node.ObjectPattern(properties));\n\t    };\n\t    Parser.prototype.parsePattern = function (params, kind) {\n\t        var pattern;\n\t        if (this.match('[')) {\n\t            pattern = this.parseArrayPattern(params, kind);\n\t        }\n\t        else if (this.match('{')) {\n\t            pattern = this.parseObjectPattern(params, kind);\n\t        }\n\t        else {\n\t            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {\n\t                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);\n\t            }\n\t            params.push(this.lookahead);\n\t            pattern = this.parseVariableIdentifier(kind);\n\t        }\n\t        return pattern;\n\t    };\n\t    Parser.prototype.parsePatternWithDefault = function (params, kind) {\n\t        var startToken = this.lookahead;\n\t        var pattern = this.parsePattern(params, kind);\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = true;\n\t            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t            this.context.allowYield = previousAllowYield;\n\t            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));\n\t        }\n\t        return pattern;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-variable-statement\n\t    Parser.prototype.parseVariableIdentifier = function (kind) {\n\t        var node = this.createNode();\n\t        var token = this.nextToken();\n\t        if (token.type === 4 /* Keyword */ && token.value === 'yield') {\n\t            if (this.context.strict) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else if (!this.context.allowYield) {\n\t                this.throwUnexpectedToken(token);\n\t            }\n\t        }\n\t        else if (token.type !== 3 /* Identifier */) {\n\t            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {\n\t                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);\n\t            }\n\t            else {\n\t                if (this.context.strict || token.value !== 'let' || kind !== 'var') {\n\t                    this.throwUnexpectedToken(token);\n\t                }\n\t            }\n\t        }\n\t        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {\n\t            this.tolerateUnexpectedToken(token);\n\t        }\n\t        return this.finalize(node, new Node.Identifier(token.value));\n\t    };\n\t    Parser.prototype.parseVariableDeclaration = function (options) {\n\t        var node = this.createNode();\n\t        var params = [];\n\t        var id = this.parsePattern(params, 'var');\n\t        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(id.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictVarName);\n\t            }\n\t        }\n\t        var init = null;\n\t        if (this.match('=')) {\n\t            this.nextToken();\n\t            init = this.isolateCoverGrammar(this.parseAssignmentExpression);\n\t        }\n\t        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {\n\t            this.expect('=');\n\t        }\n\t        return this.finalize(node, new Node.VariableDeclarator(id, init));\n\t    };\n\t    Parser.prototype.parseVariableDeclarationList = function (options) {\n\t        var opt = { inFor: options.inFor };\n\t        var list = [];\n\t        list.push(this.parseVariableDeclaration(opt));\n\t        while (this.match(',')) {\n\t            this.nextToken();\n\t            list.push(this.parseVariableDeclaration(opt));\n\t        }\n\t        return list;\n\t    };\n\t    Parser.prototype.parseVariableStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('var');\n\t        var declarations = this.parseVariableDeclarationList({ inFor: false });\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-empty-statement\n\t    Parser.prototype.parseEmptyStatement = function () {\n\t        var node = this.createNode();\n\t        this.expect(';');\n\t        return this.finalize(node, new Node.EmptyStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-expression-statement\n\t    Parser.prototype.parseExpressionStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ExpressionStatement(expr));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-if-statement\n\t    Parser.prototype.parseIfClause = function () {\n\t        if (this.context.strict && this.matchKeyword('function')) {\n\t            this.tolerateError(messages_1.Messages.StrictFunction);\n\t        }\n\t        return this.parseStatement();\n\t    };\n\t    Parser.prototype.parseIfStatement = function () {\n\t        var node = this.createNode();\n\t        var consequent;\n\t        var alternate = null;\n\t        this.expectKeyword('if');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            consequent = this.parseIfClause();\n\t            if (this.matchKeyword('else')) {\n\t                this.nextToken();\n\t                alternate = this.parseIfClause();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-do-while-statement\n\t    Parser.prototype.parseDoWhileStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('do');\n\t        var previousInIteration = this.context.inIteration;\n\t        this.context.inIteration = true;\n\t        var body = this.parseStatement();\n\t        this.context.inIteration = previousInIteration;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.DoWhileStatement(body, test));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-while-statement\n\t    Parser.prototype.parseWhileStatement = function () {\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('while');\n\t        this.expect('(');\n\t        var test = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.parseStatement();\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return this.finalize(node, new Node.WhileStatement(test, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-for-statement\n\t    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\n\t    Parser.prototype.parseForStatement = function () {\n\t        var init = null;\n\t        var test = null;\n\t        var update = null;\n\t        var forIn = true;\n\t        var left, right;\n\t        var node = this.createNode();\n\t        this.expectKeyword('for');\n\t        this.expect('(');\n\t        if (this.match(';')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            if (this.matchKeyword('var')) {\n\t                init = this.createNode();\n\t                this.nextToken();\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                var declarations = this.parseVariableDeclarationList({ inFor: true });\n\t                this.context.allowIn = previousAllowIn;\n\t                if (declarations.length === 1 && this.matchKeyword('in')) {\n\t                    var decl = declarations[0];\n\t                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {\n\t                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');\n\t                    }\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));\n\t                    this.expect(';');\n\t                }\n\t            }\n\t            else if (this.matchKeyword('const') || this.matchKeyword('let')) {\n\t                init = this.createNode();\n\t                var kind = this.nextToken().value;\n\t                if (!this.context.strict && this.lookahead.value === 'in') {\n\t                    init = this.finalize(init, new Node.Identifier(kind));\n\t                    this.nextToken();\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else {\n\t                    var previousAllowIn = this.context.allowIn;\n\t                    this.context.allowIn = false;\n\t                    var declarations = this.parseBindingList(kind, { inFor: true });\n\t                    this.context.allowIn = previousAllowIn;\n\t                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseExpression();\n\t                        init = null;\n\t                    }\n\t                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                        this.nextToken();\n\t                        left = init;\n\t                        right = this.parseAssignmentExpression();\n\t                        init = null;\n\t                        forIn = false;\n\t                    }\n\t                    else {\n\t                        this.consumeSemicolon();\n\t                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                var initStartToken = this.lookahead;\n\t                var previousAllowIn = this.context.allowIn;\n\t                this.context.allowIn = false;\n\t                init = this.inheritCoverGrammar(this.parseAssignmentExpression);\n\t                this.context.allowIn = previousAllowIn;\n\t                if (this.matchKeyword('in')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseExpression();\n\t                    init = null;\n\t                }\n\t                else if (this.matchContextualKeyword('of')) {\n\t                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {\n\t                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);\n\t                    }\n\t                    this.nextToken();\n\t                    this.reinterpretExpressionAsPattern(init);\n\t                    left = init;\n\t                    right = this.parseAssignmentExpression();\n\t                    init = null;\n\t                    forIn = false;\n\t                }\n\t                else {\n\t                    if (this.match(',')) {\n\t                        var initSeq = [init];\n\t                        while (this.match(',')) {\n\t                            this.nextToken();\n\t                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));\n\t                        }\n\t                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));\n\t                    }\n\t                    this.expect(';');\n\t                }\n\t            }\n\t        }\n\t        if (typeof left === 'undefined') {\n\t            if (!this.match(';')) {\n\t                test = this.parseExpression();\n\t            }\n\t            this.expect(';');\n\t            if (!this.match(')')) {\n\t                update = this.parseExpression();\n\t            }\n\t        }\n\t        var body;\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            var previousInIteration = this.context.inIteration;\n\t            this.context.inIteration = true;\n\t            body = this.isolateCoverGrammar(this.parseStatement);\n\t            this.context.inIteration = previousInIteration;\n\t        }\n\t        return (typeof left === 'undefined') ?\n\t            this.finalize(node, new Node.ForStatement(init, test, update, body)) :\n\t            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :\n\t                this.finalize(node, new Node.ForOfStatement(left, right, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-continue-statement\n\t    Parser.prototype.parseContinueStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('continue');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            label = id;\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration) {\n\t            this.throwError(messages_1.Messages.IllegalContinue);\n\t        }\n\t        return this.finalize(node, new Node.ContinueStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-break-statement\n\t    Parser.prototype.parseBreakStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('break');\n\t        var label = null;\n\t        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {\n\t            var id = this.parseVariableIdentifier();\n\t            var key = '$' + id.name;\n\t            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.UnknownLabel, id.name);\n\t            }\n\t            label = id;\n\t        }\n\t        this.consumeSemicolon();\n\t        if (label === null && !this.context.inIteration && !this.context.inSwitch) {\n\t            this.throwError(messages_1.Messages.IllegalBreak);\n\t        }\n\t        return this.finalize(node, new Node.BreakStatement(label));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-return-statement\n\t    Parser.prototype.parseReturnStatement = function () {\n\t        if (!this.context.inFunctionBody) {\n\t            this.tolerateError(messages_1.Messages.IllegalReturn);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('return');\n\t        var hasArgument = (!this.match(';') && !this.match('}') &&\n\t            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */) ||\n\t            this.lookahead.type === 8 /* StringLiteral */ ||\n\t            this.lookahead.type === 10 /* Template */;\n\t        var argument = hasArgument ? this.parseExpression() : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ReturnStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-with-statement\n\t    Parser.prototype.parseWithStatement = function () {\n\t        if (this.context.strict) {\n\t            this.tolerateError(messages_1.Messages.StrictModeWith);\n\t        }\n\t        var node = this.createNode();\n\t        var body;\n\t        this.expectKeyword('with');\n\t        this.expect('(');\n\t        var object = this.parseExpression();\n\t        if (!this.match(')') && this.config.tolerant) {\n\t            this.tolerateUnexpectedToken(this.nextToken());\n\t            body = this.finalize(this.createNode(), new Node.EmptyStatement());\n\t        }\n\t        else {\n\t            this.expect(')');\n\t            body = this.parseStatement();\n\t        }\n\t        return this.finalize(node, new Node.WithStatement(object, body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-switch-statement\n\t    Parser.prototype.parseSwitchCase = function () {\n\t        var node = this.createNode();\n\t        var test;\n\t        if (this.matchKeyword('default')) {\n\t            this.nextToken();\n\t            test = null;\n\t        }\n\t        else {\n\t            this.expectKeyword('case');\n\t            test = this.parseExpression();\n\t        }\n\t        this.expect(':');\n\t        var consequent = [];\n\t        while (true) {\n\t            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {\n\t                break;\n\t            }\n\t            consequent.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.SwitchCase(test, consequent));\n\t    };\n\t    Parser.prototype.parseSwitchStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('switch');\n\t        this.expect('(');\n\t        var discriminant = this.parseExpression();\n\t        this.expect(')');\n\t        var previousInSwitch = this.context.inSwitch;\n\t        this.context.inSwitch = true;\n\t        var cases = [];\n\t        var defaultFound = false;\n\t        this.expect('{');\n\t        while (true) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            var clause = this.parseSwitchCase();\n\t            if (clause.test === null) {\n\t                if (defaultFound) {\n\t                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);\n\t                }\n\t                defaultFound = true;\n\t            }\n\t            cases.push(clause);\n\t        }\n\t        this.expect('}');\n\t        this.context.inSwitch = previousInSwitch;\n\t        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-labelled-statements\n\t    Parser.prototype.parseLabelledStatement = function () {\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var statement;\n\t        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {\n\t            this.nextToken();\n\t            var id = expr;\n\t            var key = '$' + id.name;\n\t            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {\n\t                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);\n\t            }\n\t            this.context.labelSet[key] = true;\n\t            var body = void 0;\n\t            if (this.matchKeyword('class')) {\n\t                this.tolerateUnexpectedToken(this.lookahead);\n\t                body = this.parseClassDeclaration();\n\t            }\n\t            else if (this.matchKeyword('function')) {\n\t                var token = this.lookahead;\n\t                var declaration = this.parseFunctionDeclaration();\n\t                if (this.context.strict) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);\n\t                }\n\t                else if (declaration.generator) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);\n\t                }\n\t                body = declaration;\n\t            }\n\t            else {\n\t                body = this.parseStatement();\n\t            }\n\t            delete this.context.labelSet[key];\n\t            statement = new Node.LabeledStatement(id, body);\n\t        }\n\t        else {\n\t            this.consumeSemicolon();\n\t            statement = new Node.ExpressionStatement(expr);\n\t        }\n\t        return this.finalize(node, statement);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-throw-statement\n\t    Parser.prototype.parseThrowStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('throw');\n\t        if (this.hasLineTerminator) {\n\t            this.throwError(messages_1.Messages.NewlineAfterThrow);\n\t        }\n\t        var argument = this.parseExpression();\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ThrowStatement(argument));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-try-statement\n\t    Parser.prototype.parseCatchClause = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('catch');\n\t        this.expect('(');\n\t        if (this.match(')')) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        var params = [];\n\t        var param = this.parsePattern(params);\n\t        var paramMap = {};\n\t        for (var i = 0; i < params.length; i++) {\n\t            var key = '$' + params[i].value;\n\t            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {\n\t                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);\n\t            }\n\t            paramMap[key] = true;\n\t        }\n\t        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {\n\t            if (this.scanner.isRestrictedWord(param.name)) {\n\t                this.tolerateError(messages_1.Messages.StrictCatchVariable);\n\t            }\n\t        }\n\t        this.expect(')');\n\t        var body = this.parseBlock();\n\t        return this.finalize(node, new Node.CatchClause(param, body));\n\t    };\n\t    Parser.prototype.parseFinallyClause = function () {\n\t        this.expectKeyword('finally');\n\t        return this.parseBlock();\n\t    };\n\t    Parser.prototype.parseTryStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('try');\n\t        var block = this.parseBlock();\n\t        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;\n\t        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;\n\t        if (!handler && !finalizer) {\n\t            this.throwError(messages_1.Messages.NoCatchOrFinally);\n\t        }\n\t        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-debugger-statement\n\t    Parser.prototype.parseDebuggerStatement = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('debugger');\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.DebuggerStatement());\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations\n\t    Parser.prototype.parseStatement = function () {\n\t        var statement;\n\t        switch (this.lookahead.type) {\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 8 /* StringLiteral */:\n\t            case 10 /* Template */:\n\t            case 9 /* RegularExpression */:\n\t                statement = this.parseExpressionStatement();\n\t                break;\n\t            case 7 /* Punctuator */:\n\t                var value = this.lookahead.value;\n\t                if (value === '{') {\n\t                    statement = this.parseBlock();\n\t                }\n\t                else if (value === '(') {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                else if (value === ';') {\n\t                    statement = this.parseEmptyStatement();\n\t                }\n\t                else {\n\t                    statement = this.parseExpressionStatement();\n\t                }\n\t                break;\n\t            case 3 /* Identifier */:\n\t                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();\n\t                break;\n\t            case 4 /* Keyword */:\n\t                switch (this.lookahead.value) {\n\t                    case 'break':\n\t                        statement = this.parseBreakStatement();\n\t                        break;\n\t                    case 'continue':\n\t                        statement = this.parseContinueStatement();\n\t                        break;\n\t                    case 'debugger':\n\t                        statement = this.parseDebuggerStatement();\n\t                        break;\n\t                    case 'do':\n\t                        statement = this.parseDoWhileStatement();\n\t                        break;\n\t                    case 'for':\n\t                        statement = this.parseForStatement();\n\t                        break;\n\t                    case 'function':\n\t                        statement = this.parseFunctionDeclaration();\n\t                        break;\n\t                    case 'if':\n\t                        statement = this.parseIfStatement();\n\t                        break;\n\t                    case 'return':\n\t                        statement = this.parseReturnStatement();\n\t                        break;\n\t                    case 'switch':\n\t                        statement = this.parseSwitchStatement();\n\t                        break;\n\t                    case 'throw':\n\t                        statement = this.parseThrowStatement();\n\t                        break;\n\t                    case 'try':\n\t                        statement = this.parseTryStatement();\n\t                        break;\n\t                    case 'var':\n\t                        statement = this.parseVariableStatement();\n\t                        break;\n\t                    case 'while':\n\t                        statement = this.parseWhileStatement();\n\t                        break;\n\t                    case 'with':\n\t                        statement = this.parseWithStatement();\n\t                        break;\n\t                    default:\n\t                        statement = this.parseExpressionStatement();\n\t                        break;\n\t                }\n\t                break;\n\t            default:\n\t                statement = this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        return statement;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-function-definitions\n\t    Parser.prototype.parseFunctionSourceElements = function () {\n\t        var node = this.createNode();\n\t        this.expect('{');\n\t        var body = this.parseDirectivePrologues();\n\t        var previousLabelSet = this.context.labelSet;\n\t        var previousInIteration = this.context.inIteration;\n\t        var previousInSwitch = this.context.inSwitch;\n\t        var previousInFunctionBody = this.context.inFunctionBody;\n\t        this.context.labelSet = {};\n\t        this.context.inIteration = false;\n\t        this.context.inSwitch = false;\n\t        this.context.inFunctionBody = true;\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            if (this.match('}')) {\n\t                break;\n\t            }\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        this.expect('}');\n\t        this.context.labelSet = previousLabelSet;\n\t        this.context.inIteration = previousInIteration;\n\t        this.context.inSwitch = previousInSwitch;\n\t        this.context.inFunctionBody = previousInFunctionBody;\n\t        return this.finalize(node, new Node.BlockStatement(body));\n\t    };\n\t    Parser.prototype.validateParam = function (options, param, name) {\n\t        var key = '$' + name;\n\t        if (this.context.strict) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        else if (!options.firstRestricted) {\n\t            if (this.scanner.isRestrictedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictParamName;\n\t            }\n\t            else if (this.scanner.isStrictModeReservedWord(name)) {\n\t                options.firstRestricted = param;\n\t                options.message = messages_1.Messages.StrictReservedWord;\n\t            }\n\t            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {\n\t                options.stricted = param;\n\t                options.message = messages_1.Messages.StrictParamDupe;\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        if (typeof Object.defineProperty === 'function') {\n\t            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });\n\t        }\n\t        else {\n\t            options.paramSet[key] = true;\n\t        }\n\t    };\n\t    Parser.prototype.parseRestElement = function (params) {\n\t        var node = this.createNode();\n\t        this.expect('...');\n\t        var arg = this.parsePattern(params);\n\t        if (this.match('=')) {\n\t            this.throwError(messages_1.Messages.DefaultRestParameter);\n\t        }\n\t        if (!this.match(')')) {\n\t            this.throwError(messages_1.Messages.ParameterAfterRestParameter);\n\t        }\n\t        return this.finalize(node, new Node.RestElement(arg));\n\t    };\n\t    Parser.prototype.parseFormalParameter = function (options) {\n\t        var params = [];\n\t        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);\n\t        for (var i = 0; i < params.length; i++) {\n\t            this.validateParam(options, params[i], params[i].value);\n\t        }\n\t        options.simple = options.simple && (param instanceof Node.Identifier);\n\t        options.params.push(param);\n\t    };\n\t    Parser.prototype.parseFormalParameters = function (firstRestricted) {\n\t        var options;\n\t        options = {\n\t            simple: true,\n\t            params: [],\n\t            firstRestricted: firstRestricted\n\t        };\n\t        this.expect('(');\n\t        if (!this.match(')')) {\n\t            options.paramSet = {};\n\t            while (this.lookahead.type !== 2 /* EOF */) {\n\t                this.parseFormalParameter(options);\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t                this.expect(',');\n\t                if (this.match(')')) {\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t        this.expect(')');\n\t        return {\n\t            simple: options.simple,\n\t            params: options.params,\n\t            stricted: options.stricted,\n\t            firstRestricted: options.firstRestricted,\n\t            message: options.message\n\t        };\n\t    };\n\t    Parser.prototype.matchAsyncFunction = function () {\n\t        var match = this.matchContextualKeyword('async');\n\t        if (match) {\n\t            var state = this.scanner.saveState();\n\t            this.scanner.scanComments();\n\t            var next = this.scanner.lex();\n\t            this.scanner.restoreState(state);\n\t            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');\n\t        }\n\t        return match;\n\t    };\n\t    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted = null;\n\t        if (!identifierIsOptional || !this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));\n\t    };\n\t    Parser.prototype.parseFunctionExpression = function () {\n\t        var node = this.createNode();\n\t        var isAsync = this.matchContextualKeyword('async');\n\t        if (isAsync) {\n\t            this.nextToken();\n\t        }\n\t        this.expectKeyword('function');\n\t        var isGenerator = isAsync ? false : this.match('*');\n\t        if (isGenerator) {\n\t            this.nextToken();\n\t        }\n\t        var message;\n\t        var id = null;\n\t        var firstRestricted;\n\t        var previousAllowAwait = this.context.await;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.await = isAsync;\n\t        this.context.allowYield = !isGenerator;\n\t        if (!this.match('(')) {\n\t            var token = this.lookahead;\n\t            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();\n\t            if (this.context.strict) {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);\n\t                }\n\t            }\n\t            else {\n\t                if (this.scanner.isRestrictedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictFunctionName;\n\t                }\n\t                else if (this.scanner.isStrictModeReservedWord(token.value)) {\n\t                    firstRestricted = token;\n\t                    message = messages_1.Messages.StrictReservedWord;\n\t                }\n\t            }\n\t        }\n\t        var formalParameters = this.parseFormalParameters(firstRestricted);\n\t        var params = formalParameters.params;\n\t        var stricted = formalParameters.stricted;\n\t        firstRestricted = formalParameters.firstRestricted;\n\t        if (formalParameters.message) {\n\t            message = formalParameters.message;\n\t        }\n\t        var previousStrict = this.context.strict;\n\t        var previousAllowStrictDirective = this.context.allowStrictDirective;\n\t        this.context.allowStrictDirective = formalParameters.simple;\n\t        var body = this.parseFunctionSourceElements();\n\t        if (this.context.strict && firstRestricted) {\n\t            this.throwUnexpectedToken(firstRestricted, message);\n\t        }\n\t        if (this.context.strict && stricted) {\n\t            this.tolerateUnexpectedToken(stricted, message);\n\t        }\n\t        this.context.strict = previousStrict;\n\t        this.context.allowStrictDirective = previousAllowStrictDirective;\n\t        this.context.await = previousAllowAwait;\n\t        this.context.allowYield = previousAllowYield;\n\t        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :\n\t            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive\n\t    Parser.prototype.parseDirective = function () {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var expr = this.parseExpression();\n\t        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));\n\t    };\n\t    Parser.prototype.parseDirectivePrologues = function () {\n\t        var firstRestricted = null;\n\t        var body = [];\n\t        while (true) {\n\t            var token = this.lookahead;\n\t            if (token.type !== 8 /* StringLiteral */) {\n\t                break;\n\t            }\n\t            var statement = this.parseDirective();\n\t            body.push(statement);\n\t            var directive = statement.directive;\n\t            if (typeof directive !== 'string') {\n\t                break;\n\t            }\n\t            if (directive === 'use strict') {\n\t                this.context.strict = true;\n\t                if (firstRestricted) {\n\t                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);\n\t                }\n\t                if (!this.context.allowStrictDirective) {\n\t                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);\n\t                }\n\t            }\n\t            else {\n\t                if (!firstRestricted && token.octal) {\n\t                    firstRestricted = token;\n\t                }\n\t            }\n\t        }\n\t        return body;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-method-definitions\n\t    Parser.prototype.qualifiedPropertyName = function (token) {\n\t        switch (token.type) {\n\t            case 3 /* Identifier */:\n\t            case 8 /* StringLiteral */:\n\t            case 1 /* BooleanLiteral */:\n\t            case 5 /* NullLiteral */:\n\t            case 6 /* NumericLiteral */:\n\t            case 4 /* Keyword */:\n\t                return true;\n\t            case 7 /* Punctuator */:\n\t                return token.value === '[';\n\t            default:\n\t                break;\n\t        }\n\t        return false;\n\t    };\n\t    Parser.prototype.parseGetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length > 0) {\n\t            this.tolerateError(messages_1.Messages.BadGetterArity);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseSetterMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = false;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = !isGenerator;\n\t        var formalParameters = this.parseFormalParameters();\n\t        if (formalParameters.params.length !== 1) {\n\t            this.tolerateError(messages_1.Messages.BadSetterArity);\n\t        }\n\t        else if (formalParameters.params[0] instanceof Node.RestElement) {\n\t            this.tolerateError(messages_1.Messages.BadSetterRestParameter);\n\t        }\n\t        var method = this.parsePropertyMethod(formalParameters);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));\n\t    };\n\t    Parser.prototype.parseGeneratorMethod = function () {\n\t        var node = this.createNode();\n\t        var isGenerator = true;\n\t        var previousAllowYield = this.context.allowYield;\n\t        this.context.allowYield = true;\n\t        var params = this.parseFormalParameters();\n\t        this.context.allowYield = false;\n\t        var method = this.parsePropertyMethod(params);\n\t        this.context.allowYield = previousAllowYield;\n\t        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-generator-function-definitions\n\t    Parser.prototype.isStartOfExpression = function () {\n\t        var start = true;\n\t        var value = this.lookahead.value;\n\t        switch (this.lookahead.type) {\n\t            case 7 /* Punctuator */:\n\t                start = (value === '[') || (value === '(') || (value === '{') ||\n\t                    (value === '+') || (value === '-') ||\n\t                    (value === '!') || (value === '~') ||\n\t                    (value === '++') || (value === '--') ||\n\t                    (value === '/') || (value === '/='); // regular expression literal\n\t                break;\n\t            case 4 /* Keyword */:\n\t                start = (value === 'class') || (value === 'delete') ||\n\t                    (value === 'function') || (value === 'let') || (value === 'new') ||\n\t                    (value === 'super') || (value === 'this') || (value === 'typeof') ||\n\t                    (value === 'void') || (value === 'yield');\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        return start;\n\t    };\n\t    Parser.prototype.parseYieldExpression = function () {\n\t        var node = this.createNode();\n\t        this.expectKeyword('yield');\n\t        var argument = null;\n\t        var delegate = false;\n\t        if (!this.hasLineTerminator) {\n\t            var previousAllowYield = this.context.allowYield;\n\t            this.context.allowYield = false;\n\t            delegate = this.match('*');\n\t            if (delegate) {\n\t                this.nextToken();\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            else if (this.isStartOfExpression()) {\n\t                argument = this.parseAssignmentExpression();\n\t            }\n\t            this.context.allowYield = previousAllowYield;\n\t        }\n\t        return this.finalize(node, new Node.YieldExpression(argument, delegate));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-class-definitions\n\t    Parser.prototype.parseClassElement = function (hasConstructor) {\n\t        var token = this.lookahead;\n\t        var node = this.createNode();\n\t        var kind = '';\n\t        var key = null;\n\t        var value = null;\n\t        var computed = false;\n\t        var method = false;\n\t        var isStatic = false;\n\t        var isAsync = false;\n\t        if (this.match('*')) {\n\t            this.nextToken();\n\t        }\n\t        else {\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            var id = key;\n\t            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {\n\t                token = this.lookahead;\n\t                isStatic = true;\n\t                computed = this.match('[');\n\t                if (this.match('*')) {\n\t                    this.nextToken();\n\t                }\n\t                else {\n\t                    key = this.parseObjectPropertyKey();\n\t                }\n\t            }\n\t            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {\n\t                var punctuator = this.lookahead.value;\n\t                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {\n\t                    isAsync = true;\n\t                    token = this.lookahead;\n\t                    key = this.parseObjectPropertyKey();\n\t                    if (token.type === 3 /* Identifier */ && token.value === 'constructor') {\n\t                        this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);\n\t        if (token.type === 3 /* Identifier */) {\n\t            if (token.value === 'get' && lookaheadPropertyKey) {\n\t                kind = 'get';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                this.context.allowYield = false;\n\t                value = this.parseGetterMethod();\n\t            }\n\t            else if (token.value === 'set' && lookaheadPropertyKey) {\n\t                kind = 'set';\n\t                computed = this.match('[');\n\t                key = this.parseObjectPropertyKey();\n\t                value = this.parseSetterMethod();\n\t            }\n\t        }\n\t        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {\n\t            kind = 'init';\n\t            computed = this.match('[');\n\t            key = this.parseObjectPropertyKey();\n\t            value = this.parseGeneratorMethod();\n\t            method = true;\n\t        }\n\t        if (!kind && key && this.match('(')) {\n\t            kind = 'init';\n\t            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();\n\t            method = true;\n\t        }\n\t        if (!kind) {\n\t            this.throwUnexpectedToken(this.lookahead);\n\t        }\n\t        if (kind === 'init') {\n\t            kind = 'method';\n\t        }\n\t        if (!computed) {\n\t            if (isStatic && this.isPropertyKey(key, 'prototype')) {\n\t                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);\n\t            }\n\t            if (!isStatic && this.isPropertyKey(key, 'constructor')) {\n\t                if (kind !== 'method' || !method || (value && value.generator)) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);\n\t                }\n\t                if (hasConstructor.value) {\n\t                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);\n\t                }\n\t                else {\n\t                    hasConstructor.value = true;\n\t                }\n\t                kind = 'constructor';\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));\n\t    };\n\t    Parser.prototype.parseClassElementList = function () {\n\t        var body = [];\n\t        var hasConstructor = { value: false };\n\t        this.expect('{');\n\t        while (!this.match('}')) {\n\t            if (this.match(';')) {\n\t                this.nextToken();\n\t            }\n\t            else {\n\t                body.push(this.parseClassElement(hasConstructor));\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return body;\n\t    };\n\t    Parser.prototype.parseClassBody = function () {\n\t        var node = this.createNode();\n\t        var elementList = this.parseClassElementList();\n\t        return this.finalize(node, new Node.ClassBody(elementList));\n\t    };\n\t    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));\n\t    };\n\t    Parser.prototype.parseClassExpression = function () {\n\t        var node = this.createNode();\n\t        var previousStrict = this.context.strict;\n\t        this.context.strict = true;\n\t        this.expectKeyword('class');\n\t        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;\n\t        var superClass = null;\n\t        if (this.matchKeyword('extends')) {\n\t            this.nextToken();\n\t            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);\n\t        }\n\t        var classBody = this.parseClassBody();\n\t        this.context.strict = previousStrict;\n\t        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-scripts\n\t    // https://tc39.github.io/ecma262/#sec-modules\n\t    Parser.prototype.parseModule = function () {\n\t        this.context.strict = true;\n\t        this.context.isModule = true;\n\t        this.scanner.isModule = true;\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Module(body));\n\t    };\n\t    Parser.prototype.parseScript = function () {\n\t        var node = this.createNode();\n\t        var body = this.parseDirectivePrologues();\n\t        while (this.lookahead.type !== 2 /* EOF */) {\n\t            body.push(this.parseStatementListItem());\n\t        }\n\t        return this.finalize(node, new Node.Script(body));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-imports\n\t    Parser.prototype.parseModuleSpecifier = function () {\n\t        var node = this.createNode();\n\t        if (this.lookahead.type !== 8 /* StringLiteral */) {\n\t            this.throwError(messages_1.Messages.InvalidModuleSpecifier);\n\t        }\n\t        var token = this.nextToken();\n\t        var raw = this.getTokenRaw(token);\n\t        return this.finalize(node, new Node.Literal(token.value, raw));\n\t    };\n\t    // import {<foo as bar>} ...;\n\t    Parser.prototype.parseImportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var imported;\n\t        var local;\n\t        if (this.lookahead.type === 3 /* Identifier */) {\n\t            imported = this.parseVariableIdentifier();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t        }\n\t        else {\n\t            imported = this.parseIdentifierName();\n\t            local = imported;\n\t            if (this.matchContextualKeyword('as')) {\n\t                this.nextToken();\n\t                local = this.parseVariableIdentifier();\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t        }\n\t        return this.finalize(node, new Node.ImportSpecifier(local, imported));\n\t    };\n\t    // {foo, bar as bas}\n\t    Parser.prototype.parseNamedImports = function () {\n\t        this.expect('{');\n\t        var specifiers = [];\n\t        while (!this.match('}')) {\n\t            specifiers.push(this.parseImportSpecifier());\n\t            if (!this.match('}')) {\n\t                this.expect(',');\n\t            }\n\t        }\n\t        this.expect('}');\n\t        return specifiers;\n\t    };\n\t    // import <foo> ...;\n\t    Parser.prototype.parseImportDefaultSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportDefaultSpecifier(local));\n\t    };\n\t    // import <* as foo> ...;\n\t    Parser.prototype.parseImportNamespaceSpecifier = function () {\n\t        var node = this.createNode();\n\t        this.expect('*');\n\t        if (!this.matchContextualKeyword('as')) {\n\t            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);\n\t        }\n\t        this.nextToken();\n\t        var local = this.parseIdentifierName();\n\t        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));\n\t    };\n\t    Parser.prototype.parseImportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalImportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('import');\n\t        var src;\n\t        var specifiers = [];\n\t        if (this.lookahead.type === 8 /* StringLiteral */) {\n\t            // import 'foo';\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        else {\n\t            if (this.match('{')) {\n\t                // import {bar}\n\t                specifiers = specifiers.concat(this.parseNamedImports());\n\t            }\n\t            else if (this.match('*')) {\n\t                // import * as foo\n\t                specifiers.push(this.parseImportNamespaceSpecifier());\n\t            }\n\t            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {\n\t                // import foo\n\t                specifiers.push(this.parseImportDefaultSpecifier());\n\t                if (this.match(',')) {\n\t                    this.nextToken();\n\t                    if (this.match('*')) {\n\t                        // import foo, * as foo\n\t                        specifiers.push(this.parseImportNamespaceSpecifier());\n\t                    }\n\t                    else if (this.match('{')) {\n\t                        // import foo, {bar}\n\t                        specifiers = specifiers.concat(this.parseNamedImports());\n\t                    }\n\t                    else {\n\t                        this.throwUnexpectedToken(this.lookahead);\n\t                    }\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken(this.nextToken());\n\t            }\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            src = this.parseModuleSpecifier();\n\t        }\n\t        this.consumeSemicolon();\n\t        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-exports\n\t    Parser.prototype.parseExportSpecifier = function () {\n\t        var node = this.createNode();\n\t        var local = this.parseIdentifierName();\n\t        var exported = local;\n\t        if (this.matchContextualKeyword('as')) {\n\t            this.nextToken();\n\t            exported = this.parseIdentifierName();\n\t        }\n\t        return this.finalize(node, new Node.ExportSpecifier(local, exported));\n\t    };\n\t    Parser.prototype.parseExportDeclaration = function () {\n\t        if (this.context.inFunctionBody) {\n\t            this.throwError(messages_1.Messages.IllegalExportDeclaration);\n\t        }\n\t        var node = this.createNode();\n\t        this.expectKeyword('export');\n\t        var exportDeclaration;\n\t        if (this.matchKeyword('default')) {\n\t            // export default ...\n\t            this.nextToken();\n\t            if (this.matchKeyword('function')) {\n\t                // export default function foo () {}\n\t                // export default function () {}\n\t                var declaration = this.parseFunctionDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchKeyword('class')) {\n\t                // export default class foo {}\n\t                var declaration = this.parseClassDeclaration(true);\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else if (this.matchContextualKeyword('async')) {\n\t                // export default async function f () {}\n\t                // export default async function () {}\n\t                // export default async x => x\n\t                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t            else {\n\t                if (this.matchContextualKeyword('from')) {\n\t                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);\n\t                }\n\t                // export default {};\n\t                // export default [];\n\t                // export default (1 + 2);\n\t                var declaration = this.match('{') ? this.parseObjectInitializer() :\n\t                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();\n\t                this.consumeSemicolon();\n\t                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));\n\t            }\n\t        }\n\t        else if (this.match('*')) {\n\t            // export * from 'foo';\n\t            this.nextToken();\n\t            if (!this.matchContextualKeyword('from')) {\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            this.nextToken();\n\t            var src = this.parseModuleSpecifier();\n\t            this.consumeSemicolon();\n\t            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));\n\t        }\n\t        else if (this.lookahead.type === 4 /* Keyword */) {\n\t            // export var f = 1;\n\t            var declaration = void 0;\n\t            switch (this.lookahead.value) {\n\t                case 'let':\n\t                case 'const':\n\t                    declaration = this.parseLexicalDeclaration({ inFor: false });\n\t                    break;\n\t                case 'var':\n\t                case 'class':\n\t                case 'function':\n\t                    declaration = this.parseStatementListItem();\n\t                    break;\n\t                default:\n\t                    this.throwUnexpectedToken(this.lookahead);\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else if (this.matchAsyncFunction()) {\n\t            var declaration = this.parseFunctionDeclaration();\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));\n\t        }\n\t        else {\n\t            var specifiers = [];\n\t            var source = null;\n\t            var isExportFromIdentifier = false;\n\t            this.expect('{');\n\t            while (!this.match('}')) {\n\t                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');\n\t                specifiers.push(this.parseExportSpecifier());\n\t                if (!this.match('}')) {\n\t                    this.expect(',');\n\t                }\n\t            }\n\t            this.expect('}');\n\t            if (this.matchContextualKeyword('from')) {\n\t                // export {default} from 'foo';\n\t                // export {foo} from 'foo';\n\t                this.nextToken();\n\t                source = this.parseModuleSpecifier();\n\t                this.consumeSemicolon();\n\t            }\n\t            else if (isExportFromIdentifier) {\n\t                // export {default}; // missing fromClause\n\t                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;\n\t                this.throwError(message, this.lookahead.value);\n\t            }\n\t            else {\n\t                // export {foo};\n\t                this.consumeSemicolon();\n\t            }\n\t            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));\n\t        }\n\t        return exportDeclaration;\n\t    };\n\t    return Parser;\n\t}());\n\texports.Parser = Parser;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// Ensure the condition is true, otherwise throw an error.\n\t// This is only to have a better contract semantic, i.e. another safety net\n\t// to catch a logic error. The condition shall be fulfilled in normal case.\n\t// Do NOT use this to enforce a certain condition on any user input.\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tfunction assert(condition, message) {\n\t    /* istanbul ignore if */\n\t    if (!condition) {\n\t        throw new Error('ASSERT: ' + message);\n\t    }\n\t}\n\texports.assert = assert;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/* tslint:disable:max-classes-per-file */\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar ErrorHandler = (function () {\n\t    function ErrorHandler() {\n\t        this.errors = [];\n\t        this.tolerant = false;\n\t    }\n\t    ErrorHandler.prototype.recordError = function (error) {\n\t        this.errors.push(error);\n\t    };\n\t    ErrorHandler.prototype.tolerate = function (error) {\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    ErrorHandler.prototype.constructError = function (msg, column) {\n\t        var error = new Error(msg);\n\t        try {\n\t            throw error;\n\t        }\n\t        catch (base) {\n\t            /* istanbul ignore else */\n\t            if (Object.create && Object.defineProperty) {\n\t                error = Object.create(base);\n\t                Object.defineProperty(error, 'column', { value: column });\n\t            }\n\t        }\n\t        /* istanbul ignore next */\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.createError = function (index, line, col, description) {\n\t        var msg = 'Line ' + line + ': ' + description;\n\t        var error = this.constructError(msg, col);\n\t        error.index = index;\n\t        error.lineNumber = line;\n\t        error.description = description;\n\t        return error;\n\t    };\n\t    ErrorHandler.prototype.throwError = function (index, line, col, description) {\n\t        throw this.createError(index, line, col, description);\n\t    };\n\t    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {\n\t        var error = this.createError(index, line, col, description);\n\t        if (this.tolerant) {\n\t            this.recordError(error);\n\t        }\n\t        else {\n\t            throw error;\n\t        }\n\t    };\n\t    return ErrorHandler;\n\t}());\n\texports.ErrorHandler = ErrorHandler;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t// Error messages should be identical to V8.\n\texports.Messages = {\n\t    BadGetterArity: 'Getter must not have any formal parameters',\n\t    BadSetterArity: 'Setter must have exactly one formal parameter',\n\t    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',\n\t    ConstructorIsAsync: 'Class constructor may not be an async method',\n\t    ConstructorSpecialMethod: 'Class constructor may not be an accessor',\n\t    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',\n\t    DefaultRestParameter: 'Unexpected token =',\n\t    DuplicateBinding: 'Duplicate binding %0',\n\t    DuplicateConstructor: 'A class may only have one constructor',\n\t    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',\n\t    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',\n\t    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',\n\t    IllegalBreak: 'Illegal break statement',\n\t    IllegalContinue: 'Illegal continue statement',\n\t    IllegalExportDeclaration: 'Unexpected token',\n\t    IllegalImportDeclaration: 'Unexpected token',\n\t    IllegalLanguageModeDirective: 'Illegal \\'use strict\\' directive in function with non-simple parameter list',\n\t    IllegalReturn: 'Illegal return statement',\n\t    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',\n\t    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',\n\t    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',\n\t    InvalidLHSInForIn: 'Invalid left-hand side in for-in',\n\t    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',\n\t    InvalidModuleSpecifier: 'Unexpected token',\n\t    InvalidRegExp: 'Invalid regular expression',\n\t    LetInLexicalBinding: 'let is disallowed as a lexically bound name',\n\t    MissingFromClause: 'Unexpected token',\n\t    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n\t    NewlineAfterThrow: 'Illegal newline after throw',\n\t    NoAsAfterImportNamespace: 'Unexpected token',\n\t    NoCatchOrFinally: 'Missing catch or finally after try',\n\t    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',\n\t    Redeclaration: '%0 \\'%1\\' has already been declared',\n\t    StaticPrototype: 'Classes may not have static property named prototype',\n\t    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',\n\t    StrictDelete: 'Delete of an unqualified identifier in strict mode.',\n\t    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',\n\t    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',\n\t    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',\n\t    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n\t    StrictModeWith: 'Strict mode code may not include a with statement',\n\t    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',\n\t    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n\t    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',\n\t    StrictReservedWord: 'Use of future reserved word in strict mode',\n\t    StrictVarName: 'Variable name may not be eval or arguments in strict mode',\n\t    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',\n\t    UnexpectedEOS: 'Unexpected end of input',\n\t    UnexpectedIdentifier: 'Unexpected identifier',\n\t    UnexpectedNumber: 'Unexpected number',\n\t    UnexpectedReserved: 'Unexpected reserved word',\n\t    UnexpectedString: 'Unexpected string',\n\t    UnexpectedTemplate: 'Unexpected quasi %0',\n\t    UnexpectedToken: 'Unexpected token %0',\n\t    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',\n\t    UnknownLabel: 'Undefined label \\'%0\\'',\n\t    UnterminatedRegExp: 'Invalid regular expression: missing /'\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar assert_1 = __webpack_require__(9);\n\tvar character_1 = __webpack_require__(4);\n\tvar messages_1 = __webpack_require__(11);\n\tfunction hexValue(ch) {\n\t    return '0123456789abcdef'.indexOf(ch.toLowerCase());\n\t}\n\tfunction octalValue(ch) {\n\t    return '01234567'.indexOf(ch);\n\t}\n\tvar Scanner = (function () {\n\t    function Scanner(code, handler) {\n\t        this.source = code;\n\t        this.errorHandler = handler;\n\t        this.trackComment = false;\n\t        this.isModule = false;\n\t        this.length = code.length;\n\t        this.index = 0;\n\t        this.lineNumber = (code.length > 0) ? 1 : 0;\n\t        this.lineStart = 0;\n\t        this.curlyStack = [];\n\t    }\n\t    Scanner.prototype.saveState = function () {\n\t        return {\n\t            index: this.index,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart\n\t        };\n\t    };\n\t    Scanner.prototype.restoreState = function (state) {\n\t        this.index = state.index;\n\t        this.lineNumber = state.lineNumber;\n\t        this.lineStart = state.lineStart;\n\t    };\n\t    Scanner.prototype.eof = function () {\n\t        return this.index >= this.length;\n\t    };\n\t    Scanner.prototype.throwUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    Scanner.prototype.tolerateUnexpectedToken = function (message) {\n\t        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }\n\t        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-comments\n\t    Scanner.prototype.skipSingleLineComment = function (offset) {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - offset;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - offset\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            ++this.index;\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (this.trackComment) {\n\t                    loc.end = {\n\t                        line: this.lineNumber,\n\t                        column: this.index - this.lineStart - 1\n\t                    };\n\t                    var entry = {\n\t                        multiLine: false,\n\t                        slice: [start + offset, this.index - 1],\n\t                        range: [start, this.index - 1],\n\t                        loc: loc\n\t                    };\n\t                    comments.push(entry);\n\t                }\n\t                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                return comments;\n\t            }\n\t        }\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: false,\n\t                slice: [start + offset, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        return comments;\n\t    };\n\t    Scanner.prototype.skipMultiLineComment = function () {\n\t        var comments = [];\n\t        var start, loc;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t            start = this.index - 2;\n\t            loc = {\n\t                start: {\n\t                    line: this.lineNumber,\n\t                    column: this.index - this.lineStart - 2\n\t                },\n\t                end: {}\n\t            };\n\t        }\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isLineTerminator(ch)) {\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                ++this.index;\n\t                this.lineStart = this.index;\n\t            }\n\t            else if (ch === 0x2A) {\n\t                // Block comment ends with '*/'.\n\t                if (this.source.charCodeAt(this.index + 1) === 0x2F) {\n\t                    this.index += 2;\n\t                    if (this.trackComment) {\n\t                        loc.end = {\n\t                            line: this.lineNumber,\n\t                            column: this.index - this.lineStart\n\t                        };\n\t                        var entry = {\n\t                            multiLine: true,\n\t                            slice: [start + 2, this.index - 2],\n\t                            range: [start, this.index],\n\t                            loc: loc\n\t                        };\n\t                        comments.push(entry);\n\t                    }\n\t                    return comments;\n\t                }\n\t                ++this.index;\n\t            }\n\t            else {\n\t                ++this.index;\n\t            }\n\t        }\n\t        // Ran off the end of the file - the whole thing is a comment\n\t        if (this.trackComment) {\n\t            loc.end = {\n\t                line: this.lineNumber,\n\t                column: this.index - this.lineStart\n\t            };\n\t            var entry = {\n\t                multiLine: true,\n\t                slice: [start + 2, this.index],\n\t                range: [start, this.index],\n\t                loc: loc\n\t            };\n\t            comments.push(entry);\n\t        }\n\t        this.tolerateUnexpectedToken();\n\t        return comments;\n\t    };\n\t    Scanner.prototype.scanComments = function () {\n\t        var comments;\n\t        if (this.trackComment) {\n\t            comments = [];\n\t        }\n\t        var start = (this.index === 0);\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (character_1.Character.isWhiteSpace(ch)) {\n\t                ++this.index;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch)) {\n\t                ++this.index;\n\t                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {\n\t                    ++this.index;\n\t                }\n\t                ++this.lineNumber;\n\t                this.lineStart = this.index;\n\t                start = true;\n\t            }\n\t            else if (ch === 0x2F) {\n\t                ch = this.source.charCodeAt(this.index + 1);\n\t                if (ch === 0x2F) {\n\t                    this.index += 2;\n\t                    var comment = this.skipSingleLineComment(2);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                    start = true;\n\t                }\n\t                else if (ch === 0x2A) {\n\t                    this.index += 2;\n\t                    var comment = this.skipMultiLineComment();\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (start && ch === 0x2D) {\n\t                // U+003E is '>'\n\t                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {\n\t                    // '-->' is a single-line comment\n\t                    this.index += 3;\n\t                    var comment = this.skipSingleLineComment(3);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else if (ch === 0x3C && !this.isModule) {\n\t                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {\n\t                    this.index += 4; // `<!--`\n\t                    var comment = this.skipSingleLineComment(4);\n\t                    if (this.trackComment) {\n\t                        comments = comments.concat(comment);\n\t                    }\n\t                }\n\t                else {\n\t                    break;\n\t                }\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return comments;\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-future-reserved-words\n\t    Scanner.prototype.isFutureReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'enum':\n\t            case 'export':\n\t            case 'import':\n\t            case 'super':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isStrictModeReservedWord = function (id) {\n\t        switch (id) {\n\t            case 'implements':\n\t            case 'interface':\n\t            case 'package':\n\t            case 'private':\n\t            case 'protected':\n\t            case 'public':\n\t            case 'static':\n\t            case 'yield':\n\t            case 'let':\n\t                return true;\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.isRestrictedWord = function (id) {\n\t        return id === 'eval' || id === 'arguments';\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-keywords\n\t    Scanner.prototype.isKeyword = function (id) {\n\t        switch (id.length) {\n\t            case 2:\n\t                return (id === 'if') || (id === 'in') || (id === 'do');\n\t            case 3:\n\t                return (id === 'var') || (id === 'for') || (id === 'new') ||\n\t                    (id === 'try') || (id === 'let');\n\t            case 4:\n\t                return (id === 'this') || (id === 'else') || (id === 'case') ||\n\t                    (id === 'void') || (id === 'with') || (id === 'enum');\n\t            case 5:\n\t                return (id === 'while') || (id === 'break') || (id === 'catch') ||\n\t                    (id === 'throw') || (id === 'const') || (id === 'yield') ||\n\t                    (id === 'class') || (id === 'super');\n\t            case 6:\n\t                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n\t                    (id === 'switch') || (id === 'export') || (id === 'import');\n\t            case 7:\n\t                return (id === 'default') || (id === 'finally') || (id === 'extends');\n\t            case 8:\n\t                return (id === 'function') || (id === 'continue') || (id === 'debugger');\n\t            case 10:\n\t                return (id === 'instanceof');\n\t            default:\n\t                return false;\n\t        }\n\t    };\n\t    Scanner.prototype.codePointAt = function (i) {\n\t        var cp = this.source.charCodeAt(i);\n\t        if (cp >= 0xD800 && cp <= 0xDBFF) {\n\t            var second = this.source.charCodeAt(i + 1);\n\t            if (second >= 0xDC00 && second <= 0xDFFF) {\n\t                var first = cp;\n\t                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t            }\n\t        }\n\t        return cp;\n\t    };\n\t    Scanner.prototype.scanHexEscape = function (prefix) {\n\t        var len = (prefix === 'u') ? 4 : 2;\n\t        var code = 0;\n\t        for (var i = 0; i < len; ++i) {\n\t            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 16 + hexValue(this.source[this.index++]);\n\t            }\n\t            else {\n\t                return null;\n\t            }\n\t        }\n\t        return String.fromCharCode(code);\n\t    };\n\t    Scanner.prototype.scanUnicodeCodePointEscape = function () {\n\t        var ch = this.source[this.index];\n\t        var code = 0;\n\t        // At least, one hex digit is required.\n\t        if (ch === '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            code = code * 16 + hexValue(ch);\n\t        }\n\t        if (code > 0x10FFFF || ch !== '}') {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return character_1.Character.fromCodePoint(code);\n\t    };\n\t    Scanner.prototype.getIdentifier = function () {\n\t        var start = this.index++;\n\t        while (!this.eof()) {\n\t            var ch = this.source.charCodeAt(this.index);\n\t            if (ch === 0x5C) {\n\t                // Blackslash (U+005C) marks Unicode escape sequence.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            else if (ch >= 0xD800 && ch < 0xDFFF) {\n\t                // Need to handle surrogate pairs.\n\t                this.index = start;\n\t                return this.getComplexIdentifier();\n\t            }\n\t            if (character_1.Character.isIdentifierPart(ch)) {\n\t                ++this.index;\n\t            }\n\t            else {\n\t                break;\n\t            }\n\t        }\n\t        return this.source.slice(start, this.index);\n\t    };\n\t    Scanner.prototype.getComplexIdentifier = function () {\n\t        var cp = this.codePointAt(this.index);\n\t        var id = character_1.Character.fromCodePoint(cp);\n\t        this.index += id.length;\n\t        // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t        var ch;\n\t        if (cp === 0x5C) {\n\t            if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t            ++this.index;\n\t            if (this.source[this.index] === '{') {\n\t                ++this.index;\n\t                ch = this.scanUnicodeCodePointEscape();\n\t            }\n\t            else {\n\t                ch = this.scanHexEscape('u');\n\t                if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t            }\n\t            id = ch;\n\t        }\n\t        while (!this.eof()) {\n\t            cp = this.codePointAt(this.index);\n\t            if (!character_1.Character.isIdentifierPart(cp)) {\n\t                break;\n\t            }\n\t            ch = character_1.Character.fromCodePoint(cp);\n\t            id += ch;\n\t            this.index += ch.length;\n\t            // '\\u' (U+005C, U+0075) denotes an escaped character.\n\t            if (cp === 0x5C) {\n\t                id = id.substr(0, id.length - 1);\n\t                if (this.source.charCodeAt(this.index) !== 0x75) {\n\t                    this.throwUnexpectedToken();\n\t                }\n\t                ++this.index;\n\t                if (this.source[this.index] === '{') {\n\t                    ++this.index;\n\t                    ch = this.scanUnicodeCodePointEscape();\n\t                }\n\t                else {\n\t                    ch = this.scanHexEscape('u');\n\t                    if (ch === null || ch === '\\\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                        this.throwUnexpectedToken();\n\t                    }\n\t                }\n\t                id += ch;\n\t            }\n\t        }\n\t        return id;\n\t    };\n\t    Scanner.prototype.octalToDecimal = function (ch) {\n\t        // \\0 is not octal escape sequence\n\t        var octal = (ch !== '0');\n\t        var code = octalValue(ch);\n\t        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t            octal = true;\n\t            code = code * 8 + octalValue(this.source[this.index++]);\n\t            // 3 digits are only allowed when string starts\n\t            // with 0, 1, 2, 3\n\t            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                code = code * 8 + octalValue(this.source[this.index++]);\n\t            }\n\t        }\n\t        return {\n\t            code: code,\n\t            octal: octal\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-names-and-keywords\n\t    Scanner.prototype.scanIdentifier = function () {\n\t        var type;\n\t        var start = this.index;\n\t        // Backslash (U+005C) starts an escaped character.\n\t        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();\n\t        // There is no keyword or literal with only one character.\n\t        // Thus, it must be an identifier.\n\t        if (id.length === 1) {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        else if (this.isKeyword(id)) {\n\t            type = 4 /* Keyword */;\n\t        }\n\t        else if (id === 'null') {\n\t            type = 5 /* NullLiteral */;\n\t        }\n\t        else if (id === 'true' || id === 'false') {\n\t            type = 1 /* BooleanLiteral */;\n\t        }\n\t        else {\n\t            type = 3 /* Identifier */;\n\t        }\n\t        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {\n\t            var restore = this.index;\n\t            this.index = start;\n\t            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);\n\t            this.index = restore;\n\t        }\n\t        return {\n\t            type: type,\n\t            value: id,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-punctuators\n\t    Scanner.prototype.scanPunctuator = function () {\n\t        var start = this.index;\n\t        // Check for most common single-character punctuators.\n\t        var str = this.source[this.index];\n\t        switch (str) {\n\t            case '(':\n\t            case '{':\n\t                if (str === '{') {\n\t                    this.curlyStack.push('{');\n\t                }\n\t                ++this.index;\n\t                break;\n\t            case '.':\n\t                ++this.index;\n\t                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {\n\t                    // Spread operator: ...\n\t                    this.index += 2;\n\t                    str = '...';\n\t                }\n\t                break;\n\t            case '}':\n\t                ++this.index;\n\t                this.curlyStack.pop();\n\t                break;\n\t            case ')':\n\t            case ';':\n\t            case ',':\n\t            case '[':\n\t            case ']':\n\t            case ':':\n\t            case '?':\n\t            case '~':\n\t                ++this.index;\n\t                break;\n\t            default:\n\t                // 4-character punctuator.\n\t                str = this.source.substr(this.index, 4);\n\t                if (str === '>>>=') {\n\t                    this.index += 4;\n\t                }\n\t                else {\n\t                    // 3-character punctuators.\n\t                    str = str.substr(0, 3);\n\t                    if (str === '===' || str === '!==' || str === '>>>' ||\n\t                        str === '<<=' || str === '>>=' || str === '**=') {\n\t                        this.index += 3;\n\t                    }\n\t                    else {\n\t                        // 2-character punctuators.\n\t                        str = str.substr(0, 2);\n\t                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||\n\t                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||\n\t                            str === '++' || str === '--' || str === '<<' || str === '>>' ||\n\t                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||\n\t                            str === '<=' || str === '>=' || str === '=>' || str === '**') {\n\t                            this.index += 2;\n\t                        }\n\t                        else {\n\t                            // 1-character punctuators.\n\t                            str = this.source[this.index];\n\t                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {\n\t                                ++this.index;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t        }\n\t        if (this.index === start) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 7 /* Punctuator */,\n\t            value: str,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals\n\t    Scanner.prototype.scanHexLiteral = function (start) {\n\t        var num = '';\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt('0x' + num, 16),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanBinaryLiteral = function (start) {\n\t        var num = '';\n\t        var ch;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index];\n\t            if (ch !== '0' && ch !== '1') {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (num.length === 0) {\n\t            // only 0b or 0B\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!this.eof()) {\n\t            ch = this.source.charCodeAt(this.index);\n\t            /* istanbul ignore else */\n\t            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 2),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.scanOctalLiteral = function (prefix, start) {\n\t        var num = '';\n\t        var octal = false;\n\t        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {\n\t            octal = true;\n\t            num = '0' + this.source[this.index++];\n\t        }\n\t        else {\n\t            ++this.index;\n\t        }\n\t        while (!this.eof()) {\n\t            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {\n\t                break;\n\t            }\n\t            num += this.source[this.index++];\n\t        }\n\t        if (!octal && num.length === 0) {\n\t            // only 0o or 0O\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseInt(num, 8),\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.isImplicitOctalLiteral = function () {\n\t        // Implicit octal, unless there is a non-octal digit.\n\t        // (Annex B.1.1 on Numeric Literals)\n\t        for (var i = this.index + 1; i < this.length; ++i) {\n\t            var ch = this.source[i];\n\t            if (ch === '8' || ch === '9') {\n\t                return false;\n\t            }\n\t            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                return true;\n\t            }\n\t        }\n\t        return true;\n\t    };\n\t    Scanner.prototype.scanNumericLiteral = function () {\n\t        var start = this.index;\n\t        var ch = this.source[start];\n\t        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');\n\t        var num = '';\n\t        if (ch !== '.') {\n\t            num = this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            // Hex number starts with '0x'.\n\t            // Octal number starts with '0'.\n\t            // Octal number in ES6 starts with '0o'.\n\t            // Binary number in ES6 starts with '0b'.\n\t            if (num === '0') {\n\t                if (ch === 'x' || ch === 'X') {\n\t                    ++this.index;\n\t                    return this.scanHexLiteral(start);\n\t                }\n\t                if (ch === 'b' || ch === 'B') {\n\t                    ++this.index;\n\t                    return this.scanBinaryLiteral(start);\n\t                }\n\t                if (ch === 'o' || ch === 'O') {\n\t                    return this.scanOctalLiteral(ch, start);\n\t                }\n\t                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                    if (this.isImplicitOctalLiteral()) {\n\t                        return this.scanOctalLiteral(ch, start);\n\t                    }\n\t                }\n\t            }\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === '.') {\n\t            num += this.source[this.index++];\n\t            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                num += this.source[this.index++];\n\t            }\n\t            ch = this.source[this.index];\n\t        }\n\t        if (ch === 'e' || ch === 'E') {\n\t            num += this.source[this.index++];\n\t            ch = this.source[this.index];\n\t            if (ch === '+' || ch === '-') {\n\t                num += this.source[this.index++];\n\t            }\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                    num += this.source[this.index++];\n\t                }\n\t            }\n\t            else {\n\t                this.throwUnexpectedToken();\n\t            }\n\t        }\n\t        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 6 /* NumericLiteral */,\n\t            value: parseFloat(num),\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-string-literals\n\t    Scanner.prototype.scanStringLiteral = function () {\n\t        var start = this.index;\n\t        var quote = this.source[start];\n\t        assert_1.assert((quote === '\\'' || quote === '\"'), 'String literal must starts with a quote');\n\t        ++this.index;\n\t        var octal = false;\n\t        var str = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === quote) {\n\t                quote = '';\n\t                break;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                str += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var unescaped_1 = this.scanHexEscape(ch);\n\t                                if (unescaped_1 === null) {\n\t                                    this.throwUnexpectedToken();\n\t                                }\n\t                                str += unescaped_1;\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            str += unescaped;\n\t                            break;\n\t                        case 'n':\n\t                            str += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            str += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            str += '\\t';\n\t                            break;\n\t                        case 'b':\n\t                            str += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            str += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            str += '\\x0B';\n\t                            break;\n\t                        case '8':\n\t                        case '9':\n\t                            str += ch;\n\t                            this.tolerateUnexpectedToken();\n\t                            break;\n\t                        default:\n\t                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                var octToDec = this.octalToDecimal(ch);\n\t                                octal = octToDec.octal || octal;\n\t                                str += String.fromCharCode(octToDec.code);\n\t                            }\n\t                            else {\n\t                                str += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            else {\n\t                str += ch;\n\t            }\n\t        }\n\t        if (quote !== '') {\n\t            this.index = start;\n\t            this.throwUnexpectedToken();\n\t        }\n\t        return {\n\t            type: 8 /* StringLiteral */,\n\t            value: str,\n\t            octal: octal,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components\n\t    Scanner.prototype.scanTemplate = function () {\n\t        var cooked = '';\n\t        var terminated = false;\n\t        var start = this.index;\n\t        var head = (this.source[start] === '`');\n\t        var tail = false;\n\t        var rawOffset = 2;\n\t        ++this.index;\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index++];\n\t            if (ch === '`') {\n\t                rawOffset = 1;\n\t                tail = true;\n\t                terminated = true;\n\t                break;\n\t            }\n\t            else if (ch === '$') {\n\t                if (this.source[this.index] === '{') {\n\t                    this.curlyStack.push('${');\n\t                    ++this.index;\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                cooked += ch;\n\t            }\n\t            else if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    switch (ch) {\n\t                        case 'n':\n\t                            cooked += '\\n';\n\t                            break;\n\t                        case 'r':\n\t                            cooked += '\\r';\n\t                            break;\n\t                        case 't':\n\t                            cooked += '\\t';\n\t                            break;\n\t                        case 'u':\n\t                            if (this.source[this.index] === '{') {\n\t                                ++this.index;\n\t                                cooked += this.scanUnicodeCodePointEscape();\n\t                            }\n\t                            else {\n\t                                var restore = this.index;\n\t                                var unescaped_2 = this.scanHexEscape(ch);\n\t                                if (unescaped_2 !== null) {\n\t                                    cooked += unescaped_2;\n\t                                }\n\t                                else {\n\t                                    this.index = restore;\n\t                                    cooked += ch;\n\t                                }\n\t                            }\n\t                            break;\n\t                        case 'x':\n\t                            var unescaped = this.scanHexEscape(ch);\n\t                            if (unescaped === null) {\n\t                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);\n\t                            }\n\t                            cooked += unescaped;\n\t                            break;\n\t                        case 'b':\n\t                            cooked += '\\b';\n\t                            break;\n\t                        case 'f':\n\t                            cooked += '\\f';\n\t                            break;\n\t                        case 'v':\n\t                            cooked += '\\v';\n\t                            break;\n\t                        default:\n\t                            if (ch === '0') {\n\t                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {\n\t                                    // Illegal: \\01 \\02 and so on\n\t                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                                }\n\t                                cooked += '\\0';\n\t                            }\n\t                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {\n\t                                // Illegal: \\1 \\2\n\t                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);\n\t                            }\n\t                            else {\n\t                                cooked += ch;\n\t                            }\n\t                            break;\n\t                    }\n\t                }\n\t                else {\n\t                    ++this.lineNumber;\n\t                    if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                        ++this.index;\n\t                    }\n\t                    this.lineStart = this.index;\n\t                }\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                ++this.lineNumber;\n\t                if (ch === '\\r' && this.source[this.index] === '\\n') {\n\t                    ++this.index;\n\t                }\n\t                this.lineStart = this.index;\n\t                cooked += '\\n';\n\t            }\n\t            else {\n\t                cooked += ch;\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken();\n\t        }\n\t        if (!head) {\n\t            this.curlyStack.pop();\n\t        }\n\t        return {\n\t            type: 10 /* Template */,\n\t            value: this.source.slice(start + 1, this.index - rawOffset),\n\t            cooked: cooked,\n\t            head: head,\n\t            tail: tail,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t    Scanner.prototype.testRegExp = function (pattern, flags) {\n\t        // The BMP character to use as a replacement for astral symbols when\n\t        // translating an ES6 \"u\"-flagged pattern to an ES5-compatible\n\t        // approximation.\n\t        // Note: replacing with '\\uFFFF' enables false positives in unlikely\n\t        // scenarios. For example, `[\\u{1044f}-\\u{10440}]` is an invalid\n\t        // pattern that would not be detected by this substitution.\n\t        var astralSubstitute = '\\uFFFF';\n\t        var tmp = pattern;\n\t        var self = this;\n\t        if (flags.indexOf('u') >= 0) {\n\t            tmp = tmp\n\t                .replace(/\\\\u\\{([0-9a-fA-F]+)\\}|\\\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {\n\t                var codePoint = parseInt($1 || $2, 16);\n\t                if (codePoint > 0x10FFFF) {\n\t                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t                }\n\t                if (codePoint <= 0xFFFF) {\n\t                    return String.fromCharCode(codePoint);\n\t                }\n\t                return astralSubstitute;\n\t            })\n\t                .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, astralSubstitute);\n\t        }\n\t        // First, detect invalid regular expressions.\n\t        try {\n\t            RegExp(tmp);\n\t        }\n\t        catch (e) {\n\t            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);\n\t        }\n\t        // Return a regular expression object for this pattern-flag pair, or\n\t        // `null` in case the current environment doesn't support the flags it\n\t        // uses.\n\t        try {\n\t            return new RegExp(pattern, flags);\n\t        }\n\t        catch (exception) {\n\t            /* istanbul ignore next */\n\t            return null;\n\t        }\n\t    };\n\t    Scanner.prototype.scanRegExpBody = function () {\n\t        var ch = this.source[this.index];\n\t        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');\n\t        var str = this.source[this.index++];\n\t        var classMarker = false;\n\t        var terminated = false;\n\t        while (!this.eof()) {\n\t            ch = this.source[this.index++];\n\t            str += ch;\n\t            if (ch === '\\\\') {\n\t                ch = this.source[this.index++];\n\t                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals\n\t                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t                }\n\t                str += ch;\n\t            }\n\t            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {\n\t                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t            }\n\t            else if (classMarker) {\n\t                if (ch === ']') {\n\t                    classMarker = false;\n\t                }\n\t            }\n\t            else {\n\t                if (ch === '/') {\n\t                    terminated = true;\n\t                    break;\n\t                }\n\t                else if (ch === '[') {\n\t                    classMarker = true;\n\t                }\n\t            }\n\t        }\n\t        if (!terminated) {\n\t            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);\n\t        }\n\t        // Exclude leading and trailing slash.\n\t        return str.substr(1, str.length - 2);\n\t    };\n\t    Scanner.prototype.scanRegExpFlags = function () {\n\t        var str = '';\n\t        var flags = '';\n\t        while (!this.eof()) {\n\t            var ch = this.source[this.index];\n\t            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {\n\t                break;\n\t            }\n\t            ++this.index;\n\t            if (ch === '\\\\' && !this.eof()) {\n\t                ch = this.source[this.index];\n\t                if (ch === 'u') {\n\t                    ++this.index;\n\t                    var restore = this.index;\n\t                    var char = this.scanHexEscape('u');\n\t                    if (char !== null) {\n\t                        flags += char;\n\t                        for (str += '\\\\u'; restore < this.index; ++restore) {\n\t                            str += this.source[restore];\n\t                        }\n\t                    }\n\t                    else {\n\t                        this.index = restore;\n\t                        flags += 'u';\n\t                        str += '\\\\u';\n\t                    }\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t                else {\n\t                    str += '\\\\';\n\t                    this.tolerateUnexpectedToken();\n\t                }\n\t            }\n\t            else {\n\t                flags += ch;\n\t                str += ch;\n\t            }\n\t        }\n\t        return flags;\n\t    };\n\t    Scanner.prototype.scanRegExp = function () {\n\t        var start = this.index;\n\t        var pattern = this.scanRegExpBody();\n\t        var flags = this.scanRegExpFlags();\n\t        var value = this.testRegExp(pattern, flags);\n\t        return {\n\t            type: 9 /* RegularExpression */,\n\t            value: '',\n\t            pattern: pattern,\n\t            flags: flags,\n\t            regex: value,\n\t            lineNumber: this.lineNumber,\n\t            lineStart: this.lineStart,\n\t            start: start,\n\t            end: this.index\n\t        };\n\t    };\n\t    Scanner.prototype.lex = function () {\n\t        if (this.eof()) {\n\t            return {\n\t                type: 2 /* EOF */,\n\t                value: '',\n\t                lineNumber: this.lineNumber,\n\t                lineStart: this.lineStart,\n\t                start: this.index,\n\t                end: this.index\n\t            };\n\t        }\n\t        var cp = this.source.charCodeAt(this.index);\n\t        if (character_1.Character.isIdentifierStart(cp)) {\n\t            return this.scanIdentifier();\n\t        }\n\t        // Very common: ( and ) and ;\n\t        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {\n\t            return this.scanPunctuator();\n\t        }\n\t        // String literal starts with single quote (U+0027) or double quote (U+0022).\n\t        if (cp === 0x27 || cp === 0x22) {\n\t            return this.scanStringLiteral();\n\t        }\n\t        // Dot (.) U+002E can also start a floating-point number, hence the need\n\t        // to check the next character.\n\t        if (cp === 0x2E) {\n\t            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {\n\t                return this.scanNumericLiteral();\n\t            }\n\t            return this.scanPunctuator();\n\t        }\n\t        if (character_1.Character.isDecimalDigit(cp)) {\n\t            return this.scanNumericLiteral();\n\t        }\n\t        // Template literals start with ` (U+0060) for template head\n\t        // or } (U+007D) for template middle or template tail.\n\t        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {\n\t            return this.scanTemplate();\n\t        }\n\t        // Possible identifier start in a surrogate pair.\n\t        if (cp >= 0xD800 && cp < 0xDFFF) {\n\t            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {\n\t                return this.scanIdentifier();\n\t            }\n\t        }\n\t        return this.scanPunctuator();\n\t    };\n\t    return Scanner;\n\t}());\n\texports.Scanner = Scanner;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.TokenName = {};\n\texports.TokenName[1 /* BooleanLiteral */] = 'Boolean';\n\texports.TokenName[2 /* EOF */] = '<end>';\n\texports.TokenName[3 /* Identifier */] = 'Identifier';\n\texports.TokenName[4 /* Keyword */] = 'Keyword';\n\texports.TokenName[5 /* NullLiteral */] = 'Null';\n\texports.TokenName[6 /* NumericLiteral */] = 'Numeric';\n\texports.TokenName[7 /* Punctuator */] = 'Punctuator';\n\texports.TokenName[8 /* StringLiteral */] = 'String';\n\texports.TokenName[9 /* RegularExpression */] = 'RegularExpression';\n\texports.TokenName[10 /* Template */] = 'Template';\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t// Generated by generate-xhtml-entities.js. DO NOT MODIFY!\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.XHTMLEntities = {\n\t    quot: '\\u0022',\n\t    amp: '\\u0026',\n\t    apos: '\\u0027',\n\t    gt: '\\u003E',\n\t    nbsp: '\\u00A0',\n\t    iexcl: '\\u00A1',\n\t    cent: '\\u00A2',\n\t    pound: '\\u00A3',\n\t    curren: '\\u00A4',\n\t    yen: '\\u00A5',\n\t    brvbar: '\\u00A6',\n\t    sect: '\\u00A7',\n\t    uml: '\\u00A8',\n\t    copy: '\\u00A9',\n\t    ordf: '\\u00AA',\n\t    laquo: '\\u00AB',\n\t    not: '\\u00AC',\n\t    shy: '\\u00AD',\n\t    reg: '\\u00AE',\n\t    macr: '\\u00AF',\n\t    deg: '\\u00B0',\n\t    plusmn: '\\u00B1',\n\t    sup2: '\\u00B2',\n\t    sup3: '\\u00B3',\n\t    acute: '\\u00B4',\n\t    micro: '\\u00B5',\n\t    para: '\\u00B6',\n\t    middot: '\\u00B7',\n\t    cedil: '\\u00B8',\n\t    sup1: '\\u00B9',\n\t    ordm: '\\u00BA',\n\t    raquo: '\\u00BB',\n\t    frac14: '\\u00BC',\n\t    frac12: '\\u00BD',\n\t    frac34: '\\u00BE',\n\t    iquest: '\\u00BF',\n\t    Agrave: '\\u00C0',\n\t    Aacute: '\\u00C1',\n\t    Acirc: '\\u00C2',\n\t    Atilde: '\\u00C3',\n\t    Auml: '\\u00C4',\n\t    Aring: '\\u00C5',\n\t    AElig: '\\u00C6',\n\t    Ccedil: '\\u00C7',\n\t    Egrave: '\\u00C8',\n\t    Eacute: '\\u00C9',\n\t    Ecirc: '\\u00CA',\n\t    Euml: '\\u00CB',\n\t    Igrave: '\\u00CC',\n\t    Iacute: '\\u00CD',\n\t    Icirc: '\\u00CE',\n\t    Iuml: '\\u00CF',\n\t    ETH: '\\u00D0',\n\t    Ntilde: '\\u00D1',\n\t    Ograve: '\\u00D2',\n\t    Oacute: '\\u00D3',\n\t    Ocirc: '\\u00D4',\n\t    Otilde: '\\u00D5',\n\t    Ouml: '\\u00D6',\n\t    times: '\\u00D7',\n\t    Oslash: '\\u00D8',\n\t    Ugrave: '\\u00D9',\n\t    Uacute: '\\u00DA',\n\t    Ucirc: '\\u00DB',\n\t    Uuml: '\\u00DC',\n\t    Yacute: '\\u00DD',\n\t    THORN: '\\u00DE',\n\t    szlig: '\\u00DF',\n\t    agrave: '\\u00E0',\n\t    aacute: '\\u00E1',\n\t    acirc: '\\u00E2',\n\t    atilde: '\\u00E3',\n\t    auml: '\\u00E4',\n\t    aring: '\\u00E5',\n\t    aelig: '\\u00E6',\n\t    ccedil: '\\u00E7',\n\t    egrave: '\\u00E8',\n\t    eacute: '\\u00E9',\n\t    ecirc: '\\u00EA',\n\t    euml: '\\u00EB',\n\t    igrave: '\\u00EC',\n\t    iacute: '\\u00ED',\n\t    icirc: '\\u00EE',\n\t    iuml: '\\u00EF',\n\t    eth: '\\u00F0',\n\t    ntilde: '\\u00F1',\n\t    ograve: '\\u00F2',\n\t    oacute: '\\u00F3',\n\t    ocirc: '\\u00F4',\n\t    otilde: '\\u00F5',\n\t    ouml: '\\u00F6',\n\t    divide: '\\u00F7',\n\t    oslash: '\\u00F8',\n\t    ugrave: '\\u00F9',\n\t    uacute: '\\u00FA',\n\t    ucirc: '\\u00FB',\n\t    uuml: '\\u00FC',\n\t    yacute: '\\u00FD',\n\t    thorn: '\\u00FE',\n\t    yuml: '\\u00FF',\n\t    OElig: '\\u0152',\n\t    oelig: '\\u0153',\n\t    Scaron: '\\u0160',\n\t    scaron: '\\u0161',\n\t    Yuml: '\\u0178',\n\t    fnof: '\\u0192',\n\t    circ: '\\u02C6',\n\t    tilde: '\\u02DC',\n\t    Alpha: '\\u0391',\n\t    Beta: '\\u0392',\n\t    Gamma: '\\u0393',\n\t    Delta: '\\u0394',\n\t    Epsilon: '\\u0395',\n\t    Zeta: '\\u0396',\n\t    Eta: '\\u0397',\n\t    Theta: '\\u0398',\n\t    Iota: '\\u0399',\n\t    Kappa: '\\u039A',\n\t    Lambda: '\\u039B',\n\t    Mu: '\\u039C',\n\t    Nu: '\\u039D',\n\t    Xi: '\\u039E',\n\t    Omicron: '\\u039F',\n\t    Pi: '\\u03A0',\n\t    Rho: '\\u03A1',\n\t    Sigma: '\\u03A3',\n\t    Tau: '\\u03A4',\n\t    Upsilon: '\\u03A5',\n\t    Phi: '\\u03A6',\n\t    Chi: '\\u03A7',\n\t    Psi: '\\u03A8',\n\t    Omega: '\\u03A9',\n\t    alpha: '\\u03B1',\n\t    beta: '\\u03B2',\n\t    gamma: '\\u03B3',\n\t    delta: '\\u03B4',\n\t    epsilon: '\\u03B5',\n\t    zeta: '\\u03B6',\n\t    eta: '\\u03B7',\n\t    theta: '\\u03B8',\n\t    iota: '\\u03B9',\n\t    kappa: '\\u03BA',\n\t    lambda: '\\u03BB',\n\t    mu: '\\u03BC',\n\t    nu: '\\u03BD',\n\t    xi: '\\u03BE',\n\t    omicron: '\\u03BF',\n\t    pi: '\\u03C0',\n\t    rho: '\\u03C1',\n\t    sigmaf: '\\u03C2',\n\t    sigma: '\\u03C3',\n\t    tau: '\\u03C4',\n\t    upsilon: '\\u03C5',\n\t    phi: '\\u03C6',\n\t    chi: '\\u03C7',\n\t    psi: '\\u03C8',\n\t    omega: '\\u03C9',\n\t    thetasym: '\\u03D1',\n\t    upsih: '\\u03D2',\n\t    piv: '\\u03D6',\n\t    ensp: '\\u2002',\n\t    emsp: '\\u2003',\n\t    thinsp: '\\u2009',\n\t    zwnj: '\\u200C',\n\t    zwj: '\\u200D',\n\t    lrm: '\\u200E',\n\t    rlm: '\\u200F',\n\t    ndash: '\\u2013',\n\t    mdash: '\\u2014',\n\t    lsquo: '\\u2018',\n\t    rsquo: '\\u2019',\n\t    sbquo: '\\u201A',\n\t    ldquo: '\\u201C',\n\t    rdquo: '\\u201D',\n\t    bdquo: '\\u201E',\n\t    dagger: '\\u2020',\n\t    Dagger: '\\u2021',\n\t    bull: '\\u2022',\n\t    hellip: '\\u2026',\n\t    permil: '\\u2030',\n\t    prime: '\\u2032',\n\t    Prime: '\\u2033',\n\t    lsaquo: '\\u2039',\n\t    rsaquo: '\\u203A',\n\t    oline: '\\u203E',\n\t    frasl: '\\u2044',\n\t    euro: '\\u20AC',\n\t    image: '\\u2111',\n\t    weierp: '\\u2118',\n\t    real: '\\u211C',\n\t    trade: '\\u2122',\n\t    alefsym: '\\u2135',\n\t    larr: '\\u2190',\n\t    uarr: '\\u2191',\n\t    rarr: '\\u2192',\n\t    darr: '\\u2193',\n\t    harr: '\\u2194',\n\t    crarr: '\\u21B5',\n\t    lArr: '\\u21D0',\n\t    uArr: '\\u21D1',\n\t    rArr: '\\u21D2',\n\t    dArr: '\\u21D3',\n\t    hArr: '\\u21D4',\n\t    forall: '\\u2200',\n\t    part: '\\u2202',\n\t    exist: '\\u2203',\n\t    empty: '\\u2205',\n\t    nabla: '\\u2207',\n\t    isin: '\\u2208',\n\t    notin: '\\u2209',\n\t    ni: '\\u220B',\n\t    prod: '\\u220F',\n\t    sum: '\\u2211',\n\t    minus: '\\u2212',\n\t    lowast: '\\u2217',\n\t    radic: '\\u221A',\n\t    prop: '\\u221D',\n\t    infin: '\\u221E',\n\t    ang: '\\u2220',\n\t    and: '\\u2227',\n\t    or: '\\u2228',\n\t    cap: '\\u2229',\n\t    cup: '\\u222A',\n\t    int: '\\u222B',\n\t    there4: '\\u2234',\n\t    sim: '\\u223C',\n\t    cong: '\\u2245',\n\t    asymp: '\\u2248',\n\t    ne: '\\u2260',\n\t    equiv: '\\u2261',\n\t    le: '\\u2264',\n\t    ge: '\\u2265',\n\t    sub: '\\u2282',\n\t    sup: '\\u2283',\n\t    nsub: '\\u2284',\n\t    sube: '\\u2286',\n\t    supe: '\\u2287',\n\t    oplus: '\\u2295',\n\t    otimes: '\\u2297',\n\t    perp: '\\u22A5',\n\t    sdot: '\\u22C5',\n\t    lceil: '\\u2308',\n\t    rceil: '\\u2309',\n\t    lfloor: '\\u230A',\n\t    rfloor: '\\u230B',\n\t    loz: '\\u25CA',\n\t    spades: '\\u2660',\n\t    clubs: '\\u2663',\n\t    hearts: '\\u2665',\n\t    diams: '\\u2666',\n\t    lang: '\\u27E8',\n\t    rang: '\\u27E9'\n\t};\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\tvar error_handler_1 = __webpack_require__(10);\n\tvar scanner_1 = __webpack_require__(12);\n\tvar token_1 = __webpack_require__(13);\n\tvar Reader = (function () {\n\t    function Reader() {\n\t        this.values = [];\n\t        this.curly = this.paren = -1;\n\t    }\n\t    // A function following one of those tokens is an expression.\n\t    Reader.prototype.beforeFunctionExpression = function (t) {\n\t        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n\t            'return', 'case', 'delete', 'throw', 'void',\n\t            // assignment operators\n\t            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',\n\t            '&=', '|=', '^=', ',',\n\t            // binary/unary operators\n\t            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n\t            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n\t            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;\n\t    };\n\t    // Determine if forward slash (/) is an operator or part of a regular expression\n\t    // https://github.com/mozilla/sweet.js/wiki/design\n\t    Reader.prototype.isRegexStart = function () {\n\t        var previous = this.values[this.values.length - 1];\n\t        var regex = (previous !== null);\n\t        switch (previous) {\n\t            case 'this':\n\t            case ']':\n\t                regex = false;\n\t                break;\n\t            case ')':\n\t                var keyword = this.values[this.paren - 1];\n\t                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');\n\t                break;\n\t            case '}':\n\t                // Dividing a function by anything makes little sense,\n\t                // but we have to check for that.\n\t                regex = false;\n\t                if (this.values[this.curly - 3] === 'function') {\n\t                    // Anonymous function, e.g. function(){} /42\n\t                    var check = this.values[this.curly - 4];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : false;\n\t                }\n\t                else if (this.values[this.curly - 4] === 'function') {\n\t                    // Named function, e.g. function f(){} /42/\n\t                    var check = this.values[this.curly - 5];\n\t                    regex = check ? !this.beforeFunctionExpression(check) : true;\n\t                }\n\t                break;\n\t            default:\n\t                break;\n\t        }\n\t        return regex;\n\t    };\n\t    Reader.prototype.push = function (token) {\n\t        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {\n\t            if (token.value === '{') {\n\t                this.curly = this.values.length;\n\t            }\n\t            else if (token.value === '(') {\n\t                this.paren = this.values.length;\n\t            }\n\t            this.values.push(token.value);\n\t        }\n\t        else {\n\t            this.values.push(null);\n\t        }\n\t    };\n\t    return Reader;\n\t}());\n\tvar Tokenizer = (function () {\n\t    function Tokenizer(code, config) {\n\t        this.errorHandler = new error_handler_1.ErrorHandler();\n\t        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;\n\t        this.scanner = new scanner_1.Scanner(code, this.errorHandler);\n\t        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;\n\t        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;\n\t        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;\n\t        this.buffer = [];\n\t        this.reader = new Reader();\n\t    }\n\t    Tokenizer.prototype.errors = function () {\n\t        return this.errorHandler.errors;\n\t    };\n\t    Tokenizer.prototype.getNextToken = function () {\n\t        if (this.buffer.length === 0) {\n\t            var comments = this.scanner.scanComments();\n\t            if (this.scanner.trackComment) {\n\t                for (var i = 0; i < comments.length; ++i) {\n\t                    var e = comments[i];\n\t                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);\n\t                    var comment = {\n\t                        type: e.multiLine ? 'BlockComment' : 'LineComment',\n\t                        value: value\n\t                    };\n\t                    if (this.trackRange) {\n\t                        comment.range = e.range;\n\t                    }\n\t                    if (this.trackLoc) {\n\t                        comment.loc = e.loc;\n\t                    }\n\t                    this.buffer.push(comment);\n\t                }\n\t            }\n\t            if (!this.scanner.eof()) {\n\t                var loc = void 0;\n\t                if (this.trackLoc) {\n\t                    loc = {\n\t                        start: {\n\t                            line: this.scanner.lineNumber,\n\t                            column: this.scanner.index - this.scanner.lineStart\n\t                        },\n\t                        end: {}\n\t                    };\n\t                }\n\t                var startRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();\n\t                var token = startRegex ? this.scanner.scanRegExp() : this.scanner.lex();\n\t                this.reader.push(token);\n\t                var entry = {\n\t                    type: token_1.TokenName[token.type],\n\t                    value: this.scanner.source.slice(token.start, token.end)\n\t                };\n\t                if (this.trackRange) {\n\t                    entry.range = [token.start, token.end];\n\t                }\n\t                if (this.trackLoc) {\n\t                    loc.end = {\n\t                        line: this.scanner.lineNumber,\n\t                        column: this.scanner.index - this.scanner.lineStart\n\t                    };\n\t                    entry.loc = loc;\n\t                }\n\t                if (token.type === 9 /* RegularExpression */) {\n\t                    var pattern = token.pattern;\n\t                    var flags = token.flags;\n\t                    entry.regex = { pattern: pattern, flags: flags };\n\t                }\n\t                this.buffer.push(entry);\n\t            }\n\t        }\n\t        return this.buffer.shift();\n\t    };\n\t    return Tokenizer;\n\t}());\n\texports.Tokenizer = Tokenizer;\n\n\n/***/ }\n/******/ ])\n});\n;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = void 0;\n// This module is suitable for passing as options.parser when calling\n// recast.parse to process ECMAScript code with Esprima:\n//\n//   const ast = recast.parse(source, {\n//     parser: require(\"recast/parsers/esprima\")\n//   });\n//\nvar util_1 = require(\"../lib/util\");\nfunction parse(source, options) {\n    var comments = [];\n    var ast = require(\"esprima\").parse(source, {\n        loc: true,\n        locations: true,\n        comment: true,\n        onComment: comments,\n        range: (0, util_1.getOption)(options, \"range\", false),\n        tolerant: (0, util_1.getOption)(options, \"tolerant\", true),\n        tokens: true,\n        jsx: (0, util_1.getOption)(options, \"jsx\", false),\n        sourceType: (0, util_1.getOption)(options, \"sourceType\", \"module\"),\n    });\n    if (!Array.isArray(ast.comments)) {\n        ast.comments = comments;\n    }\n    return ast;\n}\nexports.parse = parse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = void 0;\nvar util_1 = require(\"./util\");\nvar defaults = {\n    parser: require(\"../parsers/esprima\"),\n    tabWidth: 4,\n    useTabs: false,\n    reuseWhitespace: true,\n    lineTerminator: (0, util_1.getLineTerminator)(),\n    wrapColumn: 74,\n    sourceFileName: null,\n    sourceMapName: null,\n    sourceRoot: null,\n    inputSourceMap: null,\n    range: false,\n    tolerant: true,\n    quote: null,\n    trailingComma: false,\n    arrayBracketSpacing: false,\n    objectCurlySpacing: true,\n    arrowParensAlways: false,\n    flowObjectCommas: true,\n    tokens: true,\n};\nvar hasOwn = defaults.hasOwnProperty;\n// Copy options and fill in default values.\nfunction normalize(opts) {\n    var options = opts || defaults;\n    function get(key) {\n        return hasOwn.call(options, key) ? options[key] : defaults[key];\n    }\n    return {\n        tabWidth: +get(\"tabWidth\"),\n        useTabs: !!get(\"useTabs\"),\n        reuseWhitespace: !!get(\"reuseWhitespace\"),\n        lineTerminator: get(\"lineTerminator\"),\n        wrapColumn: Math.max(get(\"wrapColumn\"), 0),\n        sourceFileName: get(\"sourceFileName\"),\n        sourceMapName: get(\"sourceMapName\"),\n        sourceRoot: get(\"sourceRoot\"),\n        inputSourceMap: get(\"inputSourceMap\"),\n        parser: get(\"esprima\") || get(\"parser\"),\n        range: get(\"range\"),\n        tolerant: get(\"tolerant\"),\n        quote: get(\"quote\"),\n        trailingComma: get(\"trailingComma\"),\n        arrayBracketSpacing: get(\"arrayBracketSpacing\"),\n        objectCurlySpacing: get(\"objectCurlySpacing\"),\n        arrowParensAlways: get(\"arrowParensAlways\"),\n        flowObjectCommas: get(\"flowObjectCommas\"),\n        tokens: !!get(\"tokens\"),\n    };\n}\nexports.normalize = normalize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tiny_invariant_1 = tslib_1.__importDefault(require(\"tiny-invariant\"));\nvar util_1 = require(\"./util\");\nvar Mapping = /** @class */ (function () {\n    function Mapping(sourceLines, sourceLoc, targetLoc) {\n        if (targetLoc === void 0) { targetLoc = sourceLoc; }\n        this.sourceLines = sourceLines;\n        this.sourceLoc = sourceLoc;\n        this.targetLoc = targetLoc;\n    }\n    Mapping.prototype.slice = function (lines, start, end) {\n        if (end === void 0) { end = lines.lastPos(); }\n        var sourceLines = this.sourceLines;\n        var sourceLoc = this.sourceLoc;\n        var targetLoc = this.targetLoc;\n        function skip(name) {\n            var sourceFromPos = sourceLoc[name];\n            var targetFromPos = targetLoc[name];\n            var targetToPos = start;\n            if (name === \"end\") {\n                targetToPos = end;\n            }\n            else {\n                (0, tiny_invariant_1.default)(name === \"start\");\n            }\n            return skipChars(sourceLines, sourceFromPos, lines, targetFromPos, targetToPos);\n        }\n        if ((0, util_1.comparePos)(start, targetLoc.start) <= 0) {\n            if ((0, util_1.comparePos)(targetLoc.end, end) <= 0) {\n                targetLoc = {\n                    start: subtractPos(targetLoc.start, start.line, start.column),\n                    end: subtractPos(targetLoc.end, start.line, start.column),\n                };\n                // The sourceLoc can stay the same because the contents of the\n                // targetLoc have not changed.\n            }\n            else if ((0, util_1.comparePos)(end, targetLoc.start) <= 0) {\n                return null;\n            }\n            else {\n                sourceLoc = {\n                    start: sourceLoc.start,\n                    end: skip(\"end\"),\n                };\n                targetLoc = {\n                    start: subtractPos(targetLoc.start, start.line, start.column),\n                    end: subtractPos(end, start.line, start.column),\n                };\n            }\n        }\n        else {\n            if ((0, util_1.comparePos)(targetLoc.end, start) <= 0) {\n                return null;\n            }\n            if ((0, util_1.comparePos)(targetLoc.end, end) <= 0) {\n                sourceLoc = {\n                    start: skip(\"start\"),\n                    end: sourceLoc.end,\n                };\n                targetLoc = {\n                    // Same as subtractPos(start, start.line, start.column):\n                    start: { line: 1, column: 0 },\n                    end: subtractPos(targetLoc.end, start.line, start.column),\n                };\n            }\n            else {\n                sourceLoc = {\n                    start: skip(\"start\"),\n                    end: skip(\"end\"),\n                };\n                targetLoc = {\n                    // Same as subtractPos(start, start.line, start.column):\n                    start: { line: 1, column: 0 },\n                    end: subtractPos(end, start.line, start.column),\n                };\n            }\n        }\n        return new Mapping(this.sourceLines, sourceLoc, targetLoc);\n    };\n    Mapping.prototype.add = function (line, column) {\n        return new Mapping(this.sourceLines, this.sourceLoc, {\n            start: addPos(this.targetLoc.start, line, column),\n            end: addPos(this.targetLoc.end, line, column),\n        });\n    };\n    Mapping.prototype.subtract = function (line, column) {\n        return new Mapping(this.sourceLines, this.sourceLoc, {\n            start: subtractPos(this.targetLoc.start, line, column),\n            end: subtractPos(this.targetLoc.end, line, column),\n        });\n    };\n    Mapping.prototype.indent = function (by, skipFirstLine, noNegativeColumns) {\n        if (skipFirstLine === void 0) { skipFirstLine = false; }\n        if (noNegativeColumns === void 0) { noNegativeColumns = false; }\n        if (by === 0) {\n            return this;\n        }\n        var targetLoc = this.targetLoc;\n        var startLine = targetLoc.start.line;\n        var endLine = targetLoc.end.line;\n        if (skipFirstLine && startLine === 1 && endLine === 1) {\n            return this;\n        }\n        targetLoc = {\n            start: targetLoc.start,\n            end: targetLoc.end,\n        };\n        if (!skipFirstLine || startLine > 1) {\n            var startColumn = targetLoc.start.column + by;\n            targetLoc.start = {\n                line: startLine,\n                column: noNegativeColumns ? Math.max(0, startColumn) : startColumn,\n            };\n        }\n        if (!skipFirstLine || endLine > 1) {\n            var endColumn = targetLoc.end.column + by;\n            targetLoc.end = {\n                line: endLine,\n                column: noNegativeColumns ? Math.max(0, endColumn) : endColumn,\n            };\n        }\n        return new Mapping(this.sourceLines, this.sourceLoc, targetLoc);\n    };\n    return Mapping;\n}());\nexports.default = Mapping;\nfunction addPos(toPos, line, column) {\n    return {\n        line: toPos.line + line - 1,\n        column: toPos.line === 1 ? toPos.column + column : toPos.column,\n    };\n}\nfunction subtractPos(fromPos, line, column) {\n    return {\n        line: fromPos.line - line + 1,\n        column: fromPos.line === line ? fromPos.column - column : fromPos.column,\n    };\n}\nfunction skipChars(sourceLines, sourceFromPos, targetLines, targetFromPos, targetToPos) {\n    var targetComparison = (0, util_1.comparePos)(targetFromPos, targetToPos);\n    if (targetComparison === 0) {\n        // Trivial case: no characters to skip.\n        return sourceFromPos;\n    }\n    var sourceCursor, targetCursor;\n    if (targetComparison < 0) {\n        // Skipping forward.\n        sourceCursor =\n            sourceLines.skipSpaces(sourceFromPos) || sourceLines.lastPos();\n        targetCursor =\n            targetLines.skipSpaces(targetFromPos) || targetLines.lastPos();\n        var lineDiff = targetToPos.line - targetCursor.line;\n        sourceCursor.line += lineDiff;\n        targetCursor.line += lineDiff;\n        if (lineDiff > 0) {\n            // If jumping to later lines, reset columns to the beginnings\n            // of those lines.\n            sourceCursor.column = 0;\n            targetCursor.column = 0;\n        }\n        else {\n            (0, tiny_invariant_1.default)(lineDiff === 0);\n        }\n        while ((0, util_1.comparePos)(targetCursor, targetToPos) < 0 &&\n            targetLines.nextPos(targetCursor, true)) {\n            (0, tiny_invariant_1.default)(sourceLines.nextPos(sourceCursor, true));\n            (0, tiny_invariant_1.default)(sourceLines.charAt(sourceCursor) === targetLines.charAt(targetCursor));\n        }\n    }\n    else {\n        // Skipping backward.\n        sourceCursor =\n            sourceLines.skipSpaces(sourceFromPos, true) || sourceLines.firstPos();\n        targetCursor =\n            targetLines.skipSpaces(targetFromPos, true) || targetLines.firstPos();\n        var lineDiff = targetToPos.line - targetCursor.line;\n        sourceCursor.line += lineDiff;\n        targetCursor.line += lineDiff;\n        if (lineDiff < 0) {\n            // If jumping to earlier lines, reset columns to the ends of\n            // those lines.\n            sourceCursor.column = sourceLines.getLineLength(sourceCursor.line);\n            targetCursor.column = targetLines.getLineLength(targetCursor.line);\n        }\n        else {\n            (0, tiny_invariant_1.default)(lineDiff === 0);\n        }\n        while ((0, util_1.comparePos)(targetToPos, targetCursor) < 0 &&\n            targetLines.prevPos(targetCursor, true)) {\n            (0, tiny_invariant_1.default)(sourceLines.prevPos(sourceCursor, true));\n            (0, tiny_invariant_1.default)(sourceLines.charAt(sourceCursor) === targetLines.charAt(targetCursor));\n        }\n    }\n    return sourceCursor;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.concat = exports.fromString = exports.countSpaces = exports.Lines = void 0;\nvar tslib_1 = require(\"tslib\");\nvar tiny_invariant_1 = tslib_1.__importDefault(require(\"tiny-invariant\"));\nvar source_map_1 = tslib_1.__importDefault(require(\"source-map\"));\nvar options_1 = require(\"./options\");\nvar util_1 = require(\"./util\");\nvar mapping_1 = tslib_1.__importDefault(require(\"./mapping\"));\nvar Lines = /** @class */ (function () {\n    function Lines(infos, sourceFileName) {\n        if (sourceFileName === void 0) { sourceFileName = null; }\n        this.infos = infos;\n        this.mappings = [];\n        this.cachedSourceMap = null;\n        this.cachedTabWidth = void 0;\n        (0, tiny_invariant_1.default)(infos.length > 0);\n        this.length = infos.length;\n        this.name = sourceFileName || null;\n        if (this.name) {\n            this.mappings.push(new mapping_1.default(this, {\n                start: this.firstPos(),\n                end: this.lastPos(),\n            }));\n        }\n    }\n    Lines.prototype.toString = function (options) {\n        return this.sliceString(this.firstPos(), this.lastPos(), options);\n    };\n    Lines.prototype.getSourceMap = function (sourceMapName, sourceRoot) {\n        if (!sourceMapName) {\n            // Although we could make up a name or generate an anonymous\n            // source map, instead we assume that any consumer who does not\n            // provide a name does not actually want a source map.\n            return null;\n        }\n        var targetLines = this;\n        function updateJSON(json) {\n            json = json || {};\n            json.file = sourceMapName;\n            if (sourceRoot) {\n                json.sourceRoot = sourceRoot;\n            }\n            return json;\n        }\n        if (targetLines.cachedSourceMap) {\n            // Since Lines objects are immutable, we can reuse any source map\n            // that was previously generated. Nevertheless, we return a new\n            // JSON object here to protect the cached source map from outside\n            // modification.\n            return updateJSON(targetLines.cachedSourceMap.toJSON());\n        }\n        var smg = new source_map_1.default.SourceMapGenerator(updateJSON());\n        var sourcesToContents = {};\n        targetLines.mappings.forEach(function (mapping) {\n            var sourceCursor = mapping.sourceLines.skipSpaces(mapping.sourceLoc.start) ||\n                mapping.sourceLines.lastPos();\n            var targetCursor = targetLines.skipSpaces(mapping.targetLoc.start) ||\n                targetLines.lastPos();\n            while ((0, util_1.comparePos)(sourceCursor, mapping.sourceLoc.end) < 0 &&\n                (0, util_1.comparePos)(targetCursor, mapping.targetLoc.end) < 0) {\n                var sourceChar = mapping.sourceLines.charAt(sourceCursor);\n                var targetChar = targetLines.charAt(targetCursor);\n                (0, tiny_invariant_1.default)(sourceChar === targetChar);\n                var sourceName = mapping.sourceLines.name;\n                // Add mappings one character at a time for maximum resolution.\n                smg.addMapping({\n                    source: sourceName,\n                    original: { line: sourceCursor.line, column: sourceCursor.column },\n                    generated: { line: targetCursor.line, column: targetCursor.column },\n                });\n                if (!hasOwn.call(sourcesToContents, sourceName)) {\n                    var sourceContent = mapping.sourceLines.toString();\n                    smg.setSourceContent(sourceName, sourceContent);\n                    sourcesToContents[sourceName] = sourceContent;\n                }\n                targetLines.nextPos(targetCursor, true);\n                mapping.sourceLines.nextPos(sourceCursor, true);\n            }\n        });\n        targetLines.cachedSourceMap = smg;\n        return smg.toJSON();\n    };\n    Lines.prototype.bootstrapCharAt = function (pos) {\n        (0, tiny_invariant_1.default)(typeof pos === \"object\");\n        (0, tiny_invariant_1.default)(typeof pos.line === \"number\");\n        (0, tiny_invariant_1.default)(typeof pos.column === \"number\");\n        var line = pos.line, column = pos.column, strings = this.toString().split(lineTerminatorSeqExp), string = strings[line - 1];\n        if (typeof string === \"undefined\")\n            return \"\";\n        if (column === string.length && line < strings.length)\n            return \"\\n\";\n        if (column >= string.length)\n            return \"\";\n        return string.charAt(column);\n    };\n    Lines.prototype.charAt = function (pos) {\n        (0, tiny_invariant_1.default)(typeof pos === \"object\");\n        (0, tiny_invariant_1.default)(typeof pos.line === \"number\");\n        (0, tiny_invariant_1.default)(typeof pos.column === \"number\");\n        var line = pos.line, column = pos.column, secret = this, infos = secret.infos, info = infos[line - 1], c = column;\n        if (typeof info === \"undefined\" || c < 0)\n            return \"\";\n        var indent = this.getIndentAt(line);\n        if (c < indent)\n            return \" \";\n        c += info.sliceStart - indent;\n        if (c === info.sliceEnd && line < this.length)\n            return \"\\n\";\n        if (c >= info.sliceEnd)\n            return \"\";\n        return info.line.charAt(c);\n    };\n    Lines.prototype.stripMargin = function (width, skipFirstLine) {\n        if (width === 0)\n            return this;\n        (0, tiny_invariant_1.default)(width > 0, \"negative margin: \" + width);\n        if (skipFirstLine && this.length === 1)\n            return this;\n        var lines = new Lines(this.infos.map(function (info, i) {\n            if (info.line && (i > 0 || !skipFirstLine)) {\n                info = tslib_1.__assign(tslib_1.__assign({}, info), { indent: Math.max(0, info.indent - width) });\n            }\n            return info;\n        }));\n        if (this.mappings.length > 0) {\n            var newMappings_1 = lines.mappings;\n            (0, tiny_invariant_1.default)(newMappings_1.length === 0);\n            this.mappings.forEach(function (mapping) {\n                newMappings_1.push(mapping.indent(width, skipFirstLine, true));\n            });\n        }\n        return lines;\n    };\n    Lines.prototype.indent = function (by) {\n        if (by === 0) {\n            return this;\n        }\n        var lines = new Lines(this.infos.map(function (info) {\n            if (info.line && !info.locked) {\n                info = tslib_1.__assign(tslib_1.__assign({}, info), { indent: info.indent + by });\n            }\n            return info;\n        }));\n        if (this.mappings.length > 0) {\n            var newMappings_2 = lines.mappings;\n            (0, tiny_invariant_1.default)(newMappings_2.length === 0);\n            this.mappings.forEach(function (mapping) {\n                newMappings_2.push(mapping.indent(by));\n            });\n        }\n        return lines;\n    };\n    Lines.prototype.indentTail = function (by) {\n        if (by === 0) {\n            return this;\n        }\n        if (this.length < 2) {\n            return this;\n        }\n        var lines = new Lines(this.infos.map(function (info, i) {\n            if (i > 0 && info.line && !info.locked) {\n                info = tslib_1.__assign(tslib_1.__assign({}, info), { indent: info.indent + by });\n            }\n            return info;\n        }));\n        if (this.mappings.length > 0) {\n            var newMappings_3 = lines.mappings;\n            (0, tiny_invariant_1.default)(newMappings_3.length === 0);\n            this.mappings.forEach(function (mapping) {\n                newMappings_3.push(mapping.indent(by, true));\n            });\n        }\n        return lines;\n    };\n    Lines.prototype.lockIndentTail = function () {\n        if (this.length < 2) {\n            return this;\n        }\n        return new Lines(this.infos.map(function (info, i) { return (tslib_1.__assign(tslib_1.__assign({}, info), { locked: i > 0 })); }));\n    };\n    Lines.prototype.getIndentAt = function (line) {\n        (0, tiny_invariant_1.default)(line >= 1, \"no line \" + line + \" (line numbers start from 1)\");\n        return Math.max(this.infos[line - 1].indent, 0);\n    };\n    Lines.prototype.guessTabWidth = function () {\n        if (typeof this.cachedTabWidth === \"number\") {\n            return this.cachedTabWidth;\n        }\n        var counts = []; // Sparse array.\n        var lastIndent = 0;\n        for (var line = 1, last = this.length; line <= last; ++line) {\n            var info = this.infos[line - 1];\n            var sliced = info.line.slice(info.sliceStart, info.sliceEnd);\n            // Whitespace-only lines don't tell us much about the likely tab\n            // width of this code.\n            if (isOnlyWhitespace(sliced)) {\n                continue;\n            }\n            var diff = Math.abs(info.indent - lastIndent);\n            counts[diff] = ~~counts[diff] + 1;\n            lastIndent = info.indent;\n        }\n        var maxCount = -1;\n        var result = 2;\n        for (var tabWidth = 1; tabWidth < counts.length; tabWidth += 1) {\n            if (hasOwn.call(counts, tabWidth) && counts[tabWidth] > maxCount) {\n                maxCount = counts[tabWidth];\n                result = tabWidth;\n            }\n        }\n        return (this.cachedTabWidth = result);\n    };\n    // Determine if the list of lines has a first line that starts with a //\n    // or /* comment. If this is the case, the code may need to be wrapped in\n    // parens to avoid ASI issues.\n    Lines.prototype.startsWithComment = function () {\n        if (this.infos.length === 0) {\n            return false;\n        }\n        var firstLineInfo = this.infos[0], sliceStart = firstLineInfo.sliceStart, sliceEnd = firstLineInfo.sliceEnd, firstLine = firstLineInfo.line.slice(sliceStart, sliceEnd).trim();\n        return (firstLine.length === 0 ||\n            firstLine.slice(0, 2) === \"//\" ||\n            firstLine.slice(0, 2) === \"/*\");\n    };\n    Lines.prototype.isOnlyWhitespace = function () {\n        return isOnlyWhitespace(this.toString());\n    };\n    Lines.prototype.isPrecededOnlyByWhitespace = function (pos) {\n        var info = this.infos[pos.line - 1];\n        var indent = Math.max(info.indent, 0);\n        var diff = pos.column - indent;\n        if (diff <= 0) {\n            // If pos.column does not exceed the indentation amount, then\n            // there must be only whitespace before it.\n            return true;\n        }\n        var start = info.sliceStart;\n        var end = Math.min(start + diff, info.sliceEnd);\n        var prefix = info.line.slice(start, end);\n        return isOnlyWhitespace(prefix);\n    };\n    Lines.prototype.getLineLength = function (line) {\n        var info = this.infos[line - 1];\n        return this.getIndentAt(line) + info.sliceEnd - info.sliceStart;\n    };\n    Lines.prototype.nextPos = function (pos, skipSpaces) {\n        if (skipSpaces === void 0) { skipSpaces = false; }\n        var l = Math.max(pos.line, 0), c = Math.max(pos.column, 0);\n        if (c < this.getLineLength(l)) {\n            pos.column += 1;\n            return skipSpaces ? !!this.skipSpaces(pos, false, true) : true;\n        }\n        if (l < this.length) {\n            pos.line += 1;\n            pos.column = 0;\n            return skipSpaces ? !!this.skipSpaces(pos, false, true) : true;\n        }\n        return false;\n    };\n    Lines.prototype.prevPos = function (pos, skipSpaces) {\n        if (skipSpaces === void 0) { skipSpaces = false; }\n        var l = pos.line, c = pos.column;\n        if (c < 1) {\n            l -= 1;\n            if (l < 1)\n                return false;\n            c = this.getLineLength(l);\n        }\n        else {\n            c = Math.min(c - 1, this.getLineLength(l));\n        }\n        pos.line = l;\n        pos.column = c;\n        return skipSpaces ? !!this.skipSpaces(pos, true, true) : true;\n    };\n    Lines.prototype.firstPos = function () {\n        // Trivial, but provided for completeness.\n        return { line: 1, column: 0 };\n    };\n    Lines.prototype.lastPos = function () {\n        return {\n            line: this.length,\n            column: this.getLineLength(this.length),\n        };\n    };\n    Lines.prototype.skipSpaces = function (pos, backward, modifyInPlace) {\n        if (backward === void 0) { backward = false; }\n        if (modifyInPlace === void 0) { modifyInPlace = false; }\n        if (pos) {\n            pos = modifyInPlace\n                ? pos\n                : {\n                    line: pos.line,\n                    column: pos.column,\n                };\n        }\n        else if (backward) {\n            pos = this.lastPos();\n        }\n        else {\n            pos = this.firstPos();\n        }\n        if (backward) {\n            while (this.prevPos(pos)) {\n                if (!isOnlyWhitespace(this.charAt(pos)) && this.nextPos(pos)) {\n                    return pos;\n                }\n            }\n            return null;\n        }\n        else {\n            while (isOnlyWhitespace(this.charAt(pos))) {\n                if (!this.nextPos(pos)) {\n                    return null;\n                }\n            }\n            return pos;\n        }\n    };\n    Lines.prototype.trimLeft = function () {\n        var pos = this.skipSpaces(this.firstPos(), false, true);\n        return pos ? this.slice(pos) : emptyLines;\n    };\n    Lines.prototype.trimRight = function () {\n        var pos = this.skipSpaces(this.lastPos(), true, true);\n        return pos ? this.slice(this.firstPos(), pos) : emptyLines;\n    };\n    Lines.prototype.trim = function () {\n        var start = this.skipSpaces(this.firstPos(), false, true);\n        if (start === null) {\n            return emptyLines;\n        }\n        var end = this.skipSpaces(this.lastPos(), true, true);\n        if (end === null) {\n            return emptyLines;\n        }\n        return this.slice(start, end);\n    };\n    Lines.prototype.eachPos = function (callback, startPos, skipSpaces) {\n        if (startPos === void 0) { startPos = this.firstPos(); }\n        if (skipSpaces === void 0) { skipSpaces = false; }\n        var pos = this.firstPos();\n        if (startPos) {\n            (pos.line = startPos.line), (pos.column = startPos.column);\n        }\n        if (skipSpaces && !this.skipSpaces(pos, false, true)) {\n            return; // Encountered nothing but spaces.\n        }\n        do\n            callback.call(this, pos);\n        while (this.nextPos(pos, skipSpaces));\n    };\n    Lines.prototype.bootstrapSlice = function (start, end) {\n        var strings = this.toString()\n            .split(lineTerminatorSeqExp)\n            .slice(start.line - 1, end.line);\n        if (strings.length > 0) {\n            strings.push(strings.pop().slice(0, end.column));\n            strings[0] = strings[0].slice(start.column);\n        }\n        return fromString(strings.join(\"\\n\"));\n    };\n    Lines.prototype.slice = function (start, end) {\n        if (!end) {\n            if (!start) {\n                // The client seems to want a copy of this Lines object, but\n                // Lines objects are immutable, so it's perfectly adequate to\n                // return the same object.\n                return this;\n            }\n            // Slice to the end if no end position was provided.\n            end = this.lastPos();\n        }\n        if (!start) {\n            throw new Error(\"cannot slice with end but not start\");\n        }\n        var sliced = this.infos.slice(start.line - 1, end.line);\n        if (start.line === end.line) {\n            sliced[0] = sliceInfo(sliced[0], start.column, end.column);\n        }\n        else {\n            (0, tiny_invariant_1.default)(start.line < end.line);\n            sliced[0] = sliceInfo(sliced[0], start.column);\n            sliced.push(sliceInfo(sliced.pop(), 0, end.column));\n        }\n        var lines = new Lines(sliced);\n        if (this.mappings.length > 0) {\n            var newMappings_4 = lines.mappings;\n            (0, tiny_invariant_1.default)(newMappings_4.length === 0);\n            this.mappings.forEach(function (mapping) {\n                var sliced = mapping.slice(this, start, end);\n                if (sliced) {\n                    newMappings_4.push(sliced);\n                }\n            }, this);\n        }\n        return lines;\n    };\n    Lines.prototype.bootstrapSliceString = function (start, end, options) {\n        return this.slice(start, end).toString(options);\n    };\n    Lines.prototype.sliceString = function (start, end, options) {\n        if (start === void 0) { start = this.firstPos(); }\n        if (end === void 0) { end = this.lastPos(); }\n        var _a = (0, options_1.normalize)(options), tabWidth = _a.tabWidth, useTabs = _a.useTabs, reuseWhitespace = _a.reuseWhitespace, lineTerminator = _a.lineTerminator;\n        var parts = [];\n        for (var line = start.line; line <= end.line; ++line) {\n            var info = this.infos[line - 1];\n            if (line === start.line) {\n                if (line === end.line) {\n                    info = sliceInfo(info, start.column, end.column);\n                }\n                else {\n                    info = sliceInfo(info, start.column);\n                }\n            }\n            else if (line === end.line) {\n                info = sliceInfo(info, 0, end.column);\n            }\n            var indent = Math.max(info.indent, 0);\n            var before_1 = info.line.slice(0, info.sliceStart);\n            if (reuseWhitespace &&\n                isOnlyWhitespace(before_1) &&\n                countSpaces(before_1, tabWidth) === indent) {\n                // Reuse original spaces if the indentation is correct.\n                parts.push(info.line.slice(0, info.sliceEnd));\n                continue;\n            }\n            var tabs = 0;\n            var spaces = indent;\n            if (useTabs) {\n                tabs = Math.floor(indent / tabWidth);\n                spaces -= tabs * tabWidth;\n            }\n            var result = \"\";\n            if (tabs > 0) {\n                result += new Array(tabs + 1).join(\"\\t\");\n            }\n            if (spaces > 0) {\n                result += new Array(spaces + 1).join(\" \");\n            }\n            result += info.line.slice(info.sliceStart, info.sliceEnd);\n            parts.push(result);\n        }\n        return parts.join(lineTerminator);\n    };\n    Lines.prototype.isEmpty = function () {\n        return this.length < 2 && this.getLineLength(1) < 1;\n    };\n    Lines.prototype.join = function (elements) {\n        var separator = this;\n        var infos = [];\n        var mappings = [];\n        var prevInfo;\n        function appendLines(linesOrNull) {\n            if (linesOrNull === null) {\n                return;\n            }\n            if (prevInfo) {\n                var info = linesOrNull.infos[0];\n                var indent = new Array(info.indent + 1).join(\" \");\n                var prevLine_1 = infos.length;\n                var prevColumn_1 = Math.max(prevInfo.indent, 0) +\n                    prevInfo.sliceEnd -\n                    prevInfo.sliceStart;\n                prevInfo.line =\n                    prevInfo.line.slice(0, prevInfo.sliceEnd) +\n                        indent +\n                        info.line.slice(info.sliceStart, info.sliceEnd);\n                // If any part of a line is indentation-locked, the whole line\n                // will be indentation-locked.\n                prevInfo.locked = prevInfo.locked || info.locked;\n                prevInfo.sliceEnd = prevInfo.line.length;\n                if (linesOrNull.mappings.length > 0) {\n                    linesOrNull.mappings.forEach(function (mapping) {\n                        mappings.push(mapping.add(prevLine_1, prevColumn_1));\n                    });\n                }\n            }\n            else if (linesOrNull.mappings.length > 0) {\n                mappings.push.apply(mappings, linesOrNull.mappings);\n            }\n            linesOrNull.infos.forEach(function (info, i) {\n                if (!prevInfo || i > 0) {\n                    prevInfo = tslib_1.__assign({}, info);\n                    infos.push(prevInfo);\n                }\n            });\n        }\n        function appendWithSeparator(linesOrNull, i) {\n            if (i > 0)\n                appendLines(separator);\n            appendLines(linesOrNull);\n        }\n        elements\n            .map(function (elem) {\n            var lines = fromString(elem);\n            if (lines.isEmpty())\n                return null;\n            return lines;\n        })\n            .forEach(function (linesOrNull, i) {\n            if (separator.isEmpty()) {\n                appendLines(linesOrNull);\n            }\n            else {\n                appendWithSeparator(linesOrNull, i);\n            }\n        });\n        if (infos.length < 1)\n            return emptyLines;\n        var lines = new Lines(infos);\n        lines.mappings = mappings;\n        return lines;\n    };\n    Lines.prototype.concat = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var list = [this];\n        list.push.apply(list, args);\n        (0, tiny_invariant_1.default)(list.length === args.length + 1);\n        return emptyLines.join(list);\n    };\n    return Lines;\n}());\nexports.Lines = Lines;\nvar fromStringCache = {};\nvar hasOwn = fromStringCache.hasOwnProperty;\nvar maxCacheKeyLen = 10;\nfunction countSpaces(spaces, tabWidth) {\n    var count = 0;\n    var len = spaces.length;\n    for (var i = 0; i < len; ++i) {\n        switch (spaces.charCodeAt(i)) {\n            case 9: {\n                // '\\t'\n                (0, tiny_invariant_1.default)(typeof tabWidth === \"number\");\n                (0, tiny_invariant_1.default)(tabWidth > 0);\n                var next = Math.ceil(count / tabWidth) * tabWidth;\n                if (next === count) {\n                    count += tabWidth;\n                }\n                else {\n                    count = next;\n                }\n                break;\n            }\n            case 11: // '\\v'\n            case 12: // '\\f'\n            case 13: // '\\r'\n            case 0xfeff: // zero-width non-breaking space\n                // These characters contribute nothing to indentation.\n                break;\n            case 32: // ' '\n            default:\n                // Treat all other whitespace like ' '.\n                count += 1;\n                break;\n        }\n    }\n    return count;\n}\nexports.countSpaces = countSpaces;\nvar leadingSpaceExp = /^\\s*/;\n// As specified here: http://www.ecma-international.org/ecma-262/6.0/#sec-line-terminators\nvar lineTerminatorSeqExp = /\\u000D\\u000A|\\u000D(?!\\u000A)|\\u000A|\\u2028|\\u2029/;\n/**\n * @param {Object} options - Options object that configures printing.\n */\nfunction fromString(string, options) {\n    if (string instanceof Lines)\n        return string;\n    string += \"\";\n    var tabWidth = options && options.tabWidth;\n    var tabless = string.indexOf(\"\\t\") < 0;\n    var cacheable = !options && tabless && string.length <= maxCacheKeyLen;\n    (0, tiny_invariant_1.default)(tabWidth || tabless, \"No tab width specified but encountered tabs in string\\n\" + string);\n    if (cacheable && hasOwn.call(fromStringCache, string))\n        return fromStringCache[string];\n    var lines = new Lines(string.split(lineTerminatorSeqExp).map(function (line) {\n        // TODO: handle null exec result\n        var spaces = leadingSpaceExp.exec(line)[0];\n        return {\n            line: line,\n            indent: countSpaces(spaces, tabWidth),\n            // Boolean indicating whether this line can be reindented.\n            locked: false,\n            sliceStart: spaces.length,\n            sliceEnd: line.length,\n        };\n    }), (0, options_1.normalize)(options).sourceFileName);\n    if (cacheable)\n        fromStringCache[string] = lines;\n    return lines;\n}\nexports.fromString = fromString;\nfunction isOnlyWhitespace(string) {\n    return !/\\S/.test(string);\n}\nfunction sliceInfo(info, startCol, endCol) {\n    var sliceStart = info.sliceStart;\n    var sliceEnd = info.sliceEnd;\n    var indent = Math.max(info.indent, 0);\n    var lineLength = indent + sliceEnd - sliceStart;\n    if (typeof endCol === \"undefined\") {\n        endCol = lineLength;\n    }\n    startCol = Math.max(startCol, 0);\n    endCol = Math.min(endCol, lineLength);\n    endCol = Math.max(endCol, startCol);\n    if (endCol < indent) {\n        indent = endCol;\n        sliceEnd = sliceStart;\n    }\n    else {\n        sliceEnd -= lineLength - endCol;\n    }\n    lineLength = endCol;\n    lineLength -= startCol;\n    if (startCol < indent) {\n        indent -= startCol;\n    }\n    else {\n        startCol -= indent;\n        indent = 0;\n        sliceStart += startCol;\n    }\n    (0, tiny_invariant_1.default)(indent >= 0);\n    (0, tiny_invariant_1.default)(sliceStart <= sliceEnd);\n    (0, tiny_invariant_1.default)(lineLength === indent + sliceEnd - sliceStart);\n    if (info.indent === indent &&\n        info.sliceStart === sliceStart &&\n        info.sliceEnd === sliceEnd) {\n        return info;\n    }\n    return {\n        line: info.line,\n        indent: indent,\n        // A destructive slice always unlocks indentation.\n        locked: false,\n        sliceStart: sliceStart,\n        sliceEnd: sliceEnd,\n    };\n}\nfunction concat(elements) {\n    return emptyLines.join(elements);\n}\nexports.concat = concat;\n// The emptyLines object needs to be created all the way down here so that\n// Lines.prototype will be fully populated.\nvar emptyLines = fromString(\"\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.printComments = exports.attach = void 0;\nvar tslib_1 = require(\"tslib\");\nvar tiny_invariant_1 = tslib_1.__importDefault(require(\"tiny-invariant\"));\nvar types = tslib_1.__importStar(require(\"ast-types\"));\nvar n = types.namedTypes;\nvar isArray = types.builtInTypes.array;\nvar isObject = types.builtInTypes.object;\nvar lines_1 = require(\"./lines\");\nvar util_1 = require(\"./util\");\nvar childNodesCache = new WeakMap();\n// TODO Move a non-caching implementation of this function into ast-types,\n// and implement a caching wrapper function here.\nfunction getSortedChildNodes(node, lines, resultArray) {\n    if (!node) {\n        return resultArray;\n    }\n    // The .loc checks below are sensitive to some of the problems that\n    // are fixed by this utility function. Specifically, if it decides to\n    // set node.loc to null, indicating that the node's .loc information\n    // is unreliable, then we don't want to add node to the resultArray.\n    (0, util_1.fixFaultyLocations)(node, lines);\n    if (resultArray) {\n        if (n.Node.check(node) && n.SourceLocation.check(node.loc)) {\n            // This reverse insertion sort almost always takes constant\n            // time because we almost always (maybe always?) append the\n            // nodes in order anyway.\n            var i = resultArray.length - 1;\n            for (; i >= 0; --i) {\n                var child = resultArray[i];\n                if (child &&\n                    child.loc &&\n                    (0, util_1.comparePos)(child.loc.end, node.loc.start) <= 0) {\n                    break;\n                }\n            }\n            resultArray.splice(i + 1, 0, node);\n            return resultArray;\n        }\n    }\n    else {\n        var childNodes = childNodesCache.get(node);\n        if (childNodes) {\n            return childNodes;\n        }\n    }\n    var names;\n    if (isArray.check(node)) {\n        names = Object.keys(node);\n    }\n    else if (isObject.check(node)) {\n        names = types.getFieldNames(node);\n    }\n    else {\n        return resultArray;\n    }\n    if (!resultArray) {\n        childNodesCache.set(node, (resultArray = []));\n    }\n    for (var i = 0, nameCount = names.length; i < nameCount; ++i) {\n        getSortedChildNodes(node[names[i]], lines, resultArray);\n    }\n    return resultArray;\n}\n// As efficiently as possible, decorate the comment object with\n// .precedingNode, .enclosingNode, and/or .followingNode properties, at\n// least one of which is guaranteed to be defined.\nfunction decorateComment(node, comment, lines) {\n    var childNodes = getSortedChildNodes(node, lines);\n    // Time to dust off the old binary search robes and wizard hat.\n    var left = 0;\n    var right = childNodes && childNodes.length;\n    var precedingNode;\n    var followingNode;\n    while (typeof right === \"number\" && left < right) {\n        var middle = (left + right) >> 1;\n        var child = childNodes[middle];\n        if ((0, util_1.comparePos)(child.loc.start, comment.loc.start) <= 0 &&\n            (0, util_1.comparePos)(comment.loc.end, child.loc.end) <= 0) {\n            // The comment is completely contained by this child node.\n            decorateComment((comment.enclosingNode = child), comment, lines);\n            return; // Abandon the binary search at this level.\n        }\n        if ((0, util_1.comparePos)(child.loc.end, comment.loc.start) <= 0) {\n            // This child node falls completely before the comment.\n            // Because we will never consider this node or any nodes\n            // before it again, this node must be the closest preceding\n            // node we have encountered so far.\n            precedingNode = child;\n            left = middle + 1;\n            continue;\n        }\n        if ((0, util_1.comparePos)(comment.loc.end, child.loc.start) <= 0) {\n            // This child node falls completely after the comment.\n            // Because we will never consider this node or any nodes after\n            // it again, this node must be the closest following node we\n            // have encountered so far.\n            followingNode = child;\n            right = middle;\n            continue;\n        }\n        throw new Error(\"Comment location overlaps with node location\");\n    }\n    if (precedingNode) {\n        comment.precedingNode = precedingNode;\n    }\n    if (followingNode) {\n        comment.followingNode = followingNode;\n    }\n}\nfunction attach(comments, ast, lines) {\n    if (!isArray.check(comments)) {\n        return;\n    }\n    var tiesToBreak = [];\n    comments.forEach(function (comment) {\n        comment.loc.lines = lines;\n        decorateComment(ast, comment, lines);\n        var pn = comment.precedingNode;\n        var en = comment.enclosingNode;\n        var fn = comment.followingNode;\n        if (pn && fn) {\n            var tieCount = tiesToBreak.length;\n            if (tieCount > 0) {\n                var lastTie = tiesToBreak[tieCount - 1];\n                (0, tiny_invariant_1.default)((lastTie.precedingNode === comment.precedingNode) ===\n                    (lastTie.followingNode === comment.followingNode));\n                if (lastTie.followingNode !== comment.followingNode) {\n                    breakTies(tiesToBreak, lines);\n                }\n            }\n            tiesToBreak.push(comment);\n        }\n        else if (pn) {\n            // No contest: we have a trailing comment.\n            breakTies(tiesToBreak, lines);\n            addTrailingComment(pn, comment);\n        }\n        else if (fn) {\n            // No contest: we have a leading comment.\n            breakTies(tiesToBreak, lines);\n            addLeadingComment(fn, comment);\n        }\n        else if (en) {\n            // The enclosing node has no child nodes at all, so what we\n            // have here is a dangling comment, e.g. [/* crickets */].\n            breakTies(tiesToBreak, lines);\n            addDanglingComment(en, comment);\n        }\n        else {\n            throw new Error(\"AST contains no nodes at all?\");\n        }\n    });\n    breakTies(tiesToBreak, lines);\n    comments.forEach(function (comment) {\n        // These node references were useful for breaking ties, but we\n        // don't need them anymore, and they create cycles in the AST that\n        // may lead to infinite recursion if we don't delete them here.\n        delete comment.precedingNode;\n        delete comment.enclosingNode;\n        delete comment.followingNode;\n    });\n}\nexports.attach = attach;\nfunction breakTies(tiesToBreak, lines) {\n    var tieCount = tiesToBreak.length;\n    if (tieCount === 0) {\n        return;\n    }\n    var pn = tiesToBreak[0].precedingNode;\n    var fn = tiesToBreak[0].followingNode;\n    var gapEndPos = fn.loc.start;\n    // Iterate backwards through tiesToBreak, examining the gaps\n    // between the tied comments. In order to qualify as leading, a\n    // comment must be separated from fn by an unbroken series of\n    // whitespace-only gaps (or other comments).\n    var indexOfFirstLeadingComment = tieCount;\n    var comment;\n    for (; indexOfFirstLeadingComment > 0; --indexOfFirstLeadingComment) {\n        comment = tiesToBreak[indexOfFirstLeadingComment - 1];\n        (0, tiny_invariant_1.default)(comment.precedingNode === pn);\n        (0, tiny_invariant_1.default)(comment.followingNode === fn);\n        var gap = lines.sliceString(comment.loc.end, gapEndPos);\n        if (/\\S/.test(gap)) {\n            // The gap string contained something other than whitespace.\n            break;\n        }\n        gapEndPos = comment.loc.start;\n    }\n    while (indexOfFirstLeadingComment <= tieCount &&\n        (comment = tiesToBreak[indexOfFirstLeadingComment]) &&\n        // If the comment is a //-style comment and indented more\n        // deeply than the node itself, reconsider it as trailing.\n        (comment.type === \"Line\" || comment.type === \"CommentLine\") &&\n        comment.loc.start.column > fn.loc.start.column) {\n        ++indexOfFirstLeadingComment;\n    }\n    if (indexOfFirstLeadingComment) {\n        var enclosingNode = tiesToBreak[indexOfFirstLeadingComment - 1].enclosingNode;\n        if ((enclosingNode === null || enclosingNode === void 0 ? void 0 : enclosingNode.type) === \"CallExpression\") {\n            --indexOfFirstLeadingComment;\n        }\n    }\n    tiesToBreak.forEach(function (comment, i) {\n        if (i < indexOfFirstLeadingComment) {\n            addTrailingComment(pn, comment);\n        }\n        else {\n            addLeadingComment(fn, comment);\n        }\n    });\n    tiesToBreak.length = 0;\n}\nfunction addCommentHelper(node, comment) {\n    var comments = node.comments || (node.comments = []);\n    comments.push(comment);\n}\nfunction addLeadingComment(node, comment) {\n    comment.leading = true;\n    comment.trailing = false;\n    addCommentHelper(node, comment);\n}\nfunction addDanglingComment(node, comment) {\n    comment.leading = false;\n    comment.trailing = false;\n    addCommentHelper(node, comment);\n}\nfunction addTrailingComment(node, comment) {\n    comment.leading = false;\n    comment.trailing = true;\n    addCommentHelper(node, comment);\n}\nfunction printLeadingComment(commentPath, print) {\n    var comment = commentPath.getValue();\n    n.Comment.assert(comment);\n    var loc = comment.loc;\n    var lines = loc && loc.lines;\n    var parts = [print(commentPath)];\n    if (comment.trailing) {\n        // When we print trailing comments as leading comments, we don't\n        // want to bring any trailing spaces along.\n        parts.push(\"\\n\");\n    }\n    else if (lines instanceof lines_1.Lines) {\n        var trailingSpace = lines.slice(loc.end, lines.skipSpaces(loc.end) || lines.lastPos());\n        if (trailingSpace.length === 1) {\n            // If the trailing space contains no newlines, then we want to\n            // preserve it exactly as we found it.\n            parts.push(trailingSpace);\n        }\n        else {\n            // If the trailing space contains newlines, then replace it\n            // with just that many newlines, with all other spaces removed.\n            parts.push(new Array(trailingSpace.length).join(\"\\n\"));\n        }\n    }\n    else {\n        parts.push(\"\\n\");\n    }\n    return (0, lines_1.concat)(parts);\n}\nfunction printTrailingComment(commentPath, print) {\n    var comment = commentPath.getValue(commentPath);\n    n.Comment.assert(comment);\n    var loc = comment.loc;\n    var lines = loc && loc.lines;\n    var parts = [];\n    if (lines instanceof lines_1.Lines) {\n        var fromPos = lines.skipSpaces(loc.start, true) || lines.firstPos();\n        var leadingSpace = lines.slice(fromPos, loc.start);\n        if (leadingSpace.length === 1) {\n            // If the leading space contains no newlines, then we want to\n            // preserve it exactly as we found it.\n            parts.push(leadingSpace);\n        }\n        else {\n            // If the leading space contains newlines, then replace it\n            // with just that many newlines, sans all other spaces.\n            parts.push(new Array(leadingSpace.length).join(\"\\n\"));\n        }\n    }\n    parts.push(print(commentPath));\n    return (0, lines_1.concat)(parts);\n}\nfunction printComments(path, print) {\n    var value = path.getValue();\n    var innerLines = print(path);\n    var comments = n.Node.check(value) && types.getFieldValue(value, \"comments\");\n    if (!comments || comments.length === 0) {\n        return innerLines;\n    }\n    var leadingParts = [];\n    var trailingParts = [innerLines];\n    path.each(function (commentPath) {\n        var comment = commentPath.getValue();\n        var leading = types.getFieldValue(comment, \"leading\");\n        var trailing = types.getFieldValue(comment, \"trailing\");\n        if (leading ||\n            (trailing &&\n                !(n.Statement.check(value) ||\n                    comment.type === \"Block\" ||\n                    comment.type === \"CommentBlock\"))) {\n            leadingParts.push(printLeadingComment(commentPath, print));\n        }\n        else if (trailing) {\n            trailingParts.push(printTrailingComment(commentPath, print));\n        }\n    }, \"comments\");\n    leadingParts.push.apply(leadingParts, trailingParts);\n    return (0, lines_1.concat)(leadingParts);\n}\nexports.printComments = printComments;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = void 0;\nvar tslib_1 = require(\"tslib\");\nvar tiny_invariant_1 = tslib_1.__importDefault(require(\"tiny-invariant\"));\nvar types = tslib_1.__importStar(require(\"ast-types\"));\nvar b = types.builders;\nvar isObject = types.builtInTypes.object;\nvar isArray = types.builtInTypes.array;\nvar options_1 = require(\"./options\");\nvar lines_1 = require(\"./lines\");\nvar comments_1 = require(\"./comments\");\nvar util = tslib_1.__importStar(require(\"./util\"));\nfunction parse(source, options) {\n    options = (0, options_1.normalize)(options);\n    var lines = (0, lines_1.fromString)(source, options);\n    var sourceWithoutTabs = lines.toString({\n        tabWidth: options.tabWidth,\n        reuseWhitespace: false,\n        useTabs: false,\n    });\n    var comments = [];\n    var ast = options.parser.parse(sourceWithoutTabs, {\n        jsx: true,\n        loc: true,\n        locations: true,\n        range: options.range,\n        comment: true,\n        onComment: comments,\n        tolerant: util.getOption(options, \"tolerant\", true),\n        ecmaVersion: 6,\n        sourceType: util.getOption(options, \"sourceType\", \"module\"),\n    });\n    // Use ast.tokens if possible, and otherwise fall back to the Esprima\n    // tokenizer. All the preconfigured ../parsers/* expose ast.tokens\n    // automatically, but custom parsers might need additional configuration\n    // to avoid this fallback.\n    var tokens = Array.isArray(ast.tokens)\n        ? ast.tokens\n        : require(\"esprima\").tokenize(sourceWithoutTabs, {\n            loc: true,\n        });\n    // We will reattach the tokens array to the file object below.\n    delete ast.tokens;\n    // Make sure every token has a token.value string.\n    tokens.forEach(function (token) {\n        if (typeof token.value !== \"string\") {\n            token.value = lines.sliceString(token.loc.start, token.loc.end);\n        }\n    });\n    if (Array.isArray(ast.comments)) {\n        comments = ast.comments;\n        delete ast.comments;\n    }\n    if (ast.loc) {\n        // If the source was empty, some parsers give loc.{start,end}.line\n        // values of 0, instead of the minimum of 1.\n        util.fixFaultyLocations(ast, lines);\n    }\n    else {\n        ast.loc = {\n            start: lines.firstPos(),\n            end: lines.lastPos(),\n        };\n    }\n    ast.loc.lines = lines;\n    ast.loc.indent = 0;\n    var file;\n    var program;\n    if (ast.type === \"Program\") {\n        program = ast;\n        // In order to ensure we reprint leading and trailing program\n        // comments, wrap the original Program node with a File node. Only\n        // ESTree parsers (Acorn and Esprima) return a Program as the root AST\n        // node. Most other (Babylon-like) parsers return a File.\n        file = b.file(ast, options.sourceFileName || null);\n        file.loc = {\n            start: lines.firstPos(),\n            end: lines.lastPos(),\n            lines: lines,\n            indent: 0,\n        };\n    }\n    else if (ast.type === \"File\") {\n        file = ast;\n        program = file.program;\n    }\n    // Expose file.tokens unless the caller passed false for options.tokens.\n    if (options.tokens) {\n        file.tokens = tokens;\n    }\n    // Expand the Program's .loc to include all comments (not just those\n    // attached to the Program node, as its children may have comments as\n    // well), since sometimes program.loc.{start,end} will coincide with the\n    // .loc.{start,end} of the first and last *statements*, mistakenly\n    // excluding comments that fall outside that region.\n    var trueProgramLoc = util.getTrueLoc({\n        type: program.type,\n        loc: program.loc,\n        body: [],\n        comments: comments,\n    }, lines);\n    program.loc.start = trueProgramLoc.start;\n    program.loc.end = trueProgramLoc.end;\n    // Passing file.program here instead of just file means that initial\n    // comments will be attached to program.body[0] instead of program.\n    (0, comments_1.attach)(comments, program.body.length ? file.program : file, lines);\n    // Return a copy of the original AST so that any changes made may be\n    // compared to the original.\n    return new TreeCopier(lines, tokens).copy(file);\n}\nexports.parse = parse;\nvar TreeCopier = function TreeCopier(lines, tokens) {\n    (0, tiny_invariant_1.default)(this instanceof TreeCopier);\n    this.lines = lines;\n    this.tokens = tokens;\n    this.startTokenIndex = 0;\n    this.endTokenIndex = tokens.length;\n    this.indent = 0;\n    this.seen = new Map();\n};\nvar TCp = TreeCopier.prototype;\nTCp.copy = function (node) {\n    if (this.seen.has(node)) {\n        return this.seen.get(node);\n    }\n    if (isArray.check(node)) {\n        var copy_1 = new Array(node.length);\n        this.seen.set(node, copy_1);\n        node.forEach(function (item, i) {\n            copy_1[i] = this.copy(item);\n        }, this);\n        return copy_1;\n    }\n    if (!isObject.check(node)) {\n        return node;\n    }\n    util.fixFaultyLocations(node, this.lines);\n    var copy = Object.create(Object.getPrototypeOf(node), {\n        original: {\n            // Provide a link from the copy to the original.\n            value: node,\n            configurable: false,\n            enumerable: false,\n            writable: true,\n        },\n    });\n    this.seen.set(node, copy);\n    var loc = node.loc;\n    var oldIndent = this.indent;\n    var newIndent = oldIndent;\n    var oldStartTokenIndex = this.startTokenIndex;\n    var oldEndTokenIndex = this.endTokenIndex;\n    if (loc) {\n        // When node is a comment, we set node.loc.indent to\n        // node.loc.start.column so that, when/if we print the comment by\n        // itself, we can strip that much whitespace from the left margin of\n        // the comment. This only really matters for multiline Block comments,\n        // but it doesn't hurt for Line comments.\n        if (node.type === \"Block\" ||\n            node.type === \"Line\" ||\n            node.type === \"CommentBlock\" ||\n            node.type === \"CommentLine\" ||\n            this.lines.isPrecededOnlyByWhitespace(loc.start)) {\n            newIndent = this.indent = loc.start.column;\n        }\n        // Every node.loc has a reference to the original source lines as well\n        // as a complete list of source tokens.\n        loc.lines = this.lines;\n        loc.tokens = this.tokens;\n        loc.indent = newIndent;\n        // Set loc.start.token and loc.end.token such that\n        // loc.tokens.slice(loc.start.token, loc.end.token) returns a list of\n        // all the tokens that make up this node.\n        this.findTokenRange(loc);\n    }\n    var keys = Object.keys(node);\n    var keyCount = keys.length;\n    for (var i = 0; i < keyCount; ++i) {\n        var key = keys[i];\n        if (key === \"loc\") {\n            copy[key] = node[key];\n        }\n        else if (key === \"tokens\" && node.type === \"File\") {\n            // Preserve file.tokens (uncopied) in case client code cares about\n            // it, even though Recast ignores it when reprinting.\n            copy[key] = node[key];\n        }\n        else {\n            copy[key] = this.copy(node[key]);\n        }\n    }\n    this.indent = oldIndent;\n    this.startTokenIndex = oldStartTokenIndex;\n    this.endTokenIndex = oldEndTokenIndex;\n    return copy;\n};\n// If we didn't have any idea where in loc.tokens to look for tokens\n// contained by this loc, a binary search would be appropriate, but\n// because we maintain this.startTokenIndex and this.endTokenIndex as we\n// traverse the AST, we only need to make small (linear) adjustments to\n// those indexes with each recursive iteration.\nTCp.findTokenRange = function (loc) {\n    // In the unlikely event that loc.tokens[this.startTokenIndex] starts\n    // *after* loc.start, we need to rewind this.startTokenIndex first.\n    while (this.startTokenIndex > 0) {\n        var token = loc.tokens[this.startTokenIndex];\n        if (util.comparePos(loc.start, token.loc.start) < 0) {\n            --this.startTokenIndex;\n        }\n        else\n            break;\n    }\n    // In the unlikely event that loc.tokens[this.endTokenIndex - 1] ends\n    // *before* loc.end, we need to fast-forward this.endTokenIndex first.\n    while (this.endTokenIndex < loc.tokens.length) {\n        var token = loc.tokens[this.endTokenIndex];\n        if (util.comparePos(token.loc.end, loc.end) < 0) {\n            ++this.endTokenIndex;\n        }\n        else\n            break;\n    }\n    // Increment this.startTokenIndex until we've found the first token\n    // contained by this node.\n    while (this.startTokenIndex < this.endTokenIndex) {\n        var token = loc.tokens[this.startTokenIndex];\n        if (util.comparePos(token.loc.start, loc.start) < 0) {\n            ++this.startTokenIndex;\n        }\n        else\n            break;\n    }\n    // Index into loc.tokens of the first token within this node.\n    loc.start.token = this.startTokenIndex;\n    // Decrement this.endTokenIndex until we've found the first token after\n    // this node (not contained by the node).\n    while (this.endTokenIndex > this.startTokenIndex) {\n        var token = loc.tokens[this.endTokenIndex - 1];\n        if (util.comparePos(loc.end, token.loc.end) < 0) {\n            --this.endTokenIndex;\n        }\n        else\n            break;\n    }\n    // Index into loc.tokens of the first token *after* this node.\n    // If loc.start.token === loc.end.token, the node contains no tokens,\n    // and the index is that of the next token following this node.\n    loc.end.token = this.endTokenIndex;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar tiny_invariant_1 = tslib_1.__importDefault(require(\"tiny-invariant\"));\nvar types = tslib_1.__importStar(require(\"ast-types\"));\nvar util = tslib_1.__importStar(require(\"./util\"));\nvar n = types.namedTypes;\nvar isArray = types.builtInTypes.array;\nvar isNumber = types.builtInTypes.number;\nvar PRECEDENCE = {};\n[\n    [\"??\"],\n    [\"||\"],\n    [\"&&\"],\n    [\"|\"],\n    [\"^\"],\n    [\"&\"],\n    [\"==\", \"===\", \"!=\", \"!==\"],\n    [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n    [\">>\", \"<<\", \">>>\"],\n    [\"+\", \"-\"],\n    [\"*\", \"/\", \"%\"],\n    [\"**\"],\n].forEach(function (tier, i) {\n    tier.forEach(function (op) {\n        PRECEDENCE[op] = i;\n    });\n});\nvar FastPath = function FastPath(value) {\n    (0, tiny_invariant_1.default)(this instanceof FastPath);\n    this.stack = [value];\n};\nvar FPp = FastPath.prototype;\n// Static convenience function for coercing a value to a FastPath.\nFastPath.from = function (obj) {\n    if (obj instanceof FastPath) {\n        // Return a defensive copy of any existing FastPath instances.\n        return obj.copy();\n    }\n    if (obj instanceof types.NodePath) {\n        // For backwards compatibility, unroll NodePath instances into\n        // lightweight FastPath [..., name, value] stacks.\n        var copy = Object.create(FastPath.prototype);\n        var stack = [obj.value];\n        for (var pp = void 0; (pp = obj.parentPath); obj = pp)\n            stack.push(obj.name, pp.value);\n        copy.stack = stack.reverse();\n        return copy;\n    }\n    // Otherwise use obj as the value of the new FastPath instance.\n    return new FastPath(obj);\n};\nFPp.copy = function copy() {\n    var copy = Object.create(FastPath.prototype);\n    copy.stack = this.stack.slice(0);\n    return copy;\n};\n// The name of the current property is always the penultimate element of\n// this.stack, and always a String.\nFPp.getName = function getName() {\n    var s = this.stack;\n    var len = s.length;\n    if (len > 1) {\n        return s[len - 2];\n    }\n    // Since the name is always a string, null is a safe sentinel value to\n    // return if we do not know the name of the (root) value.\n    return null;\n};\n// The value of the current property is always the final element of\n// this.stack.\nFPp.getValue = function getValue() {\n    var s = this.stack;\n    return s[s.length - 1];\n};\nFPp.valueIsDuplicate = function () {\n    var s = this.stack;\n    var valueIndex = s.length - 1;\n    return s.lastIndexOf(s[valueIndex], valueIndex - 1) >= 0;\n};\nfunction getNodeHelper(path, count) {\n    var s = path.stack;\n    for (var i = s.length - 1; i >= 0; i -= 2) {\n        var value = s[i];\n        if (n.Node.check(value) && --count < 0) {\n            return value;\n        }\n    }\n    return null;\n}\nFPp.getNode = function getNode(count) {\n    if (count === void 0) { count = 0; }\n    return getNodeHelper(this, ~~count);\n};\nFPp.getParentNode = function getParentNode(count) {\n    if (count === void 0) { count = 0; }\n    return getNodeHelper(this, ~~count + 1);\n};\n// The length of the stack can be either even or odd, depending on whether\n// or not we have a name for the root value. The difference between the\n// index of the root value and the index of the final value is always\n// even, though, which allows us to return the root value in constant time\n// (i.e. without iterating backwards through the stack).\nFPp.getRootValue = function getRootValue() {\n    var s = this.stack;\n    if (s.length % 2 === 0) {\n        return s[1];\n    }\n    return s[0];\n};\n// Temporarily push properties named by string arguments given after the\n// callback function onto this.stack, then call the callback with a\n// reference to this (modified) FastPath object. Note that the stack will\n// be restored to its original state after the callback is finished, so it\n// is probably a mistake to retain a reference to the path.\nFPp.call = function call(callback /*, name1, name2, ... */) {\n    var s = this.stack;\n    var origLen = s.length;\n    var value = s[origLen - 1];\n    var argc = arguments.length;\n    for (var i = 1; i < argc; ++i) {\n        var name = arguments[i];\n        value = value[name];\n        s.push(name, value);\n    }\n    var result = callback(this);\n    s.length = origLen;\n    return result;\n};\n// Similar to FastPath.prototype.call, except that the value obtained by\n// accessing this.getValue()[name1][name2]... should be array-like. The\n// callback will be called with a reference to this path object for each\n// element of the array.\nFPp.each = function each(callback /*, name1, name2, ... */) {\n    var s = this.stack;\n    var origLen = s.length;\n    var value = s[origLen - 1];\n    var argc = arguments.length;\n    for (var i = 1; i < argc; ++i) {\n        var name = arguments[i];\n        value = value[name];\n        s.push(name, value);\n    }\n    for (var i = 0; i < value.length; ++i) {\n        if (i in value) {\n            s.push(i, value[i]);\n            // If the callback needs to know the value of i, call\n            // path.getName(), assuming path is the parameter name.\n            callback(this);\n            s.length -= 2;\n        }\n    }\n    s.length = origLen;\n};\n// Similar to FastPath.prototype.each, except that the results of the\n// callback function invocations are stored in an array and returned at\n// the end of the iteration.\nFPp.map = function map(callback /*, name1, name2, ... */) {\n    var s = this.stack;\n    var origLen = s.length;\n    var value = s[origLen - 1];\n    var argc = arguments.length;\n    for (var i = 1; i < argc; ++i) {\n        var name = arguments[i];\n        value = value[name];\n        s.push(name, value);\n    }\n    var result = new Array(value.length);\n    for (var i = 0; i < value.length; ++i) {\n        if (i in value) {\n            s.push(i, value[i]);\n            result[i] = callback(this, i);\n            s.length -= 2;\n        }\n    }\n    s.length = origLen;\n    return result;\n};\n// Returns true if the node at the tip of the path is wrapped with\n// parentheses, OR if the only reason the node needed parentheses was that\n// it couldn't be the first expression in the enclosing statement (see\n// FastPath#canBeFirstInStatement), and it has an opening `(` character.\n// For example, the FunctionExpression in `(function(){}())` appears to\n// need parentheses only because it's the first expression in the AST, but\n// since it happens to be preceded by a `(` (which is not apparent from\n// the AST but can be determined using FastPath#getPrevToken), there is no\n// ambiguity about how to parse it, so it counts as having parentheses,\n// even though it is not immediately followed by a `)`.\nFPp.hasParens = function () {\n    var node = this.getNode();\n    var prevToken = this.getPrevToken(node);\n    if (!prevToken) {\n        return false;\n    }\n    var nextToken = this.getNextToken(node);\n    if (!nextToken) {\n        return false;\n    }\n    if (prevToken.value === \"(\") {\n        if (nextToken.value === \")\") {\n            // If the node preceded by a `(` token and followed by a `)` token,\n            // then of course it has parentheses.\n            return true;\n        }\n        // If this is one of the few Expression types that can't come first in\n        // the enclosing statement because of parsing ambiguities (namely,\n        // FunctionExpression, ObjectExpression, and ClassExpression) and\n        // this.firstInStatement() returns true, and the node would not need\n        // parentheses in an expression context because this.needsParens(true)\n        // returns false, then it just needs an opening parenthesis to resolve\n        // the parsing ambiguity that made it appear to need parentheses.\n        var justNeedsOpeningParen = !this.canBeFirstInStatement() &&\n            this.firstInStatement() &&\n            !this.needsParens(true);\n        if (justNeedsOpeningParen) {\n            return true;\n        }\n    }\n    return false;\n};\nFPp.getPrevToken = function (node) {\n    node = node || this.getNode();\n    var loc = node && node.loc;\n    var tokens = loc && loc.tokens;\n    if (tokens && loc.start.token > 0) {\n        var token = tokens[loc.start.token - 1];\n        if (token) {\n            // Do not return tokens that fall outside the root subtree.\n            var rootLoc = this.getRootValue().loc;\n            if (util.comparePos(rootLoc.start, token.loc.start) <= 0) {\n                return token;\n            }\n        }\n    }\n    return null;\n};\nFPp.getNextToken = function (node) {\n    node = node || this.getNode();\n    var loc = node && node.loc;\n    var tokens = loc && loc.tokens;\n    if (tokens && loc.end.token < tokens.length) {\n        var token = tokens[loc.end.token];\n        if (token) {\n            // Do not return tokens that fall outside the root subtree.\n            var rootLoc = this.getRootValue().loc;\n            if (util.comparePos(token.loc.end, rootLoc.end) <= 0) {\n                return token;\n            }\n        }\n    }\n    return null;\n};\n// Inspired by require(\"ast-types\").NodePath.prototype.needsParens, but\n// more efficient because we're iterating backwards through a stack.\nFPp.needsParens = function (assumeExpressionContext) {\n    var node = this.getNode();\n    // This needs to come before `if (!parent) { return false }` because\n    // an object destructuring assignment requires parens for\n    // correctness even when it's the topmost expression.\n    if (node.type === \"AssignmentExpression\" &&\n        node.left.type === \"ObjectPattern\") {\n        return true;\n    }\n    var parent = this.getParentNode();\n    var name = this.getName();\n    // If the value of this path is some child of a Node and not a Node\n    // itself, then it doesn't need parentheses. Only Node objects (in fact,\n    // only Expression nodes) need parentheses.\n    if (this.getValue() !== node) {\n        return false;\n    }\n    // Only statements don't need parentheses.\n    if (n.Statement.check(node)) {\n        return false;\n    }\n    // Identifiers never need parentheses.\n    if (node.type === \"Identifier\") {\n        return false;\n    }\n    if (parent && parent.type === \"ParenthesizedExpression\") {\n        return false;\n    }\n    if (node.extra && node.extra.parenthesized) {\n        return true;\n    }\n    if (!parent)\n        return false;\n    // Wrap e.g. `-1` in parentheses inside `(-1) ** 2`.\n    if (node.type === \"UnaryExpression\" &&\n        parent.type === \"BinaryExpression\" &&\n        name === \"left\" &&\n        parent.left === node &&\n        parent.operator === \"**\") {\n        return true;\n    }\n    switch (node.type) {\n        case \"UnaryExpression\":\n        case \"SpreadElement\":\n        case \"SpreadProperty\":\n            return (parent.type === \"MemberExpression\" &&\n                name === \"object\" &&\n                parent.object === node);\n        case \"BinaryExpression\":\n        case \"LogicalExpression\":\n            switch (parent.type) {\n                case \"CallExpression\":\n                    return name === \"callee\" && parent.callee === node;\n                case \"UnaryExpression\":\n                case \"SpreadElement\":\n                case \"SpreadProperty\":\n                    return true;\n                case \"MemberExpression\":\n                    return name === \"object\" && parent.object === node;\n                case \"BinaryExpression\":\n                case \"LogicalExpression\": {\n                    var po = parent.operator;\n                    var pp = PRECEDENCE[po];\n                    var no = node.operator;\n                    var np = PRECEDENCE[no];\n                    if (pp > np) {\n                        return true;\n                    }\n                    if (pp === np && name === \"right\") {\n                        (0, tiny_invariant_1.default)(parent.right === node);\n                        return true;\n                    }\n                    break;\n                }\n                default:\n                    return false;\n            }\n            break;\n        case \"SequenceExpression\":\n            switch (parent.type) {\n                case \"ReturnStatement\":\n                    return false;\n                case \"ForStatement\":\n                    // Although parentheses wouldn't hurt around sequence expressions in\n                    // the head of for loops, traditional style dictates that e.g. i++,\n                    // j++ should not be wrapped with parentheses.\n                    return false;\n                case \"ExpressionStatement\":\n                    return name !== \"expression\";\n                default:\n                    // Otherwise err on the side of overparenthesization, adding\n                    // explicit exceptions above if this proves overzealous.\n                    return true;\n            }\n        case \"OptionalIndexedAccessType\":\n            return node.optional && parent.type === \"IndexedAccessType\";\n        case \"IntersectionTypeAnnotation\":\n        case \"UnionTypeAnnotation\":\n            return parent.type === \"NullableTypeAnnotation\";\n        case \"Literal\":\n            return (parent.type === \"MemberExpression\" &&\n                isNumber.check(node.value) &&\n                name === \"object\" &&\n                parent.object === node);\n        // Babel 6 Literal split\n        case \"NumericLiteral\":\n            return (parent.type === \"MemberExpression\" &&\n                name === \"object\" &&\n                parent.object === node);\n        case \"YieldExpression\":\n        case \"AwaitExpression\":\n        case \"AssignmentExpression\":\n        case \"ConditionalExpression\":\n            switch (parent.type) {\n                case \"UnaryExpression\":\n                case \"SpreadElement\":\n                case \"SpreadProperty\":\n                case \"BinaryExpression\":\n                case \"LogicalExpression\":\n                    return true;\n                case \"CallExpression\":\n                case \"NewExpression\":\n                    return name === \"callee\" && parent.callee === node;\n                case \"ConditionalExpression\":\n                    return name === \"test\" && parent.test === node;\n                case \"MemberExpression\":\n                    return name === \"object\" && parent.object === node;\n                default:\n                    return false;\n            }\n        case \"ArrowFunctionExpression\":\n            if (n.CallExpression.check(parent) &&\n                name === \"callee\" &&\n                parent.callee === node) {\n                return true;\n            }\n            if (n.MemberExpression.check(parent) &&\n                name === \"object\" &&\n                parent.object === node) {\n                return true;\n            }\n            if (n.TSAsExpression &&\n                n.TSAsExpression.check(parent) &&\n                name === \"expression\" &&\n                parent.expression === node) {\n                return true;\n            }\n            return isBinary(parent);\n        case \"ObjectExpression\":\n            if (parent.type === \"ArrowFunctionExpression\" &&\n                name === \"body\" &&\n                parent.body === node) {\n                return true;\n            }\n            break;\n        case \"TSAsExpression\":\n            if (parent.type === \"ArrowFunctionExpression\" &&\n                name === \"body\" &&\n                parent.body === node &&\n                node.expression.type === \"ObjectExpression\") {\n                return true;\n            }\n            break;\n        case \"CallExpression\":\n            if (name === \"declaration\" &&\n                n.ExportDefaultDeclaration.check(parent) &&\n                n.FunctionExpression.check(node.callee)) {\n                return true;\n            }\n    }\n    if (parent.type === \"NewExpression\" &&\n        name === \"callee\" &&\n        parent.callee === node) {\n        return containsCallExpression(node);\n    }\n    if (assumeExpressionContext !== true &&\n        !this.canBeFirstInStatement() &&\n        this.firstInStatement()) {\n        return true;\n    }\n    return false;\n};\nfunction isBinary(node) {\n    return n.BinaryExpression.check(node) || n.LogicalExpression.check(node);\n}\n// @ts-ignore 'isUnaryLike' is declared but its value is never read. [6133]\nfunction isUnaryLike(node) {\n    return (n.UnaryExpression.check(node) ||\n        // I considered making SpreadElement and SpreadProperty subtypes of\n        // UnaryExpression, but they're not really Expression nodes.\n        (n.SpreadElement && n.SpreadElement.check(node)) ||\n        (n.SpreadProperty && n.SpreadProperty.check(node)));\n}\nfunction containsCallExpression(node) {\n    if (n.CallExpression.check(node)) {\n        return true;\n    }\n    if (isArray.check(node)) {\n        return node.some(containsCallExpression);\n    }\n    if (n.Node.check(node)) {\n        return types.someField(node, function (_name, child) {\n            return containsCallExpression(child);\n        });\n    }\n    return false;\n}\nFPp.canBeFirstInStatement = function () {\n    var node = this.getNode();\n    if (n.FunctionExpression.check(node)) {\n        return false;\n    }\n    if (n.ObjectExpression.check(node)) {\n        return false;\n    }\n    if (n.ClassExpression.check(node)) {\n        return false;\n    }\n    return true;\n};\nFPp.firstInStatement = function () {\n    var s = this.stack;\n    var parentName, parent;\n    var childName, child;\n    for (var i = s.length - 1; i >= 0; i -= 2) {\n        if (n.Node.check(s[i])) {\n            childName = parentName;\n            child = parent;\n            parentName = s[i - 1];\n            parent = s[i];\n        }\n        if (!parent || !child) {\n            continue;\n        }\n        if (n.BlockStatement.check(parent) &&\n            parentName === \"body\" &&\n            childName === 0) {\n            (0, tiny_invariant_1.default)(parent.body[0] === child);\n            return true;\n        }\n        if (n.ExpressionStatement.check(parent) && childName === \"expression\") {\n            (0, tiny_invariant_1.default)(parent.expression === child);\n            return true;\n        }\n        if (n.AssignmentExpression.check(parent) && childName === \"left\") {\n            (0, tiny_invariant_1.default)(parent.left === child);\n            return true;\n        }\n        if (n.ArrowFunctionExpression.check(parent) && childName === \"body\") {\n            (0, tiny_invariant_1.default)(parent.body === child);\n            return true;\n        }\n        // s[i + 1] and s[i + 2] represent the array between the parent\n        // SequenceExpression node and its child nodes\n        if (n.SequenceExpression.check(parent) &&\n            s[i + 1] === \"expressions\" &&\n            childName === 0) {\n            (0, tiny_invariant_1.default)(parent.expressions[0] === child);\n            continue;\n        }\n        if (n.CallExpression.check(parent) && childName === \"callee\") {\n            (0, tiny_invariant_1.default)(parent.callee === child);\n            continue;\n        }\n        if (n.MemberExpression.check(parent) && childName === \"object\") {\n            (0, tiny_invariant_1.default)(parent.object === child);\n            continue;\n        }\n        if (n.ConditionalExpression.check(parent) && childName === \"test\") {\n            (0, tiny_invariant_1.default)(parent.test === child);\n            continue;\n        }\n        if (isBinary(parent) && childName === \"left\") {\n            (0, tiny_invariant_1.default)(parent.left === child);\n            continue;\n        }\n        if (n.UnaryExpression.check(parent) &&\n            !parent.prefix &&\n            childName === \"argument\") {\n            (0, tiny_invariant_1.default)(parent.argument === child);\n            continue;\n        }\n        return false;\n    }\n    return true;\n};\nexports.default = FastPath;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getReprinter = exports.Patcher = void 0;\nvar tslib_1 = require(\"tslib\");\nvar tiny_invariant_1 = tslib_1.__importDefault(require(\"tiny-invariant\"));\nvar linesModule = tslib_1.__importStar(require(\"./lines\"));\nvar types = tslib_1.__importStar(require(\"ast-types\"));\nvar Printable = types.namedTypes.Printable;\nvar Expression = types.namedTypes.Expression;\nvar ReturnStatement = types.namedTypes.ReturnStatement;\nvar SourceLocation = types.namedTypes.SourceLocation;\nvar util_1 = require(\"./util\");\nvar fast_path_1 = tslib_1.__importDefault(require(\"./fast-path\"));\nvar isObject = types.builtInTypes.object;\nvar isArray = types.builtInTypes.array;\nvar isString = types.builtInTypes.string;\nvar riskyAdjoiningCharExp = /[0-9a-z_$]/i;\nvar Patcher = function Patcher(lines) {\n    (0, tiny_invariant_1.default)(this instanceof Patcher);\n    (0, tiny_invariant_1.default)(lines instanceof linesModule.Lines);\n    var self = this, replacements = [];\n    self.replace = function (loc, lines) {\n        if (isString.check(lines))\n            lines = linesModule.fromString(lines);\n        replacements.push({\n            lines: lines,\n            start: loc.start,\n            end: loc.end,\n        });\n    };\n    self.get = function (loc) {\n        // If no location is provided, return the complete Lines object.\n        loc = loc || {\n            start: { line: 1, column: 0 },\n            end: { line: lines.length, column: lines.getLineLength(lines.length) },\n        };\n        var sliceFrom = loc.start, toConcat = [];\n        function pushSlice(from, to) {\n            (0, tiny_invariant_1.default)((0, util_1.comparePos)(from, to) <= 0);\n            toConcat.push(lines.slice(from, to));\n        }\n        replacements\n            .sort(function (a, b) { return (0, util_1.comparePos)(a.start, b.start); })\n            .forEach(function (rep) {\n            if ((0, util_1.comparePos)(sliceFrom, rep.start) > 0) {\n                // Ignore nested replacement ranges.\n            }\n            else {\n                pushSlice(sliceFrom, rep.start);\n                toConcat.push(rep.lines);\n                sliceFrom = rep.end;\n            }\n        });\n        pushSlice(sliceFrom, loc.end);\n        return linesModule.concat(toConcat);\n    };\n};\nexports.Patcher = Patcher;\nvar Pp = Patcher.prototype;\nPp.tryToReprintComments = function (newNode, oldNode, print) {\n    var patcher = this;\n    if (!newNode.comments && !oldNode.comments) {\n        // We were (vacuously) able to reprint all the comments!\n        return true;\n    }\n    var newPath = fast_path_1.default.from(newNode);\n    var oldPath = fast_path_1.default.from(oldNode);\n    newPath.stack.push(\"comments\", getSurroundingComments(newNode));\n    oldPath.stack.push(\"comments\", getSurroundingComments(oldNode));\n    var reprints = [];\n    var ableToReprintComments = findArrayReprints(newPath, oldPath, reprints);\n    // No need to pop anything from newPath.stack or oldPath.stack, since\n    // newPath and oldPath are fresh local variables.\n    if (ableToReprintComments && reprints.length > 0) {\n        reprints.forEach(function (reprint) {\n            var oldComment = reprint.oldPath.getValue();\n            (0, tiny_invariant_1.default)(oldComment.leading || oldComment.trailing);\n            patcher.replace(oldComment.loc, \n            // Comments can't have .comments, so it doesn't matter whether we\n            // print with comments or without.\n            print(reprint.newPath).indentTail(oldComment.loc.indent));\n        });\n    }\n    return ableToReprintComments;\n};\n// Get all comments that are either leading or trailing, ignoring any\n// comments that occur inside node.loc. Returns an empty array for nodes\n// with no leading or trailing comments.\nfunction getSurroundingComments(node) {\n    var result = [];\n    if (node.comments && node.comments.length > 0) {\n        node.comments.forEach(function (comment) {\n            if (comment.leading || comment.trailing) {\n                result.push(comment);\n            }\n        });\n    }\n    return result;\n}\nPp.deleteComments = function (node) {\n    if (!node.comments) {\n        return;\n    }\n    var patcher = this;\n    node.comments.forEach(function (comment) {\n        if (comment.leading) {\n            // Delete leading comments along with any trailing whitespace they\n            // might have.\n            patcher.replace({\n                start: comment.loc.start,\n                end: node.loc.lines.skipSpaces(comment.loc.end, false, false),\n            }, \"\");\n        }\n        else if (comment.trailing) {\n            // Delete trailing comments along with any leading whitespace they\n            // might have.\n            patcher.replace({\n                start: node.loc.lines.skipSpaces(comment.loc.start, true, false),\n                end: comment.loc.end,\n            }, \"\");\n        }\n    });\n};\nfunction getReprinter(path) {\n    (0, tiny_invariant_1.default)(path instanceof fast_path_1.default);\n    // Make sure that this path refers specifically to a Node, rather than\n    // some non-Node subproperty of a Node.\n    var node = path.getValue();\n    if (!Printable.check(node))\n        return;\n    var orig = node.original;\n    var origLoc = orig && orig.loc;\n    var lines = origLoc && origLoc.lines;\n    var reprints = [];\n    if (!lines || !findReprints(path, reprints))\n        return;\n    return function (print) {\n        var patcher = new Patcher(lines);\n        reprints.forEach(function (reprint) {\n            var newNode = reprint.newPath.getValue();\n            var oldNode = reprint.oldPath.getValue();\n            SourceLocation.assert(oldNode.loc, true);\n            var needToPrintNewPathWithComments = !patcher.tryToReprintComments(newNode, oldNode, print);\n            if (needToPrintNewPathWithComments) {\n                // Since we were not able to preserve all leading/trailing\n                // comments, we delete oldNode's comments, print newPath with\n                // comments, and then patch the resulting lines where oldNode used\n                // to be.\n                patcher.deleteComments(oldNode);\n            }\n            var newLines = print(reprint.newPath, {\n                includeComments: needToPrintNewPathWithComments,\n                // If the oldNode we're replacing already had parentheses, we may\n                // not need to print the new node with any extra parentheses,\n                // because the existing parentheses will suffice. However, if the\n                // newNode has a different type than the oldNode, let the printer\n                // decide if reprint.newPath needs parentheses, as usual.\n                avoidRootParens: oldNode.type === newNode.type && reprint.oldPath.hasParens(),\n            }).indentTail(oldNode.loc.indent);\n            var nls = needsLeadingSpace(lines, oldNode.loc, newLines);\n            var nts = needsTrailingSpace(lines, oldNode.loc, newLines);\n            // If we try to replace the argument of a ReturnStatement like\n            // return\"asdf\" with e.g. a literal null expression, we run the risk\n            // of ending up with returnnull, so we need to add an extra leading\n            // space in situations where that might happen. Likewise for\n            // \"asdf\"in obj. See #170.\n            if (nls || nts) {\n                var newParts = [];\n                nls && newParts.push(\" \");\n                newParts.push(newLines);\n                nts && newParts.push(\" \");\n                newLines = linesModule.concat(newParts);\n            }\n            patcher.replace(oldNode.loc, newLines);\n        });\n        // Recall that origLoc is the .loc of an ancestor node that is\n        // guaranteed to contain all the reprinted nodes and comments.\n        var patchedLines = patcher.get(origLoc).indentTail(-orig.loc.indent);\n        if (path.needsParens()) {\n            return linesModule.concat([\"(\", patchedLines, \")\"]);\n        }\n        return patchedLines;\n    };\n}\nexports.getReprinter = getReprinter;\n// If the last character before oldLoc and the first character of newLines\n// are both identifier characters, they must be separated by a space,\n// otherwise they will most likely get fused together into a single token.\nfunction needsLeadingSpace(oldLines, oldLoc, newLines) {\n    var posBeforeOldLoc = (0, util_1.copyPos)(oldLoc.start);\n    // The character just before the location occupied by oldNode.\n    var charBeforeOldLoc = oldLines.prevPos(posBeforeOldLoc) && oldLines.charAt(posBeforeOldLoc);\n    // First character of the reprinted node.\n    var newFirstChar = newLines.charAt(newLines.firstPos());\n    return (charBeforeOldLoc &&\n        riskyAdjoiningCharExp.test(charBeforeOldLoc) &&\n        newFirstChar &&\n        riskyAdjoiningCharExp.test(newFirstChar));\n}\n// If the last character of newLines and the first character after oldLoc\n// are both identifier characters, they must be separated by a space,\n// otherwise they will most likely get fused together into a single token.\nfunction needsTrailingSpace(oldLines, oldLoc, newLines) {\n    // The character just after the location occupied by oldNode.\n    var charAfterOldLoc = oldLines.charAt(oldLoc.end);\n    var newLastPos = newLines.lastPos();\n    // Last character of the reprinted node.\n    var newLastChar = newLines.prevPos(newLastPos) && newLines.charAt(newLastPos);\n    return (newLastChar &&\n        riskyAdjoiningCharExp.test(newLastChar) &&\n        charAfterOldLoc &&\n        riskyAdjoiningCharExp.test(charAfterOldLoc));\n}\nfunction findReprints(newPath, reprints) {\n    var newNode = newPath.getValue();\n    Printable.assert(newNode);\n    var oldNode = newNode.original;\n    Printable.assert(oldNode);\n    (0, tiny_invariant_1.default)(reprints.length === 0);\n    if (newNode.type !== oldNode.type) {\n        return false;\n    }\n    var oldPath = new fast_path_1.default(oldNode);\n    var canReprint = findChildReprints(newPath, oldPath, reprints);\n    if (!canReprint) {\n        // Make absolutely sure the calling code does not attempt to reprint\n        // any nodes.\n        reprints.length = 0;\n    }\n    return canReprint;\n}\nfunction findAnyReprints(newPath, oldPath, reprints) {\n    var newNode = newPath.getValue();\n    var oldNode = oldPath.getValue();\n    if (newNode === oldNode)\n        return true;\n    if (isArray.check(newNode))\n        return findArrayReprints(newPath, oldPath, reprints);\n    if (isObject.check(newNode))\n        return findObjectReprints(newPath, oldPath, reprints);\n    return false;\n}\nfunction findArrayReprints(newPath, oldPath, reprints) {\n    var newNode = newPath.getValue();\n    var oldNode = oldPath.getValue();\n    if (newNode === oldNode ||\n        newPath.valueIsDuplicate() ||\n        oldPath.valueIsDuplicate()) {\n        return true;\n    }\n    isArray.assert(newNode);\n    var len = newNode.length;\n    if (!(isArray.check(oldNode) && oldNode.length === len))\n        return false;\n    for (var i = 0; i < len; ++i) {\n        newPath.stack.push(i, newNode[i]);\n        oldPath.stack.push(i, oldNode[i]);\n        var canReprint = findAnyReprints(newPath, oldPath, reprints);\n        newPath.stack.length -= 2;\n        oldPath.stack.length -= 2;\n        if (!canReprint) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction findObjectReprints(newPath, oldPath, reprints) {\n    var newNode = newPath.getValue();\n    isObject.assert(newNode);\n    if (newNode.original === null) {\n        // If newNode.original node was set to null, reprint the node.\n        return false;\n    }\n    var oldNode = oldPath.getValue();\n    if (!isObject.check(oldNode))\n        return false;\n    if (newNode === oldNode ||\n        newPath.valueIsDuplicate() ||\n        oldPath.valueIsDuplicate()) {\n        return true;\n    }\n    if (Printable.check(newNode)) {\n        if (!Printable.check(oldNode)) {\n            return false;\n        }\n        var newParentNode = newPath.getParentNode();\n        var oldParentNode = oldPath.getParentNode();\n        if (oldParentNode !== null &&\n            oldParentNode.type === \"FunctionTypeAnnotation\" &&\n            newParentNode !== null &&\n            newParentNode.type === \"FunctionTypeAnnotation\") {\n            var oldNeedsParens = oldParentNode.params.length !== 1 || !!oldParentNode.params[0].name;\n            var newNeedParens = newParentNode.params.length !== 1 || !!newParentNode.params[0].name;\n            if (!oldNeedsParens && newNeedParens) {\n                return false;\n            }\n        }\n        // Here we need to decide whether the reprinted code for newNode is\n        // appropriate for patching into the location of oldNode.\n        if (newNode.type === oldNode.type) {\n            var childReprints = [];\n            if (findChildReprints(newPath, oldPath, childReprints)) {\n                reprints.push.apply(reprints, childReprints);\n            }\n            else if (oldNode.loc) {\n                // If we have no .loc information for oldNode, then we won't be\n                // able to reprint it.\n                reprints.push({\n                    oldPath: oldPath.copy(),\n                    newPath: newPath.copy(),\n                });\n            }\n            else {\n                return false;\n            }\n            return true;\n        }\n        if (Expression.check(newNode) &&\n            Expression.check(oldNode) &&\n            // If we have no .loc information for oldNode, then we won't be\n            // able to reprint it.\n            oldNode.loc) {\n            // If both nodes are subtypes of Expression, then we should be able\n            // to fill the location occupied by the old node with code printed\n            // for the new node with no ill consequences.\n            reprints.push({\n                oldPath: oldPath.copy(),\n                newPath: newPath.copy(),\n            });\n            return true;\n        }\n        // The nodes have different types, and at least one of the types is\n        // not a subtype of the Expression type, so we cannot safely assume\n        // the nodes are syntactically interchangeable.\n        return false;\n    }\n    return findChildReprints(newPath, oldPath, reprints);\n}\nfunction findChildReprints(newPath, oldPath, reprints) {\n    var newNode = newPath.getValue();\n    var oldNode = oldPath.getValue();\n    isObject.assert(newNode);\n    isObject.assert(oldNode);\n    if (newNode.original === null) {\n        // If newNode.original node was set to null, reprint the node.\n        return false;\n    }\n    // If this node needs parentheses and will not be wrapped with\n    // parentheses when reprinted, then return false to skip reprinting and\n    // let it be printed generically.\n    if (newPath.needsParens() && !oldPath.hasParens()) {\n        return false;\n    }\n    var keys = (0, util_1.getUnionOfKeys)(oldNode, newNode);\n    if (oldNode.type === \"File\" || newNode.type === \"File\") {\n        // Don't bother traversing file.tokens, an often very large array\n        // returned by Babylon, and useless for our purposes.\n        delete keys.tokens;\n    }\n    // Don't bother traversing .loc objects looking for reprintable nodes.\n    delete keys.loc;\n    var originalReprintCount = reprints.length;\n    for (var k in keys) {\n        if (k.charAt(0) === \"_\") {\n            // Ignore \"private\" AST properties added by e.g. Babel plugins and\n            // parsers like Babylon.\n            continue;\n        }\n        newPath.stack.push(k, types.getFieldValue(newNode, k));\n        oldPath.stack.push(k, types.getFieldValue(oldNode, k));\n        var canReprint = findAnyReprints(newPath, oldPath, reprints);\n        newPath.stack.length -= 2;\n        oldPath.stack.length -= 2;\n        if (!canReprint) {\n            return false;\n        }\n    }\n    // Return statements might end up running into ASI issues due to\n    // comments inserted deep within the tree, so reprint them if anything\n    // changed within them.\n    if (ReturnStatement.check(newPath.getNode()) &&\n        reprints.length > originalReprintCount) {\n        return false;\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Printer = void 0;\nvar tslib_1 = require(\"tslib\");\nvar tiny_invariant_1 = tslib_1.__importDefault(require(\"tiny-invariant\"));\nvar types = tslib_1.__importStar(require(\"ast-types\"));\nvar comments_1 = require(\"./comments\");\nvar fast_path_1 = tslib_1.__importDefault(require(\"./fast-path\"));\nvar lines_1 = require(\"./lines\");\nvar options_1 = require(\"./options\");\nvar patcher_1 = require(\"./patcher\");\nvar util = tslib_1.__importStar(require(\"./util\"));\nvar namedTypes = types.namedTypes;\nvar isString = types.builtInTypes.string;\nvar isObject = types.builtInTypes.object;\nvar PrintResult = function PrintResult(code, sourceMap) {\n    (0, tiny_invariant_1.default)(this instanceof PrintResult);\n    isString.assert(code);\n    this.code = code;\n    if (sourceMap) {\n        isObject.assert(sourceMap);\n        this.map = sourceMap;\n    }\n};\nvar PRp = PrintResult.prototype;\nvar warnedAboutToString = false;\nPRp.toString = function () {\n    if (!warnedAboutToString) {\n        console.warn(\"Deprecation warning: recast.print now returns an object with \" +\n            \"a .code property. You appear to be treating the object as a \" +\n            \"string, which might still work but is strongly discouraged.\");\n        warnedAboutToString = true;\n    }\n    return this.code;\n};\nvar emptyPrintResult = new PrintResult(\"\");\nvar Printer = function Printer(config) {\n    (0, tiny_invariant_1.default)(this instanceof Printer);\n    var explicitTabWidth = config && config.tabWidth;\n    config = (0, options_1.normalize)(config);\n    // It's common for client code to pass the same options into both\n    // recast.parse and recast.print, but the Printer doesn't need (and\n    // can be confused by) config.sourceFileName, so we null it out.\n    config.sourceFileName = null;\n    // Non-destructively modifies options with overrides, and returns a\n    // new print function that uses the modified options.\n    function makePrintFunctionWith(options, overrides) {\n        options = Object.assign({}, options, overrides);\n        return function (path) { return print(path, options); };\n    }\n    function print(path, options) {\n        (0, tiny_invariant_1.default)(path instanceof fast_path_1.default);\n        options = options || {};\n        if (options.includeComments) {\n            return (0, comments_1.printComments)(path, makePrintFunctionWith(options, {\n                includeComments: false,\n            }));\n        }\n        var oldTabWidth = config.tabWidth;\n        if (!explicitTabWidth) {\n            var loc = path.getNode().loc;\n            if (loc && loc.lines && loc.lines.guessTabWidth) {\n                config.tabWidth = loc.lines.guessTabWidth();\n            }\n        }\n        var reprinter = (0, patcher_1.getReprinter)(path);\n        var lines = reprinter\n            ? // Since the print function that we pass to the reprinter will\n                // be used to print \"new\" nodes, it's tempting to think we\n                // should pass printRootGenerically instead of print, to avoid\n                // calling maybeReprint again, but that would be a mistake\n                // because the new nodes might not be entirely new, but merely\n                // moved from elsewhere in the AST. The print function is the\n                // right choice because it gives us the opportunity to reprint\n                // such nodes using their original source.\n                reprinter(print)\n            : genericPrint(path, config, options, makePrintFunctionWith(options, {\n                includeComments: true,\n                avoidRootParens: false,\n            }));\n        config.tabWidth = oldTabWidth;\n        return lines;\n    }\n    this.print = function (ast) {\n        if (!ast) {\n            return emptyPrintResult;\n        }\n        var lines = print(fast_path_1.default.from(ast), {\n            includeComments: true,\n            avoidRootParens: false,\n        });\n        return new PrintResult(lines.toString(config), util.composeSourceMaps(config.inputSourceMap, lines.getSourceMap(config.sourceMapName, config.sourceRoot)));\n    };\n    this.printGenerically = function (ast) {\n        if (!ast) {\n            return emptyPrintResult;\n        }\n        // Print the entire AST generically.\n        function printGenerically(path) {\n            return (0, comments_1.printComments)(path, function (path) {\n                return genericPrint(path, config, {\n                    includeComments: true,\n                    avoidRootParens: false,\n                }, printGenerically);\n            });\n        }\n        var path = fast_path_1.default.from(ast);\n        var oldReuseWhitespace = config.reuseWhitespace;\n        // Do not reuse whitespace (or anything else, for that matter)\n        // when printing generically.\n        config.reuseWhitespace = false;\n        // TODO Allow printing of comments?\n        var pr = new PrintResult(printGenerically(path).toString(config));\n        config.reuseWhitespace = oldReuseWhitespace;\n        return pr;\n    };\n};\nexports.Printer = Printer;\nfunction genericPrint(path, config, options, printPath) {\n    (0, tiny_invariant_1.default)(path instanceof fast_path_1.default);\n    var node = path.getValue();\n    var parts = [];\n    var linesWithoutParens = genericPrintNoParens(path, config, printPath);\n    if (!node || linesWithoutParens.isEmpty()) {\n        return linesWithoutParens;\n    }\n    var shouldAddParens = false;\n    var decoratorsLines = printDecorators(path, printPath);\n    if (decoratorsLines.isEmpty()) {\n        // Nodes with decorators can't have parentheses, so we can avoid\n        // computing path.needsParens() except in this case.\n        if (!options.avoidRootParens) {\n            shouldAddParens = path.needsParens();\n        }\n    }\n    else {\n        parts.push(decoratorsLines);\n    }\n    if (shouldAddParens) {\n        parts.unshift(\"(\");\n    }\n    parts.push(linesWithoutParens);\n    if (shouldAddParens) {\n        parts.push(\")\");\n    }\n    return (0, lines_1.concat)(parts);\n}\n// Note that the `options` parameter of this function is what other\n// functions in this file call the `config` object (that is, the\n// configuration object originally passed into the Printer constructor).\n// Its properties are documented in lib/options.js.\nfunction genericPrintNoParens(path, options, print) {\n    var n = path.getValue();\n    if (!n) {\n        return (0, lines_1.fromString)(\"\");\n    }\n    if (typeof n === \"string\") {\n        return (0, lines_1.fromString)(n, options);\n    }\n    namedTypes.Printable.assert(n);\n    var parts = [];\n    switch (n.type) {\n        case \"File\":\n            return path.call(print, \"program\");\n        case \"Program\":\n            // Babel 6\n            if (n.directives) {\n                path.each(function (childPath) {\n                    parts.push(print(childPath), \";\\n\");\n                }, \"directives\");\n            }\n            if (n.interpreter) {\n                parts.push(path.call(print, \"interpreter\"));\n            }\n            parts.push(path.call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\"));\n            return (0, lines_1.concat)(parts);\n        case \"Noop\": // Babel extension.\n        case \"EmptyStatement\":\n            return (0, lines_1.fromString)(\"\");\n        case \"ExpressionStatement\":\n            return (0, lines_1.concat)([path.call(print, \"expression\"), \";\"]);\n        case \"ParenthesizedExpression\": // Babel extension.\n            return (0, lines_1.concat)([\"(\", path.call(print, \"expression\"), \")\"]);\n        case \"BinaryExpression\":\n        case \"LogicalExpression\":\n        case \"AssignmentExpression\":\n            return (0, lines_1.fromString)(\" \").join([\n                path.call(print, \"left\"),\n                n.operator,\n                path.call(print, \"right\"),\n            ]);\n        case \"AssignmentPattern\":\n            return (0, lines_1.concat)([\n                path.call(print, \"left\"),\n                \" = \",\n                path.call(print, \"right\"),\n            ]);\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\": {\n            parts.push(path.call(print, \"object\"));\n            var property = path.call(print, \"property\");\n            // Like n.optional, except with defaults applied, so optional\n            // defaults to true for OptionalMemberExpression nodes.\n            var optional = types.getFieldValue(n, \"optional\");\n            if (n.computed) {\n                parts.push(optional ? \"?.[\" : \"[\", property, \"]\");\n            }\n            else {\n                parts.push(optional ? \"?.\" : \".\", property);\n            }\n            return (0, lines_1.concat)(parts);\n        }\n        case \"ChainExpression\":\n            return path.call(print, \"expression\");\n        case \"MetaProperty\":\n            return (0, lines_1.concat)([\n                path.call(print, \"meta\"),\n                \".\",\n                path.call(print, \"property\"),\n            ]);\n        case \"BindExpression\":\n            if (n.object) {\n                parts.push(path.call(print, \"object\"));\n            }\n            parts.push(\"::\", path.call(print, \"callee\"));\n            return (0, lines_1.concat)(parts);\n        case \"Path\":\n            return (0, lines_1.fromString)(\".\").join(n.body);\n        case \"Identifier\":\n            return (0, lines_1.concat)([\n                (0, lines_1.fromString)(n.name, options),\n                n.optional ? \"?\" : \"\",\n                path.call(print, \"typeAnnotation\"),\n            ]);\n        case \"SpreadElement\":\n        case \"SpreadElementPattern\":\n        case \"RestProperty\": // Babel 6 for ObjectPattern\n        case \"SpreadProperty\":\n        case \"SpreadPropertyPattern\":\n        case \"ObjectTypeSpreadProperty\":\n        case \"RestElement\":\n            return (0, lines_1.concat)([\n                \"...\",\n                path.call(print, \"argument\"),\n                path.call(print, \"typeAnnotation\"),\n            ]);\n        case \"FunctionDeclaration\":\n        case \"FunctionExpression\":\n        case \"TSDeclareFunction\":\n            if (n.declare) {\n                parts.push(\"declare \");\n            }\n            if (n.async) {\n                parts.push(\"async \");\n            }\n            parts.push(\"function\");\n            if (n.generator)\n                parts.push(\"*\");\n            if (n.id) {\n                parts.push(\" \", path.call(print, \"id\"), path.call(print, \"typeParameters\"));\n            }\n            else {\n                if (n.typeParameters) {\n                    parts.push(path.call(print, \"typeParameters\"));\n                }\n            }\n            parts.push(\"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"returnType\"));\n            if (n.body) {\n                parts.push(\" \", path.call(print, \"body\"));\n            }\n            return (0, lines_1.concat)(parts);\n        case \"ArrowFunctionExpression\":\n            if (n.async) {\n                parts.push(\"async \");\n            }\n            if (n.typeParameters) {\n                parts.push(path.call(print, \"typeParameters\"));\n            }\n            if (!options.arrowParensAlways &&\n                n.params.length === 1 &&\n                !n.rest &&\n                n.params[0].type === \"Identifier\" &&\n                !n.params[0].typeAnnotation &&\n                !n.returnType) {\n                parts.push(path.call(print, \"params\", 0));\n            }\n            else {\n                parts.push(\"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"returnType\"));\n            }\n            parts.push(\" => \", path.call(print, \"body\"));\n            return (0, lines_1.concat)(parts);\n        case \"MethodDefinition\":\n            return printMethod(path, options, print);\n        case \"YieldExpression\":\n            parts.push(\"yield\");\n            if (n.delegate)\n                parts.push(\"*\");\n            if (n.argument)\n                parts.push(\" \", path.call(print, \"argument\"));\n            return (0, lines_1.concat)(parts);\n        case \"AwaitExpression\":\n            parts.push(\"await\");\n            if (n.all)\n                parts.push(\"*\");\n            if (n.argument)\n                parts.push(\" \", path.call(print, \"argument\"));\n            return (0, lines_1.concat)(parts);\n        case \"ModuleExpression\":\n            return (0, lines_1.concat)([\n                \"module {\\n\",\n                path.call(print, \"body\").indent(options.tabWidth),\n                \"\\n}\",\n            ]);\n        case \"ModuleDeclaration\":\n            parts.push(\"module\", path.call(print, \"id\"));\n            if (n.source) {\n                (0, tiny_invariant_1.default)(!n.body);\n                parts.push(\"from\", path.call(print, \"source\"));\n            }\n            else {\n                parts.push(path.call(print, \"body\"));\n            }\n            return (0, lines_1.fromString)(\" \").join(parts);\n        case \"ImportSpecifier\":\n            if (n.importKind && n.importKind !== \"value\") {\n                parts.push(n.importKind + \" \");\n            }\n            if (n.imported) {\n                parts.push(path.call(print, \"imported\"));\n                if (n.local && n.local.name !== n.imported.name) {\n                    parts.push(\" as \", path.call(print, \"local\"));\n                }\n            }\n            else if (n.id) {\n                parts.push(path.call(print, \"id\"));\n                if (n.name) {\n                    parts.push(\" as \", path.call(print, \"name\"));\n                }\n            }\n            return (0, lines_1.concat)(parts);\n        case \"ExportSpecifier\":\n            if (n.exportKind && n.exportKind !== \"value\") {\n                parts.push(n.exportKind + \" \");\n            }\n            if (n.local) {\n                parts.push(path.call(print, \"local\"));\n                if (n.exported && n.exported.name !== n.local.name) {\n                    parts.push(\" as \", path.call(print, \"exported\"));\n                }\n            }\n            else if (n.id) {\n                parts.push(path.call(print, \"id\"));\n                if (n.name) {\n                    parts.push(\" as \", path.call(print, \"name\"));\n                }\n            }\n            return (0, lines_1.concat)(parts);\n        case \"ExportBatchSpecifier\":\n            return (0, lines_1.fromString)(\"*\");\n        case \"ImportNamespaceSpecifier\":\n            parts.push(\"* as \");\n            if (n.local) {\n                parts.push(path.call(print, \"local\"));\n            }\n            else if (n.id) {\n                parts.push(path.call(print, \"id\"));\n            }\n            return (0, lines_1.concat)(parts);\n        case \"ImportDefaultSpecifier\":\n            if (n.local) {\n                return path.call(print, \"local\");\n            }\n            return path.call(print, \"id\");\n        case \"TSExportAssignment\":\n            return (0, lines_1.concat)([\"export = \", path.call(print, \"expression\")]);\n        case \"ExportDeclaration\":\n        case \"ExportDefaultDeclaration\":\n        case \"ExportNamedDeclaration\":\n            return printExportDeclaration(path, options, print);\n        case \"ExportAllDeclaration\":\n            parts.push(\"export *\");\n            if (n.exported) {\n                parts.push(\" as \", path.call(print, \"exported\"));\n            }\n            parts.push(\" from \", path.call(print, \"source\"), \";\");\n            return (0, lines_1.concat)(parts);\n        case \"TSNamespaceExportDeclaration\":\n            parts.push(\"export as namespace \", path.call(print, \"id\"));\n            return maybeAddSemicolon((0, lines_1.concat)(parts));\n        case \"ExportNamespaceSpecifier\":\n            return (0, lines_1.concat)([\"* as \", path.call(print, \"exported\")]);\n        case \"ExportDefaultSpecifier\":\n            return path.call(print, \"exported\");\n        case \"Import\":\n            return (0, lines_1.fromString)(\"import\", options);\n        // Recast and ast-types currently support dynamic import(...) using\n        // either this dedicated ImportExpression type or a CallExpression\n        // whose callee has type Import.\n        // https://github.com/benjamn/ast-types/pull/365#issuecomment-605214486\n        case \"ImportExpression\":\n            return (0, lines_1.concat)([\"import(\", path.call(print, \"source\"), \")\"]);\n        case \"ImportDeclaration\": {\n            parts.push(\"import \");\n            if (n.importKind && n.importKind !== \"value\") {\n                parts.push(n.importKind + \" \");\n            }\n            if (n.specifiers && n.specifiers.length > 0) {\n                var unbracedSpecifiers_1 = [];\n                var bracedSpecifiers_1 = [];\n                path.each(function (specifierPath) {\n                    var spec = specifierPath.getValue();\n                    if (spec.type === \"ImportSpecifier\") {\n                        bracedSpecifiers_1.push(print(specifierPath));\n                    }\n                    else if (spec.type === \"ImportDefaultSpecifier\" ||\n                        spec.type === \"ImportNamespaceSpecifier\") {\n                        unbracedSpecifiers_1.push(print(specifierPath));\n                    }\n                }, \"specifiers\");\n                unbracedSpecifiers_1.forEach(function (lines, i) {\n                    if (i > 0) {\n                        parts.push(\", \");\n                    }\n                    parts.push(lines);\n                });\n                if (bracedSpecifiers_1.length > 0) {\n                    var lines = (0, lines_1.fromString)(\", \").join(bracedSpecifiers_1);\n                    if (lines.getLineLength(1) > options.wrapColumn) {\n                        lines = (0, lines_1.concat)([\n                            (0, lines_1.fromString)(\",\\n\").join(bracedSpecifiers_1).indent(options.tabWidth),\n                            \",\",\n                        ]);\n                    }\n                    if (unbracedSpecifiers_1.length > 0) {\n                        parts.push(\", \");\n                    }\n                    if (lines.length > 1) {\n                        parts.push(\"{\\n\", lines, \"\\n}\");\n                    }\n                    else if (options.objectCurlySpacing) {\n                        parts.push(\"{ \", lines, \" }\");\n                    }\n                    else {\n                        parts.push(\"{\", lines, \"}\");\n                    }\n                }\n                parts.push(\" from \");\n            }\n            parts.push(path.call(print, \"source\"), maybePrintImportAssertions(path, options, print), \";\");\n            return (0, lines_1.concat)(parts);\n        }\n        case \"ImportAttribute\":\n            return (0, lines_1.concat)([path.call(print, \"key\"), \": \", path.call(print, \"value\")]);\n        case \"StaticBlock\":\n            parts.push(\"static \");\n        // Intentionally fall through to BlockStatement below.\n        case \"BlockStatement\": {\n            var naked_1 = path.call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\");\n            if (naked_1.isEmpty()) {\n                if (!n.directives || n.directives.length === 0) {\n                    parts.push(\"{}\");\n                    return (0, lines_1.concat)(parts);\n                }\n            }\n            parts.push(\"{\\n\");\n            // Babel 6\n            if (n.directives) {\n                path.each(function (childPath) {\n                    parts.push(maybeAddSemicolon(print(childPath).indent(options.tabWidth)), n.directives.length > 1 || !naked_1.isEmpty() ? \"\\n\" : \"\");\n                }, \"directives\");\n            }\n            parts.push(naked_1.indent(options.tabWidth));\n            parts.push(\"\\n}\");\n            return (0, lines_1.concat)(parts);\n        }\n        case \"ReturnStatement\": {\n            parts.push(\"return\");\n            if (n.argument) {\n                var argLines = path.call(print, \"argument\");\n                if (argLines.startsWithComment() ||\n                    (argLines.length > 1 &&\n                        namedTypes.JSXElement &&\n                        namedTypes.JSXElement.check(n.argument))) {\n                    parts.push(\" (\\n\", argLines.indent(options.tabWidth), \"\\n)\");\n                }\n                else {\n                    parts.push(\" \", argLines);\n                }\n            }\n            parts.push(\";\");\n            return (0, lines_1.concat)(parts);\n        }\n        case \"CallExpression\":\n        case \"OptionalCallExpression\":\n            parts.push(path.call(print, \"callee\"));\n            if (n.typeParameters) {\n                parts.push(path.call(print, \"typeParameters\"));\n            }\n            if (n.typeArguments) {\n                parts.push(path.call(print, \"typeArguments\"));\n            }\n            // Like n.optional, but defaults to true for OptionalCallExpression\n            // nodes that are missing an n.optional property (unusual),\n            // according to the OptionalCallExpression definition in ast-types.\n            if (types.getFieldValue(n, \"optional\")) {\n                parts.push(\"?.\");\n            }\n            parts.push(printArgumentsList(path, options, print));\n            return (0, lines_1.concat)(parts);\n        case \"RecordExpression\":\n            parts.push(\"#\");\n        // Intentionally fall through to printing the object literal...\n        case \"ObjectExpression\":\n        case \"ObjectPattern\":\n        case \"ObjectTypeAnnotation\": {\n            var isTypeAnnotation_1 = n.type === \"ObjectTypeAnnotation\";\n            var separator_1 = options.flowObjectCommas\n                ? \",\"\n                : isTypeAnnotation_1\n                    ? \";\"\n                    : \",\";\n            var fields = [];\n            var allowBreak_1 = false;\n            if (isTypeAnnotation_1) {\n                fields.push(\"indexers\", \"callProperties\");\n                if (n.internalSlots != null) {\n                    fields.push(\"internalSlots\");\n                }\n            }\n            fields.push(\"properties\");\n            var len_1 = 0;\n            fields.forEach(function (field) {\n                len_1 += n[field].length;\n            });\n            var oneLine_1 = (isTypeAnnotation_1 && len_1 === 1) || len_1 === 0;\n            var leftBrace = n.exact ? \"{|\" : \"{\";\n            var rightBrace = n.exact ? \"|}\" : \"}\";\n            parts.push(oneLine_1 ? leftBrace : leftBrace + \"\\n\");\n            var leftBraceIndex = parts.length - 1;\n            var i_1 = 0;\n            fields.forEach(function (field) {\n                path.each(function (childPath) {\n                    var lines = print(childPath);\n                    if (!oneLine_1) {\n                        lines = lines.indent(options.tabWidth);\n                    }\n                    var multiLine = !isTypeAnnotation_1 && lines.length > 1;\n                    if (multiLine && allowBreak_1) {\n                        // Similar to the logic for BlockStatement.\n                        parts.push(\"\\n\");\n                    }\n                    parts.push(lines);\n                    if (i_1 < len_1 - 1) {\n                        // Add an extra line break if the previous object property\n                        // had a multi-line value.\n                        parts.push(separator_1 + (multiLine ? \"\\n\\n\" : \"\\n\"));\n                        allowBreak_1 = !multiLine;\n                    }\n                    else if (len_1 !== 1 && isTypeAnnotation_1) {\n                        parts.push(separator_1);\n                    }\n                    else if (!oneLine_1 &&\n                        util.isTrailingCommaEnabled(options, \"objects\") &&\n                        childPath.getValue().type !== \"RestElement\") {\n                        parts.push(separator_1);\n                    }\n                    i_1++;\n                }, field);\n            });\n            if (n.inexact) {\n                var line = (0, lines_1.fromString)(\"...\", options);\n                if (oneLine_1) {\n                    if (len_1 > 0) {\n                        parts.push(separator_1, \" \");\n                    }\n                    parts.push(line);\n                }\n                else {\n                    // No trailing separator after ... to maintain parity with prettier.\n                    parts.push(\"\\n\", line.indent(options.tabWidth));\n                }\n            }\n            parts.push(oneLine_1 ? rightBrace : \"\\n\" + rightBrace);\n            if (i_1 !== 0 && oneLine_1 && options.objectCurlySpacing) {\n                parts[leftBraceIndex] = leftBrace + \" \";\n                parts[parts.length - 1] = \" \" + rightBrace;\n            }\n            if (n.typeAnnotation) {\n                parts.push(path.call(print, \"typeAnnotation\"));\n            }\n            return (0, lines_1.concat)(parts);\n        }\n        case \"PropertyPattern\":\n            return (0, lines_1.concat)([\n                path.call(print, \"key\"),\n                \": \",\n                path.call(print, \"pattern\"),\n            ]);\n        case \"ObjectProperty\": // Babel 6\n        case \"Property\": {\n            // Non-standard AST node type.\n            if (n.method || n.kind === \"get\" || n.kind === \"set\") {\n                return printMethod(path, options, print);\n            }\n            if (n.shorthand && n.value.type === \"AssignmentPattern\") {\n                return path.call(print, \"value\");\n            }\n            var key = path.call(print, \"key\");\n            if (n.computed) {\n                parts.push(\"[\", key, \"]\");\n            }\n            else {\n                parts.push(key);\n            }\n            if (!n.shorthand || n.key.name !== n.value.name) {\n                parts.push(\": \", path.call(print, \"value\"));\n            }\n            return (0, lines_1.concat)(parts);\n        }\n        case \"ClassMethod\": // Babel 6\n        case \"ObjectMethod\": // Babel 6\n        case \"ClassPrivateMethod\":\n        case \"TSDeclareMethod\":\n            return printMethod(path, options, print);\n        case \"PrivateName\":\n            return (0, lines_1.concat)([\"#\", path.call(print, \"id\")]);\n        case \"Decorator\":\n            return (0, lines_1.concat)([\"@\", path.call(print, \"expression\")]);\n        case \"TupleExpression\":\n            parts.push(\"#\");\n        // Intentionally fall through to printing the tuple elements...\n        case \"ArrayExpression\":\n        case \"ArrayPattern\": {\n            var elems = n.elements;\n            var len_2 = elems.length;\n            var printed_1 = path.map(print, \"elements\");\n            var joined = (0, lines_1.fromString)(\", \").join(printed_1);\n            var oneLine_2 = joined.getLineLength(1) <= options.wrapColumn;\n            if (oneLine_2) {\n                if (options.arrayBracketSpacing) {\n                    parts.push(\"[ \");\n                }\n                else {\n                    parts.push(\"[\");\n                }\n            }\n            else {\n                parts.push(\"[\\n\");\n            }\n            path.each(function (elemPath) {\n                var i = elemPath.getName();\n                var elem = elemPath.getValue();\n                if (!elem) {\n                    // If the array expression ends with a hole, that hole\n                    // will be ignored by the interpreter, but if it ends with\n                    // two (or more) holes, we need to write out two (or more)\n                    // commas so that the resulting code is interpreted with\n                    // both (all) of the holes.\n                    parts.push(\",\");\n                }\n                else {\n                    var lines = printed_1[i];\n                    if (oneLine_2) {\n                        if (i > 0)\n                            parts.push(\" \");\n                    }\n                    else {\n                        lines = lines.indent(options.tabWidth);\n                    }\n                    parts.push(lines);\n                    if (i < len_2 - 1 ||\n                        (!oneLine_2 && util.isTrailingCommaEnabled(options, \"arrays\")))\n                        parts.push(\",\");\n                    if (!oneLine_2)\n                        parts.push(\"\\n\");\n                }\n            }, \"elements\");\n            if (oneLine_2 && options.arrayBracketSpacing) {\n                parts.push(\" ]\");\n            }\n            else {\n                parts.push(\"]\");\n            }\n            if (n.typeAnnotation) {\n                parts.push(path.call(print, \"typeAnnotation\"));\n            }\n            return (0, lines_1.concat)(parts);\n        }\n        case \"SequenceExpression\":\n            return (0, lines_1.fromString)(\", \").join(path.map(print, \"expressions\"));\n        case \"ThisExpression\":\n            return (0, lines_1.fromString)(\"this\");\n        case \"Super\":\n            return (0, lines_1.fromString)(\"super\");\n        case \"NullLiteral\": // Babel 6 Literal split\n            return (0, lines_1.fromString)(\"null\");\n        case \"RegExpLiteral\": // Babel 6 Literal split\n            return (0, lines_1.fromString)(getPossibleRaw(n) || \"/\".concat(n.pattern, \"/\").concat(n.flags || \"\"), options);\n        case \"BigIntLiteral\": // Babel 7 Literal split\n            return (0, lines_1.fromString)(getPossibleRaw(n) || n.value + \"n\", options);\n        case \"NumericLiteral\": // Babel 6 Literal Split\n            return (0, lines_1.fromString)(getPossibleRaw(n) || n.value, options);\n        case \"DecimalLiteral\":\n            return (0, lines_1.fromString)(getPossibleRaw(n) || n.value + \"m\", options);\n        case \"StringLiteral\":\n            return (0, lines_1.fromString)(nodeStr(n.value, options));\n        case \"BooleanLiteral\": // Babel 6 Literal split\n        case \"Literal\":\n            return (0, lines_1.fromString)(getPossibleRaw(n) ||\n                (typeof n.value === \"string\" ? nodeStr(n.value, options) : n.value), options);\n        case \"Directive\": // Babel 6\n            return path.call(print, \"value\");\n        case \"DirectiveLiteral\": // Babel 6\n            return (0, lines_1.fromString)(getPossibleRaw(n) || nodeStr(n.value, options), options);\n        case \"InterpreterDirective\":\n            return (0, lines_1.fromString)(\"#!\".concat(n.value, \"\\n\"), options);\n        case \"ModuleSpecifier\":\n            if (n.local) {\n                throw new Error(\"The ESTree ModuleSpecifier type should be abstract\");\n            }\n            // The Esprima ModuleSpecifier type is just a string-valued\n            // Literal identifying the imported-from module.\n            return (0, lines_1.fromString)(nodeStr(n.value, options), options);\n        case \"UnaryExpression\":\n            parts.push(n.operator);\n            if (/[a-z]$/.test(n.operator))\n                parts.push(\" \");\n            parts.push(path.call(print, \"argument\"));\n            return (0, lines_1.concat)(parts);\n        case \"UpdateExpression\":\n            parts.push(path.call(print, \"argument\"), n.operator);\n            if (n.prefix)\n                parts.reverse();\n            return (0, lines_1.concat)(parts);\n        case \"ConditionalExpression\":\n            return (0, lines_1.concat)([\n                path.call(print, \"test\"),\n                \" ? \",\n                path.call(print, \"consequent\"),\n                \" : \",\n                path.call(print, \"alternate\"),\n            ]);\n        case \"NewExpression\": {\n            parts.push(\"new \", path.call(print, \"callee\"));\n            if (n.typeParameters) {\n                parts.push(path.call(print, \"typeParameters\"));\n            }\n            if (n.typeArguments) {\n                parts.push(path.call(print, \"typeArguments\"));\n            }\n            var args = n.arguments;\n            if (args) {\n                parts.push(printArgumentsList(path, options, print));\n            }\n            return (0, lines_1.concat)(parts);\n        }\n        case \"VariableDeclaration\": {\n            if (n.declare) {\n                parts.push(\"declare \");\n            }\n            parts.push(n.kind, \" \");\n            var maxLen_1 = 0;\n            var printed = path.map(function (childPath) {\n                var lines = print(childPath);\n                maxLen_1 = Math.max(lines.length, maxLen_1);\n                return lines;\n            }, \"declarations\");\n            if (maxLen_1 === 1) {\n                parts.push((0, lines_1.fromString)(\", \").join(printed));\n            }\n            else if (printed.length > 1) {\n                parts.push((0, lines_1.fromString)(\",\\n\")\n                    .join(printed)\n                    .indentTail(n.kind.length + 1));\n            }\n            else {\n                parts.push(printed[0]);\n            }\n            // We generally want to terminate all variable declarations with a\n            // semicolon, except when they are children of for loops.\n            var parentNode = path.getParentNode();\n            if (!namedTypes.ForStatement.check(parentNode) &&\n                !namedTypes.ForInStatement.check(parentNode) &&\n                !(namedTypes.ForOfStatement &&\n                    namedTypes.ForOfStatement.check(parentNode)) &&\n                !(namedTypes.ForAwaitStatement &&\n                    namedTypes.ForAwaitStatement.check(parentNode))) {\n                parts.push(\";\");\n            }\n            return (0, lines_1.concat)(parts);\n        }\n        case \"VariableDeclarator\":\n            return n.init\n                ? (0, lines_1.fromString)(\" = \").join([\n                    path.call(print, \"id\"),\n                    path.call(print, \"init\"),\n                ])\n                : path.call(print, \"id\");\n        case \"WithStatement\":\n            return (0, lines_1.concat)([\n                \"with (\",\n                path.call(print, \"object\"),\n                \") \",\n                path.call(print, \"body\"),\n            ]);\n        case \"IfStatement\": {\n            var con = adjustClause(path.call(print, \"consequent\"), options);\n            parts.push(\"if (\", path.call(print, \"test\"), \")\", con);\n            if (n.alternate)\n                parts.push(endsWithBrace(con) ? \" else\" : \"\\nelse\", adjustClause(path.call(print, \"alternate\"), options));\n            return (0, lines_1.concat)(parts);\n        }\n        case \"ForStatement\": {\n            // TODO Get the for (;;) case right.\n            var init = path.call(print, \"init\");\n            var sep = init.length > 1 ? \";\\n\" : \"; \";\n            var forParen = \"for (\";\n            var indented = (0, lines_1.fromString)(sep)\n                .join([init, path.call(print, \"test\"), path.call(print, \"update\")])\n                .indentTail(forParen.length);\n            var head = (0, lines_1.concat)([forParen, indented, \")\"]);\n            var clause = adjustClause(path.call(print, \"body\"), options);\n            parts.push(head);\n            if (head.length > 1) {\n                parts.push(\"\\n\");\n                clause = clause.trimLeft();\n            }\n            parts.push(clause);\n            return (0, lines_1.concat)(parts);\n        }\n        case \"WhileStatement\":\n            return (0, lines_1.concat)([\n                \"while (\",\n                path.call(print, \"test\"),\n                \")\",\n                adjustClause(path.call(print, \"body\"), options),\n            ]);\n        case \"ForInStatement\":\n            // Note: esprima can't actually parse \"for each (\".\n            return (0, lines_1.concat)([\n                n.each ? \"for each (\" : \"for (\",\n                path.call(print, \"left\"),\n                \" in \",\n                path.call(print, \"right\"),\n                \")\",\n                adjustClause(path.call(print, \"body\"), options),\n            ]);\n        case \"ForOfStatement\":\n        case \"ForAwaitStatement\":\n            parts.push(\"for \");\n            if (n.await || n.type === \"ForAwaitStatement\") {\n                parts.push(\"await \");\n            }\n            parts.push(\"(\", path.call(print, \"left\"), \" of \", path.call(print, \"right\"), \")\", adjustClause(path.call(print, \"body\"), options));\n            return (0, lines_1.concat)(parts);\n        case \"DoWhileStatement\": {\n            var doBody = (0, lines_1.concat)([\n                \"do\",\n                adjustClause(path.call(print, \"body\"), options),\n            ]);\n            parts.push(doBody);\n            if (endsWithBrace(doBody))\n                parts.push(\" while\");\n            else\n                parts.push(\"\\nwhile\");\n            parts.push(\" (\", path.call(print, \"test\"), \");\");\n            return (0, lines_1.concat)(parts);\n        }\n        case \"DoExpression\": {\n            var statements = path.call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\");\n            return (0, lines_1.concat)([\"do {\\n\", statements.indent(options.tabWidth), \"\\n}\"]);\n        }\n        case \"BreakStatement\":\n            parts.push(\"break\");\n            if (n.label)\n                parts.push(\" \", path.call(print, \"label\"));\n            parts.push(\";\");\n            return (0, lines_1.concat)(parts);\n        case \"ContinueStatement\":\n            parts.push(\"continue\");\n            if (n.label)\n                parts.push(\" \", path.call(print, \"label\"));\n            parts.push(\";\");\n            return (0, lines_1.concat)(parts);\n        case \"LabeledStatement\":\n            return (0, lines_1.concat)([\n                path.call(print, \"label\"),\n                \":\\n\",\n                path.call(print, \"body\"),\n            ]);\n        case \"TryStatement\":\n            parts.push(\"try \", path.call(print, \"block\"));\n            if (n.handler) {\n                parts.push(\" \", path.call(print, \"handler\"));\n            }\n            else if (n.handlers) {\n                path.each(function (handlerPath) {\n                    parts.push(\" \", print(handlerPath));\n                }, \"handlers\");\n            }\n            if (n.finalizer) {\n                parts.push(\" finally \", path.call(print, \"finalizer\"));\n            }\n            return (0, lines_1.concat)(parts);\n        case \"CatchClause\":\n            parts.push(\"catch \");\n            if (n.param) {\n                parts.push(\"(\", path.call(print, \"param\"));\n            }\n            if (n.guard) {\n                // Note: esprima does not recognize conditional catch clauses.\n                parts.push(\" if \", path.call(print, \"guard\"));\n            }\n            if (n.param) {\n                parts.push(\") \");\n            }\n            parts.push(path.call(print, \"body\"));\n            return (0, lines_1.concat)(parts);\n        case \"ThrowStatement\":\n            return (0, lines_1.concat)([\"throw \", path.call(print, \"argument\"), \";\"]);\n        case \"SwitchStatement\":\n            return (0, lines_1.concat)([\n                \"switch (\",\n                path.call(print, \"discriminant\"),\n                \") {\\n\",\n                (0, lines_1.fromString)(\"\\n\").join(path.map(print, \"cases\")),\n                \"\\n}\",\n            ]);\n        // Note: ignoring n.lexical because it has no printing consequences.\n        case \"SwitchCase\":\n            if (n.test)\n                parts.push(\"case \", path.call(print, \"test\"), \":\");\n            else\n                parts.push(\"default:\");\n            if (n.consequent.length > 0) {\n                parts.push(\"\\n\", path\n                    .call(function (consequentPath) {\n                    return printStatementSequence(consequentPath, options, print);\n                }, \"consequent\")\n                    .indent(options.tabWidth));\n            }\n            return (0, lines_1.concat)(parts);\n        case \"DebuggerStatement\":\n            return (0, lines_1.fromString)(\"debugger;\");\n        // JSX extensions below.\n        case \"JSXAttribute\":\n            parts.push(path.call(print, \"name\"));\n            if (n.value)\n                parts.push(\"=\", path.call(print, \"value\"));\n            return (0, lines_1.concat)(parts);\n        case \"JSXIdentifier\":\n            return (0, lines_1.fromString)(n.name, options);\n        case \"JSXNamespacedName\":\n            return (0, lines_1.fromString)(\":\").join([\n                path.call(print, \"namespace\"),\n                path.call(print, \"name\"),\n            ]);\n        case \"JSXMemberExpression\":\n            return (0, lines_1.fromString)(\".\").join([\n                path.call(print, \"object\"),\n                path.call(print, \"property\"),\n            ]);\n        case \"JSXSpreadAttribute\":\n            return (0, lines_1.concat)([\"{...\", path.call(print, \"argument\"), \"}\"]);\n        case \"JSXSpreadChild\":\n            return (0, lines_1.concat)([\"{...\", path.call(print, \"expression\"), \"}\"]);\n        case \"JSXExpressionContainer\":\n            return (0, lines_1.concat)([\"{\", path.call(print, \"expression\"), \"}\"]);\n        case \"JSXElement\":\n        case \"JSXFragment\": {\n            var openingPropName = \"opening\" + (n.type === \"JSXElement\" ? \"Element\" : \"Fragment\");\n            var closingPropName = \"closing\" + (n.type === \"JSXElement\" ? \"Element\" : \"Fragment\");\n            var openingLines = path.call(print, openingPropName);\n            if (n[openingPropName].selfClosing) {\n                (0, tiny_invariant_1.default)(!n[closingPropName], \"unexpected \" +\n                    closingPropName +\n                    \" element in self-closing \" +\n                    n.type);\n                return openingLines;\n            }\n            var childLines = (0, lines_1.concat)(path.map(function (childPath) {\n                var child = childPath.getValue();\n                if (namedTypes.Literal.check(child) &&\n                    typeof child.value === \"string\") {\n                    if (/\\S/.test(child.value)) {\n                        return child.value.replace(/^\\s+/g, \"\");\n                    }\n                    else if (/\\n/.test(child.value)) {\n                        return \"\\n\";\n                    }\n                }\n                return print(childPath);\n            }, \"children\")).indentTail(options.tabWidth);\n            var closingLines = path.call(print, closingPropName);\n            return (0, lines_1.concat)([openingLines, childLines, closingLines]);\n        }\n        case \"JSXOpeningElement\": {\n            parts.push(\"<\", path.call(print, \"name\"));\n            var typeDefPart = path.call(print, \"typeParameters\");\n            if (typeDefPart.length)\n                parts.push(typeDefPart);\n            var attrParts_1 = [];\n            path.each(function (attrPath) {\n                attrParts_1.push(\" \", print(attrPath));\n            }, \"attributes\");\n            var attrLines = (0, lines_1.concat)(attrParts_1);\n            var needLineWrap = attrLines.length > 1 || attrLines.getLineLength(1) > options.wrapColumn;\n            if (needLineWrap) {\n                attrParts_1.forEach(function (part, i) {\n                    if (part === \" \") {\n                        (0, tiny_invariant_1.default)(i % 2 === 0);\n                        attrParts_1[i] = \"\\n\";\n                    }\n                });\n                attrLines = (0, lines_1.concat)(attrParts_1).indentTail(options.tabWidth);\n            }\n            parts.push(attrLines, n.selfClosing ? \" />\" : \">\");\n            return (0, lines_1.concat)(parts);\n        }\n        case \"JSXClosingElement\":\n            return (0, lines_1.concat)([\"</\", path.call(print, \"name\"), \">\"]);\n        case \"JSXOpeningFragment\":\n            return (0, lines_1.fromString)(\"<>\");\n        case \"JSXClosingFragment\":\n            return (0, lines_1.fromString)(\"</>\");\n        case \"JSXText\":\n            return (0, lines_1.fromString)(n.value, options);\n        case \"JSXEmptyExpression\":\n            return (0, lines_1.fromString)(\"\");\n        case \"TypeAnnotatedIdentifier\":\n            return (0, lines_1.concat)([\n                path.call(print, \"annotation\"),\n                \" \",\n                path.call(print, \"identifier\"),\n            ]);\n        case \"ClassBody\":\n            if (n.body.length === 0) {\n                return (0, lines_1.fromString)(\"{}\");\n            }\n            return (0, lines_1.concat)([\n                \"{\\n\",\n                path\n                    .call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\")\n                    .indent(options.tabWidth),\n                \"\\n}\",\n            ]);\n        case \"ClassPropertyDefinition\":\n            parts.push(\"static \", path.call(print, \"definition\"));\n            if (!namedTypes.MethodDefinition.check(n.definition))\n                parts.push(\";\");\n            return (0, lines_1.concat)(parts);\n        case \"ClassProperty\": {\n            if (n.declare) {\n                parts.push(\"declare \");\n            }\n            var access = n.accessibility || n.access;\n            if (typeof access === \"string\") {\n                parts.push(access, \" \");\n            }\n            if (n.static) {\n                parts.push(\"static \");\n            }\n            if (n.abstract) {\n                parts.push(\"abstract \");\n            }\n            if (n.readonly) {\n                parts.push(\"readonly \");\n            }\n            var key = path.call(print, \"key\");\n            if (n.computed) {\n                key = (0, lines_1.concat)([\"[\", key, \"]\"]);\n            }\n            if (n.variance) {\n                key = (0, lines_1.concat)([printVariance(path, print), key]);\n            }\n            parts.push(key);\n            if (n.optional) {\n                parts.push(\"?\");\n            }\n            if (n.definite) {\n                parts.push(\"!\");\n            }\n            if (n.typeAnnotation) {\n                parts.push(path.call(print, \"typeAnnotation\"));\n            }\n            if (n.value) {\n                parts.push(\" = \", path.call(print, \"value\"));\n            }\n            parts.push(\";\");\n            return (0, lines_1.concat)(parts);\n        }\n        case \"ClassPrivateProperty\":\n            if (n.static) {\n                parts.push(\"static \");\n            }\n            parts.push(path.call(print, \"key\"));\n            if (n.typeAnnotation) {\n                parts.push(path.call(print, \"typeAnnotation\"));\n            }\n            if (n.value) {\n                parts.push(\" = \", path.call(print, \"value\"));\n            }\n            parts.push(\";\");\n            return (0, lines_1.concat)(parts);\n        case \"ClassAccessorProperty\": {\n            parts.push.apply(parts, tslib_1.__spreadArray(tslib_1.__spreadArray([], printClassMemberModifiers(n), false), [\"accessor \"], false));\n            if (n.computed) {\n                parts.push(\"[\", path.call(print, \"key\"), \"]\");\n            }\n            else {\n                parts.push(path.call(print, \"key\"));\n            }\n            if (n.optional) {\n                parts.push(\"?\");\n            }\n            if (n.definite) {\n                parts.push(\"!\");\n            }\n            if (n.typeAnnotation) {\n                parts.push(path.call(print, \"typeAnnotation\"));\n            }\n            if (n.value) {\n                parts.push(\" = \", path.call(print, \"value\"));\n            }\n            parts.push(\";\");\n            return (0, lines_1.concat)(parts);\n        }\n        case \"ClassDeclaration\":\n        case \"ClassExpression\":\n        case \"DeclareClass\":\n            if (n.declare) {\n                parts.push(\"declare \");\n            }\n            if (n.abstract) {\n                parts.push(\"abstract \");\n            }\n            parts.push(\"class\");\n            if (n.id) {\n                parts.push(\" \", path.call(print, \"id\"));\n            }\n            if (n.typeParameters) {\n                parts.push(path.call(print, \"typeParameters\"));\n            }\n            if (n.superClass) {\n                // ClassDeclaration and ClassExpression only\n                parts.push(\" extends \", path.call(print, \"superClass\"), path.call(print, \"superTypeParameters\"));\n            }\n            if (n.extends && n.extends.length > 0) {\n                // DeclareClass only\n                parts.push(\" extends \", (0, lines_1.fromString)(\", \").join(path.map(print, \"extends\")));\n            }\n            if (n[\"implements\"] && n[\"implements\"].length > 0) {\n                parts.push(\" implements \", (0, lines_1.fromString)(\", \").join(path.map(print, \"implements\")));\n            }\n            parts.push(\" \", path.call(print, \"body\"));\n            if (n.type === \"DeclareClass\") {\n                return printFlowDeclaration(path, parts);\n            }\n            else {\n                return (0, lines_1.concat)(parts);\n            }\n        case \"TemplateElement\":\n            return (0, lines_1.fromString)(n.value.raw, options).lockIndentTail();\n        case \"TemplateLiteral\": {\n            var expressions_1 = path.map(print, \"expressions\");\n            parts.push(\"`\");\n            path.each(function (childPath) {\n                var i = childPath.getName();\n                parts.push(print(childPath));\n                if (i < expressions_1.length) {\n                    parts.push(\"${\", expressions_1[i], \"}\");\n                }\n            }, \"quasis\");\n            parts.push(\"`\");\n            return (0, lines_1.concat)(parts).lockIndentTail();\n        }\n        case \"TaggedTemplateExpression\":\n            return (0, lines_1.concat)([path.call(print, \"tag\"), path.call(print, \"quasi\")]);\n        // These types are unprintable because they serve as abstract\n        // supertypes for other (printable) types.\n        case \"Node\":\n        case \"Printable\":\n        case \"SourceLocation\":\n        case \"Position\":\n        case \"Statement\":\n        case \"Function\":\n        case \"Pattern\":\n        case \"Expression\":\n        case \"Declaration\":\n        case \"Specifier\":\n        case \"NamedSpecifier\":\n        case \"Comment\": // Supertype of Block and Line\n        case \"Flow\": // Supertype of all Flow AST node types\n        case \"FlowType\": // Supertype of all Flow types\n        case \"FlowPredicate\": // Supertype of InferredPredicate and DeclaredPredicate\n        case \"MemberTypeAnnotation\": // Flow\n        case \"Type\": // Flow\n        case \"TSHasOptionalTypeParameterInstantiation\":\n        case \"TSHasOptionalTypeParameters\":\n        case \"TSHasOptionalTypeAnnotation\":\n        case \"ChainElement\": // Supertype of MemberExpression and CallExpression\n            throw new Error(\"unprintable type: \" + JSON.stringify(n.type));\n        case \"CommentBlock\": // Babel block comment.\n        case \"Block\": // Esprima block comment.\n            return (0, lines_1.concat)([\"/*\", (0, lines_1.fromString)(n.value, options), \"*/\"]);\n        case \"CommentLine\": // Babel line comment.\n        case \"Line\": // Esprima line comment.\n            return (0, lines_1.concat)([\"//\", (0, lines_1.fromString)(n.value, options)]);\n        // Type Annotations for Facebook Flow, typically stripped out or\n        // transformed away before printing.\n        case \"TypeAnnotation\":\n            if (n.typeAnnotation) {\n                if (n.typeAnnotation.type !== \"FunctionTypeAnnotation\") {\n                    parts.push(\": \");\n                }\n                parts.push(path.call(print, \"typeAnnotation\"));\n                return (0, lines_1.concat)(parts);\n            }\n            return (0, lines_1.fromString)(\"\");\n        case \"ExistentialTypeParam\":\n        case \"ExistsTypeAnnotation\":\n            return (0, lines_1.fromString)(\"*\", options);\n        case \"EmptyTypeAnnotation\":\n            return (0, lines_1.fromString)(\"empty\", options);\n        case \"AnyTypeAnnotation\":\n            return (0, lines_1.fromString)(\"any\", options);\n        case \"MixedTypeAnnotation\":\n            return (0, lines_1.fromString)(\"mixed\", options);\n        case \"ArrayTypeAnnotation\":\n            return (0, lines_1.concat)([path.call(print, \"elementType\"), \"[]\"]);\n        case \"TupleTypeAnnotation\": {\n            var printed_2 = path.map(print, \"types\");\n            var joined = (0, lines_1.fromString)(\", \").join(printed_2);\n            var oneLine_3 = joined.getLineLength(1) <= options.wrapColumn;\n            if (oneLine_3) {\n                if (options.arrayBracketSpacing) {\n                    parts.push(\"[ \");\n                }\n                else {\n                    parts.push(\"[\");\n                }\n            }\n            else {\n                parts.push(\"[\\n\");\n            }\n            path.each(function (elemPath) {\n                var i = elemPath.getName();\n                var elem = elemPath.getValue();\n                if (!elem) {\n                    // If the array expression ends with a hole, that hole\n                    // will be ignored by the interpreter, but if it ends with\n                    // two (or more) holes, we need to write out two (or more)\n                    // commas so that the resulting code is interpreted with\n                    // both (all) of the holes.\n                    parts.push(\",\");\n                }\n                else {\n                    var lines = printed_2[i];\n                    if (oneLine_3) {\n                        if (i > 0)\n                            parts.push(\" \");\n                    }\n                    else {\n                        lines = lines.indent(options.tabWidth);\n                    }\n                    parts.push(lines);\n                    if (i < n.types.length - 1 ||\n                        (!oneLine_3 && util.isTrailingCommaEnabled(options, \"arrays\")))\n                        parts.push(\",\");\n                    if (!oneLine_3)\n                        parts.push(\"\\n\");\n                }\n            }, \"types\");\n            if (oneLine_3 && options.arrayBracketSpacing) {\n                parts.push(\" ]\");\n            }\n            else {\n                parts.push(\"]\");\n            }\n            return (0, lines_1.concat)(parts);\n        }\n        case \"BooleanTypeAnnotation\":\n            return (0, lines_1.fromString)(\"boolean\", options);\n        case \"BooleanLiteralTypeAnnotation\":\n            (0, tiny_invariant_1.default)(typeof n.value === \"boolean\");\n            return (0, lines_1.fromString)(\"\" + n.value, options);\n        case \"InterfaceTypeAnnotation\":\n            parts.push(\"interface\");\n            if (n.extends && n.extends.length > 0) {\n                parts.push(\" extends \", (0, lines_1.fromString)(\", \").join(path.map(print, \"extends\")));\n            }\n            parts.push(\" \", path.call(print, \"body\"));\n            return (0, lines_1.concat)(parts);\n        case \"DeclareFunction\":\n            return printFlowDeclaration(path, [\n                \"function \",\n                path.call(print, \"id\"),\n                \";\",\n            ]);\n        case \"DeclareModule\":\n            return printFlowDeclaration(path, [\n                \"module \",\n                path.call(print, \"id\"),\n                \" \",\n                path.call(print, \"body\"),\n            ]);\n        case \"DeclareModuleExports\":\n            return printFlowDeclaration(path, [\n                \"module.exports\",\n                path.call(print, \"typeAnnotation\"),\n            ]);\n        case \"DeclareVariable\":\n            return printFlowDeclaration(path, [\"var \", path.call(print, \"id\"), \";\"]);\n        case \"DeclareExportDeclaration\":\n        case \"DeclareExportAllDeclaration\":\n            return (0, lines_1.concat)([\"declare \", printExportDeclaration(path, options, print)]);\n        case \"EnumDeclaration\":\n            return (0, lines_1.concat)([\n                \"enum \",\n                path.call(print, \"id\"),\n                path.call(print, \"body\"),\n            ]);\n        case \"EnumBooleanBody\":\n        case \"EnumNumberBody\":\n        case \"EnumStringBody\":\n        case \"EnumSymbolBody\": {\n            if (n.type === \"EnumSymbolBody\" || n.explicitType) {\n                parts.push(\" of \", \n                // EnumBooleanBody => boolean, etc.\n                n.type.slice(4, -4).toLowerCase());\n            }\n            parts.push(\" {\\n\", (0, lines_1.fromString)(\"\\n\")\n                .join(path.map(print, \"members\"))\n                .indent(options.tabWidth), \"\\n}\");\n            return (0, lines_1.concat)(parts);\n        }\n        case \"EnumDefaultedMember\":\n            return (0, lines_1.concat)([path.call(print, \"id\"), \",\"]);\n        case \"EnumBooleanMember\":\n        case \"EnumNumberMember\":\n        case \"EnumStringMember\":\n            return (0, lines_1.concat)([\n                path.call(print, \"id\"),\n                \" = \",\n                path.call(print, \"init\"),\n                \",\",\n            ]);\n        case \"InferredPredicate\":\n            return (0, lines_1.fromString)(\"%checks\", options);\n        case \"DeclaredPredicate\":\n            return (0, lines_1.concat)([\"%checks(\", path.call(print, \"value\"), \")\"]);\n        case \"FunctionTypeAnnotation\": {\n            // FunctionTypeAnnotation is ambiguous:\n            // declare function(a: B): void; OR\n            // const A: (a: B) => void;\n            var parent = path.getParentNode(0);\n            var isArrowFunctionTypeAnnotation = !(namedTypes.ObjectTypeCallProperty.check(parent) ||\n                (namedTypes.ObjectTypeInternalSlot.check(parent) && parent.method) ||\n                namedTypes.DeclareFunction.check(path.getParentNode(2)));\n            var needsColon = isArrowFunctionTypeAnnotation &&\n                !namedTypes.FunctionTypeParam.check(parent) &&\n                !namedTypes.TypeAlias.check(parent);\n            if (needsColon) {\n                parts.push(\": \");\n            }\n            var hasTypeParameters = !!n.typeParameters;\n            var needsParens = hasTypeParameters || n.params.length !== 1 || n.params[0].name;\n            parts.push(hasTypeParameters ? path.call(print, \"typeParameters\") : \"\", needsParens ? \"(\" : \"\", printFunctionParams(path, options, print), needsParens ? \")\" : \"\");\n            // The returnType is not wrapped in a TypeAnnotation, so the colon\n            // needs to be added separately.\n            if (n.returnType) {\n                parts.push(isArrowFunctionTypeAnnotation ? \" => \" : \": \", path.call(print, \"returnType\"));\n            }\n            return (0, lines_1.concat)(parts);\n        }\n        case \"FunctionTypeParam\": {\n            var name = path.call(print, \"name\");\n            parts.push(name);\n            if (n.optional) {\n                parts.push(\"?\");\n            }\n            if (name.infos[0].line) {\n                parts.push(\": \");\n            }\n            parts.push(path.call(print, \"typeAnnotation\"));\n            return (0, lines_1.concat)(parts);\n        }\n        case \"GenericTypeAnnotation\":\n            return (0, lines_1.concat)([\n                path.call(print, \"id\"),\n                path.call(print, \"typeParameters\"),\n            ]);\n        case \"DeclareInterface\":\n            parts.push(\"declare \");\n        // Fall through to InterfaceDeclaration...\n        case \"InterfaceDeclaration\":\n        case \"TSInterfaceDeclaration\":\n            if (n.declare) {\n                parts.push(\"declare \");\n            }\n            parts.push(\"interface \", path.call(print, \"id\"), path.call(print, \"typeParameters\"), \" \");\n            if (n[\"extends\"] && n[\"extends\"].length > 0) {\n                parts.push(\"extends \", (0, lines_1.fromString)(\", \").join(path.map(print, \"extends\")), \" \");\n            }\n            if (n.body) {\n                parts.push(path.call(print, \"body\"));\n            }\n            return (0, lines_1.concat)(parts);\n        case \"ClassImplements\":\n        case \"InterfaceExtends\":\n            return (0, lines_1.concat)([\n                path.call(print, \"id\"),\n                path.call(print, \"typeParameters\"),\n            ]);\n        case \"IntersectionTypeAnnotation\":\n            return (0, lines_1.fromString)(\" & \").join(path.map(print, \"types\"));\n        case \"NullableTypeAnnotation\":\n            return (0, lines_1.concat)([\"?\", path.call(print, \"typeAnnotation\")]);\n        case \"NullLiteralTypeAnnotation\":\n            return (0, lines_1.fromString)(\"null\", options);\n        case \"ThisTypeAnnotation\":\n            return (0, lines_1.fromString)(\"this\", options);\n        case \"NumberTypeAnnotation\":\n            return (0, lines_1.fromString)(\"number\", options);\n        case \"ObjectTypeCallProperty\":\n            return path.call(print, \"value\");\n        case \"ObjectTypeIndexer\":\n            if (n.static) {\n                parts.push(\"static \");\n            }\n            parts.push(printVariance(path, print), \"[\");\n            if (n.id) {\n                parts.push(path.call(print, \"id\"), \": \");\n            }\n            parts.push(path.call(print, \"key\"), \"]: \", path.call(print, \"value\"));\n            return (0, lines_1.concat)(parts);\n        case \"ObjectTypeProperty\":\n            return (0, lines_1.concat)([\n                printVariance(path, print),\n                path.call(print, \"key\"),\n                n.optional ? \"?\" : \"\",\n                \": \",\n                path.call(print, \"value\"),\n            ]);\n        case \"ObjectTypeInternalSlot\":\n            return (0, lines_1.concat)([\n                n.static ? \"static \" : \"\",\n                \"[[\",\n                path.call(print, \"id\"),\n                \"]]\",\n                n.optional ? \"?\" : \"\",\n                n.value.type !== \"FunctionTypeAnnotation\" ? \": \" : \"\",\n                path.call(print, \"value\"),\n            ]);\n        case \"QualifiedTypeIdentifier\":\n            return (0, lines_1.concat)([\n                path.call(print, \"qualification\"),\n                \".\",\n                path.call(print, \"id\"),\n            ]);\n        case \"StringLiteralTypeAnnotation\":\n            return (0, lines_1.fromString)(nodeStr(n.value, options), options);\n        case \"NumberLiteralTypeAnnotation\":\n        case \"NumericLiteralTypeAnnotation\":\n            (0, tiny_invariant_1.default)(typeof n.value === \"number\");\n            return (0, lines_1.fromString)(JSON.stringify(n.value), options);\n        case \"BigIntLiteralTypeAnnotation\":\n            return (0, lines_1.fromString)(n.raw, options);\n        case \"StringTypeAnnotation\":\n            return (0, lines_1.fromString)(\"string\", options);\n        case \"DeclareTypeAlias\":\n            parts.push(\"declare \");\n        // Fall through to TypeAlias...\n        case \"TypeAlias\":\n            return (0, lines_1.concat)([\n                \"type \",\n                path.call(print, \"id\"),\n                path.call(print, \"typeParameters\"),\n                \" = \",\n                path.call(print, \"right\"),\n                \";\",\n            ]);\n        case \"DeclareOpaqueType\":\n            parts.push(\"declare \");\n        // Fall through to OpaqueType...\n        case \"OpaqueType\":\n            parts.push(\"opaque type \", path.call(print, \"id\"), path.call(print, \"typeParameters\"));\n            if (n[\"supertype\"]) {\n                parts.push(\": \", path.call(print, \"supertype\"));\n            }\n            if (n[\"impltype\"]) {\n                parts.push(\" = \", path.call(print, \"impltype\"));\n            }\n            parts.push(\";\");\n            return (0, lines_1.concat)(parts);\n        case \"TypeCastExpression\":\n            return (0, lines_1.concat)([\n                \"(\",\n                path.call(print, \"expression\"),\n                path.call(print, \"typeAnnotation\"),\n                \")\",\n            ]);\n        case \"TypeParameterDeclaration\":\n        case \"TypeParameterInstantiation\":\n            return (0, lines_1.concat)([\n                \"<\",\n                (0, lines_1.fromString)(\", \").join(path.map(print, \"params\")),\n                \">\",\n            ]);\n        case \"Variance\":\n            if (n.kind === \"plus\") {\n                return (0, lines_1.fromString)(\"+\");\n            }\n            if (n.kind === \"minus\") {\n                return (0, lines_1.fromString)(\"-\");\n            }\n            return (0, lines_1.fromString)(\"\");\n        case \"TypeParameter\":\n            if (n.variance) {\n                parts.push(printVariance(path, print));\n            }\n            parts.push(path.call(print, \"name\"));\n            if (n.bound) {\n                parts.push(path.call(print, \"bound\"));\n            }\n            if (n[\"default\"]) {\n                parts.push(\"=\", path.call(print, \"default\"));\n            }\n            return (0, lines_1.concat)(parts);\n        case \"TypeofTypeAnnotation\":\n            return (0, lines_1.concat)([\n                (0, lines_1.fromString)(\"typeof \", options),\n                path.call(print, \"argument\"),\n            ]);\n        case \"IndexedAccessType\":\n        case \"OptionalIndexedAccessType\":\n            return (0, lines_1.concat)([\n                path.call(print, \"objectType\"),\n                n.optional ? \"?.\" : \"\",\n                \"[\",\n                path.call(print, \"indexType\"),\n                \"]\",\n            ]);\n        case \"UnionTypeAnnotation\":\n            return (0, lines_1.fromString)(\" | \").join(path.map(print, \"types\"));\n        case \"VoidTypeAnnotation\":\n            return (0, lines_1.fromString)(\"void\", options);\n        case \"NullTypeAnnotation\":\n            return (0, lines_1.fromString)(\"null\", options);\n        case \"SymbolTypeAnnotation\":\n            return (0, lines_1.fromString)(\"symbol\", options);\n        case \"BigIntTypeAnnotation\":\n            return (0, lines_1.fromString)(\"bigint\", options);\n        // Type Annotations for TypeScript (when using Babylon as parser)\n        case \"TSType\":\n            throw new Error(\"unprintable type: \" + JSON.stringify(n.type));\n        case \"TSNumberKeyword\":\n            return (0, lines_1.fromString)(\"number\", options);\n        case \"TSBigIntKeyword\":\n            return (0, lines_1.fromString)(\"bigint\", options);\n        case \"TSObjectKeyword\":\n            return (0, lines_1.fromString)(\"object\", options);\n        case \"TSBooleanKeyword\":\n            return (0, lines_1.fromString)(\"boolean\", options);\n        case \"TSStringKeyword\":\n            return (0, lines_1.fromString)(\"string\", options);\n        case \"TSSymbolKeyword\":\n            return (0, lines_1.fromString)(\"symbol\", options);\n        case \"TSAnyKeyword\":\n            return (0, lines_1.fromString)(\"any\", options);\n        case \"TSVoidKeyword\":\n            return (0, lines_1.fromString)(\"void\", options);\n        case \"TSIntrinsicKeyword\":\n            return (0, lines_1.fromString)(\"intrinsic\", options);\n        case \"TSThisType\":\n            return (0, lines_1.fromString)(\"this\", options);\n        case \"TSNullKeyword\":\n            return (0, lines_1.fromString)(\"null\", options);\n        case \"TSUndefinedKeyword\":\n            return (0, lines_1.fromString)(\"undefined\", options);\n        case \"TSUnknownKeyword\":\n            return (0, lines_1.fromString)(\"unknown\", options);\n        case \"TSNeverKeyword\":\n            return (0, lines_1.fromString)(\"never\", options);\n        case \"TSArrayType\":\n            return (0, lines_1.concat)([path.call(print, \"elementType\"), \"[]\"]);\n        case \"TSLiteralType\":\n            return path.call(print, \"literal\");\n        case \"TSUnionType\":\n            return (0, lines_1.fromString)(\" | \").join(path.map(print, \"types\"));\n        case \"TSIntersectionType\":\n            return (0, lines_1.fromString)(\" & \").join(path.map(print, \"types\"));\n        case \"TSConditionalType\":\n            parts.push(path.call(print, \"checkType\"), \" extends \", path.call(print, \"extendsType\"), \" ? \", path.call(print, \"trueType\"), \" : \", path.call(print, \"falseType\"));\n            return (0, lines_1.concat)(parts);\n        case \"TSInferType\":\n            parts.push(\"infer \", path.call(print, \"typeParameter\"));\n            return (0, lines_1.concat)(parts);\n        case \"TSParenthesizedType\":\n            return (0, lines_1.concat)([\"(\", path.call(print, \"typeAnnotation\"), \")\"]);\n        case \"TSFunctionType\":\n            return (0, lines_1.concat)([\n                path.call(print, \"typeParameters\"),\n                \"(\",\n                printFunctionParams(path, options, print),\n                \") => \",\n                path.call(print, \"typeAnnotation\", \"typeAnnotation\"),\n            ]);\n        case \"TSConstructorType\":\n            return (0, lines_1.concat)([\n                \"new \",\n                path.call(print, \"typeParameters\"),\n                \"(\",\n                printFunctionParams(path, options, print),\n                \") => \",\n                path.call(print, \"typeAnnotation\", \"typeAnnotation\"),\n            ]);\n        case \"TSMappedType\": {\n            parts.push(n.readonly ? \"readonly \" : \"\", \"[\", path.call(print, \"typeParameter\"), \"]\", n.optional ? \"?\" : \"\");\n            if (n.typeAnnotation) {\n                parts.push(\": \", path.call(print, \"typeAnnotation\"), \";\");\n            }\n            return (0, lines_1.concat)([\"{\\n\", (0, lines_1.concat)(parts).indent(options.tabWidth), \"\\n}\"]);\n        }\n        case \"TSTupleType\":\n            return (0, lines_1.concat)([\n                \"[\",\n                (0, lines_1.fromString)(\", \").join(path.map(print, \"elementTypes\")),\n                \"]\",\n            ]);\n        case \"TSNamedTupleMember\":\n            parts.push(path.call(print, \"label\"));\n            if (n.optional) {\n                parts.push(\"?\");\n            }\n            parts.push(\": \", path.call(print, \"elementType\"));\n            return (0, lines_1.concat)(parts);\n        case \"TSRestType\":\n            return (0, lines_1.concat)([\"...\", path.call(print, \"typeAnnotation\")]);\n        case \"TSOptionalType\":\n            return (0, lines_1.concat)([path.call(print, \"typeAnnotation\"), \"?\"]);\n        case \"TSIndexedAccessType\":\n            return (0, lines_1.concat)([\n                path.call(print, \"objectType\"),\n                \"[\",\n                path.call(print, \"indexType\"),\n                \"]\",\n            ]);\n        case \"TSTypeOperator\":\n            return (0, lines_1.concat)([\n                path.call(print, \"operator\"),\n                \" \",\n                path.call(print, \"typeAnnotation\"),\n            ]);\n        case \"TSTypeLiteral\": {\n            var members = (0, lines_1.fromString)(\"\\n\").join(path.map(print, \"members\").map(function (member) {\n                if (lastNonSpaceCharacter(member) !== \";\") {\n                    return member.concat(\";\");\n                }\n                return member;\n            }));\n            if (members.isEmpty()) {\n                return (0, lines_1.fromString)(\"{}\", options);\n            }\n            parts.push(\"{\\n\", members.indent(options.tabWidth), \"\\n}\");\n            return (0, lines_1.concat)(parts);\n        }\n        case \"TSEnumMember\":\n            parts.push(path.call(print, \"id\"));\n            if (n.initializer) {\n                parts.push(\" = \", path.call(print, \"initializer\"));\n            }\n            return (0, lines_1.concat)(parts);\n        case \"TSTypeQuery\":\n            return (0, lines_1.concat)([\"typeof \", path.call(print, \"exprName\")]);\n        case \"TSParameterProperty\":\n            if (n.accessibility) {\n                parts.push(n.accessibility, \" \");\n            }\n            if (n.export) {\n                parts.push(\"export \");\n            }\n            if (n.static) {\n                parts.push(\"static \");\n            }\n            if (n.readonly) {\n                parts.push(\"readonly \");\n            }\n            parts.push(path.call(print, \"parameter\"));\n            return (0, lines_1.concat)(parts);\n        case \"TSTypeReference\":\n            return (0, lines_1.concat)([\n                path.call(print, \"typeName\"),\n                path.call(print, \"typeParameters\"),\n            ]);\n        case \"TSQualifiedName\":\n            return (0, lines_1.concat)([path.call(print, \"left\"), \".\", path.call(print, \"right\")]);\n        case \"TSAsExpression\":\n        case \"TSSatisfiesExpression\": {\n            var expression = path.call(print, \"expression\");\n            parts.push(expression, n.type === \"TSSatisfiesExpression\" ? \" satisfies \" : \" as \", path.call(print, \"typeAnnotation\"));\n            return (0, lines_1.concat)(parts);\n        }\n        case \"TSTypeCastExpression\":\n            return (0, lines_1.concat)([\n                path.call(print, \"expression\"),\n                path.call(print, \"typeAnnotation\"),\n            ]);\n        case \"TSNonNullExpression\":\n            return (0, lines_1.concat)([path.call(print, \"expression\"), \"!\"]);\n        case \"TSTypeAnnotation\":\n            return (0, lines_1.concat)([\": \", path.call(print, \"typeAnnotation\")]);\n        case \"TSIndexSignature\":\n            return (0, lines_1.concat)([\n                n.readonly ? \"readonly \" : \"\",\n                \"[\",\n                path.map(print, \"parameters\"),\n                \"]\",\n                path.call(print, \"typeAnnotation\"),\n            ]);\n        case \"TSPropertySignature\":\n            parts.push(printVariance(path, print), n.readonly ? \"readonly \" : \"\");\n            if (n.computed) {\n                parts.push(\"[\", path.call(print, \"key\"), \"]\");\n            }\n            else {\n                parts.push(path.call(print, \"key\"));\n            }\n            parts.push(n.optional ? \"?\" : \"\", path.call(print, \"typeAnnotation\"));\n            return (0, lines_1.concat)(parts);\n        case \"TSMethodSignature\":\n            if (n.kind === \"get\") {\n                parts.push(\"get \");\n            }\n            else if (n.kind === \"set\") {\n                parts.push(\"set \");\n            }\n            if (n.computed) {\n                parts.push(\"[\", path.call(print, \"key\"), \"]\");\n            }\n            else {\n                parts.push(path.call(print, \"key\"));\n            }\n            if (n.optional) {\n                parts.push(\"?\");\n            }\n            parts.push(path.call(print, \"typeParameters\"), \"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"typeAnnotation\"));\n            return (0, lines_1.concat)(parts);\n        case \"TSTypePredicate\":\n            if (n.asserts) {\n                parts.push(\"asserts \");\n            }\n            parts.push(path.call(print, \"parameterName\"));\n            if (n.typeAnnotation) {\n                parts.push(\" is \", path.call(print, \"typeAnnotation\", \"typeAnnotation\"));\n            }\n            return (0, lines_1.concat)(parts);\n        case \"TSCallSignatureDeclaration\":\n            return (0, lines_1.concat)([\n                path.call(print, \"typeParameters\"),\n                \"(\",\n                printFunctionParams(path, options, print),\n                \")\",\n                path.call(print, \"typeAnnotation\"),\n            ]);\n        case \"TSConstructSignatureDeclaration\":\n            if (n.typeParameters) {\n                parts.push(\"new\", path.call(print, \"typeParameters\"));\n            }\n            else {\n                parts.push(\"new \");\n            }\n            parts.push(\"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"typeAnnotation\"));\n            return (0, lines_1.concat)(parts);\n        case \"TSTypeAliasDeclaration\":\n            return (0, lines_1.concat)([\n                n.declare ? \"declare \" : \"\",\n                \"type \",\n                path.call(print, \"id\"),\n                path.call(print, \"typeParameters\"),\n                \" = \",\n                path.call(print, \"typeAnnotation\"),\n                \";\",\n            ]);\n        case \"TSTypeParameter\": {\n            parts.push(path.call(print, \"name\"));\n            // ambiguous because of TSMappedType\n            var parent = path.getParentNode(0);\n            var isInMappedType = namedTypes.TSMappedType.check(parent);\n            if (n.constraint) {\n                parts.push(isInMappedType ? \" in \" : \" extends \", path.call(print, \"constraint\"));\n            }\n            if (n[\"default\"]) {\n                parts.push(\" = \", path.call(print, \"default\"));\n            }\n            return (0, lines_1.concat)(parts);\n        }\n        case \"TSTypeAssertion\": {\n            parts.push(\"<\", path.call(print, \"typeAnnotation\"), \"> \", path.call(print, \"expression\"));\n            return (0, lines_1.concat)(parts);\n        }\n        case \"TSTypeParameterDeclaration\":\n        case \"TSTypeParameterInstantiation\":\n            return (0, lines_1.concat)([\n                \"<\",\n                (0, lines_1.fromString)(\", \").join(path.map(print, \"params\")),\n                \">\",\n            ]);\n        case \"TSEnumDeclaration\": {\n            parts.push(n.declare ? \"declare \" : \"\", n.const ? \"const \" : \"\", \"enum \", path.call(print, \"id\"));\n            var memberLines = (0, lines_1.fromString)(\",\\n\").join(path.map(print, \"members\"));\n            if (memberLines.isEmpty()) {\n                parts.push(\" {}\");\n            }\n            else {\n                parts.push(\" {\\n\", memberLines.indent(options.tabWidth), \"\\n}\");\n            }\n            return (0, lines_1.concat)(parts);\n        }\n        case \"TSExpressionWithTypeArguments\":\n            return (0, lines_1.concat)([\n                path.call(print, \"expression\"),\n                path.call(print, \"typeParameters\"),\n            ]);\n        case \"TSInterfaceBody\": {\n            var lines = (0, lines_1.fromString)(\"\\n\").join(path.map(print, \"body\").map(function (element) {\n                if (lastNonSpaceCharacter(element) !== \";\") {\n                    return element.concat(\";\");\n                }\n                return element;\n            }));\n            if (lines.isEmpty()) {\n                return (0, lines_1.fromString)(\"{}\", options);\n            }\n            return (0, lines_1.concat)([\"{\\n\", lines.indent(options.tabWidth), \"\\n}\"]);\n        }\n        case \"TSImportType\":\n            parts.push(\"import(\", path.call(print, \"argument\"), \")\");\n            if (n.qualifier) {\n                parts.push(\".\", path.call(print, \"qualifier\"));\n            }\n            if (n.typeParameters) {\n                parts.push(path.call(print, \"typeParameters\"));\n            }\n            return (0, lines_1.concat)(parts);\n        case \"TSImportEqualsDeclaration\":\n            if (n.isExport) {\n                parts.push(\"export \");\n            }\n            parts.push(\"import \", path.call(print, \"id\"), \" = \", path.call(print, \"moduleReference\"));\n            return maybeAddSemicolon((0, lines_1.concat)(parts));\n        case \"TSExternalModuleReference\":\n            return (0, lines_1.concat)([\"require(\", path.call(print, \"expression\"), \")\"]);\n        case \"TSModuleDeclaration\": {\n            var parent = path.getParentNode();\n            if (parent.type === \"TSModuleDeclaration\") {\n                parts.push(\".\");\n            }\n            else {\n                if (n.declare) {\n                    parts.push(\"declare \");\n                }\n                if (!n.global) {\n                    var isExternal = n.id.type === \"StringLiteral\" ||\n                        (n.id.type === \"Literal\" && typeof n.id.value === \"string\");\n                    if (isExternal) {\n                        parts.push(\"module \");\n                    }\n                    else if (n.loc && n.loc.lines && n.id.loc) {\n                        var prefix = n.loc.lines.sliceString(n.loc.start, n.id.loc.start);\n                        // These keywords are fundamentally ambiguous in the\n                        // Babylon parser, and not reflected in the AST, so\n                        // the best we can do is to match the original code,\n                        // when possible.\n                        if (prefix.indexOf(\"module\") >= 0) {\n                            parts.push(\"module \");\n                        }\n                        else {\n                            parts.push(\"namespace \");\n                        }\n                    }\n                    else {\n                        parts.push(\"namespace \");\n                    }\n                }\n            }\n            parts.push(path.call(print, \"id\"));\n            if (n.body) {\n                parts.push(\" \");\n                parts.push(path.call(print, \"body\"));\n            }\n            return (0, lines_1.concat)(parts);\n        }\n        case \"TSModuleBlock\": {\n            var naked = path.call(function (bodyPath) { return printStatementSequence(bodyPath, options, print); }, \"body\");\n            if (naked.isEmpty()) {\n                parts.push(\"{}\");\n            }\n            else {\n                parts.push(\"{\\n\", naked.indent(options.tabWidth), \"\\n}\");\n            }\n            return (0, lines_1.concat)(parts);\n        }\n        case \"TSInstantiationExpression\": {\n            parts.push(path.call(print, \"expression\"), path.call(print, \"typeParameters\"));\n            return (0, lines_1.concat)(parts);\n        }\n        // https://github.com/babel/babel/pull/10148\n        case \"V8IntrinsicIdentifier\":\n            return (0, lines_1.concat)([\"%\", path.call(print, \"name\")]);\n        // https://github.com/babel/babel/pull/13191\n        case \"TopicReference\":\n            return (0, lines_1.fromString)(\"#\");\n        // Unhandled types below. If encountered, nodes of these types should\n        // be either left alone or desugared into AST types that are fully\n        // supported by the pretty-printer.\n        case \"ClassHeritage\": // TODO\n        case \"ComprehensionBlock\": // TODO\n        case \"ComprehensionExpression\": // TODO\n        case \"Glob\": // TODO\n        case \"GeneratorExpression\": // TODO\n        case \"LetStatement\": // TODO\n        case \"LetExpression\": // TODO\n        case \"GraphExpression\": // TODO\n        case \"GraphIndexExpression\": // TODO\n        case \"XMLDefaultDeclaration\":\n        case \"XMLAnyName\":\n        case \"XMLQualifiedIdentifier\":\n        case \"XMLFunctionQualifiedIdentifier\":\n        case \"XMLAttributeSelector\":\n        case \"XMLFilterExpression\":\n        case \"XML\":\n        case \"XMLElement\":\n        case \"XMLList\":\n        case \"XMLEscape\":\n        case \"XMLText\":\n        case \"XMLStartTag\":\n        case \"XMLEndTag\":\n        case \"XMLPointTag\":\n        case \"XMLName\":\n        case \"XMLAttribute\":\n        case \"XMLCdata\":\n        case \"XMLComment\":\n        case \"XMLProcessingInstruction\":\n        default:\n            debugger;\n            throw new Error(\"unknown type: \" + JSON.stringify(n.type));\n    }\n}\nfunction printDecorators(path, printPath) {\n    var parts = [];\n    var node = path.getValue();\n    if (node.decorators &&\n        node.decorators.length > 0 &&\n        // If the parent node is an export declaration, it will be\n        // responsible for printing node.decorators.\n        !util.getParentExportDeclaration(path)) {\n        path.each(function (decoratorPath) {\n            parts.push(printPath(decoratorPath), \"\\n\");\n        }, \"decorators\");\n    }\n    else if (util.isExportDeclaration(node) &&\n        node.declaration &&\n        node.declaration.decorators) {\n        // Export declarations are responsible for printing any decorators\n        // that logically apply to node.declaration.\n        path.each(function (decoratorPath) {\n            parts.push(printPath(decoratorPath), \"\\n\");\n        }, \"declaration\", \"decorators\");\n    }\n    return (0, lines_1.concat)(parts);\n}\nfunction printStatementSequence(path, options, print) {\n    var filtered = [];\n    var sawComment = false;\n    var sawStatement = false;\n    path.each(function (stmtPath) {\n        var stmt = stmtPath.getValue();\n        // Just in case the AST has been modified to contain falsy\n        // \"statements,\" it's safer simply to skip them.\n        if (!stmt) {\n            return;\n        }\n        // Skip printing EmptyStatement nodes to avoid leaving stray\n        // semicolons lying around.\n        if (stmt.type === \"EmptyStatement\" &&\n            !(stmt.comments && stmt.comments.length > 0)) {\n            return;\n        }\n        if (namedTypes.Comment.check(stmt)) {\n            // The pretty printer allows a dangling Comment node to act as\n            // a Statement when the Comment can't be attached to any other\n            // non-Comment node in the tree.\n            sawComment = true;\n        }\n        else if (namedTypes.Statement.check(stmt)) {\n            sawStatement = true;\n        }\n        else {\n            // When the pretty printer encounters a string instead of an\n            // AST node, it just prints the string. This behavior can be\n            // useful for fine-grained formatting decisions like inserting\n            // blank lines.\n            isString.assert(stmt);\n        }\n        // We can't hang onto stmtPath outside of this function, because\n        // it's just a reference to a mutable FastPath object, so we have\n        // to go ahead and print it here.\n        filtered.push({\n            node: stmt,\n            printed: print(stmtPath),\n        });\n    });\n    if (sawComment) {\n        (0, tiny_invariant_1.default)(sawStatement === false, \"Comments may appear as statements in otherwise empty statement \" +\n            \"lists, but may not coexist with non-Comment nodes.\");\n    }\n    var prevTrailingSpace = null;\n    var len = filtered.length;\n    var parts = [];\n    filtered.forEach(function (info, i) {\n        var printed = info.printed;\n        var stmt = info.node;\n        var multiLine = printed.length > 1;\n        var notFirst = i > 0;\n        var notLast = i < len - 1;\n        var leadingSpace;\n        var trailingSpace;\n        var lines = stmt && stmt.loc && stmt.loc.lines;\n        var trueLoc = lines && options.reuseWhitespace && util.getTrueLoc(stmt, lines);\n        if (notFirst) {\n            if (trueLoc) {\n                var beforeStart = lines.skipSpaces(trueLoc.start, true);\n                var beforeStartLine = beforeStart ? beforeStart.line : 1;\n                var leadingGap = trueLoc.start.line - beforeStartLine;\n                leadingSpace = Array(leadingGap + 1).join(\"\\n\");\n            }\n            else {\n                leadingSpace = multiLine ? \"\\n\\n\" : \"\\n\";\n            }\n        }\n        else {\n            leadingSpace = \"\";\n        }\n        if (notLast) {\n            if (trueLoc) {\n                var afterEnd = lines.skipSpaces(trueLoc.end);\n                var afterEndLine = afterEnd ? afterEnd.line : lines.length;\n                var trailingGap = afterEndLine - trueLoc.end.line;\n                trailingSpace = Array(trailingGap + 1).join(\"\\n\");\n            }\n            else {\n                trailingSpace = multiLine ? \"\\n\\n\" : \"\\n\";\n            }\n        }\n        else {\n            trailingSpace = \"\";\n        }\n        parts.push(maxSpace(prevTrailingSpace, leadingSpace), printed);\n        if (notLast) {\n            prevTrailingSpace = trailingSpace;\n        }\n        else if (trailingSpace) {\n            parts.push(trailingSpace);\n        }\n    });\n    return (0, lines_1.concat)(parts);\n}\nfunction maxSpace(s1, s2) {\n    if (!s1 && !s2) {\n        return (0, lines_1.fromString)(\"\");\n    }\n    if (!s1) {\n        return (0, lines_1.fromString)(s2);\n    }\n    if (!s2) {\n        return (0, lines_1.fromString)(s1);\n    }\n    var spaceLines1 = (0, lines_1.fromString)(s1);\n    var spaceLines2 = (0, lines_1.fromString)(s2);\n    if (spaceLines2.length > spaceLines1.length) {\n        return spaceLines2;\n    }\n    return spaceLines1;\n}\nfunction printClassMemberModifiers(node) {\n    var parts = [];\n    if (node.declare) {\n        parts.push(\"declare \");\n    }\n    var access = node.accessibility || node.access;\n    if (typeof access === \"string\") {\n        parts.push(access, \" \");\n    }\n    if (node.static) {\n        parts.push(\"static \");\n    }\n    if (node.override) {\n        parts.push(\"override \");\n    }\n    if (node.abstract) {\n        parts.push(\"abstract \");\n    }\n    if (node.readonly) {\n        parts.push(\"readonly \");\n    }\n    return parts;\n}\nfunction printMethod(path, options, print) {\n    var node = path.getNode();\n    var kind = node.kind;\n    var parts = [];\n    var nodeValue = node.value;\n    if (!namedTypes.FunctionExpression.check(nodeValue)) {\n        nodeValue = node;\n    }\n    parts.push.apply(parts, printClassMemberModifiers(node));\n    if (nodeValue.async) {\n        parts.push(\"async \");\n    }\n    if (nodeValue.generator) {\n        parts.push(\"*\");\n    }\n    if (kind === \"get\" || kind === \"set\") {\n        parts.push(kind, \" \");\n    }\n    var key = path.call(print, \"key\");\n    if (node.computed) {\n        key = (0, lines_1.concat)([\"[\", key, \"]\"]);\n    }\n    parts.push(key);\n    if (node.optional) {\n        parts.push(\"?\");\n    }\n    if (node === nodeValue) {\n        parts.push(path.call(print, \"typeParameters\"), \"(\", printFunctionParams(path, options, print), \")\", path.call(print, \"returnType\"));\n        if (node.body) {\n            parts.push(\" \", path.call(print, \"body\"));\n        }\n        else {\n            parts.push(\";\");\n        }\n    }\n    else {\n        parts.push(path.call(print, \"value\", \"typeParameters\"), \"(\", path.call(function (valuePath) { return printFunctionParams(valuePath, options, print); }, \"value\"), \")\", path.call(print, \"value\", \"returnType\"));\n        if (nodeValue.body) {\n            parts.push(\" \", path.call(print, \"value\", \"body\"));\n        }\n        else {\n            parts.push(\";\");\n        }\n    }\n    return (0, lines_1.concat)(parts);\n}\nfunction printArgumentsList(path, options, print) {\n    var printed = path.map(print, \"arguments\");\n    var trailingComma = util.isTrailingCommaEnabled(options, \"parameters\");\n    var joined = (0, lines_1.fromString)(\", \").join(printed);\n    if (joined.getLineLength(1) > options.wrapColumn) {\n        joined = (0, lines_1.fromString)(\",\\n\").join(printed);\n        return (0, lines_1.concat)([\n            \"(\\n\",\n            joined.indent(options.tabWidth),\n            trailingComma ? \",\\n)\" : \"\\n)\",\n        ]);\n    }\n    return (0, lines_1.concat)([\"(\", joined, \")\"]);\n}\nfunction printFunctionParams(path, options, print) {\n    var fun = path.getValue();\n    var params;\n    var printed = [];\n    if (fun.params) {\n        params = fun.params;\n        printed = path.map(print, \"params\");\n    }\n    else if (fun.parameters) {\n        params = fun.parameters;\n        printed = path.map(print, \"parameters\");\n    }\n    if (fun.defaults) {\n        path.each(function (defExprPath) {\n            var i = defExprPath.getName();\n            var p = printed[i];\n            if (p && defExprPath.getValue()) {\n                printed[i] = (0, lines_1.concat)([p, \" = \", print(defExprPath)]);\n            }\n        }, \"defaults\");\n    }\n    if (fun.rest) {\n        printed.push((0, lines_1.concat)([\"...\", path.call(print, \"rest\")]));\n    }\n    var joined = (0, lines_1.fromString)(\", \").join(printed);\n    if (joined.length > 1 || joined.getLineLength(1) > options.wrapColumn) {\n        joined = (0, lines_1.fromString)(\",\\n\").join(printed);\n        if (util.isTrailingCommaEnabled(options, \"parameters\") &&\n            !fun.rest &&\n            params[params.length - 1].type !== \"RestElement\") {\n            joined = (0, lines_1.concat)([joined, \",\\n\"]);\n        }\n        else {\n            joined = (0, lines_1.concat)([joined, \"\\n\"]);\n        }\n        return (0, lines_1.concat)([\"\\n\", joined.indent(options.tabWidth)]);\n    }\n    return joined;\n}\nfunction maybePrintImportAssertions(path, options, print) {\n    var n = path.getValue();\n    if (n.assertions && n.assertions.length > 0) {\n        var parts = [\" assert {\"];\n        var printed = path.map(print, \"assertions\");\n        var flat = (0, lines_1.fromString)(\", \").join(printed);\n        if (flat.length > 1 || flat.getLineLength(1) > options.wrapColumn) {\n            parts.push(\"\\n\", (0, lines_1.fromString)(\",\\n\").join(printed).indent(options.tabWidth), \"\\n}\");\n        }\n        else {\n            parts.push(\" \", flat, \" }\");\n        }\n        return (0, lines_1.concat)(parts);\n    }\n    return (0, lines_1.fromString)(\"\");\n}\nfunction printExportDeclaration(path, options, print) {\n    var decl = path.getValue();\n    var parts = [\"export \"];\n    if (decl.exportKind && decl.exportKind === \"type\") {\n        if (!decl.declaration) {\n            parts.push(\"type \");\n        }\n    }\n    var shouldPrintSpaces = options.objectCurlySpacing;\n    namedTypes.Declaration.assert(decl);\n    if (decl[\"default\"] || decl.type === \"ExportDefaultDeclaration\") {\n        parts.push(\"default \");\n    }\n    if (decl.declaration) {\n        parts.push(path.call(print, \"declaration\"));\n    }\n    else if (decl.specifiers) {\n        if (decl.specifiers.length === 1 &&\n            decl.specifiers[0].type === \"ExportBatchSpecifier\") {\n            parts.push(\"*\");\n        }\n        else if (decl.specifiers.length === 0) {\n            parts.push(\"{}\");\n        }\n        else if (decl.specifiers[0].type === \"ExportDefaultSpecifier\" ||\n            decl.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n            var unbracedSpecifiers_2 = [];\n            var bracedSpecifiers_2 = [];\n            path.each(function (specifierPath) {\n                var spec = specifierPath.getValue();\n                if (spec.type === \"ExportDefaultSpecifier\" ||\n                    spec.type === \"ExportNamespaceSpecifier\") {\n                    unbracedSpecifiers_2.push(print(specifierPath));\n                }\n                else {\n                    bracedSpecifiers_2.push(print(specifierPath));\n                }\n            }, \"specifiers\");\n            unbracedSpecifiers_2.forEach(function (lines, i) {\n                if (i > 0) {\n                    parts.push(\", \");\n                }\n                parts.push(lines);\n            });\n            if (bracedSpecifiers_2.length > 0) {\n                var lines_2 = (0, lines_1.fromString)(\", \").join(bracedSpecifiers_2);\n                if (lines_2.getLineLength(1) > options.wrapColumn) {\n                    lines_2 = (0, lines_1.concat)([\n                        (0, lines_1.fromString)(\",\\n\").join(bracedSpecifiers_2).indent(options.tabWidth),\n                        \",\",\n                    ]);\n                }\n                if (unbracedSpecifiers_2.length > 0) {\n                    parts.push(\", \");\n                }\n                if (lines_2.length > 1) {\n                    parts.push(\"{\\n\", lines_2, \"\\n}\");\n                }\n                else if (options.objectCurlySpacing) {\n                    parts.push(\"{ \", lines_2, \" }\");\n                }\n                else {\n                    parts.push(\"{\", lines_2, \"}\");\n                }\n            }\n        }\n        else {\n            parts.push(shouldPrintSpaces ? \"{ \" : \"{\", (0, lines_1.fromString)(\", \").join(path.map(print, \"specifiers\")), shouldPrintSpaces ? \" }\" : \"}\");\n        }\n        if (decl.source) {\n            parts.push(\" from \", path.call(print, \"source\"), maybePrintImportAssertions(path, options, print));\n        }\n    }\n    var lines = (0, lines_1.concat)(parts);\n    if (lastNonSpaceCharacter(lines) !== \";\" &&\n        !(decl.declaration &&\n            (decl.declaration.type === \"FunctionDeclaration\" ||\n                decl.declaration.type === \"ClassDeclaration\" ||\n                decl.declaration.type === \"TSModuleDeclaration\" ||\n                decl.declaration.type === \"TSInterfaceDeclaration\" ||\n                decl.declaration.type === \"TSEnumDeclaration\"))) {\n        lines = (0, lines_1.concat)([lines, \";\"]);\n    }\n    return lines;\n}\nfunction printFlowDeclaration(path, parts) {\n    var parentExportDecl = util.getParentExportDeclaration(path);\n    if (parentExportDecl) {\n        (0, tiny_invariant_1.default)(parentExportDecl.type === \"DeclareExportDeclaration\");\n    }\n    else {\n        // If the parent node has type DeclareExportDeclaration, then it\n        // will be responsible for printing the \"declare\" token. Otherwise\n        // it needs to be printed with this non-exported declaration node.\n        parts.unshift(\"declare \");\n    }\n    return (0, lines_1.concat)(parts);\n}\nfunction printVariance(path, print) {\n    return path.call(function (variancePath) {\n        var value = variancePath.getValue();\n        if (value) {\n            if (value === \"plus\") {\n                return (0, lines_1.fromString)(\"+\");\n            }\n            if (value === \"minus\") {\n                return (0, lines_1.fromString)(\"-\");\n            }\n            return print(variancePath);\n        }\n        return (0, lines_1.fromString)(\"\");\n    }, \"variance\");\n}\nfunction adjustClause(clause, options) {\n    if (clause.length > 1)\n        return (0, lines_1.concat)([\" \", clause]);\n    return (0, lines_1.concat)([\"\\n\", maybeAddSemicolon(clause).indent(options.tabWidth)]);\n}\nfunction lastNonSpaceCharacter(lines) {\n    var pos = lines.lastPos();\n    do {\n        var ch = lines.charAt(pos);\n        if (/\\S/.test(ch))\n            return ch;\n    } while (lines.prevPos(pos));\n}\nfunction endsWithBrace(lines) {\n    return lastNonSpaceCharacter(lines) === \"}\";\n}\nfunction swapQuotes(str) {\n    return str.replace(/['\"]/g, function (m) { return (m === '\"' ? \"'\" : '\"'); });\n}\nfunction getPossibleRaw(node) {\n    var value = types.getFieldValue(node, \"value\");\n    var extra = types.getFieldValue(node, \"extra\");\n    if (extra && typeof extra.raw === \"string\" && value == extra.rawValue) {\n        return extra.raw;\n    }\n    if (node.type === \"Literal\") {\n        var raw = node.raw;\n        if (typeof raw === \"string\" && value == raw) {\n            return raw;\n        }\n    }\n}\nfunction jsSafeStringify(str) {\n    return JSON.stringify(str).replace(/[\\u2028\\u2029]/g, function (m) {\n        return \"\\\\u\" + m.charCodeAt(0).toString(16);\n    });\n}\nfunction nodeStr(str, options) {\n    isString.assert(str);\n    switch (options.quote) {\n        case \"auto\": {\n            var double = jsSafeStringify(str);\n            var single = swapQuotes(jsSafeStringify(swapQuotes(str)));\n            return double.length > single.length ? single : double;\n        }\n        case \"single\":\n            return swapQuotes(jsSafeStringify(swapQuotes(str)));\n        case \"double\":\n        default:\n            return jsSafeStringify(str);\n    }\n}\nfunction maybeAddSemicolon(lines) {\n    var eoc = lastNonSpaceCharacter(lines);\n    if (!eoc || \"\\n};\".indexOf(eoc) < 0)\n        return (0, lines_1.concat)([lines, \";\"]);\n    return lines;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.run = exports.prettyPrint = exports.print = exports.visit = exports.types = exports.parse = void 0;\nvar tslib_1 = require(\"tslib\");\nvar fs_1 = tslib_1.__importDefault(require(\"fs\"));\nvar types = tslib_1.__importStar(require(\"ast-types\"));\nexports.types = types;\nvar parser_1 = require(\"./lib/parser\");\nObject.defineProperty(exports, \"parse\", { enumerable: true, get: function () { return parser_1.parse; } });\nvar printer_1 = require(\"./lib/printer\");\n/**\n * Traverse and potentially modify an abstract syntax tree using a\n * convenient visitor syntax:\n *\n *   recast.visit(ast, {\n *     names: [],\n *     visitIdentifier: function(path) {\n *       var node = path.value;\n *       this.visitor.names.push(node.name);\n *       this.traverse(path);\n *     }\n *   });\n */\nvar ast_types_1 = require(\"ast-types\");\nObject.defineProperty(exports, \"visit\", { enumerable: true, get: function () { return ast_types_1.visit; } });\n/**\n * Reprint a modified syntax tree using as much of the original source\n * code as possible.\n */\nfunction print(node, options) {\n    return new printer_1.Printer(options).print(node);\n}\nexports.print = print;\n/**\n * Print without attempting to reuse any original source code.\n */\nfunction prettyPrint(node, options) {\n    return new printer_1.Printer(options).printGenerically(node);\n}\nexports.prettyPrint = prettyPrint;\n/**\n * Convenient command-line interface (see e.g. example/add-braces).\n */\nfunction run(transformer, options) {\n    return runFile(process.argv[2], transformer, options);\n}\nexports.run = run;\nfunction runFile(path, transformer, options) {\n    fs_1.default.readFile(path, \"utf-8\", function (err, code) {\n        if (err) {\n            console.error(err);\n            return;\n        }\n        runString(code, transformer, options);\n    });\n}\nfunction defaultWriteback(output) {\n    process.stdout.write(output);\n}\nfunction runString(code, transformer, options) {\n    var writeback = (options && options.writeback) || defaultWriteback;\n    transformer((0, parser_1.parse)(code, options), function (node) {\n        writeback(print(node, options).code);\n    });\n}\n","import { siyuan } from \"@llej/js_util\";\nimport { Plugin } from \"siyuan\";\nimport { updateBlock } from \"~/libs/api\";\nimport { pluginClassName } from \"./constant\";\nimport { get_exprBlocks } from \"./fn/get_exprBlocks\";\nimport \"./index.css\";\nimport type { MergedBlock } from \"./type\";\n\nimport * as recast from \"recast\";\nconst dev = console.log;\ndeclare global {\n  var expr: Expr;\n}\n\nexport default class Expr extends Plugin {\n  IntervalId = 0;\n  /** 主循环的间隔毫秒数 */\n  intervalMs = 1_000;\n  /** 控制sql相关 TODO 添加选项配置 */\n  intervalUpdateSql = siyuan.bindData({\n    initValue: true,\n    that: this,\n    storageName: \"intervalUpdateSql.json\",\n  });\n  /** 只更新这个时间戳以后的表达式 */\n  updated = siyuan.bindData({\n    initValue: 0,\n    that: this,\n    storageName: \"updated.json\",\n  });\n  /** 为 true 代表正在进行求值运算中 */\n  evalState = false;\n\n  async onload() {\n    console.log(\"[expr]\", this);\n\n    /** 注册Expr实例到全局变量 */\n    globalThis.expr = this;\n    this.onunloadFn.push(\n      () =>\n        //@ts-ignore\n        delete globalThis.expr,\n    );\n\n    // 切换页签时清空已计算的id数组来实现每次打开自动计算\n    this.eventBus.on(\"switch-protyle\", () => {\n      this.evalExprIDs = [];\n    });\n\n    /** 注册求值循环 */\n    this.IntervalId = setInterval(this.evalAllExpr.bind(this), this.intervalMs);\n    this.onunloadFn.push(() => clearInterval(this.IntervalId));\n\n    /** 在 body 上注册插件类名，用于控制样式的开关 */\n    document.body.classList.add(pluginClassName);\n    this.onunloadFn.push(() => document.body.classList.remove(pluginClassName));\n  }\n\n  /** 插件卸载时会执行此数组中的函数 */\n  onunloadFn = [] as (() => void)[];\n  async onunload() {\n    this.onunloadFn.forEach((fn) => fn());\n  }\n\n  /** 对所有表达式进行求值 */\n  async evalAllExpr() {\n    if (this.evalState) {\n      /** 只有上一轮求值计算进行完毕后才会开始新一轮计算 */\n      return;\n    }\n    const exprIDs = (\n      [...document.querySelectorAll(\"[custom-expr]\")].filter((el) => {\n        if (!(el instanceof HTMLElement)) {\n          return false;\n        }\n        if (el.dataset.nodeId && this.evalExprIDs.includes(el.dataset.nodeId)) {\n          // 已经求值过了的不在参加计算\n          return false;\n        }\n        return true;\n      }) as HTMLElement[]\n    ).map((el) => {\n      const id = el.dataset.nodeId as string;\n      return id;\n    });\n\n    // 当配置不根据update字段更新的时候，不进行求值\n    if (!this.intervalUpdateSql.value() && exprIDs.length === 0) {\n      return;\n    }\n\n    try {\n      this.evalState = true;\n      const exprBlock = await get_exprBlocks(exprIDs);\n\n      if (exprBlock && exprBlock.length > 0) {\n        await Promise.all(exprBlock.map(this.exprEval.bind(this)));\n      }\n    } catch (error) {\n      dev(\"求值错误\", error);\n    } finally {\n      this.evalState = false;\n    }\n  }\n  /** 记录计算完成的 id ，不再计算 */\n  evalExprIDs: string[] = [];\n  /** 对指定id进行求值 */\n  async exprEvalByID(block_id: string) {\n    const blocks = await get_exprBlocks([block_id]);\n    return this.exprEval(blocks[0]);\n  }\n  async exprEval(block: MergedBlock) {\n    // 如果没有 return 则为最后一个表达式添加 return\n    const code = `async ()=>{\\n${block.a_value}\\n}`;\n    const ast = recast.parse(code);\n    const b = recast.types.builders;\n    // 生成转换后的代码\n    const body: any[] = ast.program.body[0].expression.body.body;\n    if (body.find((item) => item.type === \"ReturnStatement\")) {\n    } else {\n      const lastExp = body.pop();\n      if ((lastExp.type = \"ExpressionStatement\")) {\n        // console.log(\"[lastExp]\", lastExp);\n        body.push(b.returnStatement(lastExp.expression));\n      }\n    }\n    const output = recast.print(ast).code;\n    let evalValue = await eval(output)();\n\n    const updated = generateTimestamp();\n    if (Number(updated) > this.updated.value()) {\n      this.updated.set(Number(updated));\n    }\n    /** TODO,这里应该要考虑ial中不存在相关字段的情况，需要进行添加而非替换 更新块的update时间戳\n     * ial = `{: updated=\"20240604233920\" custom-expr=\"10-11+Math.random()+&quot;2&quot;\" custom-expr-value=\"-0.95897021536132312\" id=\"20240514180539-3zvaoab\" style=\"background-color: var(--b3-font-background4);\"} `\n     */\n    let newKramdownAttr = block.ial!;\n    if (/updated=\"\\d+\"/.test(newKramdownAttr)) {\n      newKramdownAttr = newKramdownAttr.replace(/updated=\"\\d+\"/, `updated=\"${updated}\"`);\n    } else {\n      newKramdownAttr = newKramdownAttr.replace(/}$/, ` updated=\"${updated}\"`);\n    }\n    const evalValue_string = String(evalValue);\n    if (/custom-expr-value=\".*?\"/.test(newKramdownAttr)) {\n      newKramdownAttr = newKramdownAttr.replace(\n        /custom-expr-value=\".*?\"/,\n        `custom-expr-value=\"${encodeHTML(evalValue_string)}\"`,\n      );\n    } else {\n      newKramdownAttr = newKramdownAttr.replace(\n        /}$/,\n        ` custom-expr-value=\"${encodeHTML(evalValue_string)}\"` + \"}\",\n      );\n    }\n    // custom-expr-value=\"-0.56273369360008952\"\n    /** 将求值结果更新到块文本 */\n    await updateBlock(\"markdown\", String(evalValue_string + \"\\n\" + newKramdownAttr), block.id);\n    dev(\"expr eval:\", { id: block.id, expr: block.a_value, evalValue });\n\n    this.evalExprIDs.push(block.id);\n    return evalValue;\n  }\n}\n\nfunction generateTimestamp() {\n  const now = new Date();\n  return [\n    now.getFullYear(),\n    now.getMonth() + 1,\n    now.getDate(),\n    now.getHours(),\n    now.getMinutes(),\n    now.getSeconds(),\n  ]\n    .map((part) => part.toString().padStart(2, \"0\"))\n    .join(\"\");\n}\nfunction encodeHTML(str: string) {\n  return str.replace(/[&<>\"'\\n]/g, function (match) {\n    return {\n      \"&\": \"&amp;\",\n      \"<\": \"&lt;\",\n      \">\": \"&gt;\",\n      '\"': \"&quot;\",\n      \"'\": \"&#39;\",\n      \"\\n\": \"_esc_newline_\",\n    }[match]!;\n  });\n}\n"],"names":["__awaiter","this","__createBinding","__exportStar","exports","require$$0","__setModuleDefault","__importStar","decorator","hash","adap","mixin","number","awaitPromise_1","promise","url","require$$1","require$$2","require$$3","mergePluginPackage_1","require$$4","sql","updated","b","d","__assign","body","v","fork","types","BaseType","ArrayType","IdentityType","ObjectType","OrType","PredicateType","Def","Field","name","DefImpl","_i","namedTypes","module","Path","path","newIndex","childPath","Scope","scope","NodePath","undefined","PathVisitor","Visitor","request","require$$5","require$$6","shared","require$$7","require$$8","base64","util","mapping","sourceFile","binarySearch","quickSort","sourceMap","needle","section","code","options","lines","node","parser","ast","CommentHandler","__extends","extendStatics","JSXParser","JSXClosingElement","JSXElement","JSXEmptyExpression","JSXExpressionContainer","JSXIdentifier","JSXMemberExpression","JSXAttribute","JSXNamespacedName","JSXOpeningElement","JSXSpreadAttribute","JSXText","ArrayExpression","ArrayPattern","ArrowFunctionExpression","AssignmentExpression","AssignmentPattern","AsyncArrowFunctionExpression","AsyncFunctionDeclaration","AsyncFunctionExpression","AwaitExpression","BinaryExpression","BlockStatement","BreakStatement","CallExpression","CatchClause","ClassBody","ClassDeclaration","ClassExpression","ComputedMemberExpression","ConditionalExpression","ContinueStatement","DebuggerStatement","Directive","DoWhileStatement","EmptyStatement","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExportSpecifier","ExpressionStatement","ForInStatement","ForOfStatement","ForStatement","FunctionDeclaration","FunctionExpression","Identifier","IfStatement","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","LabeledStatement","Literal","MetaProperty","MethodDefinition","Module","NewExpression","ObjectExpression","ObjectPattern","Property","RegexLiteral","RestElement","ReturnStatement","Script","SequenceExpression","SpreadElement","StaticMemberExpression","Super","SwitchCase","SwitchStatement","TaggedTemplateExpression","TemplateElement","TemplateLiteral","ThisExpression","ThrowStatement","TryStatement","block","UnaryExpression","UpdateExpression","VariableDeclaration","VariableDeclarator","WhileStatement","WithStatement","YieldExpression","Parser","comments","src","ErrorHandler","Scanner","self","Reader","Tokenizer","esprima","Mapping","Lines","string","sliced","info","comment","TreeCopier","i","FastPath","copy","Patcher","patcher","PrintResult","Printer","output","siyuan","recast.parse","recast.types","recast.print"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAIA,cAAaC,kBAAQA,eAAK,aAAc,SAAU,SAAS,YAAY,GAAG,WAAW;AACrF,WAAS,MAAM,OAAO;AAAE,WAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,SAAS;AAAE,cAAQ,KAAK;AAAA,IAAE,CAAE;AAAA,EAAI;AAC5G,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAAE,SAAU,GAAG;AAAE,eAAO,CAAC;AAAA;IAAM;AAC3F,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,MAAI,SAAQ,GAAG;AAAE,eAAO,CAAC;AAAA;IAAM;AAC9F,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK,WAAW,QAAQ;AAAA,IAAI;AAC9G,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAE,CAAA,GAAG,KAAI,CAAE;AAAA,EAC5E,CAAK;AACL;AACA,OAAO,eAAe,aAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,YAAA,aAAqB,YAAA,YAAoB;AAEzC,SAAS,UAAU,GAAG;AAClB,SAAO,SAAS,KAAK,QAAQ,aAAa,YAAY;AAClD,WAAO,OAAO,OAAO,OAAO,OAAO,IAAI,UAAU,GAAG,EAAE,SAAS,KAAK;AAC5D,aAAOD,YAAU,MAAM,QAAQ,QAAQ,aAAa;AAChD,cAAM,MAAM,MAAM,WAAW,MAAM,GAAG,GAAG;AACzC,cAAM,EAAE,GAAG;AACX,eAAO;AAAA,MAC3B,CAAiB;AAAA,IACJ,EAAA,CAAE;AAAA,EACf;AACA;AACiB,YAAA,YAAG;AAEpB,SAAS,WAAW,GAAG;AACnB,SAAO,SAAS,KAAK,QAAQ,aAAa,YAAY;AAClD,WAAO,OAAO,OAAO,OAAO,OAAO,IAAI,UAAU,GAAG,EAAE,SAAS,KAAK;AAC5D,aAAOA,YAAU,MAAM,QAAQ,QAAQ,aAAa;AAChD,cAAM,EAAC;AACP,cAAM,MAAM,MAAM,WAAW,MAAM,GAAG,GAAG;AACzC,eAAO;AAAA,MAC3B,CAAiB;AAAA,IACJ,EAAA,CAAE;AAAA,EACf;AACA;AACkB,YAAA,aAAG;AAAA;ACpCrB,MAAIE,mBAAmBD,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,QAAI,OAAO,OAAW,MAAK;AAC3B,QAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,QAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,aAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,eAAO,EAAE,CAAC;AAAA,MAAE;IAC1D;AACD,WAAO,eAAe,GAAG,IAAI,IAAI;AAAA,EACpC,IAAK,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,QAAI,OAAO,OAAW,MAAK;AAC3B,MAAE,EAAE,IAAI,EAAE,CAAC;AAAA,EACd;AACD,MAAIE,gBAAgBF,kBAAQA,eAAK,gBAAiB,SAAS,GAAGG,UAAS;AACnE,aAAS,KAAK,EAAG,KAAI,MAAM,aAAa,CAAC,OAAO,UAAU,eAAe,KAAKA,UAAS,CAAC,EAAG,CAAAF,iBAAgBE,UAAS,GAAG,CAAC;AAAA,EAC5H;AACA,SAAO,eAAcA,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,EAAAD,cAAaE,aAA2BD,QAAO;;ACf/C,IAAIF,oBAAmBD,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,MAAI,OAAO,OAAW,MAAK;AAC3B,MAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,MAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,WAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,aAAO,EAAE,CAAC;AAAA,IAAE;EAC1D;AACD,SAAO,eAAe,GAAG,IAAI,IAAI;AACrC,IAAM,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,MAAI,OAAO,OAAW,MAAK;AAC3B,IAAE,EAAE,IAAI,EAAE,CAAC;AACf;AACA,IAAIK,uBAAsBL,kBAAQA,eAAK,uBAAwB,OAAO,SAAU,SAAS,GAAG,GAAG;AAC3F,SAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,EAAC,CAAE;AACtE,IAAK,SAAS,GAAG,GAAG;AAChB,IAAE,SAAS,IAAI;AACnB;AACA,IAAIM,iBAAgBN,kBAAQA,eAAK,gBAAiB,SAAU,KAAK;AAC7D,MAAI,OAAO,IAAI,WAAY,QAAO;AAClC,MAAI,SAAS,CAAA;AACb,MAAI,OAAO;AAAM,aAAS,KAAK,IAAK,KAAI,MAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,EAAGC,mBAAgB,QAAQ,KAAK,CAAC;AAAA;AACvII,uBAAmB,QAAQ,GAAG;AAC9B,SAAO;AACX;AACA,OAAO,eAAeE,aAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC/CA,YAAA,QAAG;AAChB,MAAM,QAAQD,eAAaF,OAAkB;AAChCG,YAAA,QAAG;;;AC1BhB,OAAO,eAAe,QAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACzC,OAAA,cAAG;AAItB,SAAS,YAAY,MAAM;AACvB,MAAIC,QAAO,MAAM,QAAQ,KAAK;AAC9B,SAAO,OAAO;AAEV,IAAAA,QAAQA,QAAO,KAAM,KAAK,YAAY,EAAE,KAAK;AAAA,EAChD;AACD,SAAOA,UAAS;AACpB;AACmB,OAAA,cAAG;AAAA;ACbtB,MAAIP,mBAAmBD,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,QAAI,OAAO,OAAW,MAAK;AAC3B,QAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,QAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,aAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,eAAO,EAAE,CAAC;AAAA,MAAE;IAC1D;AACD,WAAO,eAAe,GAAG,IAAI,IAAI;AAAA,EACpC,IAAK,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,QAAI,OAAO,OAAW,MAAK;AAC3B,MAAE,EAAE,IAAI,EAAE,CAAC;AAAA,EACd;AACD,MAAIE,gBAAgBF,kBAAQA,eAAK,gBAAiB,SAAS,GAAGG,UAAS;AACnE,aAAS,KAAK,EAAG,KAAI,MAAM,aAAa,CAAC,OAAO,UAAU,eAAe,KAAKA,UAAS,CAAC,EAAG,CAAAF,iBAAgBE,UAAS,GAAG,CAAC;AAAA,EAC5H;AACA,SAAO,eAAcA,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,EAAAD,cAAaE,QAAqBD,QAAO;;;ACfzC,OAAO,eAAeM,QAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAChDA,OAAA,OAAG;AAEHA,OAAA,OAAG;;;;ACHf,OAAO,eAAeC,SAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5DA,QAAA,YAAoBA,QAAA,cAAsB;AAE1C,SAAS,YAAY,aAAa,WAAW;AACzC,YAAU,QAAQ,cAAY;AAC1B,WAAO,oBAAoB,SAAS,SAAS,EAAE,QAAQ,UAAQ;AAC3D,kBAAY,UAAU,IAAI,IAAI,SAAS,UAAU,IAAI;AAAA,IACjE,CAAS;AAAA,EACT,CAAK;AACL;AACmBA,QAAA,cAAG;AAEtB,SAAS,aAAa,MAAM;AACxB,MAAI,MAAM,CAAA;AACV,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,UAAM,KAAK,KAAK,CAAC;AACjB,QAAI,cAAc;AACd,YAAM,OAAO,OAAO,OAAO,OAAO,IAAI,GAAG,GAAG,EAAE;AAAA,EACrD;AACD,SAAO;AACX;AACiBA,QAAA,YAAG;AAAA;ACrBpB,MAAIT,mBAAmBD,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,QAAI,OAAO,OAAW,MAAK;AAC3B,QAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,QAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,aAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,eAAO,EAAE,CAAC;AAAA,MAAE;IAC1D;AACD,WAAO,eAAe,GAAG,IAAI,IAAI;AAAA,EACpC,IAAK,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,QAAI,OAAO,OAAW,MAAK;AAC3B,MAAE,EAAE,IAAI,EAAE,CAAC;AAAA,EACd;AACD,MAAIE,gBAAgBF,kBAAQA,eAAK,gBAAiB,SAAS,GAAGG,UAAS;AACnE,aAAS,KAAK,EAAG,KAAI,MAAM,aAAa,CAAC,OAAO,UAAU,eAAe,KAAKA,UAAS,CAAC,EAAG,CAAAF,iBAAgBE,UAAS,GAAG,CAAC;AAAA,EAC5H;AACA,SAAO,eAAcA,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,EAAAD,cAAaE,SAAoBD,QAAO;;;;ACfxC,OAAO,eAAeQ,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC7BA,SAAA,0BAAG;AAElC,SAAS,wBAAwB,KAAK;AAClC,SAAO,OAAO,GAAG,EAAE,QAAQ,CAAC;AAChC;AAC+BA,SAAA,0BAAG;AAAA;ACNlC,MAAIV,mBAAmBD,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,QAAI,OAAO,OAAW,MAAK;AAC3B,QAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,QAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,aAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,eAAO,EAAE,CAAC;AAAA,MAAE;IAC1D;AACD,WAAO,eAAe,GAAG,IAAI,IAAI;AAAA,EACpC,IAAK,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,QAAI,OAAO,OAAW,MAAK;AAC3B,MAAE,EAAE,IAAI,EAAE,CAAC;AAAA,EACd;AACD,MAAIE,gBAAgBF,kBAAQA,eAAK,gBAAiB,SAAS,GAAGG,UAAS;AACnE,aAAS,KAAK,EAAG,KAAI,MAAM,aAAa,CAAC,OAAO,UAAU,eAAe,KAAKA,UAAS,CAAC,EAAG,CAAAF,iBAAgBE,UAAS,GAAG,CAAC;AAAA,EAC5H;AACA,SAAO,eAAcA,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,EAAAD,cAAaE,UAAqBD,QAAO;;;;ACfzC,OAAO,eAAeS,gBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AACxCA,eAAA,eAAG;AAEvB,SAAS,aAAa;AAAA,EAAE;AAAA;AAAA,EAExB,UAAU,CAAC,MAAM;AAAA;EAAK,QAAQ,MAAM;AAAA,EAAA;AAAA,EAAK,MAAM,MAAM;AAAA,EAAG;AAAA,EAAE,SAAS,MAAM;AAAA,EAAG;AAAA,GAAK;AAC7E,MAAI,UAAU;AACd,SAAO,YAAa,KAAK;AACrB,QAAI,SAAS;AACT;IACH,OACI;AACD,gBAAU;AACV,YAAMC,WAAU,WAAW,MAAM,MAAM,GAAG;AAC1C,MAAAA,SACK,KAAK,CAAC,MAAM;AACb,gBAAQ,CAAC;AAAA,MACzB,CAAa,EACI,MAAM,KAAK,EACX,QAAQ,MAAM;AACf;AACA,kBAAU;AAAA,MAC1B,CAAa;AAAA,IACJ;AAAA,EACT;AACA;AACoBD,eAAA,eAAG;AAAA;AC1BvB,MAAIX,mBAAmBD,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,QAAI,OAAO,OAAW,MAAK;AAC3B,QAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,QAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,aAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,eAAO,EAAE,CAAC;AAAA,MAAE;IAC1D;AACD,WAAO,eAAe,GAAG,IAAI,IAAI;AAAA,EACpC,IAAK,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,QAAI,OAAO,OAAW,MAAK;AAC3B,MAAE,EAAE,IAAI,EAAE,CAAC;AAAA,EACd;AACD,MAAIE,gBAAgBF,kBAAQA,eAAK,gBAAiB,SAAS,GAAGG,UAAS;AACnE,aAAS,KAAK,EAAG,KAAI,MAAM,aAAa,CAAC,OAAO,UAAU,eAAe,KAAKA,UAAS,CAAC,EAAG,CAAAF,iBAAgBE,UAAS,GAAG,CAAC;AAAA,EAC5H;AACA,SAAO,eAAcA,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,EAAAD,cAAaE,gBAA4BD,QAAO;;;;ACfhD,OAAO,eAAe,KAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAChD,IAAA,OAAG;AACf,MAAM,KAAK;AAAA,EACP,YAAYW,MAAK;AACb,SAAK,UAAU,KAAK,cAAcA,IAAG;AAAA,EACxC;AAAA;AAAA,EAED,OAAO,cAAc,SAAS;AAC1B,UAAMA,OAAM,mBAAmB,OAAO;AACtC,QAAI,MAAMA,KAAI,MAAM,sBAAsB;AAC1C,QAAI,QAAQ,MAAM;AACd,aAAO;IACV;AACD,UAAM,MAAM,IAAI,OAAO,CAAC,GAAG,OAAO,EAAE,EAAE,MAAM,GAAG,EAAE,QAAQ,GAAG,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,GAAG,IAAI,CAAC,GAAG,IAAI,CAAE,CAAA;AACrG,WAAO;AAAA,EACV;AAAA;AAAA,EAED,SAAS,KAAK;AACV,UAAM,QAAQ,KAAK,QAAQ,GAAG;AAC9B,QAAI,UAAU,QAAW;AACrB,aAAO;AAAA,IACV;AACD,WAAO;AAAA,EACV;AACL;AACY,IAAA,OAAG;AAAA;ACzBf,MAAIb,mBAAmBD,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,QAAI,OAAO,OAAW,MAAK;AAC3B,QAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,QAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,aAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,eAAO,EAAE,CAAC;AAAA,MAAE;IAC1D;AACD,WAAO,eAAe,GAAG,IAAI,IAAI;AAAA,EACpC,IAAK,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,QAAI,OAAO,OAAW,MAAK;AAC3B,MAAE,EAAE,IAAI,EAAE,CAAC;AAAA,EACd;AACD,MAAIE,gBAAgBF,kBAAQA,eAAK,gBAAiB,SAAS,GAAGG,UAAS;AACnE,aAAS,KAAK,EAAG,KAAI,MAAM,aAAa,CAAC,OAAO,UAAU,eAAe,KAAKA,UAAS,CAAC,EAAG,CAAAF,iBAAgBE,UAAS,GAAG,CAAC;AAAA,EAC5H;AACA,SAAO,eAAcA,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,EAAAD,cAAaE,KAAkBD,QAAO;;ACftC,IAAIF,oBAAmBD,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,MAAI,OAAO,OAAW,MAAK;AAC3B,MAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,MAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,WAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,aAAO,EAAE,CAAC;AAAA,IAAE;EAC1D;AACD,SAAO,eAAe,GAAG,IAAI,IAAI;AACrC,IAAM,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,MAAI,OAAO,OAAW,MAAK;AAC3B,IAAE,EAAE,IAAI,EAAE,CAAC;AACf;AACA,IAAIK,uBAAsBL,kBAAQA,eAAK,uBAAwB,OAAO,SAAU,SAAS,GAAG,GAAG;AAC3F,SAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,EAAC,CAAE;AACtE,IAAK,SAAS,GAAG,GAAG;AAChB,IAAE,SAAS,IAAI;AACnB;AACA,IAAIM,iBAAgBN,kBAAQA,eAAK,gBAAiB,SAAU,KAAK;AAC7D,MAAI,OAAO,IAAI,WAAY,QAAO;AAClC,MAAI,SAAS,CAAA;AACb,MAAI,OAAO;AAAM,aAAS,KAAK,IAAK,KAAI,MAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,EAAGC,mBAAgB,QAAQ,KAAK,CAAC;AAAA;AACvII,uBAAmB,QAAQ,GAAG;AAC9B,SAAO;AACX;AACA,OAAO,eAAe,QAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC9C,OAAA,0BAAqB,OAAA,SAA8B,OAAA,QAAG;AACpE,MAAM,QAAQC,eAAaF,OAAkB;AAChC,OAAA,QAAG;AAChB,MAAM,SAASE,eAAaS,QAAmB;AACjC,OAAA,SAAG;AACjB,MAAM,UAAUT,eAAaU,SAAoB;AAClC,OAAA,UAAG;AAClB,MAAM,SAASV,eAAaW,QAAmB;AACjC,OAAA,SAAG;;;AChCjB,OAAO,eAAeC,sBAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAClCA,qBAAA,qBAAG;AAC7B,SAAS,mBAAmB,KAAK,QAAQ;AACrC,SAAO,OAAO,OAAO,OAAO,OAAO,CAAE,GAAE,MAAM,GAAG,EAAE,SAAS,IAAI,SAAS,MAAM,IAAI,MAAM,KAAK,IAAI,YAAY,QAAQ,IAAI,OAAM,CAAE;AACrI;AAC0BA,qBAAA,qBAAG;AAAA;ACL7B,MAAInB,aAAaC,kBAAQA,eAAK,aAAc,SAAU,SAAS,YAAY,GAAG,WAAW;AACrF,aAAS,MAAM,OAAO;AAAE,aAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,SAAS;AAAE,gBAAQ,KAAK;AAAA,MAAE,CAAE;AAAA,IAAI;AAC5G,WAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,eAAS,UAAU,OAAO;AAAE,YAAI;AAAE,eAAK,UAAU,KAAK,KAAK,CAAC;AAAA,QAAE,SAAU,GAAG;AAAE,iBAAO,CAAC;AAAA;MAAM;AAC3F,eAAS,SAAS,OAAO;AAAE,YAAI;AAAE,eAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,QAAI,SAAQ,GAAG;AAAE,iBAAO,CAAC;AAAA;MAAM;AAC9F,eAAS,KAAK,QAAQ;AAAE,eAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK,WAAW,QAAQ;AAAA,MAAI;AAC9G,YAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAE,CAAA,GAAG,KAAI,CAAE;AAAA,IAC5E,CAAK;AAAA,EACL;AACA,SAAO,eAAcG,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,EAAAA,SAAmB,WAAAA,SAAA,qBAA6B;AAChD,QAAM,uBAAuBC;AAC7B,SAAO,eAAeD,UAAS,sBAAsB,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,WAAO,qBAAqB;AAAA,EAAmB,EAAI,CAAA;AAE/I,WAAS,SAAS,KAAK;AACnB,UAAM,EAAE,MAAM,aAAa,UAAS,IAAK;AACzC,QAAI,SAAS;AACb,UAAM,YAAY,MAAMJ,WAAU,MAAM,QAAQ,QAAQ,aAAa;AACjE,YAAM,QAAQ,MAAM,KAAK,SAAS,WAAW;AAC7C,UAAI,UAAU,IAAI;AACd,iBAAS;AAAA,MACZ;AACD,aAAO;AAAA,IACf,CAAK;AAED;AACA,WAAO;AAAA;AAAA,MAEH;AAAA,MACA,OAAO,MAAM;AAAA,MACb,IAAI,OAAO;AACP,iBAAS;AACT,aAAK,SAAS,aAAa,MAAM;AAAA,MACpC;AAAA,IACT;AAAA,EACC;AACD,EAAAI,SAAA,WAAmB;;ACpCnB,IAAIF,oBAAmBD,kBAAQA,eAAK,oBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAC5F,MAAI,OAAO,OAAW,MAAK;AAC3B,MAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,MAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AACjF,WAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,aAAO,EAAE,CAAC;AAAA,IAAE;EAC1D;AACD,SAAO,eAAe,GAAG,IAAI,IAAI;AACrC,IAAM,SAAS,GAAG,GAAG,GAAG,IAAI;AACxB,MAAI,OAAO,OAAW,MAAK;AAC3B,IAAE,EAAE,IAAI,EAAE,CAAC;AACf;AACA,IAAIK,uBAAsBL,kBAAQA,eAAK,uBAAwB,OAAO,SAAU,SAAS,GAAG,GAAG;AAC3F,SAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,EAAC,CAAE;AACtE,IAAK,SAAS,GAAG,GAAG;AAChB,IAAE,SAAS,IAAI;AACnB;AACA,IAAIM,iBAAgBN,kBAAQA,eAAK,gBAAiB,SAAU,KAAK;AAC7D,MAAI,OAAO,IAAI,WAAY,QAAO;AAClC,MAAI,SAAS,CAAA;AACb,MAAI,OAAO;AAAM,aAAS,KAAK,IAAK,KAAI,MAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,EAAGC,mBAAgB,QAAQ,KAAK,CAAC;AAAA;AACvII,uBAAmB,QAAQ,GAAG;AAC9B,SAAO;AACX;AACA,OAAO,eAAe,KAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,IAAc,WAAA,IAAA,SAAkB,IAAA,UAAe,IAAA,OAAe,IAAA,OAAoB,IAAA,YAAG;AACrF,MAAM,YAAYC,eAAaF,WAAsB;AACpC,IAAA,YAAG;AACpB,MAAM,OAAOE,eAAaS,MAAiB;AAC/B,IAAA,OAAG;AACf,MAAM,OAAOT,eAAaU,MAAiB;AAC/B,IAAA,OAAG;AACf,MAAM,UAAUV,eAAaW,MAAoB;AAClC,IAAA,UAAG;AAClB,MAAM,SAASX,eAAaa,QAAoB;AAChD,WAAc,IAAA,SAAG;AC3BjB,MAAA,EAAA,cAA8C,IAAA,QAAA,QAAA;AAE9C,eAAe,QAAQL,MAAa,MAAW;AAC7C,MAAI,WAA2B,MAAM,cAAcA,MAAK,IAAI;AAC5D,MAAI,MAAM,SAAS,SAAS,IAAI,SAAS,OAAO;AACzC,SAAA;AACT;AA8KsB,eAAA,YACpB,UACA,MACA,IAC6B;AAC7B,MAAI,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEF,MAAIA,OAAM;AACH,SAAA,QAAQA,MAAK,OAAO;AAC7B;AAsEA,eAAsB,IAAIM,MAA6B;AACrD,MAAI,UAAU;AAAA,IACZ,MAAMA;AAAAA,EAAA;AAER,MAAIN,OAAM;AACH,SAAA,QAAQA,MAAK,OAAO;AAC7B;ACnRO,MAAM,kBAAkB;AACxB,MAAM,WAAW;ACEF,eAAA,eAEpB,SAC2BO,UAC3B;AACM,QAAA,aAAa,QAAQ,IAAI,CAAC,OAAO,IAAI,EAAE,GAAG,EAAE,KAAK,GAAG;AAE1D,QAAM,YACH,MAAM;AAAA,IACL;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKgB,QAAQ;AAAA;AAAA;AAAA,yBAGL,UAAU;AAAA,cAMjB,EACN;AAAA;AAAA;AAAA,OAGF;AAED,SAAA;AACT;;AClBA,IAAI,gBAAgB,SAAS,GAAGC,IAAG;AACjC,kBAAgB,OAAO,kBAClB,EAAE,WAAW,CAAA,eAAgB,SAAS,SAAUC,IAAGD,IAAG;AAAE,IAAAC,GAAE,YAAYD;AAAA,EAAE,KACzE,SAAUC,IAAGD,IAAG;AAAE,aAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC,EAAG,CAAAC,GAAE,CAAC,IAAID,GAAE,CAAC;AAAA;AACjG,SAAO,cAAc,GAAGA,EAAC;AAC3B;AAEO,SAAS,UAAU,GAAGA,IAAG;AAC9B,MAAI,OAAOA,OAAM,cAAcA,OAAM;AACjC,UAAM,IAAI,UAAU,yBAAyB,OAAOA,EAAC,IAAI,+BAA+B;AAC5F,gBAAc,GAAGA,EAAC;AAClB,WAAS,KAAK;AAAE,SAAK,cAAc;AAAA,EAAI;AACvC,IAAE,YAAYA,OAAM,OAAO,OAAO,OAAOA,EAAC,KAAK,GAAG,YAAYA,GAAE,WAAW,IAAI,GAAI;AACrF;AAEO,IAAI,WAAW,WAAW;AAC/B,aAAW,OAAO,UAAU,SAASE,UAAS,GAAG;AAC7C,aAAS,GAAG,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AACjD,UAAI,UAAU,CAAC;AACf,eAAS,KAAK,EAAG,KAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC,EAAG,GAAE,CAAC,IAAI,EAAE,CAAC;AAAA,IAC9E;AACD,WAAO;AAAA,EACV;AACD,SAAO,SAAS,MAAM,MAAM,SAAS;AACvC;AAEO,SAAS,OAAO,GAAG,GAAG;AAC3B,MAAI,IAAI,CAAA;AACR,WAAS,KAAK,EAAG,KAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI;AAC9E,MAAE,CAAC,IAAI,EAAE,CAAC;AACd,MAAI,KAAK,QAAQ,OAAO,OAAO,0BAA0B;AACrD,aAAS,IAAI,GAAG,IAAI,OAAO,sBAAsB,CAAC,GAAG,IAAI,EAAE,QAAQ,KAAK;AACpE,UAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,UAAU,qBAAqB,KAAK,GAAG,EAAE,CAAC,CAAC;AACzE,UAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAAA,IACvB;AACL,SAAO;AACT;AAEO,SAAS,WAAW,YAAY,QAAQ,KAAK,MAAM;AACxD,MAAI,IAAI,UAAU,QAAQ,IAAI,IAAI,IAAI,SAAS,SAAS,OAAO,OAAO,OAAO,yBAAyB,QAAQ,GAAG,IAAI,MAAM;AAC3H,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa,WAAY,KAAI,QAAQ,SAAS,YAAY,QAAQ,KAAK,IAAI;AAAA,MACxH,UAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,IAAK,KAAI,IAAI,WAAW,CAAC,EAAG,MAAK,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,IAAI,EAAE,QAAQ,KAAK,CAAC,IAAI,EAAE,QAAQ,GAAG,MAAM;AAChJ,SAAO,IAAI,KAAK,KAAK,OAAO,eAAe,QAAQ,KAAK,CAAC,GAAG;AAC9D;AAEO,SAAS,QAAQ,YAAYjB,YAAW;AAC7C,SAAO,SAAU,QAAQ,KAAK;AAAE,IAAAA,WAAU,QAAQ,KAAK,UAAU;AAAA,EAAI;AACvE;AAEO,SAAS,aAAa,MAAM,cAAc,YAAY,WAAW,cAAc,mBAAmB;AACvG,WAAS,OAAO,GAAG;AAAE,QAAI,MAAM,UAAU,OAAO,MAAM,WAAY,OAAM,IAAI,UAAU,mBAAmB;AAAG,WAAO;AAAA,EAAI;AACvH,MAAI,OAAO,UAAU,MAAM,MAAM,SAAS,WAAW,QAAQ,SAAS,WAAW,QAAQ;AACzF,MAAI,SAAS,CAAC,gBAAgB,OAAO,UAAU,QAAQ,IAAI,OAAO,KAAK,YAAY;AACnF,MAAI,aAAa,iBAAiB,SAAS,OAAO,yBAAyB,QAAQ,UAAU,IAAI,IAAI,CAAA;AACrG,MAAI,GAAG,OAAO;AACd,WAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,KAAK;AAC7C,QAAI,UAAU,CAAA;AACd,aAAS,KAAK,UAAW,SAAQ,CAAC,IAAI,MAAM,WAAW,CAAA,IAAK,UAAU,CAAC;AACvE,aAAS,KAAK,UAAU,OAAQ,SAAQ,OAAO,CAAC,IAAI,UAAU,OAAO,CAAC;AACtE,YAAQ,iBAAiB,SAAU,GAAG;AAAE,UAAI,KAAM,OAAM,IAAI,UAAU,wDAAwD;AAAG,wBAAkB,KAAK,OAAO,KAAK,IAAI,CAAC;AAAA;AACzK,QAAI,UAAS,GAAI,WAAW,CAAC,GAAG,SAAS,aAAa,EAAE,KAAK,WAAW,KAAK,KAAK,WAAW,IAAG,IAAK,WAAW,GAAG,GAAG,OAAO;AAC7H,QAAI,SAAS,YAAY;AACrB,UAAI,WAAW,OAAQ;AACvB,UAAI,WAAW,QAAQ,OAAO,WAAW,SAAU,OAAM,IAAI,UAAU,iBAAiB;AACxF,UAAI,IAAI,OAAO,OAAO,GAAG,EAAG,YAAW,MAAM;AAC7C,UAAI,IAAI,OAAO,OAAO,GAAG,EAAG,YAAW,MAAM;AAC7C,UAAI,IAAI,OAAO,OAAO,IAAI,EAAG,cAAa,QAAQ,CAAC;AAAA,IACtD,WACQ,IAAI,OAAO,MAAM,GAAG;AACzB,UAAI,SAAS,QAAS,cAAa,QAAQ,CAAC;AAAA,UACvC,YAAW,GAAG,IAAI;AAAA,IAC1B;AAAA,EACJ;AACD,MAAI,OAAQ,QAAO,eAAe,QAAQ,UAAU,MAAM,UAAU;AACpE,SAAO;AACT;AAEO,SAAS,kBAAkB,SAAS,cAAc,OAAO;AAC9D,MAAI,WAAW,UAAU,SAAS;AAClC,WAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC1C,YAAQ,WAAW,aAAa,CAAC,EAAE,KAAK,SAAS,KAAK,IAAI,aAAa,CAAC,EAAE,KAAK,OAAO;AAAA,EACzF;AACD,SAAO,WAAW,QAAQ;AAC5B;AAEO,SAAS,UAAU,GAAG;AAC3B,SAAO,OAAO,MAAM,WAAW,IAAI,GAAG,OAAO,CAAC;AAChD;AAEO,SAAS,kBAAkB,GAAG,MAAM,QAAQ;AACjD,MAAI,OAAO,SAAS,SAAU,QAAO,KAAK,cAAc,IAAI,OAAO,KAAK,aAAa,GAAG,IAAI;AAC5F,SAAO,OAAO,eAAe,GAAG,QAAQ,EAAE,cAAc,MAAM,OAAO,SAAS,GAAG,OAAO,QAAQ,KAAK,IAAI,IAAI,KAAI,CAAE;AACrH;AAEO,SAAS,WAAW,aAAa,eAAe;AACrD,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa,WAAY,QAAO,QAAQ,SAAS,aAAa,aAAa;AAC/H;AAEO,SAAS,UAAU,SAAS,YAAY,GAAG,WAAW;AAC3D,WAAS,MAAM,OAAO;AAAE,WAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,SAAS;AAAE,cAAQ,KAAK;AAAA,IAAE,CAAE;AAAA,EAAI;AAC5G,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAAE,SAAU,GAAG;AAAE,eAAO,CAAC;AAAA;IAAM;AAC3F,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,MAAI,SAAQ,GAAG;AAAE,eAAO,CAAC;AAAA;IAAM;AAC9F,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK,WAAW,QAAQ;AAAA,IAAI;AAC9G,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAE,CAAA,GAAG,KAAI,CAAE;AAAA,EAC1E,CAAG;AACH;AAEO,SAAS,YAAY,SAASkB,OAAM;AACzC,MAAI,IAAI,EAAE,OAAO,GAAG,MAAM,WAAW;AAAE,QAAI,EAAE,CAAC,IAAI,EAAG,OAAM,EAAE,CAAC;AAAG,WAAO,EAAE,CAAC;AAAA,EAAI,GAAE,MAAM,CAAE,GAAE,KAAK,CAAA,EAAI,GAAE,GAAG,GAAG,GAAG;AAC/G,SAAO,IAAI,EAAE,MAAM,KAAK,CAAC,GAAG,SAAS,KAAK,CAAC,GAAG,UAAU,KAAK,CAAC,EAAG,GAAE,OAAO,WAAW,eAAe,EAAE,OAAO,QAAQ,IAAI,WAAW;AAAE,WAAO;AAAA,EAAO,IAAG;AACvJ,WAAS,KAAK,GAAG;AAAE,WAAO,SAAU,GAAG;AAAE,aAAO,KAAK,CAAC,GAAG,CAAC,CAAC;AAAA,IAAI;AAAA,EAAG;AAClE,WAAS,KAAK,IAAI;AACd,QAAI,EAAG,OAAM,IAAI,UAAU,iCAAiC;AAC5D,WAAO,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,IAAI,KAAK,EAAG,KAAI;AAC1C,UAAI,IAAI,GAAG,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,OAAO,IAAI,EAAE,QAAQ,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG,KAAM,QAAO;AAC3J,UAAI,IAAI,GAAG,EAAG,MAAK,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK;AACtC,cAAQ,GAAG,CAAC,GAAC;AAAA,QACT,KAAK;AAAA,QAAG,KAAK;AAAG,cAAI;AAAI;AAAA,QACxB,KAAK;AAAG,YAAE;AAAS,iBAAO,EAAE,OAAO,GAAG,CAAC,GAAG,MAAM,MAAK;AAAA,QACrD,KAAK;AAAG,YAAE;AAAS,cAAI,GAAG,CAAC;AAAG,eAAK,CAAC,CAAC;AAAG;AAAA,QACxC,KAAK;AAAG,eAAK,EAAE,IAAI;AAAO,YAAE,KAAK,IAAG;AAAI;AAAA,QACxC;AACI,cAAI,EAAE,IAAI,EAAE,MAAM,IAAI,EAAE,SAAS,KAAK,EAAE,EAAE,SAAS,CAAC,OAAO,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI;AAAE,gBAAI;AAAG;AAAA,UAAW;AAC5G,cAAI,GAAG,CAAC,MAAM,MAAM,CAAC,KAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,IAAK;AAAE,cAAE,QAAQ,GAAG,CAAC;AAAG;AAAA,UAAQ;AACtF,cAAI,GAAG,CAAC,MAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,cAAE,QAAQ,EAAE,CAAC;AAAG,gBAAI;AAAI;AAAA,UAAQ;AACrE,cAAI,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,cAAE,QAAQ,EAAE,CAAC;AAAG,cAAE,IAAI,KAAK,EAAE;AAAG;AAAA,UAAQ;AACnE,cAAI,EAAE,CAAC,EAAG,GAAE,IAAI,IAAG;AACnB,YAAE,KAAK,IAAK;AAAE;AAAA,MACrB;AACD,WAAKA,MAAK,KAAK,SAAS,CAAC;AAAA,IAC5B,SAAQ,GAAG;AAAE,WAAK,CAAC,GAAG,CAAC;AAAG,UAAI;AAAA,IAAE,UAAW;AAAE,UAAI,IAAI;AAAA,IAAI;AAC1D,QAAI,GAAG,CAAC,IAAI,EAAG,OAAM,GAAG,CAAC;AAAG,WAAO,EAAE,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,MAAM;EAC7E;AACH;AAEO,IAAI,kBAAkB,OAAO,SAAU,SAAS,GAAG,GAAG,GAAG,IAAI;AAClE,MAAI,OAAO,OAAW,MAAK;AAC3B,MAAI,OAAO,OAAO,yBAAyB,GAAG,CAAC;AAC/C,MAAI,CAAC,SAAS,SAAS,OAAO,CAAC,EAAE,aAAa,KAAK,YAAY,KAAK,eAAe;AAC/E,WAAO,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,aAAO,EAAE,CAAC;AAAA,IAAE;EAC5D;AACD,SAAO,eAAe,GAAG,IAAI,IAAI;AACnC,IAAM,SAAS,GAAG,GAAG,GAAG,IAAI;AAC1B,MAAI,OAAO,OAAW,MAAK;AAC3B,IAAE,EAAE,IAAI,EAAE,CAAC;AACb;AAEO,SAAS,aAAa,GAAG,GAAG;AACjC,WAAS,KAAK,EAAG,KAAI,MAAM,aAAa,CAAC,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC,EAAG,iBAAgB,GAAG,GAAG,CAAC;AAC9G;AAEO,SAAS,SAAS,GAAG;AAC1B,MAAI,IAAI,OAAO,WAAW,cAAc,OAAO,UAAU,IAAI,KAAK,EAAE,CAAC,GAAG,IAAI;AAC5E,MAAI,EAAG,QAAO,EAAE,KAAK,CAAC;AACtB,MAAI,KAAK,OAAO,EAAE,WAAW,SAAU,QAAO;AAAA,IAC1C,MAAM,WAAY;AACd,UAAI,KAAK,KAAK,EAAE,OAAQ,KAAI;AAC5B,aAAO,EAAE,OAAO,KAAK,EAAE,GAAG,GAAG,MAAM,CAAC;IACvC;AAAA,EACP;AACE,QAAM,IAAI,UAAU,IAAI,4BAA4B,iCAAiC;AACvF;AAEO,SAAS,OAAO,GAAG,GAAG;AAC3B,MAAI,IAAI,OAAO,WAAW,cAAc,EAAE,OAAO,QAAQ;AACzD,MAAI,CAAC,EAAG,QAAO;AACf,MAAI,IAAI,EAAE,KAAK,CAAC,GAAG,GAAG,KAAK,CAAE,GAAE;AAC/B,MAAI;AACA,YAAQ,MAAM,UAAU,MAAM,MAAM,EAAE,IAAI,EAAE,KAAM,GAAE,KAAM,IAAG,KAAK,EAAE,KAAK;AAAA,EAC5E,SACM,OAAO;AAAE,QAAI,EAAE,MAAc;AAAA,EAAG,UAC/B;AACJ,QAAI;AACA,UAAI,KAAK,CAAC,EAAE,SAAS,IAAI,EAAE,QAAQ,GAAI,GAAE,KAAK,CAAC;AAAA,IAClD,UACO;AAAE,UAAI,EAAG,OAAM,EAAE;AAAA,IAAQ;AAAA,EACpC;AACD,SAAO;AACT;AAGO,SAAS,WAAW;AACzB,WAAS,KAAK,CAAA,GAAI,IAAI,GAAG,IAAI,UAAU,QAAQ;AAC3C,SAAK,GAAG,OAAO,OAAO,UAAU,CAAC,CAAC,CAAC;AACvC,SAAO;AACT;AAGO,SAAS,iBAAiB;AAC/B,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK,UAAU,QAAQ,IAAI,IAAI,IAAK,MAAK,UAAU,CAAC,EAAE;AAC7E,WAAS,IAAI,MAAM,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI;AACzC,aAAS,IAAI,UAAU,CAAC,GAAG,IAAI,GAAG,KAAK,EAAE,QAAQ,IAAI,IAAI,KAAK;AAC1D,QAAE,CAAC,IAAI,EAAE,CAAC;AAClB,SAAO;AACT;AAEO,SAAS,cAAc,IAAI,MAAM,MAAM;AAC5C,MAAI,QAAQ,UAAU,WAAW,EAAG,UAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,IAAI,GAAG,KAAK;AACjF,QAAI,MAAM,EAAE,KAAK,OAAO;AACpB,UAAI,CAAC,GAAI,MAAK,MAAM,UAAU,MAAM,KAAK,MAAM,GAAG,CAAC;AACnD,SAAG,CAAC,IAAI,KAAK,CAAC;AAAA,IACjB;AAAA,EACJ;AACD,SAAO,GAAG,OAAO,MAAM,MAAM,UAAU,MAAM,KAAK,IAAI,CAAC;AACzD;AAEO,SAAS,QAAQ,GAAG;AACzB,SAAO,gBAAgB,WAAW,KAAK,IAAI,GAAG,QAAQ,IAAI,QAAQ,CAAC;AACrE;AAEO,SAAS,iBAAiB,SAAS,YAAY,WAAW;AAC/D,MAAI,CAAC,OAAO,cAAe,OAAM,IAAI,UAAU,sCAAsC;AACrF,MAAI,IAAI,UAAU,MAAM,SAAS,cAAc,CAAA,CAAE,GAAG,GAAG,IAAI;AAC3D,SAAO,IAAI,CAAE,GAAE,KAAK,MAAM,GAAG,KAAK,OAAO,GAAG,KAAK,UAAU,WAAW,GAAG,EAAE,OAAO,aAAa,IAAI,WAAY;AAAE,WAAO;AAAA,EAAO,GAAE;AACjI,WAAS,YAAY,GAAG;AAAE,WAAO,SAAU,GAAG;AAAE,aAAO,QAAQ,QAAQ,CAAC,EAAE,KAAK,GAAG,MAAM;AAAA,IAAI;AAAA,EAAG;AAC/F,WAAS,KAAK,GAAG,GAAG;AAAE,QAAI,EAAE,CAAC,GAAG;AAAE,QAAE,CAAC,IAAI,SAAU,GAAG;AAAE,eAAO,IAAI,QAAQ,SAAU,GAAGH,IAAG;AAAE,YAAE,KAAK,CAAC,GAAG,GAAG,GAAGA,EAAC,CAAC,IAAI,KAAK,OAAO,GAAG,CAAC;AAAA,SAAI;AAAA,MAAI;AAAE,UAAI,EAAG,GAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAAA;EAAM;AACxK,WAAS,OAAO,GAAG,GAAG;AAAE,QAAI;AAAE,WAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AAAA,IAAE,SAAU,GAAG;AAAE,aAAO,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;AAAA;EAAM;AAClF,WAAS,KAAK,GAAG;AAAE,MAAE,iBAAiB,UAAU,QAAQ,QAAQ,EAAE,MAAM,CAAC,EAAE,KAAK,SAAS,MAAM,IAAI,OAAO,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;AAAA,EAAI;AACxH,WAAS,QAAQ,OAAO;AAAE,WAAO,QAAQ,KAAK;AAAA,EAAI;AAClD,WAAS,OAAO,OAAO;AAAE,WAAO,SAAS,KAAK;AAAA,EAAI;AAClD,WAAS,OAAO,GAAG,GAAG;AAAE,QAAI,EAAE,CAAC,GAAG,EAAE,MAAK,GAAI,EAAE,OAAQ,QAAO,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;AAAA,EAAI;AACpF;AAEO,SAAS,iBAAiB,GAAG;AAClC,MAAI,GAAG;AACP,SAAO,IAAI,CAAA,GAAI,KAAK,MAAM,GAAG,KAAK,SAAS,SAAU,GAAG;AAAE,UAAM;AAAA,EAAE,CAAE,GAAG,KAAK,QAAQ,GAAG,EAAE,OAAO,QAAQ,IAAI,WAAY;AAAE,WAAO;AAAA,EAAO,GAAE;AAC1I,WAAS,KAAK,GAAG,GAAG;AAAE,MAAE,CAAC,IAAI,EAAE,CAAC,IAAI,SAAU,GAAG;AAAE,cAAQ,IAAI,CAAC,KAAK,EAAE,OAAO,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,MAAO,IAAG,IAAI,EAAE,CAAC,IAAI;AAAA,IAAE,IAAK;AAAA,EAAI;AACxI;AAEO,SAAS,cAAc,GAAG;AAC/B,MAAI,CAAC,OAAO,cAAe,OAAM,IAAI,UAAU,sCAAsC;AACrF,MAAI,IAAI,EAAE,OAAO,aAAa,GAAG;AACjC,SAAO,IAAI,EAAE,KAAK,CAAC,KAAK,IAAI,OAAO,aAAa,aAAa,SAAS,CAAC,IAAI,EAAE,OAAO,QAAQ,EAAC,GAAI,IAAI,CAAE,GAAE,KAAK,MAAM,GAAG,KAAK,OAAO,GAAG,KAAK,QAAQ,GAAG,EAAE,OAAO,aAAa,IAAI,WAAY;AAAE,WAAO;AAAA,EAAK,GAAI;AAC9M,WAAS,KAAK,GAAG;AAAE,MAAE,CAAC,IAAI,EAAE,CAAC,KAAK,SAAU,GAAG;AAAE,aAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAAE,YAAI,EAAE,CAAC,EAAE,CAAC,GAAG,OAAO,SAAS,QAAQ,EAAE,MAAM,EAAE,KAAK;AAAA,MAAE,CAAE;AAAA,IAAI;AAAA,EAAG;AAChK,WAAS,OAAO,SAAS,QAAQ,GAAG,GAAG;AAAE,YAAQ,QAAQ,CAAC,EAAE,KAAK,SAASI,IAAG;AAAE,cAAQ,EAAE,OAAOA,IAAG,MAAM,EAAC,CAAE;AAAA,IAAE,GAAI,MAAM;AAAA,EAAI;AAC9H;AAEO,SAAS,qBAAqB,QAAQ,KAAK;AAChD,MAAI,OAAO,gBAAgB;AAAE,WAAO,eAAe,QAAQ,OAAO,EAAE,OAAO,IAAG,CAAE;AAAA,EAAI,OAAM;AAAE,WAAO,MAAM;AAAA,EAAM;AAC/G,SAAO;AACT;AAEA,IAAI,qBAAqB,OAAO,SAAU,SAAS,GAAG,GAAG;AACvD,SAAO,eAAe,GAAG,WAAW,EAAE,YAAY,MAAM,OAAO,EAAC,CAAE;AACpE,IAAK,SAAS,GAAG,GAAG;AAClB,IAAE,SAAS,IAAI;AACjB;AAEO,SAAS,aAAa,KAAK;AAChC,MAAI,OAAO,IAAI,WAAY,QAAO;AAClC,MAAI,SAAS,CAAA;AACb,MAAI,OAAO;AAAM,aAAS,KAAK,IAAK,KAAI,MAAM,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,EAAG,iBAAgB,QAAQ,KAAK,CAAC;AAAA;AACvI,qBAAmB,QAAQ,GAAG;AAC9B,SAAO;AACT;AAEO,SAAS,gBAAgB,KAAK;AACnC,SAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,SAAS;AACpD;AAEO,SAAS,uBAAuB,UAAU,OAAO,MAAM,GAAG;AAC/D,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,0EAA0E;AACjL,SAAO,SAAS,MAAM,IAAI,SAAS,MAAM,EAAE,KAAK,QAAQ,IAAI,IAAI,EAAE,QAAQ,MAAM,IAAI,QAAQ;AAC9F;AAEO,SAAS,uBAAuB,UAAU,OAAO,OAAO,MAAM,GAAG;AACtE,MAAI,SAAS,IAAK,OAAM,IAAI,UAAU,gCAAgC;AACtE,MAAI,SAAS,OAAO,CAAC,EAAG,OAAM,IAAI,UAAU,+CAA+C;AAC3F,MAAI,OAAO,UAAU,aAAa,aAAa,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAG,OAAM,IAAI,UAAU,yEAAyE;AAChL,SAAQ,SAAS,MAAM,EAAE,KAAK,UAAU,KAAK,IAAI,IAAI,EAAE,QAAQ,QAAQ,MAAM,IAAI,UAAU,KAAK,GAAI;AACtG;AAEO,SAAS,sBAAsB,OAAO,UAAU;AACrD,MAAI,aAAa,QAAS,OAAO,aAAa,YAAY,OAAO,aAAa,WAAa,OAAM,IAAI,UAAU,wCAAwC;AACvJ,SAAO,OAAO,UAAU,aAAa,aAAa,QAAQ,MAAM,IAAI,QAAQ;AAC9E;AAEO,SAAS,wBAAwB,KAAK,OAAO,OAAO;AACzD,MAAI,UAAU,QAAQ,UAAU,QAAQ;AACtC,QAAI,OAAO,UAAU,YAAY,OAAO,UAAU,WAAY,OAAM,IAAI,UAAU,kBAAkB;AACpG,QAAI,SAAS;AACb,QAAI,OAAO;AACT,UAAI,CAAC,OAAO,aAAc,OAAM,IAAI,UAAU,qCAAqC;AACnF,gBAAU,MAAM,OAAO,YAAY;AAAA,IACpC;AACD,QAAI,YAAY,QAAQ;AACtB,UAAI,CAAC,OAAO,QAAS,OAAM,IAAI,UAAU,gCAAgC;AACzE,gBAAU,MAAM,OAAO,OAAO;AAC9B,UAAI,MAAO,SAAQ;AAAA,IACpB;AACD,QAAI,OAAO,YAAY,WAAY,OAAM,IAAI,UAAU,wBAAwB;AAC/E,QAAI,MAAO,WAAU,WAAW;AAAE,UAAI;AAAE,cAAM,KAAK,IAAI;AAAA,MAAI,SAAQ,GAAG;AAAE,eAAO,QAAQ,OAAO,CAAC;AAAA,MAAE;AAAA;AACjG,QAAI,MAAM,KAAK,EAAE,OAAc,SAAkB,MAAY,CAAE;AAAA,EAChE,WACQ,OAAO;AACd,QAAI,MAAM,KAAK,EAAE,OAAO,KAAM,CAAA;AAAA,EAC/B;AACD,SAAO;AACT;AAEA,IAAI,mBAAmB,OAAO,oBAAoB,aAAa,kBAAkB,SAAU,OAAO,YAAY,SAAS;AACrH,MAAI,IAAI,IAAI,MAAM,OAAO;AACzB,SAAO,EAAE,OAAO,mBAAmB,EAAE,QAAQ,OAAO,EAAE,aAAa,YAAY;AACjF;AAEO,SAAS,mBAAmB,KAAK;AACtC,WAAS,KAAK,GAAG;AACf,QAAI,QAAQ,IAAI,WAAW,IAAI,iBAAiB,GAAG,IAAI,OAAO,0CAA0C,IAAI;AAC5G,QAAI,WAAW;AAAA,EAChB;AACD,WAAS,OAAO;AACd,WAAO,IAAI,MAAM,QAAQ;AACvB,UAAI,MAAM,IAAI,MAAM,IAAG;AACvB,UAAI;AACF,YAAI,SAAS,IAAI,WAAW,IAAI,QAAQ,KAAK,IAAI,KAAK;AACtD,YAAI,IAAI,MAAO,QAAO,QAAQ,QAAQ,MAAM,EAAE,KAAK,MAAM,SAAS,GAAG;AAAE,eAAK,CAAC;AAAG,iBAAO,KAAI;AAAA,QAAG,CAAE;AAAA,MACjG,SACM,GAAG;AACN,aAAK,CAAC;AAAA,MACT;AAAA,IACF;AACD,QAAI,IAAI,SAAU,OAAM,IAAI;AAAA,EAC7B;AACD,SAAO,KAAI;AACb;AAEA,MAAe,YAAA;AAAA,EACb;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpXA,MAAe,wBAAA,CAAA;;;;;;;;;;;;;;ACCf,SAAO,eAAe,QAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC/B,SAAA,wBAAG;AAChC,MAAI,UAAU;AACd,MAAI,UAAU,QAAQ,gBAAgBX,aAAkB,CAAA;AACxD,WAAS,UAAUY,OAAM;AACrB,QAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,QAAI,OAAOC,OAAM;AACjB,QAAI,UAAUA,OAAM;AACpB,QAAI,WAAW,QAAQ;AAGvB,aAAS,IAAI,MAAM;AACf,aAAO,KAAK,KAAK,SAAU,OAAO;AAAE,eAAO,SAAS,MAAM,KAAK,KAAK,SAAS;AAAA,MAAK,GAAI,WAAW,SAAS,IAAI;AAAA,IACjH;AAID,QAAI,WAAW;AAAA;AAAA;AAAA;AAAA,MAIX,QAAQ,WAAY;AAAE,eAAO;AAAA,MAAO;AAAA,MACpC,cAAc,WAAY;AAAE,eAAO,CAAA;AAAA,MAAK;AAAA,MACxC,SAAS,WAAY;AAAE,eAAO;AAAA,MAAQ;AAAA,MACtC,QAAQ,WAAY;AAAE,eAAO;AAAA,MAAO;AAAA,MACpC,aAAa,WAAY;AAAA,MAAG;AAAA,MAC5B,cAAc,WAAY;AAAE,eAAO;AAAA,MAAe;AAAA,IAC1D;AACI,QAAI,mBAAmB,KAAK,GAAG,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,MAAM,QAAQ,SAAS;AAC/G,QAAI,cAAc,KAAK,KAAK,SAAU,OAAO;AACzC,UAAI,UAAU;AACV,eAAO;AACX,UAAI,OAAO,OAAO;AAClB,UAAI,SAAS,YACT,SAAS,YAAY;AACrB,eAAO;AAAA,MACV;AACD,aAAO;AAAA,IACf,GAAO,iBAAiB,SAAQ,CAAE;AAC9B,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,IACR;AAAA,EACC;AACc,SAAA,UAAG;AAWlB,WAAS,sBAAsB,cAAc;AACzC,QAAI;AACA,UAAI,aAAa;AACjB,UAAI,kBAAkB,WAAW;AACjC,UAAI,gBAAgB,gBAAgB,SAAS;AAAA,IAChD,SACM,IAAI;AAOP;AAAA,IACH;AACD,QAAI,iBACA,kBAAkB,mBAClB,OAAO,oBAAoB,UAAU;AAIrC,aAAO,OAAO,eAAe,iBAAiB,EAAE,WAAW,cAAa,CAAE;AAG1E,UAAI,gBAAgB,YAAY;AAC5B,eAAO,eAAe,eAAe,cAAc,EAAE,OAAO,KAAI,CAAE;AAAA,MACrE;AAGD,iBAAW,UAAU;AAAA,IACxB;AAAA,EACJ;AAC4B,SAAA,wBAAG;;;;;;;;;ACxFhC,WAAO,eAAczB,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,IAAAA,SAAc,MAAA;AACd,QAAI,UAAU;AACd,QAAI,WAAWY;AACf,QAAI,KAAK,OAAO;AAChB,QAAI,WAAW,GAAG;AAClB,QAAI,SAAS,GAAG;AAChB,QAAI;AAAA;AAAA,MAA0B,WAAY;AACtC,iBAASc,YAAW;AAAA,QACnB;AACD,QAAAA,UAAS,UAAU,SAAS,SAAU,OAAO,MAAM;AAC/C,cAAI,CAAC,KAAK,MAAM,OAAO,IAAI,GAAG;AAC1B,gBAAI,MAAM,iBAAiB,KAAK;AAChC,kBAAM,IAAI,MAAM,MAAM,0BAA0B,IAAI;AAAA,UACvD;AACD,iBAAO;AAAA,QACf;AACI,QAAAA,UAAS,UAAU,UAAU,WAAY;AACrC,cAAI,WAAW;AACf,iBAAO,IAAI,UAAU,QAAQ;AAAA,QACrC;AACI,eAAOA;AAAA,MACV,EAAA;AAAA;AACD,QAAI;AAAA;AAAA,MAA2B,SAAU,QAAQ;AAC7C,gBAAQ,UAAUC,YAAW,MAAM;AACnC,iBAASA,WAAU,UAAU;AACzB,cAAI,QAAQ,OAAO,KAAK,IAAI,KAAK;AACjC,gBAAM,WAAW;AACjB,gBAAM,OAAO;AACb,iBAAO;AAAA,QACV;AACD,QAAAA,WAAU,UAAU,WAAW,WAAY;AACvC,iBAAO,MAAM,KAAK,WAAW;AAAA,QACrC;AACI,QAAAA,WAAU,UAAU,QAAQ,SAAU,OAAO,MAAM;AAC/C,cAAI,QAAQ;AACZ,iBAAO,MAAM,QAAQ,KAAK,KAAK,MAAM,MAAM,SAAU,MAAM;AAAE,mBAAO,MAAM,SAAS,MAAM,MAAM,IAAI;AAAA,UAAE,CAAE;AAAA,QAC/G;AACI,eAAOA;AAAA,MACX,EAAE,QAAQ;AAAA;AACV,QAAI;AAAA;AAAA,MAA8B,SAAU,QAAQ;AAChD,gBAAQ,UAAUC,eAAc,MAAM;AACtC,iBAASA,cAAa,OAAO;AACzB,cAAI,QAAQ,OAAO,KAAK,IAAI,KAAK;AACjC,gBAAM,QAAQ;AACd,gBAAM,OAAO;AACb,iBAAO;AAAA,QACV;AACD,QAAAA,cAAa,UAAU,WAAW,WAAY;AAC1C,iBAAO,OAAO,KAAK,KAAK;AAAA,QAChC;AACI,QAAAA,cAAa,UAAU,QAAQ,SAAU,OAAO,MAAM;AAClD,cAAI,SAAS,UAAU,KAAK;AAC5B,cAAI,CAAC,UAAU,OAAO,SAAS,YAAY;AACvC,iBAAK,MAAM,KAAK;AAAA,UACnB;AACD,iBAAO;AAAA,QACf;AACI,eAAOA;AAAA,MACX,EAAE,QAAQ;AAAA;AACV,QAAI;AAAA;AAAA,MAA4B,SAAU,QAAQ;AAC9C,gBAAQ,UAAUC,aAAY,MAAM;AACpC,iBAASA,YAAW,QAAQ;AACxB,cAAI,QAAQ,OAAO,KAAK,IAAI,KAAK;AACjC,gBAAM,SAAS;AACf,gBAAM,OAAO;AACb,iBAAO;AAAA,QACV;AACD,QAAAA,YAAW,UAAU,WAAW,WAAY;AACxC,iBAAO,OAAO,KAAK,OAAO,KAAK,IAAI,IAAI;AAAA,QAC/C;AACI,QAAAA,YAAW,UAAU,QAAQ,SAAU,OAAO,MAAM;AAChD,iBAAQ,SAAS,KAAK,KAAK,MAAM,SAAS,KAAK,EAAE,KAC7C,KAAK,OAAO,MAAM,SAAU,OAAO;AAC/B,mBAAO,MAAM,KAAK,MAAM,MAAM,MAAM,IAAI,GAAG,IAAI;AAAA,UAC/D,CAAa;AAAA,QACb;AACI,eAAOA;AAAA,MACX,EAAE,QAAQ;AAAA;AACV,QAAI;AAAA;AAAA,MAAwB,SAAU,QAAQ;AAC1C,gBAAQ,UAAUC,SAAQ,MAAM;AAChC,iBAASA,QAAOL,QAAO;AACnB,cAAI,QAAQ,OAAO,KAAK,IAAI,KAAK;AACjC,gBAAM,QAAQA;AACd,gBAAM,OAAO;AACb,iBAAO;AAAA,QACV;AACD,QAAAK,QAAO,UAAU,WAAW,WAAY;AACpC,iBAAO,KAAK,MAAM,KAAK,KAAK;AAAA,QACpC;AACI,QAAAA,QAAO,UAAU,QAAQ,SAAU,OAAO,MAAM;AAC5C,cAAI,KAAK,MAAM,KAAK,SAAU,MAAM;AAAE,mBAAO,KAAK,MAAM,OAAO,CAAC,CAAC,IAAI;AAAA,UAAI,CAAA,GAAG;AACxE,mBAAO;AAAA,UACV;AACD,cAAI,OAAO,SAAS,YAAY;AAC5B,iBAAK,MAAM,KAAK;AAAA,UACnB;AACD,iBAAO;AAAA,QACf;AACI,eAAOA;AAAA,MACX,EAAE,QAAQ;AAAA;AACV,QAAI;AAAA;AAAA,MAA+B,SAAU,QAAQ;AACjD,gBAAQ,UAAUC,gBAAe,MAAM;AACvC,iBAASA,eAAc,MAAM,WAAW;AACpC,cAAI,QAAQ,OAAO,KAAK,IAAI,KAAK;AACjC,gBAAM,OAAO;AACb,gBAAM,YAAY;AAClB,gBAAM,OAAO;AACb,iBAAO;AAAA,QACV;AACD,QAAAA,eAAc,UAAU,WAAW,WAAY;AAC3C,iBAAO,KAAK;AAAA,QACpB;AACI,QAAAA,eAAc,UAAU,QAAQ,SAAU,OAAO,MAAM;AACnD,cAAI,SAAS,KAAK,UAAU,OAAO,IAAI;AACvC,cAAI,CAAC,UAAU,OAAO,SAAS,YAAY;AACvC,iBAAK,MAAM,KAAK;AAAA,UACnB;AACD,iBAAO;AAAA,QACf;AACI,eAAOA;AAAA,MACX,EAAE,QAAQ;AAAA;AACV,QAAI;AAAA;AAAA,MAAqB,WAAY;AACjC,iBAASC,KAAI,MAAM,UAAU;AACzB,eAAK,OAAO;AACZ,eAAK,WAAW;AAChB,eAAK,YAAY;AACjB,eAAK,YAAY,uBAAO,OAAO,IAAI;AAEnC,eAAK,gBAAgB,uBAAO,OAAO,IAAI;AAEvC,eAAK,gBAAgB;AAErB,eAAK,YAAY,uBAAO,OAAO,IAAI;AAEnC,eAAK,aAAa;AAGlB,eAAK,YAAY;AAEjB,eAAK,YAAY;AACjB,eAAK,cAAc;QACtB;AACD,QAAAA,KAAI,UAAU,gBAAgB,SAAU,MAAM;AAC1C,cAAI,gBAAgBA,MAAK;AACrB,gBAAI,KAAK,cAAc,QACnB,KAAK,cAAc,MAAM;AACzB,oBAAM,IAAI,MAAM,EAAE;AAAA,YACrB;AACD,mBAAO,OAAO,KAAK,KAAK,eAAe,KAAK,QAAQ;AAAA,UACvD,OACI;AACD,kBAAM,IAAI,MAAM,OAAO,eAAe;AAAA,UACzC;AAAA,QACT;AACI,QAAAA,KAAI,UAAU,iBAAiB,SAAU,OAAO,MAAM;AAClD,cAAI,YAAY,KAAK;AACrB,cAAI,KAAK,cAAc,MAAM;AACzB,kBAAM,IAAI,MAAM,KAAK,KAAK,QAAQ;AAAA,UACrC;AACD,mBAAS,iBAAiB,MAAM;AAC5B,gBAAI,QAAQ,UAAU,IAAI;AAC1B,gBAAI,OAAO,MAAM;AACjB,gBAAI,QAAQ,MAAM,SAAS,KAAK;AAChC,mBAAO,KAAK,MAAM,OAAO,IAAI;AAAA,UAChC;AACD,iBAAO,UAAU,QACb,OAAO,UAAU,YACjB,OAAO,KAAK,SAAS,EAAE,MAAM,gBAAgB;AAAA,QACzD;AACI,QAAAA,KAAI,UAAU,QAAQ,WAAY;AAC9B,cAAI,iBAAiB,CAAA;AACrB,mBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,2BAAe,EAAE,IAAI,UAAU,EAAE;AAAA,UACpC;AACD,cAAI,QAAQ,KAAK;AACjB,cAAI,KAAK,WAAW;AAChB,gBAAI,eAAe,WAAW,MAAM,QAAQ;AACxC,oBAAM,IAAI,MAAM,EAAE;AAAA,YACrB;AACD,qBAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC5C,kBAAI,eAAe,CAAC,MAAM,MAAM,CAAC,GAAG;AAChC,sBAAM,IAAI,MAAM,EAAE;AAAA,cACrB;AAAA,YACJ;AACD,mBAAO;AAAA,UACV;AACD,yBAAe,QAAQ,SAAU,UAAU;AAGvC,gBAAI,MAAM,QAAQ,QAAQ,IAAI,GAAG;AAC7B,oBAAM,KAAK,QAAQ;AAAA,YACtB;AAAA,UACb,CAAS;AACD,iBAAO;AAAA,QACf;AACI,eAAOA;AAAA,MACV,EAAA;AAAA;AACD,IAAAhC,SAAA,MAAc;AACd,QAAI;AAAA;AAAA,MAAuB,WAAY;AACnC,iBAASiC,OAAM,MAAM,MAAM,WAAW,QAAQ;AAC1C,eAAK,OAAO;AACZ,eAAK,OAAO;AACZ,eAAK,YAAY;AACjB,eAAK,SAAS,CAAC,CAAC;AAAA,QACnB;AACD,QAAAA,OAAM,UAAU,WAAW,WAAY;AACnC,iBAAO,KAAK,UAAU,KAAK,IAAI,IAAI,OAAO,KAAK;AAAA,QACvD;AACI,QAAAA,OAAM,UAAU,WAAW,SAAU,KAAK;AACtC,cAAI,QAAQ,IAAI,KAAK,IAAI;AACzB,cAAI,OAAO,UAAU,aAAa;AAC9B,mBAAO;AAAA,UACV;AACD,cAAI,OAAO,KAAK,cAAc,YAAY;AACtC,oBAAQ,KAAK,UAAU,KAAK,GAAG;AAAA,UAClC;AACD,iBAAO;AAAA,QACf;AACI,eAAOA;AAAA,MACV,EAAA;AAAA;AACD,aAAS,iBAAiB,OAAO;AAC7B,UAAI,MAAM,QAAQ,KAAK,GAAG;AACtB,eAAO,MAAM,MAAM,IAAI,gBAAgB,EAAE,KAAK,IAAI,IAAI;AAAA,MACzD;AACD,UAAI,SAAS,OAAO,UAAU,UAAU;AACpC,eAAO,OAAO,OAAO,KAAK,KAAK,EAAE,IAAI,SAAU,KAAK;AAChD,iBAAO,MAAM,OAAO,MAAM,GAAG;AAAA,QAChC,CAAA,EAAE,KAAK,IAAI,IAAI;AAAA,MACnB;AACD,aAAO,KAAK,UAAU,KAAK;AAAA,IAC9B;AACD,aAAS,YAAY,OAAO;AACxB,UAAI,OAAO;AAAA,QACP,IAAI,WAAY;AACZ,cAAIR,SAAQ,CAAA;AACZ,mBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,YAAAA,OAAM,EAAE,IAAI,UAAU,EAAE;AAAA,UAC3B;AACD,iBAAO,IAAI,OAAOA,OAAM,IAAI,SAAU,MAAM;AAAE,mBAAO,KAAK,KAAK,IAAI;AAAA,UAAE,CAAE,CAAC;AAAA,QAC3E;AAAA,QACD,MAAM,SAAU,OAAO,MAAM;AACzB,cAAI,iBAAiB,aACjB,iBAAiB,gBACjB,iBAAiB,cACjB,iBAAiB,UACjB,iBAAiB,eAAe;AAChC,mBAAO;AAAA,UACV;AAGD,cAAI,iBAAiB,KAAK;AACtB,mBAAO,MAAM;AAAA,UAChB;AAED,cAAI,QAAQ,MAAM,KAAK,GAAG;AACtB,gBAAI,MAAM,WAAW,GAAG;AACpB,oBAAM,IAAI,MAAM,qDAAqD;AAAA,YACxE;AACD,mBAAO,IAAI,UAAU,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC;AAAA,UAC3C;AAED,cAAI,SAAS,MAAM,KAAK,GAAG;AACvB,mBAAO,IAAI,WAAW,OAAO,KAAK,KAAK,EAAE,IAAI,SAAUS,OAAM;AACzD,qBAAO,IAAI,MAAMA,OAAM,KAAK,KAAK,MAAMA,KAAI,GAAGA,KAAI,CAAC;AAAA,YACtD,CAAA,CAAC;AAAA,UACL;AACD,cAAI,OAAO,UAAU,YAAY;AAC7B,gBAAI,YAAY,eAAe,QAAQ,KAAK;AAC5C,gBAAI,aAAa,GAAG;AAChB,qBAAO,iBAAiB,SAAS;AAAA,YACpC;AACD,gBAAI,OAAO,SAAS,UAAU;AAC1B,oBAAM,IAAI,MAAM,cAAc;AAAA,YACjC;AACD,mBAAO,IAAI,cAAc,MAAM,KAAK;AAAA,UACvC;AAKD,iBAAO,IAAI,aAAa,KAAK;AAAA,QAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMD,KAAK,SAAU,UAAU;AACrB,iBAAO,OAAO,KAAK,UAAU,QAAQ,IAC/B,SAAS,QAAQ,IACjB,SAAS,QAAQ,IAAI,IAAI,QAAQ,QAAQ;AAAA,QAClD;AAAA,QACD,QAAQ,SAAU,UAAU;AACxB,iBAAO,OAAO,KAAK,UAAU,QAAQ;AAAA,QACxC;AAAA,MACT;AACI,UAAI,iBAAiB,CAAA;AACrB,UAAI,mBAAmB,CAAA;AACvB,eAAS,eAAe,MAAM,SAAS;AACnC,YAAI,SAAS,SAAS,KAAK,OAAO;AAClC,YAAI,OAAO,IAAI,cAAc,MAAM,SAAU,OAAO;AAAE,iBAAO,SAAS,KAAK,KAAK,MAAM;AAAA,QAAS,CAAA;AAC/F,YAAI,WAAW,OAAO,QAAQ,gBAAgB,YAAY;AACtD,yBAAe,KAAK,QAAQ,WAAW;AACvC,2BAAiB,KAAK,IAAI;AAAA,QAC7B;AACD,eAAO;AAAA,MACV;AAKD,UAAI,WAAW,eAAe,UAAU,QAAQ;AAChD,UAAI,aAAa,eAAe,YAAY,WAAY;AAAA,MAAG,CAAA;AAC3D,UAAI,UAAU,eAAe,SAAS,CAAE,CAAA;AACxC,UAAI,WAAW,eAAe,UAAU,CAAE,CAAA;AAC1C,UAAI,WAAW,eAAe,UAAU,GAAG;AAC3C,UAAI,SAAS,eAAe,QAAQ,oBAAI,KAAM,CAAA;AAC9C,UAAI,WAAW,eAAe,UAAU,CAAC;AACzC,UAAI,YAAY,eAAe,WAAW,IAAI;AAC9C,UAAI,SAAS,eAAe,QAAQ,IAAI;AACxC,UAAI,cAAc,eAAe,aAAa,MAAS;AACvD,UAAI,WAAW,OAAO,WAAW,aAC3B,eAAe,UAAU,OAAO,IAAI,CAAC,IACrC,IAAI,cAAc,UAAU,WAAY;AAAE,eAAO;AAAA,MAAQ,CAAA;AAC/D,UAAI,eAAe;AAAA,QACf,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,MAAM;AAAA,QACN,WAAW;AAAA,QACX,QAAQ;AAAA,MAChB;AAGI,UAAI,WAAW,uBAAO,OAAO,IAAI;AACjC,eAAS,aAAa,OAAO;AACzB,YAAI,SAAS,OAAO,UAAU,UAAU;AACpC,cAAI,OAAO,MAAM;AACjB,cAAI,OAAO,SAAS,YAChB,OAAO,KAAK,UAAU,IAAI,GAAG;AAC7B,gBAAI,IAAI,SAAS,IAAI;AACrB,gBAAI,EAAE,WAAW;AACb,qBAAO;AAAA,YACV;AAAA,UACJ;AAAA,QACJ;AACD,eAAO;AAAA,MACV;AACD,UAAI;AAAA;AAAA,QAAyB,SAAU,QAAQ;AAC3C,kBAAQ,UAAUC,UAAS,MAAM;AACjC,mBAASA,SAAQ,UAAU;AACvB,gBAAI,QAAQ,OAAO,KAAK,MAAM,IAAI,cAAc,UAAU,SAAU,OAAO,MAAM;AAAE,qBAAO,MAAM,MAAM,OAAO,IAAI;AAAA,aAAI,GAAG,QAAQ,KAAK;AACrI,mBAAO;AAAA,UACV;AACD,UAAAA,SAAQ,UAAU,QAAQ,SAAU,OAAO,MAAM;AAC7C,gBAAI,KAAK,cAAc,MAAM;AACzB,oBAAM,IAAI,MAAM,2CAA2C,KAAK,QAAQ;AAAA,YAC3E;AAED,gBAAI,UAAU,QAAQ,OAAO,UAAU,UAAU;AAC7C,qBAAO;AAAA,YACV;AACD,gBAAI,OAAO,aAAa,KAAK;AAC7B,gBAAI,CAAC,MAAM;AAMP,kBAAI,KAAK,aAAa,oBAClB,KAAK,aAAa,YAAY;AAC9B,uBAAO,KAAK,eAAe,OAAO,IAAI;AAAA,cACzC;AAGD,qBAAO;AAAA,YACV;AAID,gBAAI,QAAQ,SAAS,MAAM;AACvB,qBAAO,KAAK,eAAe,OAAO,IAAI;AAAA,YACzC;AAKD,gBAAI,CAAC,KAAK,cAAc,IAAI,GAAG;AAC3B,qBAAO;AAAA,YACV;AAGD,gBAAI,CAAC,MAAM;AACP,qBAAO;AAAA,YACV;AAGD,mBAAO,KAAK,eAAe,OAAO,IAAI,KAC/B,KAAK,eAAe,OAAO,KAAK;AAAA,UACnD;AACQ,UAAAA,SAAQ,UAAU,QAAQ,WAAY;AAClC,gBAAI,QAAQ;AACZ,gBAAI,cAAc,CAAA;AAClB,qBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,0BAAY,EAAE,IAAI,UAAU,EAAE;AAAA,YACjC;AAGD,iBAAK,cAAc;AACnB,gBAAI,KAAK,WAAW;AAGhB,qBAAO;AAAA,YACV;AAID,iBAAK,MAAM,QAAQ,QAAQ,WAAY;AAAE,qBAAO,MAAM;AAAA,YAAS,CAAE;AAEjE,iBAAK,YAAY;AACjB,gBAAI,WAAW,SAAU,OAAO,OAAO,KAAK,gBAAgB;AACxD,kBAAI,OAAO,KAAK,OAAO,KAAK;AACxB;AACJ,kBAAI,MAAM,MAAM;AAChB,kBAAI,CAAC,OAAO,KAAK,KAAK,KAAK,GAAG;AAC1B,sBAAM,IAAI,MAAM,KAAK,KAAK;AAAA,cAC7B;AACD,kBAAI,QAAQ,IAAI,KAAK;AACrB,kBAAI,OAAO,MAAM;AACjB,kBAAI;AACJ,kBAAI,gBAAgB;AAChB,wBAAQ;AAAA,cACX,WACQ,MAAM,WAAW;AAGtB,wBAAQ,MAAM,UAAU,KAAK,KAAK;AAAA,cACrC,OACI;AACD,oBAAI,UAAU,kDACV,KAAK,UAAU,KAAK,IAAI,SAAS,MAAM,WAAW,MAClD,MAAM,YAAY,IAAI,SAAU,MAAM;AAClC,yBAAO,IAAI,IAAI;AAAA,gBAClB,CAAA,EAAE,KAAK,IAAI,IAAI;AACpB,sBAAM,IAAI,MAAM,OAAO;AAAA,cAC1B;AACD,kBAAI,CAAC,KAAK,MAAM,KAAK,GAAG;AACpB,sBAAM,IAAI,MAAM,iBAAiB,KAAK,IAClC,2BAA2B,QAC3B,cAAc,MAAM,QAAQ;AAAA,cACnC;AACD,oBAAM,KAAK,IAAI;AAAA,YAC/B;AAKY,gBAAI,UAAU,WAAY;AACtB,kBAAI,OAAO,CAAA;AACX,uBAASC,MAAK,GAAGA,MAAK,UAAU,QAAQA,OAAM;AAC1C,qBAAKA,GAAE,IAAI,UAAUA,GAAE;AAAA,cAC1B;AACD,kBAAI,OAAO,KAAK;AAChB,kBAAI,CAAC,MAAM,WAAW;AAClB,sBAAM,IAAI,MAAM,gDACZ,MAAM,QAAQ;AAAA,cACrB;AACD,kBAAI,QAAQ,OAAO,OAAO,aAAa;AACvC,oBAAM,YAAY,QAAQ,SAAU,OAAO,GAAG;AAC1C,oBAAI,IAAI,MAAM;AACV,2BAAS,OAAO,OAAO,KAAK,CAAC,GAAG,IAAI;AAAA,gBACvC,OACI;AACD,2BAAS,OAAO,OAAO,MAAM,KAAK;AAAA,gBACrC;AAAA,cACrB,CAAiB;AACD,qBAAO,KAAK,MAAM,SAAS,EAAE,QAAQ,SAAU,OAAO;AAElD,yBAAS,OAAO,OAAO,MAAM,KAAK;AAAA,cACtD,CAAiB;AAED,kBAAI,MAAM,SAAS,MAAM,UAAU;AAC/B,sBAAM,IAAI,MAAM,EAAE;AAAA,cACrB;AACD,qBAAO;AAAA,YACvB;AAIY,oBAAQ,OAAO,SAAU,KAAK;AAC1B,kBAAI,CAAC,MAAM,WAAW;AAClB,sBAAM,IAAI,MAAM,gDACZ,MAAM,QAAQ;AAAA,cACrB;AACD,kBAAI,QAAQ,OAAO,OAAO,aAAa;AACvC,qBAAO,KAAK,MAAM,SAAS,EAAE,QAAQ,SAAU,OAAO;AAClD,oBAAI,OAAO,KAAK,KAAK,KAAK,GAAG;AACzB,2BAAS,OAAO,OAAO,IAAI,KAAK,GAAG,IAAI;AAAA,gBAC1C,OACI;AACD,2BAAS,OAAO,OAAO,MAAM,KAAK;AAAA,gBACrC;AAAA,cACrB,CAAiB;AAED,kBAAI,MAAM,SAAS,MAAM,UAAU;AAC/B,sBAAM,IAAI,MAAM,EAAE;AAAA,cACrB;AACD,qBAAO;AAAA,YACvB;AACY,mBAAO,eAAe,UAAU,eAAe,KAAK,QAAQ,GAAG;AAAA,cAC3D,YAAY;AAAA,cACZ,OAAO;AAAA,YACvB,CAAa;AACD,mBAAO;AAAA,UACnB;AAKQ,UAAAD,SAAQ,UAAU,QAAQ,SAAU,MAAM,MAAM,WAAW,QAAQ;AAC/D,gBAAI,KAAK,WAAW;AAChB,sBAAQ,MAAM,wCACV,KAAK,UAAU,IAAI,IAAI,wBACvB,KAAK,UAAU,KAAK,QAAQ,CAAC;AACjC,qBAAO;AAAA,YACV;AACD,iBAAK,UAAU,IAAI,IAAI,IAAI,MAAM,MAAM,KAAK,KAAK,IAAI,GAAG,WAAW,MAAM;AACzE,mBAAO;AAAA,UACnB;AACQ,UAAAA,SAAQ,UAAU,WAAW,WAAY;AACrC,gBAAI,QAAQ;AAGZ,gBAAI,CAAC,KAAK,WAAW;AACjB,kBAAI,YAAY,KAAK;AACrB,kBAAI,gBAAgB,KAAK;AACzB,mBAAK,UAAU,QAAQ,SAAU,MAAM;AACnC,oBAAI,MAAM,SAAS,IAAI;AACvB,oBAAI,eAAe,KAAK;AACpB,sBAAI,SAAQ;AACZ,yBAAO,WAAW,IAAI,SAAS;AAC/B,yBAAO,eAAe,IAAI,aAAa;AAAA,gBAC1C,OACI;AACD,sBAAI,UAAU,4BACV,KAAK,UAAU,IAAI,IACnB,kBACA,KAAK,UAAU,MAAM,QAAQ;AACjC,wBAAM,IAAI,MAAM,OAAO;AAAA,gBAC1B;AAAA,cACrB,CAAiB;AAED,qBAAO,WAAW,KAAK,SAAS;AAChC,4BAAc,KAAK,QAAQ,IAAI;AAC/B,mBAAK,WAAW,SAAS;AACzB,uBAAS,aAAa,WAAW;AAC7B,oBAAI,OAAO,KAAK,WAAW,SAAS,KAChC,CAAC,UAAU,SAAS,EAAE,QAAQ;AAC9B,uBAAK,WAAW,KAAK,SAAS;AAAA,gBACjC;AAAA,cACJ;AAED,qBAAO,eAAeE,aAAY,KAAK,UAAU;AAAA,gBAC7C,YAAY;AAAA,gBACZ,OAAO,KAAK;AAAA,cAChC,CAAiB;AACD,mBAAK,YAAY;AAEjB,oCAAsB,KAAK,UAAU,KAAK,aAAa;AACvD,kBAAI,KAAK,aACL,KAAK,cAAc,YAAY,YAAY,KAAK,GAAG;AACnD,mDAAmC,KAAK,QAAQ;AAAA,cACnD;AAAA,YACJ;AAAA,UACb;AACQ,iBAAOF;AAAA,QACf,EAAM,GAAG;AAAA;AAGL,eAAS,kBAAkB,UAAU;AACjC,YAAI,CAAC,OAAO,KAAK,UAAU,QAAQ,GAAG;AAClC,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,YAAI,IAAI,SAAS,QAAQ;AACzB,YAAI,EAAE,cAAc,MAAM;AACtB,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,eAAO,EAAE,cAAc,MAAM,CAAC;AAAA,MACjC;AAID,eAAS,4BAA4B,YAAY;AAC7C,YAAI,QAAQ,CAAA;AACZ,YAAI,YAAY,OAAO,KAAK,QAAQ;AACpC,YAAI,gBAAgB,UAAU;AAC9B,iBAAS,IAAI,GAAG,IAAI,eAAe,EAAE,GAAG;AACpC,cAAI,WAAW,UAAU,CAAC;AAC1B,cAAI,IAAI,SAAS,QAAQ;AACzB,cAAI,EAAE,cAAc,MAAM;AACtB,kBAAM,IAAI,MAAM,KAAK,QAAQ;AAAA,UAChC;AACD,mBAAS,IAAI,GAAG,IAAI,EAAE,cAAc,QAAQ,EAAE,GAAG;AAC7C,gBAAI,gBAAgB,EAAE,cAAc,CAAC;AACrC,gBAAI,OAAO,KAAK,YAAY,aAAa,GAAG;AACxC,oBAAM,QAAQ,IAAI;AAClB;AAAA,YACH;AAAA,UACJ;AAAA,QACJ;AACD,eAAO;AAAA,MACV;AACD,UAAI,WAAW,uBAAO,OAAO,IAAI;AAEjC,UAAI,gBAAgB,CAAA;AAGpB,eAAS,aAAa,MAAM,MAAM;AAC9B,YAAI,MAAM,cAAc,IAAI;AAE5B,YAAI,YAAY,MAAM,IAAI,GAAG;AACzB,iBAAO,cAAc,IAAI;AAAA,QAC5B,OACI;AACD,qBAAW,OAAO,IAAI;AACtB,iBAAO,eAAe,eAAe,MAAM;AAAA,YACvC,YAAY;AAAA,YACZ,cAAc;AAAA,YACd,OAAO;AAAA,UACvB,CAAa;AAAA,QACJ;AACD,eAAO;AAAA,MACV;AACD,eAAS,eAAe,UAAU;AAC9B,eAAO,SAAS,QAAQ,WAAW,SAAU,iBAAiB;AAC1D,cAAI,MAAM,gBAAgB;AAC1B,kBAAQ,KAAG;AAAA,YACP,KAAK;AAAG,qBAAO;AAAA,YAEf,KAAK;AAAG,qBAAO,gBAAgB;YAC/B;AAII,qBAAO,gBAAgB,MAAM,GAAG,MAAM,CAAC,EAAE,YAAa,IAClD,gBAAgB,OAAO,MAAM,CAAC;AAAA,UACzC;AAAA,QACb,CAAS;AAAA,MACJ;AACD,eAAS,wBAAwB,UAAU;AACvC,mBAAW,eAAe,QAAQ;AAClC,eAAO,SAAS,QAAQ,kBAAkB,WAAW;AAAA,MACxD;AACD,UAAIE,cAAa,CAAA;AAEjB,eAAS,cAAc,QAAQ;AAC3B,YAAI,IAAI,aAAa,MAAM;AAC3B,YAAI,GAAG;AACH,iBAAO,EAAE,WAAW,MAAM,CAAC;AAAA,QAC9B;AACD,YAAI,UAAU,QAAQ;AAClB,gBAAM,IAAI,MAAM,sCACZ,KAAK,UAAU,OAAO,IAAI,CAAC;AAAA,QAClC;AACD,eAAO,OAAO,KAAK,MAAM;AAAA,MAC5B;AAGD,eAAS,cAAc,QAAQ,WAAW;AACtC,YAAI,IAAI,aAAa,MAAM;AAC3B,YAAI,GAAG;AACH,cAAI,QAAQ,EAAE,UAAU,SAAS;AACjC,cAAI,OAAO;AACP,mBAAO,MAAM,SAAS,MAAM;AAAA,UAC/B;AAAA,QACJ;AACD,eAAO,UAAU,OAAO,SAAS;AAAA,MACpC;AAKD,eAAS,UAAU,QAAQ,UAAU,SAAS;AAC1C,sBAAc,MAAM,EAAE,QAAQ,SAAU,MAAM;AAC1C,mBAAS,KAAK,MAAM,MAAM,cAAc,QAAQ,IAAI,CAAC;AAAA,QACxD,GAAE,OAAO;AAAA,MACb;AAKD,eAAS,UAAU,QAAQ,UAAU,SAAS;AAC1C,eAAO,cAAc,MAAM,EAAE,KAAK,SAAU,MAAM;AAC9C,iBAAO,SAAS,KAAK,MAAM,MAAM,cAAc,QAAQ,IAAI,CAAC;AAAA,QAC/D,GAAE,OAAO;AAAA,MACb;AAGD,eAAS,mCAAmC,UAAU;AAClD,YAAI,cAAc,wBAAwB,QAAQ;AAElD,YAAI,SAAS,WAAW;AACpB;AAEJ,YAAI,UAAU,SAAS,eAAe,QAAQ,CAAC;AAE/C,YAAI,CAAC;AACD;AACJ,YAAI,UAAU,WAAY;AACtB,cAAI,OAAO,CAAA;AACX,mBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,iBAAK,EAAE,IAAI,UAAU,EAAE;AAAA,UAC1B;AACD,iBAAO,SAAS,oBAAoB,QAAQ,MAAM,UAAU,IAAI,CAAC;AAAA,QAC7E;AACQ,gBAAQ,OAAO,WAAY;AACvB,cAAI,OAAO,CAAA;AACX,mBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,iBAAK,EAAE,IAAI,UAAU,EAAE;AAAA,UAC1B;AACD,iBAAO,SAAS,oBAAoB,QAAQ,KAAK,MAAM,UAAU,IAAI,CAAC;AAAA,QAClF;AACQ,iBAAS,WAAW,IAAI;AAAA,MAC3B;AACD,eAAS,sBAAsB,UAAU,MAAM;AAC3C,aAAK,SAAS;AACd,aAAK,KAAK,QAAQ;AAClB,YAAI,WAAW,uBAAO,OAAO,IAAI;AACjC,iBAAS,MAAM,GAAG,MAAM,KAAK,QAAQ,EAAE,KAAK;AACxC,qBAAW,KAAK,GAAG;AACnB,cAAI,IAAI,SAAS,QAAQ;AACzB,cAAI,EAAE,cAAc,MAAM;AACtB,kBAAM,IAAI,MAAM,EAAE;AAAA,UACrB;AAGD,cAAI,OAAO,KAAK,UAAU,QAAQ,GAAG;AACjC,mBAAO,KAAK,SAAS,QAAQ,CAAC;AAAA,UACjC;AAED,mBAAS,QAAQ,IAAI;AAErB,eAAK,KAAK,MAAM,MAAM,EAAE,SAAS;AAAA,QACpC;AAED,iBAAS,KAAK,GAAG,OAAO,IAAI,MAAM,KAAK,QAAQ,OAAO,KAAK,EAAE,MAAM;AAC/D,cAAI,OAAO,KAAK,MAAM,IAAI,GAAG;AACzB,iBAAK,IAAI,IAAI,KAAK,IAAI;AAAA,UACzB;AAAA,QACJ;AACD,aAAK,SAAS;AAAA,MACjB;AACD,eAAS,OAAO,MAAM,MAAM;AACxB,eAAO,KAAK,IAAI,EAAE,QAAQ,SAAU,MAAM;AACtC,eAAK,IAAI,IAAI,KAAK,IAAI;AAAA,QAClC,CAAS;AACD,eAAO;AAAA,MACV;AACD,eAAS,WAAW;AAChB,eAAO,KAAK,QAAQ,EAAE,QAAQ,SAAU,MAAM;AAC1C,mBAAS,IAAI,EAAE;QAC3B,CAAS;AAAA,MACJ;AACD,aAAO;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,YAAYA;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACR;AAAA,IACC;AACD,IAAArC,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;;;;ACpxBlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,WAAWY;AACf,QAAI,UAAU,QAAQ,gBAAgBC,aAAkB,CAAA;AACxD,QAAI,KAAK,OAAO;AAChB,QAAI,SAAS,GAAG;AAChB,aAAS,WAAWW,OAAM;AACtB,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,UAAUC,OAAM,aAAa;AACjC,UAAI,WAAWA,OAAM,aAAa;AAClC,UAAI,OAAO,SAASc,MAAK,OAAO,YAAY,MAAM;AAC9C,YAAI,EAAE,gBAAgBA,QAAO;AACzB,gBAAM,IAAI,MAAM,kDAAkD;AAAA,QACrE;AACD,YAAI,YAAY;AACZ,cAAI,EAAE,sBAAsBA,QAAO;AAC/B,kBAAM,IAAI,MAAM,EAAE;AAAA,UACrB;AAAA,QACJ,OACI;AACD,uBAAa;AACb,iBAAO;AAAA,QACV;AAGD,aAAK,QAAQ;AAEb,aAAK,aAAa;AAGlB,aAAK,OAAO;AAGZ,aAAK,eAAe;AAAA,MAC5B;AACI,UAAI,KAAK,KAAK;AACd,eAAS,cAAcC,OAAM;AAGzB,eAAOA,MAAK,iBAAiBA,MAAK,eAAe,uBAAO,OAAO,IAAI;AAAA,MACtE;AACD,eAAS,aAAaA,OAAM,MAAM;AAC9B,YAAI,QAAQ,cAAcA,KAAI;AAC9B,YAAI,mBAAmBA,MAAK,iBAAiB,IAAI;AACjD,YAAI,YAAY,MAAM,IAAI;AAC1B,YAAI,CAAC,OAAO,KAAK,OAAO,IAAI;AAAA,QAExB,UAAU,UAAU,kBAAkB;AACtC,sBAAY,MAAM,IAAI,IAAI,IAAIA,MAAK,YAAY,kBAAkBA,OAAM,IAAI;AAAA,QAC9E;AACD,eAAO;AAAA,MACV;AAGD,SAAG,mBAAmB,SAAS,iBAAiB,MAAM;AAClD,eAAO,KAAK,MAAM,IAAI;AAAA,MAC9B;AACI,SAAG,MAAM,SAAS,MAAM;AACpB,YAAI,QAAQ,CAAA;AACZ,iBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,gBAAM,EAAE,IAAI,UAAU,EAAE;AAAA,QAC3B;AACD,YAAIA,QAAO;AACX,YAAI,QAAQ,MAAM;AAClB,iBAAS,IAAI,GAAG,IAAI,OAAO,EAAE,GAAG;AAC5B,UAAAA,QAAO,aAAaA,OAAM,MAAM,CAAC,CAAC;AAAA,QACrC;AACD,eAAOA;AAAA,MACf;AACI,SAAG,OAAO,SAAS,KAAK,UAAU,SAAS;AACvC,YAAI,aAAa,CAAA;AACjB,YAAI,MAAM,KAAK,MAAM;AACrB,YAAI,IAAI;AAER,iBAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC1B,cAAI,OAAO,KAAK,KAAK,OAAO,CAAC,GAAG;AAC5B,uBAAW,CAAC,IAAI,KAAK,IAAI,CAAC;AAAA,UAC7B;AAAA,QACJ;AAKD,kBAAU,WAAW;AACrB,aAAK,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AACtB,cAAI,OAAO,KAAK,YAAY,CAAC,GAAG;AAC5B,qBAAS,KAAK,SAAS,WAAW,CAAC,CAAC;AAAA,UACvC;AAAA,QACJ;AAAA,MACT;AACI,SAAG,MAAM,SAAS,IAAI,UAAU,SAAS;AACrC,YAAI,SAAS,CAAA;AACb,aAAK,KAAK,SAAU,WAAW;AAC3B,iBAAO,KAAK,SAAS,KAAK,MAAM,SAAS,CAAC;AAAA,QAC7C,GAAE,OAAO;AACV,eAAO;AAAA,MACf;AACI,SAAG,SAAS,SAAS,OAAO,UAAU,SAAS;AAC3C,YAAI,SAAS,CAAA;AACb,aAAK,KAAK,SAAU,WAAW;AAC3B,cAAI,SAAS,KAAK,MAAM,SAAS,GAAG;AAChC,mBAAO,KAAK,SAAS;AAAA,UACxB;AAAA,QACJ,GAAE,OAAO;AACV,eAAO;AAAA,MACf;AACI,eAAS,aAAa;AAAA,MAAG;AACzB,eAAS,SAASA,OAAM,QAAQ,OAAO,KAAK;AACxC,gBAAQ,OAAOA,MAAK,KAAK;AACzB,YAAI,WAAW,GAAG;AACd,iBAAO;AAAA,QACV;AACD,YAAI,SAASA,MAAK,MAAM;AACxB,YAAI,SAAS,GAAG;AACZ,iBAAO;AAAA,QACV;AACD,YAAI,OAAO,UAAU;AACrB,YAAI,SAAS,GAAG;AACZ,kBAAQ;AACR,gBAAM;AAAA,QACT,WACQ,SAAS,GAAG;AACjB,kBAAQ,KAAK,IAAI,OAAO,CAAC;AACzB,gBAAM;AAAA,QACT,OACI;AACD,kBAAQ,KAAK,IAAI,OAAO,CAAC;AACzB,gBAAM,KAAK,IAAI,KAAK,MAAM;AAAA,QAC7B;AACD,iBAAS,OAAO,KAAK;AACrB,iBAAS,OAAO,GAAG;AACnB,YAAI,QAAQ,uBAAO,OAAO,IAAI;AAC9B,YAAI,QAAQ,cAAcA,KAAI;AAC9B,iBAAS,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAC9B,cAAI,OAAO,KAAKA,MAAK,OAAO,CAAC,GAAG;AAC5B,gBAAI,YAAYA,MAAK,IAAI,CAAC;AAC1B,gBAAI,UAAU,SAAS,GAAG;AACtB,oBAAM,IAAI,MAAM,EAAE;AAAA,YACrB;AACD,gBAAI,WAAW,IAAI;AACnB,sBAAU,OAAO;AACjB,kBAAM,QAAQ,IAAI;AAClB,mBAAO,MAAM,CAAC;AAAA,UACjB;AAAA,QACJ;AACD,eAAO,MAAM;AACb,eAAO,WAAY;AACf,mBAASC,aAAY,OAAO;AACxB,gBAAIC,aAAY,MAAMD,SAAQ;AAC9B,gBAAIC,WAAU,SAAS,CAACD,WAAU;AAC9B,oBAAM,IAAI,MAAM,EAAE;AAAA,YACrB;AACD,kBAAMA,SAAQ,IAAIC;AAClB,YAAAF,MAAK,MAAMC,SAAQ,IAAIC,WAAU;AAAA,UACpC;AAAA,QACb;AAAA,MACK;AACD,SAAG,QAAQ,SAAS,QAAQ;AACxB,YAAI,OAAO,SAAS,MAAM,EAAE;AAC5B,YAAI,SAAS,KAAK,MAAM,MAAK;AAC7B;AACA,eAAO;AAAA,MACf;AACI,SAAG,UAAU,SAAS,UAAU;AAC5B,YAAI,OAAO,CAAA;AACX,iBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,eAAK,EAAE,IAAI,UAAU,EAAE;AAAA,QAC1B;AACD,YAAI,OAAO,SAAS,MAAM,KAAK,MAAM;AACrC,YAAI,SAAS,KAAK,MAAM,QAAQ,MAAM,KAAK,OAAO,IAAI;AACtD;AACA,eAAO;AAAA,MACf;AACI,SAAG,OAAO,SAAS,OAAO;AACtB,YAAI,OAAO,CAAA;AACX,iBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,eAAK,EAAE,IAAI,UAAU,EAAE;AAAA,QAC1B;AACD,gBAAQ,OAAO,KAAK,KAAK;AACzB,eAAO,cAAc,IAAI,EAAE;AAC3B,eAAO,KAAK,MAAM,KAAK,MAAM,KAAK,OAAO,IAAI;AAAA,MACrD;AACI,SAAG,MAAM,SAAS,MAAM;AACpB,gBAAQ,OAAO,KAAK,KAAK;AACzB,YAAI,QAAQ,cAAc,IAAI;AAC9B,eAAO,MAAM,KAAK,MAAM,SAAS,CAAC;AAClC,eAAO,MAAM;AACb,eAAO,KAAK,MAAM;MAC1B;AACI,SAAG,WAAW,SAAS,SAAS,OAAO;AACnC,YAAI,OAAO,UAAU;AACrB,YAAI,OAAO,SAAS,MAAM,OAAO,GAAG,KAAK;AACzC,YAAI,SAAS,cAAc,QAAQ,GAAG;AAClC,iBAAO;AAAA,QACV;AACD,gBAAQ,KAAK,IAAI,OAAO,CAAC;AACzB,iBAAS,IAAI,GAAG,IAAI,MAAM,EAAE,GAAG;AAC3B,eAAK,MAAM,QAAQ,IAAI,CAAC,IAAI,UAAU,CAAC;AAAA,QAC1C;AACD;AACA,eAAO;AAAA,MACf;AACI,SAAG,eAAe,SAAS,eAAe;AACtC,YAAI,OAAO,CAAA;AACX,iBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,eAAK,EAAE,IAAI,UAAU,EAAE;AAAA,QAC1B;AACD,YAAI,KAAK,KAAK;AACd,YAAI,OAAO,KAAK;AAChB,YAAI,eAAe,CAAC,KAAK,IAAI;AAC7B,iBAAS,IAAI,GAAG,IAAI,MAAM,EAAE,GAAG;AAC3B,uBAAa,KAAK,KAAK,CAAC,CAAC;AAAA,QAC5B;AACD,eAAO,GAAG,SAAS,MAAM,IAAI,YAAY;AAAA,MACjD;AACI,SAAG,cAAc,SAAS,cAAc;AACpC,YAAI,OAAO,CAAA;AACX,iBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,eAAK,EAAE,IAAI,UAAU,EAAE;AAAA,QAC1B;AACD,YAAI,KAAK,KAAK;AACd,YAAI,OAAO,KAAK;AAChB,YAAI,eAAe,CAAC,KAAK,OAAO,CAAC;AACjC,iBAAS,IAAI,GAAG,IAAI,MAAM,EAAE,GAAG;AAC3B,uBAAa,KAAK,KAAK,CAAC,CAAC;AAAA,QAC5B;AACD,eAAO,GAAG,SAAS,MAAM,IAAI,YAAY;AAAA,MACjD;AACI,eAAS,6BAA6BF,OAAM;AACxC,YAAI,EAAEA,iBAAgB,OAAO;AACzB,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,YAAI,KAAKA,MAAK;AACd,YAAI,CAAC,IAAI;AAEL,iBAAOA;AAAA,QACV;AACD,YAAI,cAAc,GAAG;AACrB,YAAI,cAAc,cAAc,EAAE;AAElC,YAAI,YAAYA,MAAK,IAAI,MAAMA,MAAK,OAAO;AACvC,sBAAYA,MAAK,IAAI,IAAIA;AAAA,QAC5B,WACQ,QAAQ,MAAM,WAAW,GAAG;AAGjC,cAAI,IAAI,YAAY,QAAQA,MAAK,KAAK;AACtC,cAAI,KAAK,GAAG;AACR,wBAAYA,MAAK,OAAO,CAAC,IAAIA;AAAA,UAChC;AAAA,QACJ,OACI;AAID,sBAAYA,MAAK,IAAI,IAAIA,MAAK;AAC9B,sBAAYA,MAAK,IAAI,IAAIA;AAAA,QAC5B;AACD,YAAI,YAAYA,MAAK,IAAI,MAAMA,MAAK,OAAO;AACvC,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,YAAIA,MAAK,WAAW,IAAIA,MAAK,IAAI,MAAMA,OAAM;AACzC,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,eAAOA;AAAA,MACV;AACD,SAAG,UAAU,SAAS,QAAQ,aAAa;AACvC,YAAI,UAAU,CAAA;AACd,YAAI,cAAc,KAAK,WAAW;AAClC,YAAI,cAAc,cAAc,KAAK,UAAU;AAC/C,YAAI,QAAQ,UAAU;AACtB,qCAA6B,IAAI;AACjC,YAAI,QAAQ,MAAM,WAAW,GAAG;AAC5B,cAAI,iBAAiB,YAAY;AACjC,cAAI,OAAO,SAAS,KAAK,YAAY,QAAQ,GAAG,KAAK,OAAO,CAAC;AAC7D,cAAI,aAAa,CAAC,KAAK,MAAM,CAAC;AAC9B,mBAAS,IAAI,GAAG,IAAI,OAAO,EAAE,GAAG;AAC5B,uBAAW,KAAK,UAAU,CAAC,CAAC;AAAA,UAC/B;AACD,cAAI,aAAa,YAAY,OAAO,MAAM,aAAa,UAAU;AACjE,cAAI,WAAW,CAAC,MAAM,KAAK,OAAO;AAC9B,kBAAM,IAAI,MAAM,EAAE;AAAA,UACrB;AACD,cAAI,YAAY,WAAY,iBAAiB,IAAI,OAAQ;AACrD,kBAAM,IAAI,MAAM,EAAE;AAAA,UACrB;AACD;AACA,cAAI,UAAU,GAAG;AACb,mBAAO,KAAK;AACZ,mBAAO,YAAY,KAAK,IAAI;AAC5B,iBAAK,eAAe;AAAA,UACvB,OACI;AACD,gBAAI,YAAY,KAAK,IAAI,MAAM,aAAa;AACxC,oBAAM,IAAI,MAAM,EAAE;AAAA,YACrB;AACD,gBAAI,KAAK,UAAU,aAAa;AAC5B,mBAAK,QAAQ;AACb,mBAAK,eAAe;AAAA,YACvB;AACD,iBAAK,IAAI,GAAG,IAAI,OAAO,EAAE,GAAG;AACxB,sBAAQ,KAAK,KAAK,WAAW,IAAI,KAAK,OAAO,CAAC,CAAC;AAAA,YAClD;AACD,gBAAI,QAAQ,CAAC,MAAM,MAAM;AACrB,oBAAM,IAAI,MAAM,EAAE;AAAA,YACrB;AAAA,UACJ;AAAA,QACJ,WACQ,UAAU,GAAG;AAClB,cAAI,KAAK,UAAU,aAAa;AAC5B,iBAAK,eAAe;AAAA,UACvB;AACD,eAAK,QAAQ,YAAY,KAAK,IAAI,IAAI;AACtC,kBAAQ,KAAK,IAAI;AAAA,QACpB,WACQ,UAAU,GAAG;AAClB,iBAAO,YAAY,KAAK,IAAI;AAC5B,iBAAO,KAAK;AACZ,eAAK,eAAe;AAAA,QAGvB,OACI;AACD,gBAAM,IAAI,MAAM,wBAAwB;AAAA,QAC3C;AACD,eAAO;AAAA,MACf;AACI,aAAO;AAAA,IACV;AACD,IAAAxC,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;;AC3UlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,WAAWY;AACf,QAAI,UAAU,QAAQ,gBAAgBC,aAAkB,CAAA;AACxD,QAAI,SAAS,OAAO,UAAU;AAC9B,aAAS,YAAYW,OAAM;AACvB,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,OAAOC,OAAM;AACjB,UAAIY,cAAaZ,OAAM;AACvB,UAAI,OAAOY,YAAW;AACtB,UAAI,aAAaA,YAAW;AAC5B,UAAI,UAAUZ,OAAM,aAAa;AACjC,UAAIN,KAAIM,OAAM;AACd,UAAI,QAAQ,SAASkB,OAAMH,OAAM,aAAa;AAC1C,YAAI,EAAE,gBAAgBG,SAAQ;AAC1B,gBAAM,IAAI,MAAM,mDAAmD;AAAA,QACtE;AACD,YAAI,CAAC,uBAAuB,MAAMH,MAAK,KAAK,GAAG;AAC3C,oBAAU,OAAOA,MAAK,KAAK;AAAA,QAC9B;AACD,YAAI;AACJ,YAAI,aAAa;AACb,cAAI,EAAE,uBAAuBG,SAAQ;AACjC,kBAAM,IAAI,MAAM,EAAE;AAAA,UACrB;AACD,kBAAQ,YAAY,QAAQ;AAAA,QAC/B,OACI;AACD,wBAAc;AACd,kBAAQ;AAAA,QACX;AACD,eAAO,iBAAiB,MAAM;AAAA,UAC1B,MAAM,EAAE,OAAOH,MAAM;AAAA,UACrB,MAAM,EAAE,OAAOA,MAAK,MAAO;AAAA,UAC3B,UAAU,EAAE,OAAO,CAAC,aAAa,YAAY,KAAM;AAAA,UACnD,OAAO,EAAE,OAAO,MAAO;AAAA,UACvB,QAAQ,EAAE,OAAO,YAAa;AAAA,UAC9B,UAAU,EAAE,OAAO,GAAI;AAAA,UACvB,OAAO,EAAE,OAAO,GAAI;AAAA,QAChC,CAAS;AAAA,MACT;AACI,UAAI,YAAY,KAAK;AAAA;AAAA,QAErBH,YAAW;AAAA;AAAA;AAAA,QAGXA,YAAW;AAAA;AAAA;AAAA,QAGXA,YAAW;AAAA,MAAW;AAGtB,UAAI,yBAAyB,KAAK,GAAGA,YAAW,UAAUA,YAAW,kBAAkBA,YAAW,iBAAiBA,YAAW,sBAAsBA,YAAW,wBAAwBA,YAAW,WAAWA,YAAW,sBAAsB;AAC9O,UAAI,4BAA4B,KAAK,GAAGA,YAAW,eAAeA,YAAW,eAAe;AAC5F,YAAM,kBAAkB,SAAU,MAAM;AACpC,eAAO,UAAU,MAAM,IAAI,KAAK,uBAAuB,MAAM,IAAI;AAAA,MACzE;AACI,UAAI,KAAK,MAAM;AAEf,SAAG,UAAU;AACb,SAAG,WAAW,SAAU,MAAM;AAC1B,aAAK,KAAI;AACT,eAAO,OAAO,KAAK,KAAK,UAAU,IAAI;AAAA,MAC9C;AACI,SAAG,eAAe,SAAU,MAAM;AAC9B,aAAK,KAAI;AACT,eAAO,OAAO,KAAK,KAAK,OAAO,IAAI;AAAA,MAC3C;AACI,SAAG,mBAAmB,SAAU,QAAQ;AACpC,YAAI,QAAQ;AACR,cAAI,CAAC,YAAY,KAAK,MAAM,GAAG;AAC3B,kBAAM,IAAI,MAAM,EAAE;AAAA,UACrB;AAAA,QACJ,OACI;AACD,mBAAS;AAAA,QACZ;AAGD,kBAAU,KAAK,MAAM,SAAS,EAAE,IAAI;AACpC,aAAK,KAAI;AACT,YAAI,QAAQ;AACZ,eAAO,KAAK,SAAS,SAAS,KAAK,GAAG;AAClC,YAAE;AAAA,QACL;AACD,YAAI,OAAO,SAAS;AACpB,eAAO,KAAK,SAAS,IAAI,IAAIZ,OAAM,SAAS,WAAW,IAAI;AAAA,MACnE;AACI,SAAG,kBAAkB,SAAU,YAAY,MAAM;AAC7C,uBAAe,aAAa,KAAK,iBAAkB;AACnD,YAAI,WAAW,KAAK,KAAK,IAAI,MAAM;AACnC,YAAIY,YAAW,eAAe,MAAM,SAAS,KAAK,GAAG;AACjD,qBAAW,SAAS,IAAI,MAAM;AAAA,QACjC;AACD,iBAAS,QAAQlB,GAAE,oBAAoB,OAAO,CAACA,GAAE,mBAAmB,YAAY,QAAQ,IAAI,CAAC,CAAC,CAAC;AAC/F,eAAO;AAAA,MACf;AACI,SAAG,OAAO,SAAU,OAAO;AACvB,YAAI,SAAS,CAAC,KAAK,SAAS;AACxB,mBAAS,QAAQ,KAAK,UAAU;AAE5B,mBAAO,KAAK,SAAS,IAAI;AAAA,UAC5B;AACD,mBAAS,QAAQ,KAAK,OAAO;AAEzB,mBAAO,KAAK,MAAM,IAAI;AAAA,UACzB;AACD,oBAAU,KAAK,MAAM,KAAK,UAAU,KAAK,KAAK;AAC9C,eAAK,UAAU;AAAA,QAClB;AAAA,MACT;AACI,SAAG,cAAc,WAAY;AACzB,aAAK,KAAI;AACT,eAAO,KAAK;AAAA,MACpB;AACI,SAAG,WAAW,WAAY;AACtB,aAAK,KAAI;AACT,eAAO,KAAK;AAAA,MACpB;AACI,eAAS,UAAUqB,OAAM,UAAU,YAAY;AAC3C,YAAI,OAAOA,MAAK;AAChB,YAAI,uBAAuB,MAAM,IAAI,GAAG;AACpC,cAAI,SAASA,MAAK,IAAI,kBAAkB,QAAQ;AAChD,cAAI,QAAQ,MAAM,OAAO,KAAK,GAAG;AAC7B,mBAAO,KAAK,SAAU,WAAW;AAC7B,+BAAiB,WAAW,UAAU;AAAA,YAC1D,CAAiB;AAAA,UACJ;AAAA,QACJ;AACD,YAAI,UAAU,MAAM,IAAI,GAAG;AACvB,cAAIH,YAAW,YAAY,MAAM,IAAI,GAAG;AAIpC,uBAAWG,MAAK,IAAI,OAAO,GAAG,QAAQ;AAAA,UACzC,OACI;AACD,+BAAmBA,OAAM,UAAU,UAAU;AAAA,UAChD;AAAA,QACJ;AAAA,MACJ;AACD,eAAS,mBAAmBA,OAAM,UAAU,YAAY;AACpD,YAAI,OAAOA,MAAK;AAChB,YAAIA,MAAK,UACLH,YAAW,mBAAmB,MAAMG,MAAK,OAAO,IAAI,KACpDA,MAAK,OAAO,KAAK,IAAI;AACrB,qBAAWA,MAAK,OAAO,IAAI,IAAI,GAAG,QAAQ;AAAA,QAC7C;AACD,YAAI,CAAC,KAAM;AAAA,iBAGF,QAAQ,MAAM,IAAI,GAAG;AAC1B,UAAAA,MAAK,KAAK,SAAU,WAAW;AAC3B,+BAAmB,WAAW,UAAU,UAAU;AAAA,UAClE,CAAa;AAAA,QACJ,WACQH,YAAW,SAAS,MAAM,IAAI,GAAG;AACtC,UAAAG,MAAK,IAAI,QAAQ,EAAE,KAAK,SAAU,WAAW;AACzC,uBAAW,WAAW,QAAQ;AAAA,UAC9C,CAAa;AACD,6BAAmBA,MAAK,IAAI,MAAM,GAAG,UAAU,UAAU;AACzD,6BAAmBA,MAAK,IAAI,gBAAgB,GAAG,UAAU,UAAU;AAAA,QACtE,WACSH,YAAW,aAAaA,YAAW,UAAU,MAAM,IAAI,KAC5DA,YAAW,wBAAwBA,YAAW,qBAAqB,MAAM,IAAI,KAC7EA,YAAW,0BAA0BA,YAAW,uBAAuB,MAAM,IAAI,KACjFA,YAAW,0BAA0BA,YAAW,uBAAuB,MAAM,IAAI,GAAI;AACtF,yBAAeG,MAAK,IAAI,IAAI,GAAG,UAAU;AAAA,QAC5C,WACQH,YAAW,mBAAmB,MAAM,IAAI,GAAG;AAChD,qBAAWG,MAAK,IAAI,IAAI,GAAG,QAAQ;AACnC,6BAAmBA,MAAK,IAAI,MAAM,GAAG,UAAU,UAAU;AAAA,QAC5D,WACQ,KAAK,SAAS,qBACnB,KAAK,SAAS,8BACd,KAAK,SAAS,0BAA0B;AACxC;AAAA;AAAA;AAAA;AAAA;AAAA,YAKAA,MAAK,IAAI,KAAK,QAAQ,UAClB,KAAK,OAAO,SAAS,IAAI;AAAA,YAAG;AAAA,UAAQ;AAAA,QAC3C,WACQ,KAAK,MAAM,IAAI,KAAK,CAAC,WAAW,MAAM,IAAI,GAAG;AAClD,UAAAf,OAAM,UAAU,MAAM,SAAU,MAAM,OAAO;AACzC,gBAAI,YAAYe,MAAK,IAAI,IAAI;AAC7B,gBAAI,CAAC,aAAa,WAAW,KAAK,GAAG;AACjC,oBAAM,IAAI,MAAM,EAAE;AAAA,YACrB;AACD,+BAAmB,WAAW,UAAU,UAAU;AAAA,UAClE,CAAa;AAAA,QACJ;AAAA,MACJ;AACD,eAAS,aAAaA,OAAM,OAAO;AAC/B,YAAIA,MAAK,UAAU,OAAO;AACtB,iBAAO;AAAA,QACV;AAGD,YAAI,MAAM,QAAQA,MAAK,KAAK,KACxBA,MAAK,MAAM,WAAW,KACtB,MAAM,QAAQ,KAAK,KACnB,MAAM,WAAW,GAAG;AACpB,iBAAO;AAAA,QACV;AACD,eAAO;AAAA,MACV;AACD,eAAS,mBAAmBA,OAAM,UAAU,YAAY;AACpD,YAAI,OAAOA,MAAK;AAChB,YAAI,CAAC,QAAQ,WAAW,MAAM,IAAI,EAAG;AAAA,iBAG5BH,YAAW,oBAAoB,MAAM,IAAI,KAC9C,KAAK,OAAO,MAAM;AAClB,qBAAWG,MAAK,IAAI,IAAI,GAAG,QAAQ;AAAA,QACtC,WACQH,YAAW,oBAChBA,YAAW,iBAAiB,MAAM,IAAI,KACtC,KAAK,OAAO,MAAM;AAClB,qBAAWG,MAAK,IAAI,IAAI,GAAG,QAAQ;AACnC,6BAAmBA,MAAK,IAAI,gBAAgB,GAAG,UAAU,UAAU;AAAA,QACtE,WACSH,YAAW,wBACjBA,YAAW,qBAAqB,MAAM,IAAI,KACzCA,YAAW,0BACRA,YAAW,uBAAuB,MAAM,IAAI,GAAI;AACpD,yBAAeG,MAAK,IAAI,IAAI,GAAG,UAAU;AAAA,QAC5C,WACQ,UAAU,MAAM,IAAI,GAAG;AAC5B,cAAIH,YAAW,YAAY,MAAM,IAAI;AAAA,UAEjCA,YAAW,WAAW,MAAM,KAAK,KAAK,GAAG;AACzC,gBAAI,iBAAiB,KAAK,MAAM;AAChC,gBAAI,aAAa,OAAO,KAAK,UAAU,cAAc;AAIrD,+BAAmBG,MAAK,IAAI,MAAM,GAAG,UAAU,UAAU;AAKzD,gBAAI,CAAC,YAAY;AACb,qBAAO,SAAS,cAAc;AAAA,YACjC;AAAA,UACJ;AAAA,QACJ,OACI;AACD,6BAAmBA,OAAM,UAAU,UAAU;AAAA,QAChD;AAAA,MACJ;AACD,eAAS,WAAW,aAAa,UAAU;AACvC,YAAI,UAAU,YAAY;AAC1B,QAAAH,YAAW,QAAQ,OAAO,OAAO;AACjC,YAAIA,YAAW,WAAW,MAAM,OAAO,GAAG;AACtC,cAAI,OAAO,KAAK,UAAU,QAAQ,IAAI,GAAG;AACrC,qBAAS,QAAQ,IAAI,EAAE,KAAK,WAAW;AAAA,UAC1C,OACI;AACD,qBAAS,QAAQ,IAAI,IAAI,CAAC,WAAW;AAAA,UACxC;AAAA,QACJ,WACQA,YAAW,qBAChBA,YAAW,kBAAkB,MAAM,OAAO,GAAG;AAC7C,qBAAW,YAAY,IAAI,MAAM,GAAG,QAAQ;AAAA,QAC/C,WACQA,YAAW,iBAChBA,YAAW,cAAc,MAAM,OAAO,GAAG;AACzC,sBAAY,IAAI,YAAY,EAAE,KAAK,SAAU,cAAc;AACvD,gBAAI,WAAW,aAAa;AAC5B,gBAAIA,YAAW,QAAQ,MAAM,QAAQ,GAAG;AACpC,yBAAW,cAAc,QAAQ;AAAA,YACpC,WACQA,YAAW,SAAS,MAAM,QAAQ,KACtCA,YAAW,kBACRA,YAAW,eAAe,MAAM,QAAQ,GAAI;AAChD,yBAAW,aAAa,IAAI,OAAO,GAAG,QAAQ;AAAA,YACjD,WACQA,YAAW,kBAChBA,YAAW,eAAe,MAAM,QAAQ,GAAG;AAC3C,yBAAW,aAAa,IAAI,UAAU,GAAG,QAAQ;AAAA,YACpD;AAAA,UACjB,CAAa;AAAA,QACJ,WACQA,YAAW,gBAChBA,YAAW,aAAa,MAAM,OAAO,GAAG;AACxC,sBAAY,IAAI,UAAU,EAAE,KAAK,SAAU,aAAa;AACpD,gBAAI,UAAU,YAAY;AAC1B,gBAAIA,YAAW,QAAQ,MAAM,OAAO,GAAG;AACnC,yBAAW,aAAa,QAAQ;AAAA,YACnC,WACQA,YAAW,iBAChBA,YAAW,cAAc,MAAM,OAAO,GAAG;AACzC,yBAAW,YAAY,IAAI,UAAU,GAAG,QAAQ;AAAA,YACnD;AAAA,UACjB,CAAa;AAAA,QACJ,WACQA,YAAW,mBAChBA,YAAW,gBAAgB,MAAM,OAAO,GAAG;AAC3C,qBAAW,YAAY,IAAI,SAAS,GAAG,QAAQ;AAAA,QAClD,WACSA,YAAW,wBACjBA,YAAW,qBAAqB,MAAM,OAAO,KAC5CA,YAAW,eACRA,YAAW,YAAY,MAAM,OAAO,KACvCA,YAAW,yBACRA,YAAW,sBAAsB,MAAM,OAAO,GAAI;AACtD,qBAAW,YAAY,IAAI,UAAU,GAAG,QAAQ;AAAA,QACnD;AAAA,MACJ;AACD,eAAS,eAAe,aAAaZ,QAAO;AACxC,YAAI,UAAU,YAAY;AAC1B,QAAAY,YAAW,QAAQ,OAAO,OAAO;AACjC,YAAIA,YAAW,WAAW,MAAM,OAAO,GAAG;AACtC,cAAI,OAAO,KAAKZ,QAAO,QAAQ,IAAI,GAAG;AAClC,YAAAA,OAAM,QAAQ,IAAI,EAAE,KAAK,WAAW;AAAA,UACvC,OACI;AACD,YAAAA,OAAM,QAAQ,IAAI,IAAI,CAAC,WAAW;AAAA,UACrC;AAAA,QACJ;AAAA,MACJ;AACD,eAAS,iBAAiB,eAAeA,QAAO;AAC5C,YAAI,YAAY,cAAc;AAC9B,kCAA0B,OAAO,SAAS;AAC1C,YAAI,OAAO,KAAKA,QAAO,UAAU,IAAI,GAAG;AACpC,UAAAA,OAAM,UAAU,IAAI,EAAE,KAAK,aAAa;AAAA,QAC3C,OACI;AACD,UAAAA,OAAM,UAAU,IAAI,IAAI,CAAC,aAAa;AAAA,QACzC;AAAA,MACJ;AACD,SAAG,SAAS,SAAU,MAAM;AACxB,iBAASmB,SAAQ,MAAMA,QAAOA,SAAQA,OAAM;AACxC,cAAIA,OAAM,SAAS,IAAI;AACnB;AACR,eAAOA;AAAA,MACf;AACI,SAAG,aAAa,SAAU,MAAM;AAC5B,iBAASA,SAAQ,MAAMA,QAAOA,SAAQA,OAAM;AACxC,cAAIA,OAAM,aAAa,IAAI;AACvB;AACR,eAAOA;AAAA,MACf;AACI,SAAG,iBAAiB,WAAY;AAC5B,YAAIA,SAAQ;AACZ,eAAO,CAACA,OAAM;AACV,UAAAA,SAAQA,OAAM;AAClB,eAAOA;AAAA,MACf;AACI,aAAO;AAAA,IACV;AACD,IAAA5C,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;ACnWlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,UAAU,QAAQ,gBAAgBY,aAAkB,CAAA;AACxD,QAAI,SAAS,QAAQ,gBAAgBC,YAAiB,CAAA;AACtD,QAAI,UAAU,QAAQ,gBAAgBC,aAAkB,CAAA;AACxD,QAAI,WAAWE;AACf,aAAS,eAAeQ,OAAM;AAC1B,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,IAAIC,OAAM;AACd,UAAIN,KAAIM,OAAM;AACd,UAAI,WAAWA,OAAM,aAAa;AAClC,UAAI,UAAUA,OAAM,aAAa;AACjC,UAAI,OAAOD,MAAK,IAAI,OAAO,OAAO;AAClC,UAAI,QAAQA,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,WAAW,SAASqB,UAAS,OAAO,YAAY,MAAM;AACtD,YAAI,EAAE,gBAAgBA,YAAW;AAC7B,gBAAM,IAAI,MAAM,sDAAsD;AAAA,QACzE;AACD,aAAK,KAAK,MAAM,OAAO,YAAY,IAAI;AAAA,MAC/C;AACI,UAAI,MAAM,SAAS,YAAY,OAAO,OAAO,KAAK,WAAW;AAAA,QACzD,aAAa;AAAA,UACT,OAAO;AAAA,UACP,YAAY;AAAA,UACZ,UAAU;AAAA,UACV,cAAc;AAAA,QACjB;AAAA,MACT,CAAK;AACD,aAAO,iBAAiB,KAAK;AAAA,QACzB,MAAM;AAAA,UACF,KAAK,WAAY;AACb,mBAAO,eAAe,MAAM,QAAQ;AAAA,cAChC,cAAc;AAAA,cACd,OAAO,KAAK,aAAc;AAAA,YAC9C,CAAiB;AACD,mBAAO,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,QACD,QAAQ;AAAA,UACJ,KAAK,WAAY;AACb,mBAAO,eAAe,MAAM,UAAU;AAAA,cAClC,cAAc;AAAA,cACd,OAAO,KAAK,eAAgB;AAAA,YAChD,CAAiB;AACD,mBAAO,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,QACD,OAAO;AAAA,UACH,KAAK,WAAY;AACb,mBAAO,eAAe,MAAM,SAAS;AAAA,cACjC,cAAc;AAAA,cACd,OAAO,KAAK,cAAe;AAAA,YAC/C,CAAiB;AACD,mBAAO,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACT,CAAK;AACD,UAAI,UAAU,WAAY;AACtB,eAAO,KAAK;AACZ,eAAO,KAAK;AACZ,eAAO,KAAK;AACZ,eAAO,KAAK,UAAU,QAAQ,MAAM,MAAM,SAAS;AAAA,MAC3D;AACI,UAAI,QAAQ,WAAY;AACpB,YAAI,oBAAoB,KAAK;AAC7B,aAAK,QAAO;AACZ,eAAO,uBAAuB,iBAAiB;AAAA,MACvD;AAEI,UAAI,eAAe,WAAY;AAC3B,YAAI,QAAQ,KAAK;AACjB,YAAI,EAAE,KAAK,MAAM,KAAK,GAAG;AACrB,iBAAO;AAAA,QACV;AACD,YAAI,KAAK,KAAK;AACd,eAAO,MAAM,GAAG,QAAQ;AAAA,MAChC;AAEI,UAAI,iBAAiB,WAAY;AAC7B,YAAI,QAAQ,KAAK;AACjB,YAAI,KAAK,KAAK;AACd,YAAI,CAAC,EAAE,KAAK,MAAM,KAAK,GAAG;AACtB,iBAAO,MAAM,CAAC,EAAE,KAAK,MAAM,GAAG,KAAK,GAAG;AAClC,iBAAK,GAAG;AAAA,UACX;AACD,cAAI,IAAI;AACJ,iBAAK,GAAG;AAAA,UACX;AAAA,QACJ;AACD,eAAO,MAAM,CAAC,EAAE,KAAK,MAAM,GAAG,KAAK,GAAG;AAClC,eAAK,GAAG;AAAA,QACX;AACD,eAAO,MAAM;AAAA,MACrB;AAEI,UAAI,gBAAgB,WAAY;AAC5B,YAAI,QAAQ,KAAK;AACjB,YAAI,KAAK,KAAK;AACd,YAAID,SAAQ,MAAM,GAAG;AACrB,YAAI,EAAE,KAAK,MAAM,KAAK,KAClB,MAAM,gBAAgB,KAAK,GAAG;AAC9B,UAAAA,SAAQ,IAAI,MAAM,MAAMA,MAAK;AAAA,QAChC;AACD,eAAOA,UAAS;AAAA,MACxB;AACI,UAAI,mBAAmB,SAAU,MAAM;AACnC,eAAOnB,OAAM,cAAc,KAAK,OAAO,IAAI;AAAA,MACnD;AAcI,UAAI,cAAc,SAAU,yBAAyB;AACjD,YAAI,KAAK,KAAK;AACd,YAAI,CAAC,IAAI;AACL,iBAAO;AAAA,QACV;AACD,YAAI,OAAO,KAAK;AAEhB,YAAI,CAAC,EAAE,WAAW,MAAM,IAAI,GAAG;AAC3B,iBAAO;AAAA,QACV;AAED,YAAI,KAAK,SAAS,cAAc;AAC5B,iBAAO;AAAA,QACV;AACD,eAAO,CAAC,EAAE,KAAK,MAAM,GAAG,KAAK,GAAG;AAC5B,eAAK,GAAG;AACR,cAAI,CAAC,IAAI;AACL,mBAAO;AAAA,UACV;AAAA,QACJ;AACD,YAAI,SAAS,GAAG;AAChB,gBAAQ,KAAK,MAAI;AAAA,UACb,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACD,mBAAO,OAAO,SAAS,sBAChB,KAAK,SAAS,YACd,OAAO,WAAW;AAAA,UAC7B,KAAK;AAAA,UACL,KAAK;AACD,oBAAQ,OAAO,MAAI;AAAA,cACf,KAAK;AACD,uBAAO,KAAK,SAAS,YACd,OAAO,WAAW;AAAA,cAC7B,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AACD,uBAAO;AAAA,cACX,KAAK;AACD,uBAAO,KAAK,SAAS,YACd,OAAO,WAAW;AAAA,cAC7B,KAAK;AAAA,cACL,KAAK,qBAAqB;AACtB,oBAAI,MAAM;AACV,oBAAI,KAAK,OAAO;AAChB,oBAAI,OAAO,WAAW,EAAE;AACxB,oBAAI,KAAK,IAAI;AACb,oBAAI,KAAK,WAAW,EAAE;AACtB,oBAAI,OAAO,IAAI;AACX,yBAAO;AAAA,gBACV;AACD,oBAAI,SAAS,MAAM,KAAK,SAAS,SAAS;AACtC,sBAAI,OAAO,UAAU,KAAK;AACtB,0BAAM,IAAI,MAAM,qBAAqB;AAAA,kBACxC;AACD,yBAAO;AAAA,gBACV;AAAA,cACJ;AAAA,cACD;AACI,uBAAO;AAAA,YACd;AAAA,UACL,KAAK;AACD,oBAAQ,OAAO,MAAI;AAAA,cACf,KAAK;AAKD,uBAAO;AAAA,cACX,KAAK;AACD,uBAAO,KAAK,SAAS;AAAA,cACzB;AAGI,uBAAO;AAAA,YACd;AAAA,UACL,KAAK;AACD,oBAAQ,OAAO,MAAI;AAAA,cACf,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AACD,uBAAO;AAAA,cACX;AACI,uBAAO;AAAA,YACd;AAAA,UACL,KAAK;AACD,mBAAO,OAAO,SAAS,sBAChB,SAAS,MAAM,KAAK,KAAK,KACzB,KAAK,SAAS,YACd,OAAO,WAAW;AAAA,UAC7B,KAAK;AAAA,UACL,KAAK;AACD,oBAAQ,OAAO,MAAI;AAAA,cACf,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AACD,uBAAO;AAAA,cACX,KAAK;AACD,uBAAO,KAAK,SAAS,YACd,OAAO,WAAW;AAAA,cAC7B,KAAK;AACD,uBAAO,KAAK,SAAS,UACd,OAAO,SAAS;AAAA,cAC3B,KAAK;AACD,uBAAO,KAAK,SAAS,YACd,OAAO,WAAW;AAAA,cAC7B;AACI,uBAAO;AAAA,YACd;AAAA,UACL;AACI,gBAAI,OAAO,SAAS,mBAChB,KAAK,SAAS,YACd,OAAO,WAAW,MAAM;AACxB,qBAAO,uBAAuB,IAAI;AAAA,YACrC;AAAA,QACR;AACD,YAAI,4BAA4B,QAC5B,CAAC,KAAK,sBAAuB,KAC7B,KAAK,iBAAkB;AACvB,iBAAO;AACX,eAAO;AAAA,MACf;AACI,eAAS,SAAS,MAAM;AACpB,eAAO,EAAE,iBAAiB,MAAM,IAAI,KAC7B,EAAE,kBAAkB,MAAM,IAAI;AAAA,MACxC;AASD,UAAI,aAAa,CAAA;AACjB;AAAA,QAAC,CAAC,IAAI;AAAA,QACF,CAAC,IAAI;AAAA,QACL,CAAC,GAAG;AAAA,QACJ,CAAC,GAAG;AAAA,QACJ,CAAC,GAAG;AAAA,QACJ,CAAC,MAAM,OAAO,MAAM,KAAK;AAAA,QACzB,CAAC,KAAK,KAAK,MAAM,MAAM,MAAM,YAAY;AAAA,QACzC,CAAC,MAAM,MAAM,KAAK;AAAA,QAClB,CAAC,KAAK,GAAG;AAAA,QACT,CAAC,KAAK,KAAK,GAAG;AAAA,MACtB,EAAM,QAAQ,SAAU,MAAM,GAAG;AACzB,aAAK,QAAQ,SAAU,IAAI;AACvB,qBAAW,EAAE,IAAI;AAAA,QAC7B,CAAS;AAAA,MACT,CAAK;AACD,eAAS,uBAAuB,MAAM;AAClC,YAAI,EAAE,eAAe,MAAM,IAAI,GAAG;AAC9B,iBAAO;AAAA,QACV;AACD,YAAI,QAAQ,MAAM,IAAI,GAAG;AACrB,iBAAO,KAAK,KAAK,sBAAsB;AAAA,QAC1C;AACD,YAAI,EAAE,KAAK,MAAM,IAAI,GAAG;AACpB,iBAAOA,OAAM,UAAU,MAAM,SAAU,OAAO,OAAO;AACjD,mBAAO,uBAAuB,KAAK;AAAA,UACnD,CAAa;AAAA,QACJ;AACD,eAAO;AAAA,MACV;AACD,UAAI,wBAAwB,WAAY;AACpC,YAAI,OAAO,KAAK;AAChB,eAAO,CAAC,EAAE,mBAAmB,MAAM,IAAI,KAChC,CAAC,EAAE,iBAAiB,MAAM,IAAI;AAAA,MAC7C;AACI,UAAI,mBAAmB,WAAY;AAC/B,eAAO,iBAAiB,IAAI;AAAA,MACpC;AACI,eAAS,iBAAiBe,OAAM;AAC5B,iBAAS,MAAM,QAAQA,MAAK,QAAQA,QAAOA,MAAK,QAAQ;AACpD,iBAAOA,MAAK;AACZ,mBAASA,MAAK,OAAO;AACrB,cAAI,EAAE,eAAe,MAAM,MAAM,KAC7BA,MAAK,OAAO,SAAS,UACrBA,MAAK,SAAS,GAAG;AACjB,gBAAI,OAAO,KAAK,CAAC,MAAM,MAAM;AACzB,oBAAM,IAAI,MAAM,qBAAqB;AAAA,YACxC;AACD,mBAAO;AAAA,UACV;AACD,cAAI,EAAE,oBAAoB,MAAM,MAAM,KAClCA,MAAK,SAAS,cAAc;AAC5B,gBAAI,OAAO,eAAe,MAAM;AAC5B,oBAAM,IAAI,MAAM,qBAAqB;AAAA,YACxC;AACD,mBAAO;AAAA,UACV;AACD,cAAI,EAAE,mBAAmB,MAAM,MAAM,KACjCA,MAAK,OAAO,SAAS,iBACrBA,MAAK,SAAS,GAAG;AACjB,gBAAI,OAAO,YAAY,CAAC,MAAM,MAAM;AAChC,oBAAM,IAAI,MAAM,qBAAqB;AAAA,YACxC;AACD;AAAA,UACH;AACD,cAAI,EAAE,eAAe,MAAM,MAAM,KAC7BA,MAAK,SAAS,UAAU;AACxB,gBAAI,OAAO,WAAW,MAAM;AACxB,oBAAM,IAAI,MAAM,qBAAqB;AAAA,YACxC;AACD;AAAA,UACH;AACD,cAAI,EAAE,iBAAiB,MAAM,MAAM,KAC/BA,MAAK,SAAS,UAAU;AACxB,gBAAI,OAAO,WAAW,MAAM;AACxB,oBAAM,IAAI,MAAM,qBAAqB;AAAA,YACxC;AACD;AAAA,UACH;AACD,cAAI,EAAE,sBAAsB,MAAM,MAAM,KACpCA,MAAK,SAAS,QAAQ;AACtB,gBAAI,OAAO,SAAS,MAAM;AACtB,oBAAM,IAAI,MAAM,qBAAqB;AAAA,YACxC;AACD;AAAA,UACH;AACD,cAAI,SAAS,MAAM,KACfA,MAAK,SAAS,QAAQ;AACtB,gBAAI,OAAO,SAAS,MAAM;AACtB,oBAAM,IAAI,MAAM,qBAAqB;AAAA,YACxC;AACD;AAAA,UACH;AACD,cAAI,EAAE,gBAAgB,MAAM,MAAM,KAC9B,CAAC,OAAO,UACRA,MAAK,SAAS,YAAY;AAC1B,gBAAI,OAAO,aAAa,MAAM;AAC1B,oBAAM,IAAI,MAAM,qBAAqB;AAAA,YACxC;AACD;AAAA,UACH;AACD,iBAAO;AAAA,QACV;AACD,eAAO;AAAA,MACV;AAID,eAAS,uBAAuB,mBAAmB;AAC/C,YAAI,EAAE,oBAAoB,MAAM,kBAAkB,IAAI,GAAG;AACrD,cAAI,eAAe,kBAAkB,IAAI,cAAc,EAAE;AACzD,cAAI,CAAC,gBAAgB,aAAa,WAAW,GAAG;AAC5C,mBAAO,kBAAkB;UAC5B;AAAA,QACJ,WACQ,EAAE,oBAAoB,MAAM,kBAAkB,IAAI,GAAG;AAC1D,cAAI,CAAC,kBAAkB,IAAI,YAAY,EAAE,OAAO;AAC5C,mBAAO,kBAAkB;UAC5B;AAAA,QACJ,WACQ,EAAE,YAAY,MAAM,kBAAkB,IAAI,GAAG;AAClD,uCAA6B,iBAAiB;AAAA,QACjD;AACD,eAAO;AAAA,MACV;AACD,eAAS,6BAA6B,aAAa;AAC/C,YAAI,iBAAiB,YAAY,IAAI,MAAM,EAAE;AAC7C,YAAI,YAAY,YAAY,IAAI,WAAW,EAAE;AAC7C,YAAI,aAAa,YAAY,IAAI,YAAY,EAAE;AAC/C,YAAI,CAAC,cAAc,CAAC,WAAW;AAC3B,cAAI,0BAA0BrB,GAAE,oBAAoB,cAAc;AAClE,sBAAY,QAAQ,uBAAuB;AAAA,QAC9C,WACQ,CAAC,cAAc,WAAW;AAC/B,cAAI,wBAAwBA,GAAE,gBAAgB,KAAK,gBAAgB,IAAI;AACvE,cAAI,EAAE,gBAAgB,MAAM,cAAc,KAAK,eAAe,aAAa,KAAK;AAC5E,oCAAwB,eAAe;AAAA,UAC1C;AACD,sBAAY,IAAI,MAAM,EAAE,QAAQ,qBAAqB;AACrD,sBAAY,IAAI,YAAY,EAAE,QAAQ,SAAS;AAC/C,sBAAY,IAAI,WAAW,EAAE,QAAO;AAAA,QACvC;AAAA,MACJ;AACD,aAAO;AAAA,IACV;AACD,IAAAnB,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;AC3ZlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,UAAU,QAAQ,gBAAgBY,aAAkB,CAAA;AACxD,QAAI,cAAc,QAAQ,gBAAgBC,gBAAsB,CAAA;AAChE,QAAI,WAAWC;AACf,QAAI,SAAS,OAAO,UAAU;AAC9B,aAAS,kBAAkBU,OAAM;AAC7B,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,WAAWA,MAAK,IAAI,YAAY,OAAO;AAC3C,UAAI,UAAUC,OAAM,aAAa;AACjC,UAAI,WAAWA,OAAM,aAAa;AAClC,UAAI,aAAaA,OAAM,aAAa;AACpC,UAAIqB;AACJ,UAAI,cAAc,SAASC,eAAc;AACrC,YAAI,EAAE,gBAAgBA,eAAc;AAChC,gBAAM,IAAI,MAAM,yDAAyD;AAAA,QAC5E;AAED,aAAK,wBAAwB;AAC7B,aAAK,mBAAmB,uBAAuB,IAAI;AACnD,aAAK,uBACD,OAAO,KAAK,KAAK,kBAAkB,OAAO,KACtC,OAAO,KAAK,KAAK,kBAAkB,MAAM;AACjD,aAAK,UAAU,uBAAuB,IAAI;AAE1C,aAAK,YAAY;AACjB,aAAK,kBAAkB;AAAA,MAC/B;AACI,eAAS,uBAAuB,SAAS;AACrC,YAAI,YAAY,uBAAO,OAAO,IAAI;AAClC,iBAAS,cAAc,SAAS;AAC5B,cAAI,cAAc,KAAK,UAAU,GAAG;AAChC,sBAAU,WAAW,MAAM,QAAQ,MAAM,CAAC,IAAI;AAAA,UACjD;AAAA,QACJ;AACD,YAAI,iBAAiBtB,OAAM,4BAA4B,SAAS;AAChE,YAAI,kBAAkB,uBAAO,OAAO,IAAI;AACxC,YAAI,eAAe,OAAO,KAAK,cAAc;AAC7C,YAAI,gBAAgB,aAAa;AACjC,iBAAS,IAAI,GAAG,IAAI,eAAe,EAAE,GAAG;AACpC,cAAI,WAAW,aAAa,CAAC;AAC7B,uBAAa,UAAU,eAAe,QAAQ;AAC9C,cAAI,WAAW,MAAM,QAAQ,UAAU,CAAC,GAAG;AACvC,4BAAgB,QAAQ,IAAI;AAAA,UAC/B;AAAA,QACJ;AACD,eAAO;AAAA,MACV;AACD,kBAAY,oBAAoB,SAAS,kBAAkB,SAAS;AAChE,YAAI,mBAAmB,aAAa;AAChC,iBAAO;AAAA,QACV;AACD,YAAI,CAAC,SAAS,MAAM,OAAO,GAAG;AAE1B,iBAAO,IAAI;AAAA,QACd;AACD,YAAI,UAAU,SAASuB,WAAU;AAC7B,cAAI,EAAE,gBAAgBA,WAAU;AAC5B,kBAAM,IAAI,MAAM,qDAAqD;AAAA,UACxE;AACD,sBAAY,KAAK,IAAI;AAAA,QACjC;AACQ,YAAI,KAAK,QAAQ,YAAY,OAAO,OAAO,GAAG;AAC9C,WAAG,cAAc;AACjB,eAAO,IAAI,OAAO;AAClB,eAAO,SAAS,WAAW;AAC3B,mBAAW,OAAO,QAAQ,iBAAiB;AAC3C,mBAAW,OAAO,QAAQ,KAAK;AAC/B,eAAO,IAAI;AAAA,MACnB;AACI,eAAS,OAAO,QAAQ,QAAQ;AAC5B,iBAAS,YAAY,QAAQ;AACzB,cAAI,OAAO,KAAK,QAAQ,QAAQ,GAAG;AAC/B,mBAAO,QAAQ,IAAI,OAAO,QAAQ;AAAA,UACrC;AAAA,QACJ;AACD,eAAO;AAAA,MACV;AACD,kBAAY,QAAQ,SAAS,MAAM,MAAM,SAAS;AAC9C,eAAO,YAAY,kBAAkB,OAAO,EAAE,MAAM,IAAI;AAAA,MAChE;AACI,UAAI,MAAM,YAAY;AACtB,UAAI,QAAQ,WAAY;AACpB,YAAI,KAAK,WAAW;AAChB,gBAAM,IAAI,MAAM,oHAC0C;AAAA,QAC7D;AAED,aAAK,YAAY;AACjB,aAAK,kBAAkB;AACvB,aAAK,kBAAkB;AACvB,YAAI,OAAO,UAAU;AACrB,YAAI,OAAO,IAAI,MAAM,IAAI;AACzB,iBAAS,IAAI,GAAG,IAAI,MAAM,EAAE,GAAG;AAC3B,eAAK,CAAC,IAAI,UAAU,CAAC;AAAA,QACxB;AACD,YAAI,EAAE,KAAK,CAAC,aAAa,WAAW;AAChC,eAAK,CAAC,IAAI,IAAI,SAAS,EAAE,MAAM,KAAK,CAAC,EAAG,CAAA,EAAE,IAAI,MAAM;AAAA,QACvD;AAED,aAAK,MAAM,MAAM,MAAM,IAAI;AAC3B,YAAI;AACJ,YAAI;AACA,cAAI,OAAO,KAAK,kBAAkB,KAAK,CAAC,CAAC;AACzC,wBAAc;AAAA,QACjB,UACO;AACJ,eAAK,YAAY;AACjB,cAAI,CAAC,eAAe,KAAK,iBAAiB;AAStC,mBAAO,KAAK,CAAC,EAAE;AAAA,UAClB;AAAA,QACJ;AACD,eAAO;AAAA,MACf;AACI,UAAI,eAAe,SAAS,eAAe;AAAA;AAC3C,UAAI,QAAQ,WAAY;AACpB,YAAI,UAAU;AACd,gBAAQ,kBAAkB;AAC1B,YAAIC,WAAU,IAAI,QAAQ;AAI1B,QAAAA,SAAQ,SAAS,WAAY;AACzB,kBAAQ,kBAAkB;AAAA,QACtC;AACQ,cAAMA;AAAA,MACd;AACI,UAAI,QAAQ,SAAU,OAAmC;AAAA,MAE7D;AACI,UAAI,oBAAoB,SAAUT,OAAM;AACpC,YAAI,gBAAgB,KAAK,SAAS;AAI9B,iBAAO,KAAK,QAAQ,kBAAkBA,KAAI;AAAA,QAC7C;AACD,YAAI,EAAEA,iBAAgB,WAAW;AAC7B,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,YAAI,QAAQA,MAAK;AACjB,YAAI,aAAa,SACb,OAAO,UAAU,YACjB,OAAO,MAAM,SAAS,YACtB,KAAK,iBAAiB,MAAM,IAAI;AACpC,YAAI,YAAY;AACZ,cAAI,UAAU,KAAK,eAAeA,KAAI;AACtC,cAAI;AACA,mBAAO,QAAQ,oBAAoB,UAAU;AAAA,UAChD,UACO;AACJ,iBAAK,eAAe,OAAO;AAAA,UAC9B;AAAA,QACJ,OACI;AAGD,iBAAO,cAAcA,OAAM,IAAI;AAAA,QAClC;AAAA,MACT;AACI,eAAS,cAAcA,OAAM,SAAS;AAClC,YAAI,EAAEA,iBAAgB,WAAW;AAC7B,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,YAAI,EAAE,mBAAmB,cAAc;AACnC,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,YAAI,QAAQA,MAAK;AACjB,YAAI,QAAQ,MAAM,KAAK,GAAG;AACtB,UAAAA,MAAK,KAAK,QAAQ,mBAAmB,OAAO;AAAA,QAC/C,WACQ,CAAC,SAAS,MAAM,KAAK,EAAG;AAAA,aAG5B;AACD,cAAI,aAAaf,OAAM,cAAc,KAAK;AAI1C,cAAI,QAAQ,wBACR,MAAM,YACN,WAAW,QAAQ,UAAU,IAAI,GAAG;AACpC,uBAAW,KAAK,UAAU;AAAA,UAC7B;AACD,cAAI,aAAa,WAAW;AAC5B,cAAI,aAAa,CAAA;AACjB,mBAAS,IAAI,GAAG,IAAI,YAAY,EAAE,GAAG;AACjC,gBAAI,YAAY,WAAW,CAAC;AAC5B,gBAAI,CAAC,OAAO,KAAK,OAAO,SAAS,GAAG;AAChC,oBAAM,SAAS,IAAIA,OAAM,cAAc,OAAO,SAAS;AAAA,YAC1D;AACD,uBAAW,KAAKe,MAAK,IAAI,SAAS,CAAC;AAAA,UACtC;AACD,mBAAS,IAAI,GAAG,IAAI,YAAY,EAAE,GAAG;AACjC,oBAAQ,kBAAkB,WAAW,CAAC,CAAC;AAAA,UAC1C;AAAA,QACJ;AACD,eAAOA,MAAK;AAAA,MACf;AACD,UAAI,iBAAiB,SAAUA,OAAM;AACjC,YAAI,KAAK,sBAAsB,WAAW,GAAG;AACzC,iBAAO,IAAI,KAAK,QAAQA,KAAI;AAAA,QAC/B;AACD,eAAO,KAAK,sBAAsB,IAAK,EAAC,MAAMA,KAAI;AAAA,MAC1D;AACI,UAAI,iBAAiB,SAAU,SAAS;AACpC,YAAI,EAAE,mBAAmB,KAAK,UAAU;AACpC,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,aAAK,sBAAsB,KAAK,OAAO;AACvC,gBAAQ,cAAc;AAAA,MAC9B;AACI,UAAI,gBAAgB,WAAY;AAC5B,aAAK,kBAAkB;AAAA,MAC/B;AACI,UAAI,oBAAoB,WAAY;AAChC,eAAO,KAAK;AAAA,MACpB;AACI,eAAS,uBAAuB,SAAS;AACrC,iBAAS,QAAQA,OAAM;AACnB,cAAI,EAAE,gBAAgB,UAAU;AAC5B,kBAAM,IAAI,MAAM,EAAE;AAAA,UACrB;AACD,cAAI,EAAE,gBAAgB,cAAc;AAChC,kBAAM,IAAI,MAAM,EAAE;AAAA,UACrB;AACD,cAAI,EAAEA,iBAAgB,WAAW;AAC7B,kBAAM,IAAI,MAAM,EAAE;AAAA,UACrB;AACD,iBAAO,eAAe,MAAM,WAAW;AAAA,YACnC,OAAO;AAAA,YACP,UAAU;AAAA,YACV,YAAY;AAAA,YACZ,cAAc;AAAA,UAC9B,CAAa;AACD,eAAK,cAAcA;AACnB,eAAK,qBAAqB;AAC1B,iBAAO,KAAK,IAAI;AAAA,QACnB;AACD,YAAI,EAAE,mBAAmB,cAAc;AACnC,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AAGD,YAAI,KAAK,QAAQ,YAAY,OAAO,OAAO,OAAO;AAClD,WAAG,cAAc;AACjB,eAAO,IAAI,yBAAyB;AACpC,eAAO;AAAA,MACV;AAID,UAAI,4BAA4B,uBAAO,OAAO,IAAI;AAClD,gCAA0B,QACtB,SAAS,MAAMA,OAAM;AACjB,YAAI,EAAE,gBAAgB,KAAK,UAAU;AACjC,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,YAAI,EAAEA,iBAAgB,WAAW;AAC7B,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,aAAK,cAAcA;AACnB,aAAK,qBAAqB;AAC1B,eAAO;AAAA,MACnB;AACI,gCAA0B,sBACtB,SAAS,oBAAoB,YAAY;AACrC,YAAI,EAAE,gBAAgB,KAAK,UAAU;AACjC,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,YAAI,EAAE,KAAK,uBAAuB,WAAW;AACzC,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,YAAI,SAAS,KAAK,QAAQ,UAAU,EAAE,KAAK,MAAM,KAAK,WAAW;AACjE,YAAI,WAAW,OAAO;AAIlB,eAAK,qBAAqB;AAAA,QAC7B,WACQ,WAAWM,aAAW;AAG3B,eAAK,cAAc,KAAK,YAAY,QAAQ,MAAM,EAAE,CAAC;AACrD,cAAI,KAAK,oBAAoB;AAGzB,iBAAK,SAAS,KAAK,WAAW;AAAA,UACjC;AAAA,QACJ;AACD,YAAI,KAAK,uBAAuB,OAAO;AACnC,gBAAM,IAAI,MAAM,uDAAuD,UAAU;AAAA,QACpF;AACD,YAAIN,QAAO,KAAK;AAChB,eAAOA,SAAQA,MAAK;AAAA,MAChC;AACI,gCAA0B,WACtB,SAAS,SAASA,OAAM,YAAY;AAChC,YAAI,EAAE,gBAAgB,KAAK,UAAU;AACjC,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,YAAI,EAAEA,iBAAgB,WAAW;AAC7B,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,YAAI,EAAE,KAAK,uBAAuB,WAAW;AACzC,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,aAAK,qBAAqB;AAC1B,eAAO,cAAcA,OAAM,YAAY,kBAAkB,cAAc,KAAK,OAAO,CAAC;AAAA,MAChG;AACI,gCAA0B,QACtB,SAAS,MAAMA,OAAM,YAAY;AAC7B,YAAI,EAAE,gBAAgB,KAAK,UAAU;AACjC,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,YAAI,EAAEA,iBAAgB,WAAW;AAC7B,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,YAAI,EAAE,KAAK,uBAAuB,WAAW;AACzC,gBAAM,IAAI,MAAM,EAAE;AAAA,QACrB;AACD,aAAK,qBAAqB;AAC1B,eAAO,YAAY,kBAAkB,cAAc,KAAK,OAAO,EAAE,kBAAkBA,KAAI;AAAA,MACnG;AACI,gCAA0B,gBAAgB,SAAS,gBAAgB;AAC/D,aAAK,QAAQ;MACrB;AACI,gCAA0B,QAAQ,SAAS,QAAQ;AAC/C,aAAK,qBAAqB;AAC1B,aAAK,QAAQ;MACrB;AACI,aAAO;AAAA,IACV;AACD,IAAAxC,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;;ACvVlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,WAAWY;AACf,QAAI,UAAU,QAAQ,gBAAgBC,aAAkB,CAAA;AACxD,aAAS,UAAUW,OAAM;AACrB,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,gBAAgBC,OAAM;AAC1B,UAAI,gBAAgBA,OAAM;AAC1B,UAAI,UAAUA,OAAM,aAAa;AACjC,UAAI,WAAWA,OAAM,aAAa;AAClC,UAAI,SAASA,OAAM,aAAa;AAChC,UAAI,WAAWA,OAAM,aAAa;AAClC,UAAI,SAAS,OAAO,UAAU;AAC9B,eAAS,sBAAsB,GAAGN,IAAG,aAAa;AAC9C,YAAI,QAAQ,MAAM,WAAW,GAAG;AAC5B,sBAAY,SAAS;AAAA,QACxB,OACI;AACD,wBAAc;AAAA,QACjB;AACD,eAAO,cAAc,GAAGA,IAAG,WAAW;AAAA,MACzC;AACD,4BAAsB,SAAS,SAAU,GAAGA,IAAG;AAC3C,YAAI,cAAc,CAAA;AAClB,YAAI,CAAC,sBAAsB,GAAGA,IAAG,WAAW,GAAG;AAC3C,cAAI,YAAY,WAAW,GAAG;AAC1B,gBAAI,MAAMA,IAAG;AACT,oBAAM,IAAI,MAAM,qBAAqB;AAAA,YACxC;AAAA,UACJ,OACI;AACD,kBAAM,IAAI,MAAM,yCACZ,YAAY,IAAI,oBAAoB,EAAE,KAAK,EAAE,CAAC;AAAA,UACrD;AAAA,QACJ;AAAA,MACT;AACI,eAAS,qBAAqB,UAAU;AACpC,YAAI,sBAAsB,KAAK,QAAQ,GAAG;AACtC,iBAAO,MAAM;AAAA,QAChB;AACD,eAAO,MAAM,KAAK,UAAU,QAAQ,IAAI;AAAA,MAC3C;AACD,eAAS,cAAc,GAAGA,IAAG,aAAa;AACtC,YAAI,MAAMA,IAAG;AACT,iBAAO;AAAA,QACV;AACD,YAAI,QAAQ,MAAM,CAAC,GAAG;AAClB,iBAAO,oBAAoB,GAAGA,IAAG,WAAW;AAAA,QAC/C;AACD,YAAI,SAAS,MAAM,CAAC,GAAG;AACnB,iBAAO,qBAAqB,GAAGA,IAAG,WAAW;AAAA,QAChD;AACD,YAAI,OAAO,MAAM,CAAC,GAAG;AACjB,iBAAO,OAAO,MAAMA,EAAC,KAAM,CAAC,MAAM,CAACA;AAAA,QACtC;AACD,YAAI,SAAS,MAAM,CAAC,GAAG;AACnB,iBAAO,SAAS,MAAMA,EAAC,MAAM,EAAE,WAAWA,GAAE,UACxC,EAAE,WAAWA,GAAE,UACf,EAAE,cAAcA,GAAE,aAClB,EAAE,eAAeA,GAAE;AAAA,QAC1B;AACD,eAAO,KAAKA;AAAA,MACf;AACD,eAAS,oBAAoB,GAAGA,IAAG,aAAa;AAC5C,gBAAQ,OAAO,CAAC;AAChB,YAAI,UAAU,EAAE;AAChB,YAAI,CAAC,QAAQ,MAAMA,EAAC,KAAKA,GAAE,WAAW,SAAS;AAC3C,cAAI,aAAa;AACb,wBAAY,KAAK,QAAQ;AAAA,UAC5B;AACD,iBAAO;AAAA,QACV;AACD,iBAAS,IAAI,GAAG,IAAI,SAAS,EAAE,GAAG;AAC9B,cAAI,aAAa;AACb,wBAAY,KAAK,CAAC;AAAA,UACrB;AACD,cAAI,KAAK,MAAM,KAAKA,IAAG;AACnB,mBAAO;AAAA,UACV;AACD,cAAI,CAAC,cAAc,EAAE,CAAC,GAAGA,GAAE,CAAC,GAAG,WAAW,GAAG;AACzC,mBAAO;AAAA,UACV;AACD,cAAI,aAAa;AACb,gBAAI,kBAAkB,YAAY;AAClC,gBAAI,oBAAoB,GAAG;AACvB,oBAAM,IAAI,MAAM,KAAK,eAAe;AAAA,YACvC;AAAA,UACJ;AAAA,QACJ;AACD,eAAO;AAAA,MACV;AACD,eAAS,qBAAqB,GAAGA,IAAG,aAAa;AAC7C,iBAAS,OAAO,CAAC;AACjB,YAAI,CAAC,SAAS,MAAMA,EAAC,GAAG;AACpB,iBAAO;AAAA,QACV;AAED,YAAI,EAAE,SAASA,GAAE,MAAM;AACnB,cAAI,aAAa;AACb,wBAAY,KAAK,MAAM;AAAA,UAC1B;AACD,iBAAO;AAAA,QACV;AACD,YAAI,SAAS,cAAc,CAAC;AAC5B,YAAI,aAAa,OAAO;AACxB,YAAI,SAAS,cAAcA,EAAC;AAC5B,YAAI,aAAa,OAAO;AACxB,YAAI,eAAe,YAAY;AAC3B,mBAAS,IAAI,GAAG,IAAI,YAAY,EAAE,GAAG;AACjC,gBAAI,OAAO,OAAO,CAAC;AACnB,gBAAI,SAAS,cAAc,GAAG,IAAI;AAClC,gBAAI,SAAS,cAAcA,IAAG,IAAI;AAClC,gBAAI,aAAa;AACb,0BAAY,KAAK,IAAI;AAAA,YACxB;AACD,gBAAI,CAAC,cAAc,QAAQ,QAAQ,WAAW,GAAG;AAC7C,qBAAO;AAAA,YACV;AACD,gBAAI,aAAa;AACb,kBAAI,kBAAkB,YAAY;AAClC,kBAAI,oBAAoB,MAAM;AAC1B,sBAAM,IAAI,MAAM,KAAK,eAAe;AAAA,cACvC;AAAA,YACJ;AAAA,UACJ;AACD,iBAAO;AAAA,QACV;AACD,YAAI,CAAC,aAAa;AACd,iBAAO;AAAA,QACV;AAGD,YAAI,YAAY,uBAAO,OAAO,IAAI;AAClC,aAAK,IAAI,GAAG,IAAI,YAAY,EAAE,GAAG;AAC7B,oBAAU,OAAO,CAAC,CAAC,IAAI;AAAA,QAC1B;AACD,aAAK,IAAI,GAAG,IAAI,YAAY,EAAE,GAAG;AAC7B,iBAAO,OAAO,CAAC;AACf,cAAI,CAAC,OAAO,KAAK,WAAW,IAAI,GAAG;AAC/B,wBAAY,KAAK,IAAI;AACrB,mBAAO;AAAA,UACV;AACD,iBAAO,UAAU,IAAI;AAAA,QACxB;AACD,aAAK,QAAQ,WAAW;AACpB,sBAAY,KAAK,IAAI;AACrB;AAAA,QACH;AACD,eAAO;AAAA,MACV;AACD,aAAO;AAAA,IACV;AACD,IAAAnB,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;AC1JlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,UAAU,QAAQ,gBAAgBY,aAAkB,CAAA;AACxD,QAAI,iBAAiB,QAAQ,gBAAgBC,mBAAyB,CAAA;AACtE,QAAI,UAAU,QAAQ,gBAAgBC,aAAkB,CAAA;AACxD,QAAI,SAAS,QAAQ,gBAAgBE,YAAiB,CAAA;AACtD,QAAI,cAAc,QAAQ,gBAAgBkC,gBAAsB,CAAA;AAChE,QAAI,WAAWC;AACf,aAAS,UAAU,SAAS;AACxB,UAAI3B,QAAO;AACX,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,cAAQ,QAAQA,MAAK,GAAG;AACxB,MAAAC,OAAM,SAAQ;AACd,UAAI,cAAcD,MAAK,IAAI,eAAe,OAAO;AACjD,aAAO;AAAA,QACH,MAAMC,OAAM;AAAA,QACZ,cAAcA,OAAM;AAAA,QACpB,YAAYA,OAAM;AAAA,QAClB,UAAUA,OAAM;AAAA,QAChB,cAAcA,OAAM;AAAA,QACpB,eAAeA,OAAM;AAAA,QACrB,eAAeA,OAAM;AAAA,QACrB,WAAWA,OAAM;AAAA,QACjB,WAAWA,OAAM;AAAA,QACjB,mBAAmBA,OAAM;AAAA,QACzB,gBAAgBA,OAAM;AAAA,QACtB,uBAAuBD,MAAK,IAAI,QAAQ,OAAO;AAAA,QAC/C,UAAUC,OAAM;AAAA,QAChB,MAAMD,MAAK,IAAI,OAAO,OAAO;AAAA,QAC7B,UAAUA,MAAK,IAAI,YAAY,OAAO;AAAA,QACtC;AAAA,QACA,KAAKA,MAAK;AAAA,QACV,OAAO,YAAY;AAAA,MAC3B;AAAA,IACC;AACD,IAAAxB,SAAA,UAAkB;AAElB,aAAS,aAAa;AAClB,UAAI,OAAO,CAAA;AACX,UAAI,aAAa,CAAA;AACjB,eAAS,IAAI,QAAQ;AACjB,YAAI,MAAM,KAAK,QAAQ,MAAM;AAC7B,YAAI,QAAQ,IAAI;AACZ,gBAAM,KAAK;AACX,eAAK,KAAK,MAAM;AAChB,qBAAW,GAAG,IAAI,OAAOwB,KAAI;AAAA,QAChC;AACD,eAAO,WAAW,GAAG;AAAA,MACxB;AACD,UAAIA,QAAO,EAAE;AACb,aAAOA;AAAA,IACV;AACD,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOc;AAAA,IAAS,CAAA;AAAA;;;;;;;;;;;;;;;;ACpDlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,WAAWC;AACf,aAAS,YAAY;AACjB,aAAO;AAAA,QACH,iBAAiB;AAAA,UACb;AAAA,UAAM;AAAA,UAAM;AAAA,UAAO;AAAA,UACnB;AAAA,UAAK;AAAA,UAAM;AAAA,UAAK;AAAA,UAChB;AAAA,UAAM;AAAA,UAAM;AAAA,UACZ;AAAA,UAAK;AAAA,UAAK;AAAA,UAAK;AAAA,UAAK;AAAA,UACpB;AAAA,UACA;AAAA,UAAK;AAAA,UAAK;AAAA,UACV;AAAA,QACH;AAAA,QACD,qBAAqB;AAAA,UACjB;AAAA,UAAK;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC7B;AAAA,UAAO;AAAA,UAAO;AAAA,UACd;AAAA,UAAM;AAAA,UAAM;AAAA,QACf;AAAA,QACD,kBAAkB;AAAA,UACd;AAAA,UAAM;AAAA,QACT;AAAA,MACT;AAAA,IACC;AACD,IAAAD,SAAA,UAAkB;AAClB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;ACxBlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,WAAWY;AACf,QAAI,SAAS,QAAQ,gBAAgBC,cAAiB,CAAA;AACtD,aAAS,UAAUW,OAAM;AACrB,UAAI,SAASA,MAAK,IAAI,OAAO,OAAO;AAIpC,UAAI,OAAO,gBAAgB,QAAQ,IAAI,IAAI,GAAG;AAC1C,eAAO,gBAAgB,KAAK,IAAI;AAAA,MACnC;AACD,UAAI,OAAO,oBAAoB,QAAQ,KAAK,IAAI,GAAG;AAC/C,eAAO,oBAAoB,KAAK,KAAK;AAAA,MACxC;AACD,aAAO;AAAA,IACV;AACD,IAAAxB,SAAA,UAAkB;AAClB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;AClBlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,WAAWY;AACf,QAAI,WAAW,QAAQ,gBAAgBC,gBAAmB,CAAA;AAC1D,aAAS,UAAUW,OAAM;AACrB,UAAI,SAASA,MAAK,IAAI,SAAS,OAAO;AAGtC,UAAI,OAAO,iBAAiB,QAAQ,IAAI,IAAI,GAAG;AAC3C,eAAO,iBAAiB,KAAK,IAAI;AAAA,MACpC;AACD,aAAO;AAAA,IACV;AACD,IAAAxB,SAAA,UAAkB;AAClB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;ACdlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,WAAWY;AACf,QAAI,WAAW,QAAQ,gBAAgBC,gBAAmB,CAAA;AAC1D,aAAS,UAAUW,OAAM;AACrB,UAAI,SAASA,MAAK,IAAI,SAAS,OAAO;AAGtC,aAAO,iBAAiB,QAAQ,SAAU,IAAI;AAC1C,YAAI,WAAW,KAAK;AACpB,YAAI,OAAO,oBAAoB,QAAQ,QAAQ,IAAI,GAAG;AAClD,iBAAO,oBAAoB,KAAK,QAAQ;AAAA,QAC3C;AAAA,MACT,CAAK;AACD,aAAO;AAAA,IACV;AACD,IAAAxB,SAAA,UAAkB;AAClB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;;;;;;;;ACjBlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,SAAS,QAAQ,gBAAgBY,cAA2B,CAAA;AAChE,QAAI,UAAU,QAAQ,gBAAgBC,aAAmB,CAAA;AACzD,QAAI,WAAW,QAAQ,aAAaC,cAAoB,CAAA;AACxD,aAAS,UAAUU,OAAM;AACrB,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,OAAOC,OAAM;AACjB,UAAI,MAAM,KAAK;AACf,UAAI,KAAK,KAAK;AACd,UAAI2B,UAAS5B,MAAK,IAAI,SAAS,OAAO;AACtC,UAAI,WAAW4B,QAAO;AACtB,UAAI,MAAMA,QAAO;AACjB,UAAI,KAAK5B,MAAK,IAAI,OAAO,OAAO,GAAG,kBAAkB,GAAG,iBAAiB,sBAAsB,GAAG,qBAAqB,mBAAmB,GAAG;AAG7I,UAAI,WAAW,EACV,MAAM,OAAO,GAAG,IAAI,gBAAgB,GAAG,IAAI,GAAG,SAAS,MAAM,GAAG,IAAI;AACzE,UAAI,MAAM,EACL,MAAM,WAAW,EACjB,MAAM,QAAQ,MAAM,EACpB,MAAM,YAAY,GAAG,CAAC,IAAI,SAAS,CAAC,GAAG,IAAI,GAAG,SAAS,MAAM,GAAG,IAAI;AACzE,UAAI,gBAAgB,EACf,MAAM,SAAS,IAAI,UAAU,CAAC,EAC9B,MAAM,OAAO,IAAI,UAAU,CAAC,EAC5B,MAAM,UAAU,GAAG,QAAQ,IAAI,GAAG,SAAS,MAAM,CAAC;AACvD,UAAI,UAAU,EACT,MAAM,QAAQ,IAAI,CAAC,CAAC,EACpB,MAAM,UAAU,IAAI,CAAC,CAAC;AAC3B,UAAI,MAAM,EACL,MAAM,MAAM,EACZ,MAAM,WAAW,MAAM,EACvB,MAAM,WAAW,IAAI,SAAS,CAAC,EAC/B,MAAM,QAAQ,GAAG,QAAQ,IAAI,GAAG,SAAS,MAAM,CAAC;AACrD,UAAI,SAAS,EACR,MAAM,MAAM,EACZ,MAAM,MAAM,EACZ,MAAM,QAAQ,CAAC,IAAI,WAAW,CAAC,CAAC;AACrC,UAAI,UAAU,EACT,MAAM,MAAM,EACZ,MAAM,MAAM,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EACzD,MAAM,UAAU,CAAC,IAAI,SAAS,CAAC,CAAC,EAChC,MAAM,QAAQ,IAAI,gBAAgB,CAAC,EACnC,MAAM,aAAa,SAAS,SAAS,OAAO,CAAC,EAC7C,MAAM,SAAS,SAAS,SAAS,OAAO,CAAC;AAC9C,UAAI,WAAW,EAAE,MAAM,MAAM;AAG7B,UAAI,gBAAgB,EAAE,MAAM,WAAW,EAAE,MAAK;AAC9C,UAAI,gBAAgB,EACf,MAAM,WAAW,EACjB,MAAM,MAAM,EACZ,MAAM,QAAQ,CAAC,IAAI,WAAW,CAAC,CAAC;AAGrC,UAAI,qBAAqB,EACpB,MAAM,WAAW,EACjB,MAAM,YAAY,EAClB,MAAM,cAAc,IAAI,YAAY,CAAC;AAC1C,UAAI,aAAa,EACZ,MAAM,WAAW,EACjB,MAAM,QAAQ,cAAc,WAAW,EACvC,MAAM,QAAQ,IAAI,YAAY,CAAC,EAC/B,MAAM,cAAc,IAAI,WAAW,CAAC,EACpC,MAAM,aAAa,GAAG,IAAI,WAAW,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACpE,UAAI,kBAAkB,EACjB,MAAM,WAAW,EACjB,MAAM,SAAS,MAAM,EACrB,MAAM,SAAS,IAAI,YAAY,CAAC,EAChC,MAAM,QAAQ,IAAI,WAAW,CAAC;AACnC,UAAI,gBAAgB,EACf,MAAM,WAAW,EACjB,MAAM,OAAO,EACb,MAAM,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACjE,UAAI,mBAAmB,EAClB,MAAM,WAAW,EACjB,MAAM,OAAO,EACb,MAAM,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACjE,UAAI,eAAe,EACd,MAAM,WAAW,EACjB,MAAM,UAAU,MAAM,EACtB,MAAM,UAAU,IAAI,YAAY,CAAC,EACjC,MAAM,QAAQ,IAAI,WAAW,CAAC;AACnC,UAAI,iBAAiB,EAChB,MAAM,WAAW,EACjB,MAAM,gBAAgB,SAAS,SAAS,EACxC,MAAM,gBAAgB,IAAI,YAAY,CAAC,EACvC,MAAM,SAAS,CAAC,IAAI,YAAY,CAAC,CAAC,EAClC,MAAM,WAAW,SAAS,SAAS,OAAO,CAAC;AAChD,UAAI,iBAAiB,EAChB,MAAM,WAAW,EACjB,MAAM,UAAU,EAChB,MAAM,YAAY,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC;AAClD,UAAI,gBAAgB,EACf,MAAM,WAAW,EACjB,MAAM,UAAU,EAChB,MAAM,YAAY,IAAI,YAAY,CAAC;AACxC,UAAI,cAAc,EACb,MAAM,WAAW,EACjB,MAAM,SAAS,WAAW,WAAW,EACrC,MAAM,SAAS,IAAI,gBAAgB,CAAC,EACpC,MAAM,WAAW,GAAG,IAAI,aAAa,GAAG,IAAI,GAAG,WAAY;AAC5D,eAAO,KAAK,YAAY,KAAK,SAAS,CAAC,KAAK;AAAA,MACpD,CAAK,EACI,MAAM,YAAY,CAAC,IAAI,aAAa,CAAC,GAAG,WAAY;AACrD,eAAO,KAAK,UAAU,CAAC,KAAK,OAAO,IAAI,CAAA;AAAA,MAC1C,GAAE,IAAI,EACF,MAAM,mBAAmB,CAAC,IAAI,aAAa,CAAC,GAAG,SAAS,UAAU,EAClE,MAAM,aAAa,GAAG,IAAI,gBAAgB,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACzE,UAAI,aAAa,EACZ,MAAM,MAAM,EACZ,MAAM,SAAS,SAAS,MAAM,EAC9B,MAAM,SAAS,IAAI,SAAS,CAAC,EAC7B,MAAM,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EAC5D,MAAM,QAAQ,IAAI,gBAAgB,CAAC;AACxC,UAAI,gBAAgB,EACf,MAAM,WAAW,EACjB,MAAM,QAAQ,MAAM,EACpB,MAAM,QAAQ,IAAI,YAAY,CAAC,EAC/B,MAAM,QAAQ,IAAI,WAAW,CAAC;AACnC,UAAI,kBAAkB,EACjB,MAAM,WAAW,EACjB,MAAM,QAAQ,MAAM,EACpB,MAAM,QAAQ,IAAI,WAAW,CAAC,EAC9B,MAAM,QAAQ,IAAI,YAAY,CAAC;AACpC,UAAI,cAAc,EACb,MAAM,WAAW,EACjB,MAAM,QAAQ,QAAQ,UAAU,MAAM,EACtC,MAAM,QAAQ,GAAG,IAAI,qBAAqB,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC,EACrE,MAAM,QAAQ,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC,EACzC,MAAM,UAAU,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC,EAC3C,MAAM,QAAQ,IAAI,WAAW,CAAC;AACnC,UAAI,gBAAgB,EACf,MAAM,WAAW,EACjB,MAAM,QAAQ,SAAS,MAAM,EAC7B,MAAM,QAAQ,GAAG,IAAI,qBAAqB,GAAG,IAAI,YAAY,CAAC,CAAC,EAC/D,MAAM,SAAS,IAAI,YAAY,CAAC,EAChC,MAAM,QAAQ,IAAI,WAAW,CAAC;AACnC,UAAI,mBAAmB,EAAE,MAAM,WAAW,EAAE,MAAK;AACjD,UAAI,aAAa,EAAE,MAAM,WAAW;AACpC,UAAI,qBAAqB,EACpB,MAAM,YAAY,aAAa,EAC/B,MAAM,MAAM,UAAU,MAAM,EAC5B,MAAM,MAAM,IAAI,YAAY,CAAC;AAClC,UAAI,oBAAoB,EACnB,MAAM,YAAY,YAAY,EAC9B,MAAM,MAAM,UAAU,MAAM;AACjC,UAAI,qBAAqB,EACpB,MAAM,aAAa,EACnB,MAAM,QAAQ,cAAc,EAC5B,MAAM,QAAQ,GAAG,OAAO,OAAO,OAAO,CAAC,EACvC,MAAM,gBAAgB,CAAC,IAAI,oBAAoB,CAAC,CAAC;AACtD,UAAI,oBAAoB,EACnB,MAAM,MAAM,EACZ,MAAM,MAAM,MAAM,EAClB,MAAM,MAAM,IAAI,SAAS,CAAC,EAC1B,MAAM,QAAQ,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAChE,UAAI,YAAY,EAAE,MAAM,MAAM;AAC9B,UAAI,gBAAgB,EAAE,MAAM,YAAY,EAAE,MAAK;AAC/C,UAAI,iBAAiB,EAChB,MAAM,YAAY,EAClB,MAAM,UAAU,EAChB,MAAM,YAAY,CAAC,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC,CAAC;AACpD,UAAI,kBAAkB,EACjB,MAAM,YAAY,EAClB,MAAM,YAAY,EAClB,MAAM,cAAc,CAAC,IAAI,UAAU,CAAC,CAAC;AAE1C,UAAI,UAAU,EACT,MAAM,MAAM,EACZ,MAAM,QAAQ,OAAO,OAAO,EAC5B,MAAM,QAAQ,GAAG,QAAQ,OAAO,KAAK,CAAC,EACtC,MAAM,OAAO,GAAG,IAAI,SAAS,GAAG,IAAI,YAAY,CAAC,CAAC,EAClD,MAAM,SAAS,IAAI,YAAY,CAAC;AACrC,UAAI,oBAAoB,EACnB,MAAM,YAAY,EAClB,MAAM,aAAa,EACnB,MAAM,eAAe,CAAC,IAAI,YAAY,CAAC,CAAC;AAC7C,UAAI,gBAAgB,GAAG,KAAK,KAAK,KAAK,KAAK,UAAU,QAAQ,QAAQ;AACrE,UAAI,iBAAiB,EAChB,MAAM,YAAY,EAClB,MAAM,YAAY,YAAY,QAAQ,EACtC,MAAM,YAAY,aAAa,EAC/B,MAAM,YAAY,IAAI,YAAY,CAAC,EAGnC,MAAM,UAAU,SAAS,SAAS,MAAM,CAAC;AAC9C,UAAI,iBAAiB,GAAG,MAAM,QAAQ,eAAe;AACrD,UAAI,kBAAkB,EACjB,MAAM,YAAY,EAClB,MAAM,YAAY,QAAQ,OAAO,EACjC,MAAM,YAAY,cAAc,EAChC,MAAM,QAAQ,IAAI,YAAY,CAAC,EAC/B,MAAM,SAAS,IAAI,YAAY,CAAC;AACrC,UAAI,qBAAqB,GAAG,MAAM,QAAQ,mBAAmB;AAC7D,UAAI,sBAAsB,EACrB,MAAM,YAAY,EAClB,MAAM,YAAY,QAAQ,OAAO,EACjC,MAAM,YAAY,kBAAkB,EACpC,MAAM,QAAQ,GAAG,IAAI,SAAS,GAAG,IAAI,kBAAkB,CAAC,CAAC,EACzD,MAAM,SAAS,IAAI,YAAY,CAAC;AACrC,UAAI,iBAAiB,GAAG,MAAM,IAAI;AAClC,UAAI,kBAAkB,EACjB,MAAM,YAAY,EAClB,MAAM,YAAY,YAAY,QAAQ,EACtC,MAAM,YAAY,cAAc,EAChC,MAAM,YAAY,IAAI,YAAY,CAAC,EACnC,MAAM,UAAU,OAAO;AAC5B,UAAI,kBAAkB,GAAG,MAAM,QAAQ,gBAAgB;AACvD,UAAI,mBAAmB,EAClB,MAAM,YAAY,EAClB,MAAM,YAAY,QAAQ,OAAO,EACjC,MAAM,YAAY,eAAe,EACjC,MAAM,QAAQ,IAAI,YAAY,CAAC,EAC/B,MAAM,SAAS,IAAI,YAAY,CAAC;AACrC,UAAI,uBAAuB,EACtB,MAAM,YAAY,EAClB,MAAM,QAAQ,cAAc,WAAW,EACvC,MAAM,QAAQ,IAAI,YAAY,CAAC,EAC/B,MAAM,cAAc,IAAI,YAAY,CAAC,EACrC,MAAM,aAAa,IAAI,YAAY,CAAC;AACzC,UAAI,eAAe,EACd,MAAM,YAAY,EAClB,MAAM,UAAU,WAAW,EAC3B,MAAM,UAAU,IAAI,YAAY,CAAC,EAIjC,MAAM,aAAa,CAAC,IAAI,YAAY,CAAC,CAAC;AAC3C,UAAI,gBAAgB,EACf,MAAM,YAAY,EAClB,MAAM,UAAU,WAAW,EAC3B,MAAM,UAAU,IAAI,YAAY,CAAC,EAEjC,MAAM,aAAa,CAAC,IAAI,YAAY,CAAC,CAAC;AAC3C,UAAI,kBAAkB,EACjB,MAAM,YAAY,EAClB,MAAM,UAAU,YAAY,UAAU,EACtC,MAAM,UAAU,IAAI,YAAY,CAAC,EACjC,MAAM,YAAY,GAAG,IAAI,YAAY,GAAG,IAAI,YAAY,CAAC,CAAC,EAC1D,MAAM,YAAY,SAAS,WAAY;AACxC,YAAI,OAAO,KAAK,SAAS;AACzB,YAAI,SAAS,aACT,SAAS,sBACT,SAAS,oBAAoB;AAC7B,iBAAO;AAAA,QACV;AACD,eAAO;AAAA,MACf,CAAK;AACD,UAAI,SAAS,EAAE,MAAM,MAAM;AAC3B,UAAI,YAAY,EACX,MAAM,MAAM,EACZ,MAAM,QAAQ,YAAY,EAC1B,MAAM,QAAQ,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC,EACzC,MAAM,cAAc,CAAC,IAAI,WAAW,CAAC,CAAC;AAC3C,UAAI,YAAY,EACX,MAAM,cAAc,SAAS,EAC7B,MAAM,MAAM,EACZ,MAAM,QAAQ,MAAM,EACpB,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC;AACjD,UAAI,SAAS,EACR,MAAM,YAAY,EAClB,MAAM,OAAO,EACb,MAAM,SAAS,GAAG,QAAQ,SAAS,MAAM,QAAQ,QAAQ,MAAM,CAAC;AAErE,UAAI,SAAS,EACR,MAAM,WAAW,EACjB,MAAM,SAAS,MAAM,EAMrB,MAAM,WAAW,SAAS,SAAS,MAAM,CAAC,EAC1C,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC;AAAA,IACpD;AACD,IAAAxB,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;ACtRlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,SAAS,QAAQ,gBAAgBY,YAAiB,CAAA;AACtD,QAAI,UAAU,QAAQ,gBAAgBC,aAAmB,CAAA;AACzD,QAAI,WAAW,QAAQ,aAAaC,cAAoB,CAAA;AACxD,aAAS,UAAUU,OAAM;AACrB,MAAAA,MAAK,IAAI,OAAO,OAAO;AACvB,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,MAAMC,OAAM,KAAK;AACrB,UAAI,KAAKA,OAAM,KAAK;AACpB,UAAI,WAAWD,MAAK,IAAI,SAAS,OAAO,EAAE;AAC1C,UAAI,UAAU,EACT,MAAM,aAAa,SAAS,SAAS,OAAO,CAAC,EAC7C,MAAM,cAAc,SAAS,SAAS,OAAO,CAAC,EAC9C,MAAM,YAAY,CAAC,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,SAAS,UAAU,EAEpE,MAAM,QAAQ,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAEhE,UAAI,aAAa,EACZ,MAAM,SAAS,EACf,MAAM,UAAU,EAChB,MAAM,YAAY,IAAI,SAAS,CAAC,EAChC;AAAA,QAAM;AAAA;AAAA,QACX,GAAG,IAAI,gBAAgB,GAAG,IAAI,kBAAkB,GAAG,IAAI;AAAA,QAAG,SAAS,MAAM;AAAA,MAAC;AAC1E,UAAI,sBAAsB,EACrB,MAAM,SAAS,EACf,MAAM,UAAU,EAChB,MAAM,YAAY,IAAI,SAAS,CAAC;AACrC,UAAI,qBAAqB,EACpB,MAAM,MAAM,UAAU,QAAQ,aAAa,YAAY,EAEvD,MAAM,MAAM,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC;AAC5C,UAAI,oBAAoB,EACnB,MAAM,MAAM,UAAU,QAAQ,aAAa,YAAY;AAC5D,UAAI,yBAAyB,EACxB,MAAM,YAAY,YAAY,EAC9B,MAAM,UAAU,QAAQ,YAAY,EAGpC,MAAM,MAAM,MAAM,SAAS,MAAM,CAAC,EAElC,MAAM,QAAQ,GAAG,IAAI,gBAAgB,GAAG,IAAI,YAAY,CAAC,CAAC,EAG1D,MAAM,aAAa,OAAO,SAAS,OAAO,CAAC;AAChD,UAAI,gBAAgB,EACf,MAAM,WAAW,EACjB,MAAM,QAAQ,SAAS,MAAM,EAC7B,MAAM,QAAQ,GAAG,IAAI,qBAAqB,GAAG,IAAI,SAAS,CAAC,CAAC,EAC5D,MAAM,SAAS,IAAI,YAAY,CAAC,EAChC,MAAM,QAAQ,IAAI,WAAW,CAAC;AACnC,UAAI,iBAAiB,EAChB,MAAM,YAAY,EAClB,MAAM,YAAY,UAAU,EAC5B,MAAM,YAAY,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC,EAC7C,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC;AACjD,UAAI,qBAAqB,EACpB,MAAM,YAAY,EAClB,MAAM,QAAQ,UAAU,QAAQ,EAChC,MAAM,QAAQ,IAAI,YAAY,CAAC,EAC/B,MAAM,UAAU,CAAC,IAAI,oBAAoB,CAAC,CAAC,EAC3C,MAAM,UAAU,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC;AAChD,UAAI,yBAAyB,EACxB,MAAM,YAAY,EAClB,MAAM,QAAQ,UAAU,QAAQ,EAChC,MAAM,QAAQ,IAAI,YAAY,CAAC,EAC/B,MAAM,UAAU,CAAC,IAAI,oBAAoB,CAAC,CAAC,EAC3C,MAAM,UAAU,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC;AAChD,UAAI,oBAAoB,EACnB,MAAM,MAAM,EACZ,MAAM,QAAQ,SAAS,MAAM,EAC7B,MAAM,QAAQ,IAAI,SAAS,CAAC,EAC5B,MAAM,SAAS,IAAI,YAAY,CAAC,EAChC,MAAM,QAAQ,OAAO;AAC1B,UAAI,UAAU,EACT,MAAM,OAAO,GAAG,IAAI,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,YAAY,CAAC,CAAC,EACrE,MAAM,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,SAAS,CAAC,CAAC,EACpD,MAAM,UAAU,SAAS,SAAS,OAAO,CAAC,EAC1C,MAAM,aAAa,SAAS,SAAS,OAAO,CAAC,EAC7C,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC;AACjD,UAAI,gBAAgB,EACf,MAAM,aAAa,SAAS,SAAS,OAAO,CAAC;AAClD,UAAI,iBAAiB,EAChB,MAAM,SAAS,EACf,MAAM,OAAO,SAAS,EACtB,MAAM,OAAO,GAAG,IAAI,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,YAAY,CAAC,CAAC,EACrE,MAAM,WAAW,IAAI,SAAS,CAAC,EAC/B,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC;AACjD,UAAI,eAAe,EACd,MAAM,SAAS,EACf,MAAM,YAAY,EAClB,MAAM,cAAc,CAAC,GAAG,IAAI,iBAAiB,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC;AACtE,UAAI,cAAc,EACb,MAAM,SAAS,EACf,MAAM,UAAU,EAChB,MAAM,YAAY,CAAC,GAAG,IAAI,SAAS,GAAG,IAAI,CAAC,CAAC;AACjD,UAAI,eAAe,EACd,MAAM,MAAM,EACZ,MAAM,UAAU,EAChB,MAAM,YAAY,IAAI,YAAY,CAAC;AACxC,UAAI,iBAAiB,EAChB,MAAM,YAAY,CAAC,GAAG,IAAI,YAAY,GAAG,IAAI,eAAe,GAAG,IAAI,aAAa,GAAG,IAAI,CAAC,CAAC;AAC9F,UAAI,eAAe,EACd,MAAM,aAAa,CAAC,GAAG,IAAI,YAAY,GAAG,IAAI,eAAe,CAAC,CAAC,CAAC;AACrE,UAAI,gBAAgB,EACf,MAAM,aAAa,CAAC,GAAG,IAAI,YAAY,GAAG,IAAI,eAAe,CAAC,CAAC,CAAC;AAOrE,UAAI,mBAAmB,EAClB,MAAM,SAAS,EACf,MAAM,QAAQ,OAAO,EACrB,MAAM,QAAQ,IAAI,SAAS,CAAC,EAC5B,MAAM,SAAS,IAAI,YAAY,CAAC;AACrC,UAAI,kBAAkB,EACjB,MAAM,aAAa,EACnB,MAAM,QAAQ,OAAO,SAAS,QAAQ,EACtC,MAAM,QAAQ,GAAG,eAAe,UAAU,OAAO,KAAK,CAAC,EACvD,MAAM,OAAO,IAAI,YAAY,CAAC,EAC9B,MAAM,SAAS,IAAI,UAAU,CAAC,EAC9B,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,UAAU,SAAS,SAAS,OAAO,CAAC;AAC/C,UAAI,mBAAmB,GAAG,IAAI,kBAAkB,GAAG,IAAI,oBAAoB,GAAG,IAAI,yBAAyB,GAAG,IAAI,eAAe,GAAG,IAAI,aAAa,CAAC;AACtJ,UAAI,eAAe,EACd,MAAM,aAAa,EACnB,MAAM,KAAK,EACX,MAAM,OAAO,GAAG,IAAI,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,YAAY,CAAC,CAAC,EACrE,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC;AACjD,UAAI,yBAAyB,EACxB,MAAM,aAAa,EACnB,MAAM,YAAY,EAElB,MAAM,cAAc,gBAAgB;AACzC,UAAI,WAAW,EACV,MAAM,aAAa,EACnB,MAAM,MAAM,EACZ,MAAM,QAAQ,CAAC,gBAAgB,CAAC;AACrC,UAAI,kBAAkB,EACjB,MAAM,aAAa,EACnB,MAAM,MAAM,QAAQ,YAAY,EAChC,MAAM,MAAM,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC,EACvC,MAAM,QAAQ,IAAI,WAAW,CAAC,EAC9B,MAAM,cAAc,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACtE,UAAI,iBAAiB,EAChB,MAAM,YAAY,EAClB,MAAM,MAAM,QAAQ,YAAY,EAChC,MAAM,MAAM,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EACzD,MAAM,QAAQ,IAAI,WAAW,CAAC,EAC9B,MAAM,cAAc,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACtE,UAAI,OAAO,EACN,MAAM,YAAY,EAClB;AAGL,UAAI,WAAW,EAAE,MAAM,MAAM;AAK7B,UAAI,iBAAiB,EAChB,MAAM,WAAW,EAIjB,MAAM,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EAI5D,MAAM,MAAM,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EACzD,MAAM,QAAQ,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAEhE,UAAI,iBAAiB,EAChB,MAAM,iBAAiB,EACvB,MAAM,YAAY,OAAO,EACzB,MAAM,YAAY,IAAI,YAAY,CAAC;AAExC,UAAI,wBAAwB,EACvB,MAAM,iBAAiB,EACvB,MAAM,OAAO;AAElB,UAAI,0BAA0B,EACzB,MAAM,iBAAiB,EACvB,MAAM,OAAO;AAClB,UAAI,mBAAmB,EAClB,MAAM,aAAa,EACnB,MAAM,cAAc,UAAU,YAAY,EAC1C,MAAM,cAAc,CAAC,GAAG,IAAI,iBAAiB,GAAG,IAAI,0BAA0B,GAAG,IAAI,wBAAwB,CAAC,CAAC,GAAG,SAAS,UAAU,EACrI,MAAM,UAAU,IAAI,SAAS,CAAC,EAC9B,MAAM,cAAc,GAAG,SAAS,MAAM,GAAG,WAAY;AACtD,eAAO;AAAA,MACf,CAAK;AACD,UAAI,wBAAwB,EACvB,MAAM,aAAa,EACnB,MAAM,eAAe,cAAc,QAAQ,EAC3C,MAAM,eAAe,GAAG,IAAI,aAAa,GAAG,IAAI,CAAC,EACjD,MAAM,cAAc,CAAC,IAAI,iBAAiB,CAAC,GAAG,SAAS,UAAU,EACjE,MAAM,UAAU,GAAG,IAAI,SAAS,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAC/D,UAAI,iBAAiB,EAChB,MAAM,iBAAiB,EACvB,MAAM,SAAS,UAAU,EACzB,MAAM,YAAY,IAAI,YAAY,CAAC;AACxC,UAAI,0BAA0B,EACzB,MAAM,aAAa,EACnB,MAAM,aAAa,EACnB,MAAM,eAAe,GAAG,IAAI,aAAa,GAAG,IAAI,YAAY,CAAC,CAAC;AACnE,UAAI,sBAAsB,EACrB,MAAM,aAAa,EACnB,MAAM,QAAQ,EACd,MAAM,UAAU,IAAI,SAAS,CAAC;AACnC,UAAI,0BAA0B,EACzB,MAAM,YAAY,EAClB,MAAM,OAAO,OAAO,EACpB,MAAM,OAAO,IAAI,YAAY,CAAC,EAC9B,MAAM,SAAS,IAAI,iBAAiB,CAAC;AAC1C,UAAI,iBAAiB,EAChB,MAAM,YAAY,EAClB,MAAM,UAAU,aAAa,EAC7B,MAAM,UAAU,CAAC,IAAI,iBAAiB,CAAC,CAAC,EACxC,MAAM,eAAe,CAAC,IAAI,YAAY,CAAC,CAAC;AAC7C,UAAI,iBAAiB,EAChB,MAAM,MAAM,EACZ,MAAM,SAAS,MAAM,EACrB,MAAM,SAAS,EAAE,UAAU,QAAQ,OAAO,QAAQ,EAClD,MAAM,QAAQ,OAAO;AAC1B,UAAI,cAAc,EACb,MAAM,YAAY,EAClB,MAAM,QAAQ,UAAU,EACxB,MAAM,QAAQ,IAAI,YAAY,CAAC,EAC/B,MAAM,YAAY,IAAI,YAAY,CAAC;AAAA,IAC3C;AACD,IAAAxB,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;AC3OlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,WAAW,QAAQ,gBAAgBY,gBAA6B,CAAA;AACpE,QAAI,QAAQ,QAAQ,gBAAgBC,WAAgB,CAAA;AACpD,QAAI,WAAWC;AACf,aAAS,UAAUU,OAAM;AAIrB,MAAAA,MAAK,IAAI,SAAS,OAAO;AACzB,MAAAA,MAAK,IAAI,MAAM,OAAO;AAAA,IACzB;AACD,IAAAxB,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;ACdlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,WAAW,QAAQ,gBAAgBY,cAAmB,CAAA;AAC1D,QAAI,UAAU,QAAQ,gBAAgBC,aAAmB,CAAA;AACzD,QAAI,WAAW,QAAQ,aAAaC,cAAoB,CAAA;AACxD,aAAS,UAAUU,OAAM;AACrB,MAAAA,MAAK,IAAI,SAAS,OAAO;AACzB,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,MAAMC,OAAM,KAAK;AACrB,UAAI,WAAWD,MAAK,IAAI,SAAS,OAAO,EAAE;AAC1C,UAAI,UAAU,EACT,MAAM,SAAS,SAAS,SAAS,OAAO,CAAC;AAC9C,UAAI,iBAAiB,EAChB,MAAM,YAAY,EAClB,MAAM,UAAU,EAChB,MAAM,YAAY,IAAI,YAAY,CAAC;AAAA,IAC3C;AACD,IAAAxB,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;ACnBlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,WAAW,QAAQ,gBAAgBY,cAAmB,CAAA;AAC1D,QAAI,UAAU,QAAQ,gBAAgBC,aAAmB,CAAA;AACzD,QAAI,WAAW,QAAQ,aAAaC,cAAoB,CAAA;AACxD,aAAS,UAAUU,OAAM;AACrB,MAAAA,MAAK,IAAI,SAAS,OAAO;AACzB,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,MAAMC,OAAM,KAAK;AACrB,UAAI,KAAKA,OAAM,KAAK;AACpB,UAAI,WAAWD,MAAK,IAAI,SAAS,OAAO,EAAE;AAC1C,UAAI,gBAAgB,EACf,MAAM,SAAS,SAAS,SAAS,OAAO,CAAC;AAE9C,UAAI,gBAAgB,EACf,MAAM,MAAM,EACZ,MAAM,UAAU,EAChB,MAAM,YAAY,IAAI,YAAY,CAAC;AACxC,UAAI,kBAAkB,EACjB,MAAM,cAAc,CAAC;AAAA,QAAG,IAAI,UAAU;AAAA,QAAG,IAAI,gBAAgB;AAAA;AAAA,QAC9D,IAAI,eAAe;AAAA,MAAC,CAAC,CAAC;AAC1B,UAAI,iBAAiB,EAChB,MAAM,SAAS,EAAE,UAAU,GAAG,QAAQ,IAAI,GAAG,OAAO,OAAM,CAAE;AAEjE,UAAI,uBAAuB,EACtB,MAAM,SAAS,EACf,MAAM,UAAU,EAChB,MAAM,YAAY,IAAI,SAAS,CAAC;AACrC,UAAI,eAAe,EACd,MAAM,cAAc,CAAC,GAAG,IAAI,iBAAiB,GAAG,IAAI,UAAU,GAAG,IAAI,aAAa,GAAG,IAAI,uBAAuB,CAAC,CAAC,CAAC;AAAA,IAC3H;AACD,IAAAxB,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;ACjClE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,WAAW,QAAQ,gBAAgBY,cAAmB,CAAA;AAC1D,QAAI,UAAU,QAAQ,gBAAgBC,aAAmB,CAAA;AACzD,QAAI,WAAW,QAAQ,aAAaC,cAAoB,CAAA;AACxD,aAAS,UAAUU,OAAM;AACrB,MAAAA,MAAK,IAAI,SAAS,OAAO;AACzB,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,MAAMC,OAAM,KAAK;AACrB,UAAI,KAAKA,OAAM,KAAK;AACpB,UAAI,WAAWD,MAAK,IAAI,SAAS,OAAO,EAAE;AAC1C,UAAI,aAAa,EACZ,MAAM,SAAS,GAAG,IAAI,SAAS,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAAA,IACjE;AACD,IAAAxB,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;AChBlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,WAAW,QAAQ,gBAAgBY,gBAA6B,CAAA;AACpE,QAAI,WAAW,QAAQ,gBAAgBC,cAAmB,CAAA;AAC1D,QAAI,UAAU,QAAQ,gBAAgBC,aAAmB,CAAA;AACzD,QAAI,WAAW,QAAQ,aAAaE,cAAoB,CAAA;AACxD,aAAS,UAAUQ,OAAM;AAGrB,MAAAA,MAAK,IAAI,SAAS,OAAO;AACzB,MAAAA,MAAK,IAAI,SAAS,OAAO;AACzB,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,MAAMC,OAAM,KAAK;AACrB,UAAI,KAAKA,OAAM,KAAK;AACpB,UAAI2B,UAAS5B,MAAK,IAAI,SAAS,OAAO;AACtC,UAAI,WAAW4B,QAAO;AACtB,UAAI,kBAAkB,EACjB,MAAM,YAAY,EAClB,MAAM,QAAQ,EACd,MAAM,UAAU,IAAI,YAAY,CAAC;AACtC,UAAI,sBAAsB,EACrB,MAAM,aAAa,EACnB,MAAM,UAAU,UAAU,EAC1B,MAAM,UAAU,IAAI,SAAS,CAAC,EAC9B,MAAM,YAAY,GAAG,IAAI,YAAY,GAAG,MAAM,MAAM,GAAG,SAAS,MAAM,CAAC;AAE5E,UAAI,cAAc,EACb,MAAM,MAAM,EACZ,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC;AACjD,UAAI,gBAAgB,EACf,MAAM,cAAc,cAAc;AACvC,UAAI,kBAAkB,EACjB,MAAM,cAAc,cAAc;AACvC,UAAI,iBAAiB,EAChB,MAAM,YAAY,EAClB,MAAM,YAAY,EAClB,MAAM,cAAc,IAAI,cAAc,CAAC;AAC5C,UAAI,wBAAwB,EACvB,MAAM,gBAAgB,EACtB,MAAM,UAAU,aAAa,UAAU,EACvC,MAAM,YAAY,SAAS,SAAS,MAAM,CAAC;AAEhD,UAAI,0BAA0B,EACzB,MAAM,kBAAkB,EACxB,MAAM,UAAU,YAAY,YAAY,UAAU,EAClD,MAAM,YAAY,SAAS,SAAS,MAAM,CAAC;AAAA,IACnD;AACD,IAAApD,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;ACjDlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,WAAW,QAAQ,gBAAgBY,gBAA6B,CAAA;AACpE,QAAI,WAAW,QAAQ,gBAAgBC,cAAmB,CAAA;AAC1D,QAAI,WAAWC;AACf,aAAS,UAAUU,OAAM;AAGrB,MAAAA,MAAK,IAAI,SAAS,OAAO;AACzB,MAAAA,MAAK,IAAI,SAAS,OAAO;AAAA,IAC5B;AACD,IAAAxB,SAAA,UAAkB;AAClB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;ACZlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,WAAW,QAAQ,gBAAgBY,cAAmB,CAAA;AAC1D,QAAI,UAAU,QAAQ,gBAAgBC,aAAmB,CAAA;AACzD,QAAI,WAAWC;AACf,aAAS,UAAUU,OAAM;AACrB,MAAAA,MAAK,IAAI,SAAS,OAAO;AACzB,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,MAAMC,OAAM,KAAK;AACrB,UAAI,aAAa,EACZ,MAAM,aAAa,EACnB,MAAM,MAAM,EACZ,MAAM,QAAQ,CAAC,IAAI,WAAW,CAAC,CAAC;AAAA,IACxC;AACD,IAAAzB,SAAA,UAAkB;AAClB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;ACflE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,UAAU,QAAQ,gBAAgBY,aAAmB,CAAA;AACzD,QAAI,WAAW,QAAQ,aAAaC,cAAoB,CAAA;AACxD,QAAI,WAAW,QAAQ,gBAAgBC,cAAmB,CAAA;AAC1D,aAAS,UAAUU,OAAM;AACrB,MAAAA,MAAK,IAAI,SAAS,OAAO;AACzB,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,OAAOC,OAAM;AACjB,UAAI,MAAMA,OAAM,KAAK;AACrB,UAAI,KAAK,KAAK;AACd,UAAI2B,UAAS5B,MAAK,IAAI,SAAS,OAAO;AACtC,UAAI,WAAW4B,QAAO;AACtB,UAAI,iBAAiB,EAChB,MAAM,YAAY,KAAK,EACvB,MAAM,YAAY,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC,EAC7C,MAAM,OAAO,SAAS,SAAS,OAAO,CAAC;AAE5C,UAAI,WAAW,EACV,MAAM,MAAM,EACZ,MAAM,YAAY,EAClB,MAAM,cAAc,IAAI,YAAY,CAAC;AAC1C,UAAI,UAAU,EACT,MAAM,cAAc,GAAG,CAAC,IAAI,WAAW,CAAC,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACvE,UAAI,kBAAkB,EACjB,MAAM,cAAc,GAAG,CAAC,IAAI,WAAW,CAAC,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAEvE,UAAI,aAAa,EACZ,MAAM,cAAc,SAAS,EAC7B,MAAM,IAAI,EACV,MAAM,MAAM,IAAI,YAAY,CAAC;AAClC,UAAI,sBAAsB,EACrB,MAAM,eAAe,EACrB,MAAM,OAAO,OAAO,EACpB,MAAM,OAAO,IAAI,aAAa,CAAC,EAC/B,MAAM,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAEjE,UAAI,iBAAiB,EAChB,MAAM,MAAM,EACZ,MAAM,OAAO,OAAO,EACpB,MAAM,OAAO,GAAG,IAAI,YAAY,GAAG,IAAI,SAAS,CAAC,CAAC,EAClD,MAAM,SAAS,IAAI,YAAY,CAAC;AACrC;AAAA,QAAC;AAAA,QACG;AAAA,QACA;AAAA,MACR,EAAM,QAAQ,SAAU,MAAM;AACtB,YAAI,IAAI,EAAE,MAAM,cAAc,CAAC,IAAI,iBAAiB,CAAC,GAAG,SAAS,UAAU;AAAA,MACnF,CAAK;AAGD,UAAI,kBAAkB,EACjB,MAAM,YAAY,EAClB,MAAM,YAAY,EAClB,MAAM,cAAc,CAAC,GAAG,IAAI,gBAAgB,GAAG,IAAI,cAAc,GAAG,IAAI,eAAe,CAAC,CAAC,CAAC;AAC/F,UAAI,iBAAiB,EAChB,MAAM,YAAY,EAClB,MAAM,UAAU,EAChB,MAAM,YAAY,CAAC,GAAG,IAAI,YAAY,GAAG,IAAI,eAAe,GAAG,IAAI,CAAC,CAAC;AAG1E,UAAI,kBAAkB,EACjB,MAAM,MAAM,EACZ,MAAM,MAAM,EACZ,MAAM,QAAQ,IAAI,SAAS,CAAC;AAAA,IACpC;AACD,IAAApD,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;;ACnElE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,iBAAiB,QAAQ,gBAAgBY,mBAAyB,CAAA;AACtE,QAAI,UAAU,QAAQ,gBAAgBC,aAAmB,CAAA;AACzD,QAAI,WAAW,QAAQ,aAAaC,cAAoB,CAAA;AACxD,aAAS,UAAUU,OAAM;AACrB,MAAAA,MAAK,IAAI,eAAe,OAAO;AAC/B,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,MAAMC,OAAM,KAAK;AACrB,UAAI,KAAKA,OAAM,KAAK;AACpB,UAAI,WAAWD,MAAK,IAAI,SAAS,OAAO,EAAE;AAC1C,UAAI,cAAc,EACb,MAAM,MAAM,EACZ,MAAM,QAAQ,OAAO,EACrB,MAAM,QAAQ,GAAG,IAAI,eAAe,GAAG,IAAI,mBAAmB,CAAC,CAAC,EAChE,MAAM,SAAS;AAAA,QAAG,IAAI,SAAS;AAAA;AAAA,QACpC,IAAI,wBAAwB;AAAA;AAAA,QAC5B,IAAI,YAAY;AAAA;AAAA,QAChB,IAAI,aAAa;AAAA;AAAA,QACjB;AAAA;AAAA,MACJ,GAAO,SAAS,MAAM,CAAC;AACnB,UAAI,eAAe,EACd,MAAM,YAAY,EAClB,MAAM,MAAM,EACZ,MAAM,QAAQ,MAAM;AACzB,UAAI,mBAAmB,EAClB,MAAM,MAAM,EACZ,MAAM,aAAa,MAAM,EACzB,MAAM,aAAa,IAAI,eAAe,CAAC,EACvC,MAAM,QAAQ,IAAI,eAAe,CAAC;AACvC,UAAI,qBAAqB,EACpB,MAAM,kBAAkB,EACxB,MAAM,UAAU,UAAU,EAC1B,MAAM,UAAU,GAAG,IAAI,eAAe,GAAG,IAAI,qBAAqB,CAAC,CAAC,EACpE,MAAM,YAAY,IAAI,eAAe,CAAC,EACtC,MAAM,YAAY,SAAS,SAAS,KAAK;AAC9C,UAAI,iBAAiB,GAAG,IAAI,eAAe,GAAG,IAAI,mBAAmB,GAAG,IAAI,qBAAqB,CAAC;AAClG,UAAI,oBAAoB,EACnB,MAAM,MAAM,EACZ,MAAM,UAAU,EAChB,MAAM,YAAY,IAAI,YAAY,CAAC;AACxC,UAAI,gBAAgB,CAAC,GAAG,IAAI,cAAc,GAAG,IAAI,oBAAoB,CAAC,CAAC;AACvE,UAAI,wBAAwB,EACvB,MAAM,YAAY,EAClB,MAAM,YAAY,EAClB,MAAM,cAAc,GAAG,IAAI,YAAY,GAAG,IAAI,oBAAoB,CAAC,CAAC;AACzE,UAAI,cAAc,CAAC;AAAA,QAAG,IAAI,SAAS;AAAA,QAAG,IAAI,wBAAwB;AAAA,QAAG,IAAI,gBAAgB;AAAA,QAAG,IAAI,YAAY;AAAA,QAAG,IAAI,aAAa;AAAA,QAAG,IAAI,SAAS;AAAA;AAAA,MACpJ,CAAS;AACL,UAAI,YAAY,EACX,MAAM,YAAY,EAClB,MAAM,kBAAkB,kBAAkB,UAAU,EACpD,MAAM,kBAAkB,IAAI,mBAAmB,CAAC,EAChD,MAAM,kBAAkB,GAAG,IAAI,mBAAmB,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EAC5E,MAAM,YAAY,aAAa,SAAS,UAAU,EAClD,MAAM,QAAQ,gBAAgB,WAAY;AAM3C,eAAO,KAAK,eAAe;AAAA,MAC9B,GAAE,IAAI,EACF,MAAM,eAAe,SAAS,WAAY;AAC3C,eAAO,KAAK,eAAe;AAAA,MAC9B,GAAE,IAAI,EACF,MAAM,cAAc,eAAe,WAAY;AAChD,eAAO,KAAK,eAAe;AAAA,MAC9B,GAAE,IAAI;AACP,UAAI,mBAAmB,EAClB,MAAM,MAAM,EACZ,MAAM,QAAQ,cAAc,aAAa,EACzC,MAAM,QAAQ,cAAc,EAC5B,MAAM,cAAc,eAAe,SAAS,UAAU,EACtD,MAAM,eAAe,SAAS,SAAS,OAAO,CAAC;AACpD,UAAI,mBAAmB,EAClB,MAAM,MAAM,EACZ,MAAM,MAAM,EACZ,MAAM,QAAQ,cAAc;AACjC,UAAI,aAAa,EACZ,MAAM,YAAY,EAClB,MAAM,mBAAmB,mBAAmB,UAAU,EACtD,MAAM,mBAAmB,IAAI,oBAAoB,CAAC,EAClD,MAAM,mBAAmB,IAAI,oBAAoB,CAAC,EAClD,MAAM,YAAY,aAAa,SAAS,UAAU;AACvD,UAAI,oBAAoB,EACnB,MAAM,MAAM,EACZ;AACL,UAAI,oBAAoB,EACnB,MAAM,MAAM,EACZ;AACL,UAAI,SAAS,EACR,MAAM,SAAS,EACf,MAAM,SAAS,KAAK,EACpB,MAAM,SAAS,MAAM,EACrB,MAAM,OAAO,QAAQ,WAAY;AAClC,eAAO,KAAK;AAAA,MACpB,CAAK;AACD,UAAI,oBAAoB,EACnB,MAAM,MAAM,EACZ;AACL,UAAI,gBAAgB,EACf,MAAM,MAAM,EACZ,MAAM,YAAY,EAClB,MAAM,cAAc,IAAI,YAAY,CAAC;AAAA,IAC7C;AACD,IAAAxB,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;;;ACtGlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,UAAU,QAAQ,gBAAgBY,aAAmB,CAAA;AACzD,QAAI,WAAW,QAAQ,aAAaC,cAAoB,CAAA;AACxD,aAAS,UAAUW,OAAM;AACrB,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,MAAMC,OAAM,KAAK;AACrB,UAAI,KAAKA,OAAM,KAAK;AACpB,UAAI,WAAWD,MAAK,IAAI,SAAS,OAAO,EAAE;AAC1C,UAAI,iBAAiB,GAAG,IAAI,gBAAgB,GAAG,IAAI,kBAAkB,GAAG,IAAI;AAC5E,UAAI,gBAAgB,GAAG,IAAI,0BAA0B,GAAG,IAAI,4BAA4B,GAAG,IAAI;AAC/F,UAAI,YAAY,EACX,MAAM,kBAAkB,gBAAgB,SAAS,MAAM,CAAC;AAC7D,UAAI,eAAe,EACd,MAAM,kBAAkB,gBAAgB,SAAS,MAAM,CAAC;AAC7D,UAAI,UAAU,EACT,MAAM,cAAc,gBAAgB,SAAS,MAAM,CAAC,EACpD,MAAM,kBAAkB,eAAe,SAAS,MAAM,CAAC;AAC5D,UAAI,eAAe,EACd,MAAM,OAAO,SAAS,kBAAkB,QAAQ,EAChD,MAAM,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC,EAC1C,MAAM,UAAU,SAAS,SAAS,OAAO,CAAC,EAC1C,MAAM,kBAAkB,gBAAgB,SAAS,MAAM,CAAC;AAC7D;AAAA,QAAC;AAAA,QACG;AAAA,MACR,EAAM,QAAQ,SAAU,UAAU;AAC1B,YAAI,QAAQ,EACP,MAAM,kBAAkB,eAAe,SAAS,MAAM,CAAC,EACvD,MAAM,uBAAuB,GAAG,IAAI,4BAA4B,GAAG,IAAI,8BAA8B,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EAC/H,MAAM,cAAc,GAAG,CAAC,IAAI,iBAAiB,CAAC,GAAG,CAAC,IAAI,+BAA+B,CAAC,CAAC,GAAG,SAAS,UAAU;AAAA,MAC1H,CAAK;AAAA,IACJ;AACD,IAAAxB,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;ACvClE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,iBAAiB,QAAQ,gBAAgBY,mBAAyB,CAAA;AACtE,QAAI,qBAAqB,QAAQ,gBAAgBC,uBAA6B,CAAA;AAC9E,QAAI,UAAU,QAAQ,gBAAgBC,aAAmB,CAAA;AACzD,QAAI,WAAW,QAAQ,aAAaE,cAAoB,CAAA;AACxD,aAAS,UAAUQ,OAAM;AACrB,MAAAA,MAAK,IAAI,eAAe,OAAO;AAC/B,MAAAA,MAAK,IAAI,mBAAmB,OAAO;AACnC,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,MAAMC,OAAM,KAAK;AACrB,UAAI,KAAKA,OAAM,KAAK;AACpB,UAAI,WAAWD,MAAK,IAAI,SAAS,OAAO,EAAE;AAE1C,UAAI,MAAM,EAAE,MAAM,MAAM;AACxB,UAAI,UAAU,EAAE,MAAM,MAAM;AAE5B,UAAI,mBAAmB,EAClB,MAAM,UAAU,EAChB;AACL,UAAI,qBAAqB,EACpB,MAAM,UAAU,EAChB;AACL,UAAI,qBAAqB,EACpB,MAAM,UAAU,EAChB;AACL,UAAI,oBAAoB,EACnB,MAAM,UAAU,EAChB;AACL,UAAI,sBAAsB,EACrB,MAAM,UAAU,EAChB;AACL,UAAI,sBAAsB,EACrB,MAAM,UAAU,EAChB;AACL,UAAI,sBAAsB,EACrB,MAAM,UAAU,EAChB;AACL,UAAI,6BAA6B,EAC5B,MAAM,UAAU,EAChB,MAAM,SAAS,KAAK,EACpB,MAAM,SAAS,MAAM,EACrB,MAAM,OAAO,MAAM;AAGxB,UAAI,8BAA8B,EAC7B,MAAM,UAAU,EAChB,MAAM,SAAS,KAAK,EACpB,MAAM,SAAS,MAAM,EACrB,MAAM,OAAO,MAAM;AACxB,UAAI,6BAA6B,EAC5B,MAAM,UAAU,EAChB,MAAM,SAAS,KAAK,EACpB,MAAM,SAAS,IAAI,EACnB,MAAM,OAAO,MAAM;AACxB,UAAI,sBAAsB,EACrB,MAAM,UAAU,EAChB;AACL,UAAI,6BAA6B,EAC5B,MAAM,UAAU,EAChB,MAAM,SAAS,KAAK,EACpB,MAAM,SAAS,MAAM,EACrB,MAAM,OAAO,MAAM;AACxB,UAAI,uBAAuB,EACtB,MAAM,UAAU,EAChB;AACL,UAAI,8BAA8B,EAC7B,MAAM,UAAU,EAChB,MAAM,SAAS,KAAK,EACpB,MAAM,SAAS,OAAO,EACtB,MAAM,OAAO,MAAM;AACxB,UAAI,gBAAgB,EACf,MAAM,MAAM,EACZ,MAAM,gBAAgB,EACtB,MAAM,kBAAkB,IAAI,UAAU,CAAC;AAC5C,UAAI,wBAAwB,EACvB,MAAM,UAAU,EAChB,MAAM,gBAAgB,EACtB,MAAM,kBAAkB,IAAI,UAAU,CAAC;AAC5C,UAAI,2BAA2B,EAC1B,MAAM,UAAU,EAChB;AACL,UAAI,oBAAoB,EACnB,MAAM,UAAU,EAChB;AACL,UAAI,oBAAoB,EACnB,MAAM,UAAU,EAChB;AACL,UAAI,sBAAsB,EACrB,MAAM,UAAU,EAChB;AACL,UAAI,sBAAsB,EACrB,MAAM,UAAU,EAChB;AACL,UAAI,wBAAwB,EACvB,MAAM,UAAU,EAChB,MAAM,UAAU,cAAc,QAAQ,gBAAgB,EACtD,MAAM,UAAU,CAAC,IAAI,mBAAmB,CAAC,CAAC,EAC1C,MAAM,cAAc,IAAI,UAAU,CAAC,EACnC,MAAM,QAAQ,GAAG,IAAI,mBAAmB,GAAG,IAAI,CAAC,EAChD,MAAM,kBAAkB,GAAG,IAAI,0BAA0B,GAAG,IAAI,CAAC;AACtE,UAAI,mBAAmB,EAClB,MAAM,MAAM,EACZ,MAAM,QAAQ,kBAAkB,UAAU,EAC1C,MAAM,QAAQ,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC,EACzC,MAAM,kBAAkB,IAAI,UAAU,CAAC,EACvC,MAAM,YAAY,OAAO;AAC9B,UAAI,qBAAqB,EACpB,MAAM,UAAU,EAChB,MAAM,aAAa,EACnB,MAAM,eAAe,IAAI,UAAU,CAAC;AACzC,UAAI,sBAAsB,EACrB,MAAM,UAAU,EAChB,MAAM,cAAc,YAAY,gBAAgB,EAChD,MAAM,cAAc;AAAA,QACrB,GAAG,IAAI,oBAAoB,GAAG,IAAI,0BAA0B,CAAC;AAAA,MACrE,CAAK,EACI,MAAM,YAAY,CAAC,IAAI,mBAAmB,CAAC,GAAG,SAAS,UAAU,EACjE,MAAM,kBAAkB,CAAC,IAAI,wBAAwB,CAAC,GAAG,SAAS,UAAU,EAC5E,MAAM,WAAW,GAAG,SAAS,MAAM,GAAG,SAAS,WAAW,CAAC,EAC3D,MAAM,SAAS,SAAS,SAAS,OAAO,CAAC,EACzC,MAAM,iBAAiB,CAAC,IAAI,wBAAwB,CAAC,GAAG,SAAS,UAAU;AAChF,UAAI,UAAU,EACT,MAAM,MAAM,EACZ,MAAM,MAAM,EACZ,MAAM,QAAQ,GAAG,QAAQ,OAAO,CAAC;AACtC,UAAI,iBAAiB,GAAG,IAAI,UAAU,GAAG,QAAQ,SAAS,IAAI;AAC9D,UAAI,oBAAoB,EACnB,MAAM,MAAM,EACZ,MAAM,OAAO,SAAS,UAAU,EAChC,MAAM,OAAO,GAAG,IAAI,SAAS,GAAG,IAAI,YAAY,CAAC,CAAC,EAClD,MAAM,SAAS,IAAI,UAAU,CAAC,EAC9B,MAAM,YAAY,OAAO,EACzB,MAAM,YAAY,gBAAgB,SAAS,MAAM,CAAC;AACvD,UAAI,mBAAmB,EAClB,MAAM,MAAM,EACZ,MAAM,MAAM,OAAO,OAAO,EAC1B,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,OAAO,IAAI,UAAU,CAAC,EAC5B,MAAM,SAAS,IAAI,UAAU,CAAC,EAC9B,MAAM,YAAY,gBAAgB,SAAS,MAAM,CAAC,EAClD,MAAM,UAAU,SAAS,SAAS,OAAO,CAAC;AAC/C,UAAI,wBAAwB,EACvB,MAAM,MAAM,EACZ,MAAM,OAAO,EACb,MAAM,SAAS,IAAI,wBAAwB,CAAC,EAC5C,MAAM,UAAU,SAAS,SAAS,OAAO,CAAC;AAC/C,UAAI,yBAAyB,EACxB,MAAM,MAAM,EACZ,MAAM,iBAAiB,IAAI,EAC3B,MAAM,iBAAiB,GAAG,IAAI,YAAY,GAAG,IAAI,yBAAyB,CAAC,CAAC,EAC5E,MAAM,MAAM,IAAI,YAAY,CAAC;AAClC,UAAI,uBAAuB,EACtB,MAAM,UAAU,EAChB,MAAM,MAAM,gBAAgB,EAC5B,MAAM,MAAM,GAAG,IAAI,YAAY,GAAG,IAAI,yBAAyB,CAAC,CAAC,EACjE,MAAM,kBAAkB,GAAG,IAAI,4BAA4B,GAAG,IAAI,CAAC;AACxE,UAAI,sBAAsB,EACrB,MAAM,UAAU,EAChB,MAAM,UAAU,UAAU,EAC1B,MAAM,UAAU,IAAI,YAAY,CAAC,EACjC,MAAM,YAAY,GAAG,IAAI,sBAAsB,GAAG,IAAI,uBAAuB,CAAC,CAAC;AACpF,UAAI,mBAAmB,EAClB,MAAM,UAAU,EAChB,MAAM,cAAc,WAAW,EAC/B,MAAM,cAAc,IAAI,UAAU,CAAC,EACnC,MAAM,aAAa,IAAI,UAAU,CAAC;AACvC,UAAI,2BAA2B,EAC1B,MAAM,UAAU,EAChB,MAAM,cAAc,aAAa,UAAU,EAC3C,MAAM,cAAc,IAAI,UAAU,CAAC,EACnC,MAAM,aAAa,IAAI,UAAU,CAAC,EAClC,MAAM,YAAY,OAAO;AAC9B,UAAI,qBAAqB,EACpB,MAAM,UAAU,EAChB,MAAM,OAAO,EACb,MAAM,SAAS,CAAC,IAAI,UAAU,CAAC,CAAC;AACrC,UAAI,4BAA4B,EAC3B,MAAM,UAAU,EAChB,MAAM,OAAO,EACb,MAAM,SAAS,CAAC,IAAI,UAAU,CAAC,CAAC;AACrC,UAAI,sBAAsB,EACrB,MAAM,UAAU,EAChB,MAAM,UAAU,EAChB,MAAM,YAAY,IAAI,UAAU,CAAC;AACtC,UAAI,0BAA0B,EACzB,MAAM,MAAM,EACZ,MAAM,UAAU,EAChB,MAAM,YAAY,IAAI,UAAU,CAAC;AACtC,UAAI,wBAAwB,EACvB,MAAM,MAAM,EACZ,MAAM,MAAM,SAAS,YAAY,UAAU,QAAQ,EACnD,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,SAAS,IAAI,UAAU,CAAC,EAC9B,MAAM,YAAY,OAAO,EACzB,MAAM,UAAU,OAAO,EACvB,MAAM,UAAU,OAAO;AAC5B,UAAI,0BAA0B,EACzB,MAAM,MAAM,EACZ,MAAM,QAAQ,EACd,MAAM,UAAU,CAAC,IAAI,eAAe,CAAC,CAAC;AAC3C,UAAI,4BAA4B,EAC3B,MAAM,MAAM,EACZ,MAAM,QAAQ,EACd,MAAM,UAAU,CAAC,IAAI,UAAU,CAAC,CAAC;AACtC,UAAI,eAAe,EACd,MAAM,UAAU,EAChB,MAAM,QAAQ,YAAY,SAAS,SAAS,EAC5C,MAAM,QAAQ,MAAM,EACpB,MAAM,YAAY,gBAAgB,SAAS,MAAM,CAAC,EAClD,MAAM,SAAS,GAAG,IAAI,gBAAgB,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EAChE,MAAM,WAAW,GAAG,IAAI,UAAU,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACjE,UAAI,eAAe,EACd,MAAM,YAAY,gBAAgB,SAAS,MAAM,CAAC;AACvD,UAAI,iBAAiB,EAChB,MAAM,MAAM,EACZ,MAAM,IAAI,EACV,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,cAAc,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EACjE,MAAM,kBAAkB,GAAG,IAAI,4BAA4B,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAC1F,UAAI,yBAAyB,EACxB,MAAM,UAAU,EAChB,MAAM,QAAQ,SAAS,EACvB,MAAM,QAAQ,IAAI,sBAAsB,CAAC,EACzC,MAAM,WAAW,GAAG,CAAC,IAAI,kBAAkB,CAAC,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAC3E,UAAI,sBAAsB,EACrB,MAAM,aAAa,EACnB,MAAM,MAAM,QAAQ,SAAS,EAC7B,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,kBAAkB,GAAG,IAAI,0BAA0B,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EACnF,MAAM,QAAQ,IAAI,sBAAsB,CAAC,EACzC,MAAM,WAAW,CAAC,IAAI,kBAAkB,CAAC,CAAC;AAC/C,UAAI,kBAAkB,EACjB,MAAM,sBAAsB,EAC5B,MAAM,MAAM,QAAQ,SAAS;AAClC,UAAI,kBAAkB,EACjB,MAAM,MAAM,EACZ,MAAM,IAAI,EACV,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,kBAAkB,GAAG,IAAI,4BAA4B,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAC1F,UAAI,WAAW,EACV,MAAM,aAAa,EACnB,MAAM,MAAM,kBAAkB,OAAO,EACrC,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,kBAAkB,GAAG,IAAI,0BAA0B,GAAG,IAAI,CAAC,EACjE,MAAM,SAAS,IAAI,UAAU,CAAC;AACnC,UAAI,kBAAkB,EACjB,MAAM,WAAW,EACjB,MAAM,MAAM,kBAAkB,OAAO;AAC1C,UAAI,YAAY,EACX,MAAM,aAAa,EACnB,MAAM,MAAM,kBAAkB,YAAY,WAAW,EACrD,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,kBAAkB,GAAG,IAAI,0BAA0B,GAAG,IAAI,CAAC,EACjE,MAAM,YAAY,IAAI,UAAU,CAAC,EACjC,MAAM,aAAa,GAAG,IAAI,UAAU,GAAG,IAAI,CAAC;AACjD,UAAI,mBAAmB,EAClB,MAAM,YAAY,EAClB,MAAM,MAAM,kBAAkB,WAAW,EACzC,MAAM,YAAY,GAAG,IAAI,UAAU,GAAG,IAAI,CAAC;AAChD,UAAI,oBAAoB,EACnB,MAAM,YAAY,EAClB,MAAM,cAAc,gBAAgB,EACpC,MAAM,cAAc,IAAI,YAAY,CAAC,EACrC,MAAM,kBAAkB,IAAI,gBAAgB,CAAC;AAClD,UAAI,qBAAqB,EACpB,MAAM,UAAU,EAChB,MAAM,OAAO,EACb,MAAM,SAAS,CAAC,IAAI,UAAU,CAAC,CAAC;AACrC,UAAI,iBAAiB,EAChB,MAAM,WAAW,EACjB,MAAM,IAAI,EACV,MAAM,MAAM,IAAI,YAAY,CAAC;AAClC,UAAI,iBAAiB,EAChB,MAAM,WAAW,EACjB,MAAM,IAAI,EACV,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,aAAa,GAAG,IAAI,eAAe,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACxE,UAAI,cAAc,EACb,MAAM,sBAAsB,EAC5B,MAAM,IAAI;AACf,UAAI,eAAe,EACd,MAAM,WAAW,EACjB,MAAM,MAAM,MAAM,EAClB,MAAM,MAAM,GAAG,IAAI,YAAY,GAAG,IAAI,SAAS,CAAC,CAAC,EACjD,MAAM,QAAQ,IAAI,gBAAgB,CAAC;AACxC,UAAI,sBAAsB,EACrB,MAAM,WAAW,EACjB,MAAM,gBAAgB,EACtB,MAAM,kBAAkB,IAAI,gBAAgB,CAAC;AAClD,UAAI,0BAA0B,EACzB,MAAM,aAAa,EACnB,MAAM,WAAW,eAAe,cAAc,QAAQ,EACtD,MAAM,WAAW,OAAO,EACxB,MAAM,eAAe;AAAA,QAAG,IAAI,iBAAiB;AAAA,QAAG,IAAI,iBAAiB;AAAA,QAAG,IAAI,cAAc;AAAA,QAAG,IAAI,UAAU;AAAA;AAAA,QAChH,IAAI,WAAW;AAAA;AAAA,QACf,IAAI,mBAAmB;AAAA;AAAA,QACvB,IAAI,sBAAsB;AAAA,QAAG;AAAA,MAAI,CAAC,EAC7B,MAAM,cAAc,CAAC,GAAG,IAAI,iBAAiB,GAAG,IAAI,sBAAsB,CAAC,CAAC,GAAG,SAAS,UAAU,EAClG,MAAM,UAAU,GAAG,IAAI,SAAS,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAC/D,UAAI,6BAA6B,EAC5B,MAAM,aAAa,EACnB,MAAM,QAAQ,EACd,MAAM,UAAU,GAAG,IAAI,SAAS,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAC/D,UAAI,mBAAmB,EAClB,MAAM,cAAc,GAAG,SAAS,QAAQ,QAAQ,GAAG,WAAY;AAAE,eAAO;AAAA,MAAQ,CAAE;AACvF,UAAI,eAAe,EAAE,MAAM,MAAM;AACjC,UAAI,mBAAmB,EAClB,MAAM,eAAe,EACrB;AACL,UAAI,mBAAmB,EAClB,MAAM,eAAe,EACrB,MAAM,OAAO,EACb,MAAM,SAAS,IAAI,YAAY,CAAC;AACrC,UAAI,UAAU,EACT,MAAM,aAAa,GAAG,IAAI,eAAe,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACxE,UAAI,gBAAgB,EACf,MAAM,iBAAiB,GAAG,MAAM,IAAI,4BAA4B,CAAC,GAAG,SAAS,MAAM,CAAC;AACzF,UAAI,eAAe,EACd,MAAM,iBAAiB,GAAG,MAAM,IAAI,4BAA4B,CAAC,GAAG,SAAS,MAAM,CAAC;AAEzF,UAAI,iBAAiB,EAChB,MAAM,aAAa,EACnB,MAAM,MAAM,MAAM,EAClB,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,QAAQ,GAAG,IAAI,iBAAiB,GAAG,IAAI,gBAAgB,GAAG,IAAI,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,CAAC;AAClH,UAAI,iBAAiB,EAChB,MAAM,WAAW,cAAc,EAC/B,MAAM,WAAW,CAAC,IAAI,mBAAmB,CAAC,CAAC,EAC3C,MAAM,gBAAgB,OAAO;AAClC,UAAI,gBAAgB,EACf,MAAM,WAAW,cAAc,EAC/B,MAAM,WAAW,CAAC,IAAI,kBAAkB,CAAC,CAAC,EAC1C,MAAM,gBAAgB,OAAO;AAClC,UAAI,gBAAgB,EACf,MAAM,WAAW,cAAc,EAC/B,MAAM,WAAW,GAAG,CAAC,IAAI,kBAAkB,CAAC,GAAG,CAAC,IAAI,qBAAqB,CAAC,CAAC,CAAC,EAC5E,MAAM,gBAAgB,OAAO;AAClC,UAAI,gBAAgB,EACf,MAAM,SAAS,EACf,MAAM,WAAW,CAAC,IAAI,qBAAqB,CAAC,CAAC;AAClD,UAAI,mBAAmB,EAClB,MAAM,MAAM,MAAM,EAClB,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,QAAQ,GAAG,IAAI,SAAS,GAAG,OAAO,CAAC;AAC9C,UAAI,kBAAkB,EACjB,MAAM,MAAM,MAAM,EAClB,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,QAAQ,IAAI,SAAS,CAAC;AACjC,UAAI,kBAAkB,EACjB,MAAM,MAAM,MAAM,EAClB,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,QAAQ,IAAI,SAAS,CAAC;AACjC,UAAI,qBAAqB,EACpB,MAAM,IAAI,EACV,MAAM,MAAM,IAAI,YAAY,CAAC;AAAA,IACrC;AACD,IAAAxB,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;;ACvWlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,iBAAiB,QAAQ,gBAAgBY,mBAAyB,CAAA;AACtE,QAAI,UAAU,QAAQ,gBAAgBC,aAAmB,CAAA;AACzD,QAAI,WAAW,QAAQ,aAAaC,cAAoB,CAAA;AACxD,aAAS,UAAUU,OAAM;AACrB,MAAAA,MAAK,IAAI,eAAe,OAAO;AAC/B,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,WAAWA,MAAK,IAAI,SAAS,OAAO,EAAE;AAC1C,UAAI,MAAMC,OAAM,KAAK;AACrB,UAAI,KAAKA,OAAM,KAAK;AACpB,UAAI,qBAAqB,EACpB,MAAM,gBAAgB,CAAC;AAAA,QAAG,IAAI,oBAAoB;AAAA,QAAG,IAAI,YAAY;AAAA;AAAA,MACrE,CAAA,CAAC;AACN,UAAI,UAAU,EACT,MAAM,SAAS;AAAA,QAAG,IAAI,YAAY;AAAA,QAAG,IAAI,SAAS;AAAA;AAAA,MAC3D,CAAK;AACD,UAAI,cAAc,EACb,MAAM,YAAY,CAAC,GAAG,IAAI,SAAS,GAAG,IAAI,eAAe,GAAG,IAAI,CAAC,CAAC;AACvE,UAAI,eAAe,EACd,MAAM,cAAc,CAAC;AAAA,QAAG,IAAI,UAAU;AAAA,QAAG,IAAI,iBAAiB;AAAA,QAAG,IAAI,uBAAuB;AAAA,QAAG,IAAI,gBAAgB;AAAA;AAAA,MACnH,CAAA,CAAC;AAGN,UAAI,iBAAiB,EAChB,MAAM,iBAAiB,EACvB,MAAM,MAAM,MAAM;AAEvB,UAAI,sBAAsB,EACrB,MAAM,WAAW,EACjB;AACL,UAAI,mBAAmB,EAClB,MAAM,aAAa,EACnB,MAAM,WAAW,eAAe,cAAc,QAAQ,EACtD,MAAM,WAAW,OAAO,EACxB,MAAM,eAAe;AAAA,QAAG,IAAI,aAAa;AAAA,QAAG,IAAI,YAAY;AAAA;AAAA,QACjE;AAAA,MAAI,CAAC,EACA,MAAM,cAAc,CAAC,GAAG,IAAI,iBAAiB,GAAG,IAAI,sBAAsB,CAAC,CAAC,GAAG,SAAS,UAAU,EAClG,MAAM,UAAU,GAAG,IAAI,SAAS,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAC/D,UAAI,OAAO,EACN,MAAM,SAAS,EACf;AAAA,QAAM;AAAA;AAAA,QAAuB;AAAA,QAAW;AAAA,MAAU;AACvD,UAAI,MAAM,EACL,MAAM,SAAS,EACf;AAAA,QAAM;AAAA;AAAA,QAAuB;AAAA,QAAW;AAAA,MAAU;AAAA,IAC1D;AACD,IAAAzB,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;;;AChDlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,iBAAiB,QAAQ,gBAAgBY,mBAAyB,CAAA;AACtE,QAAI,UAAU,QAAQ,gBAAgBC,aAAmB,CAAA;AACzD,QAAI,WAAW,QAAQ,aAAaC,cAAoB,CAAA;AACxD,aAAS,UAAUU,OAAM;AACrB,UAAI,IAAI,IAAI,IAAI,IAAI;AACpB,MAAAA,MAAK,IAAI,eAAe,OAAO;AAC/B,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,WAAWA,MAAK,IAAI,SAAS,OAAO,EAAE;AAC1C,UAAI,MAAMC,OAAM,KAAK;AACrB,UAAI,KAAKA,OAAM,KAAK;AACpB,UAAI,cAAcA,OAAM,aAAa;AACrC,UAAI,MAAM,EACL,MAAM,WAAW,EACjB;AACL,UAAI,cAAc,EACb,MAAM,YAAY,EAClB,MAAM,MAAM,EACZ,MAAM,QAAQ,CAAC,IAAI,WAAW,CAAC,CAAC;AACrC,UAAI,gBAAgB,EACf,MAAM,YAAY,EAClB,MAAM,UAAU,QAAQ,EACxB,MAAM,UAAU,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC,EAC3C,MAAM,UAAU,IAAI,YAAY,CAAC;AACtC,UAAI,yBAAyB,EACxB,MAAM,YAAY,EAClB,MAAM,YAAY,EAClB,MAAM,cAAc,IAAI,YAAY,CAAC;AAC1C,UAAI,0BAA0B,EACzB,MAAM,WAAW,EACjB,MAAM,UAAU,EAChB,MAAM,YAAY,IAAI,YAAY,CAAC;AACxC,UAAI,wBAAwB,EACvB,MAAM,WAAW,EACjB,MAAM,UAAU,EAChB,MAAM,YAAY,IAAI,YAAY,CAAC;AACxC,UAAI,cAAc,EACb,MAAM,SAAS,EACf;AAAA,QAAM;AAAA;AAAA,QAAuB;AAAA,QAAW;AAAA,MAAU;AACvD,UAAI,aAAa,EACZ,MAAM,SAAS,EACf;AAAA,QAAM;AAAA;AAAA,QAAuB;AAAA,QAAW;AAAA,MAAU;AACvD,UAAI,WAAW,EACV,MAAM,MAAM,EACZ,MAAM,OAAO,EACb,MAAM,SAAS,IAAI,kBAAkB,CAAC;AAC3C,UAAI,kBAAkB,EACjB,MAAM,QAAQ,YAAY,EAC1B,MAAM,OAAO,EACb,MAAM,SAAS,QAAQ,SAAS,YAAY,CAAC;AAClD,UAAI,sBAAsB,EACrB,MAAM,MAAM,EACZ,MAAM,OAAO,EACb,MAAM,SAAS,MAAM;AAC1B,UAAI,gBAAgB,EACf,MAAM,WAAW,EACjB,MAAM,MAAM,EACZ,MAAM,QAAQ,CAAC,IAAI,WAAW,CAAC,CAAC,EAChC,MAAM,cAAc,CAAC,IAAI,WAAW,CAAC,GAAG,SAAS,UAAU;AAChE,UAAI,SAAS,EACR,MAAM,MAAM,EACZ,MAAM,MAAM,EACZ,MAAM,QAAQ,CAAC,IAAI,WAAW,CAAC,CAAC,EAChC,MAAM,cAAc,CAAC,IAAI,WAAW,CAAC,GAAG,SAAS,UAAU,EAC3D,MAAM,eAAe,GAAG,IAAI,sBAAsB,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACjF,eAAS,iBAAiB,cAAc,OAAO;AAC3C,YAAI,iBAAiB,QAAQ;AAAE,yBAAe;AAAA,QAAS;AACvD,eAAO;AAAA,UACH;AAAA,UACA;AAAA,YACI,UAAU;AAAA,YACV,KAAK;AAAA,UACR;AAAA,UACD,SAAS,aAAa;AAClB,gBAAI,QAAQA,OAAM,cAAc,MAAM,OAAO;AAC7C,mBAAO;AAAA,cACH,UAAU;AAAA,cACV,KAAK,QAAQ,MAAM,KAAK,IAAI,OAAO,KAAK;AAAA,YAC5D;AAAA,UACa;AAAA,QACb;AAAA,MACK;AAED,OAAC,KAAK,IAAI,eAAe,EACpB,MAAM,SAAS,EACf,MAAM,OAAO,EACb,MAAM,SAAS,MAAM,GACrB,MAAM,MAAM,IAAI,iBAAiB,QAAQ,SAAU,KAAK;AAAE,eAAO,KAAK,UAAU,GAAG;AAAA,MAAE,CAAE,CAAC;AAC7F,OAAC,KAAK,IAAI,gBAAgB,EACrB,MAAM,SAAS,EACf,MAAM,OAAO,EACb,MAAM,SAAS,MAAM,EACrB,MAAM,OAAO,GAAG,QAAQ,IAAI,GAAG,SAAS,MAAM,CAAC,GAC/C,MAAM,MAAM,IAAI,iBAAiB,MAAM,CAAC;AAC7C,OAAC,KAAK,IAAI,eAAe,EACpB,MAAM,SAAS,EACf,MAAM,OAAO,EAGb,MAAM,SAAS,GAAG,QAAQ,MAAM,CAAC,GACjC,MAAM,MAAM,IAAI,iBAAiB,QAAQ,SAAU,KAAK;AAAE,eAAO,MAAM;AAAA,MAAI,CAAE,CAAC;AAGnF,OAAC,KAAK,IAAI,gBAAgB,EACrB,MAAM,SAAS,EACf,MAAM,OAAO,EACb,MAAM,SAAS,MAAM,GACrB,MAAM,MAAM,IAAI,iBAAiB,QAAQ,SAAU,KAAK;AAAE,eAAO,MAAM;AAAA,MAAI,CAAE,CAAC;AACnF,UAAI,aAAa,EACZ,MAAM,SAAS,EACf,MAAO,EACP,MAAM,SAAS,MAAM,SAAS,MAAM,CAAC;AAC1C,UAAI,gBAAgB,EACf,MAAM,SAAS,EACf,MAAM,OAAO,EACb,MAAM,SAAS,OAAO;AAC3B,OAAC,KAAK,IAAI,eAAe,EACpB,MAAM,SAAS,EACf,MAAM,WAAW,OAAO,EACxB,MAAM,WAAW,MAAM,EACvB,MAAM,SAAS,MAAM,EACrB,MAAM,SAAS,QAAQ,WAAY;AACpC,eAAO,IAAI,OAAO,KAAK,SAAS,KAAK,KAAK;AAAA,MAClD,CAAK,GACI,MAAM,MAAM,IAAI,iBAAiB,GAAG,QAAQ,WAAW,GAAG,SAAU,KAAK;AAAE,eAAO,IAAI,OAAO,IAAI,SAAS,GAAG,EAAE,OAAO,IAAI,SAAS,EAAE;AAAA,MAAI,CAAA,CAAC,EAAE,MAAM,SAAS;AAAA,QAC5J,SAAS;AAAA,QACT,OAAO;AAAA,MACf,GAAO,WAAY;AACX,eAAO;AAAA,UACH,SAAS,KAAK;AAAA,UACd,OAAO,KAAK;AAAA,QACxB;AAAA,MACA,CAAK;AACD,UAAI,2BAA2B,GAAG,IAAI,UAAU,GAAG,IAAI,cAAc,GAAG,IAAI,gBAAgB,GAAG,IAAI,gBAAgB,GAAG,IAAI,eAAe,CAAC;AAE1I,UAAI,kBAAkB,EACjB,MAAM,YAAY,EAClB,MAAM,YAAY,EAClB,MAAM,cAAc,CAAC,wBAAwB,CAAC;AAEnD,UAAI,cAAc,EACb,MAAM,QAAQ,UAAU,EACxB,MAAM,QAAQ,OAAO,UAAU,QAAQ,UAAU,EACjD,MAAM,QAAQ,GAAG,UAAU,OAAO,KAAK,CAAC,EACxC,MAAM,OAAO,GAAG,IAAI,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,YAAY,CAAC,CAAC,EACrE,MAAM,UAAU,CAAC,IAAI,SAAS,CAAC,CAAC,EAChC,MAAM,QAAQ,IAAI,gBAAgB,CAAC,EACnC,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,aAAa,SAAS,SAAS,OAAO,CAAC,EAC7C,MAAM,SAAS,SAAS,SAAS,OAAO,CAAC,EACzC;AAAA,QAAM;AAAA;AAAA,QACX,GAAG,IAAI,SAAS,GAAG,IAAI;AAAA,QAAG,SAAS,MAAM;AAAA,MAAC,EACrC,MAAM,cAAc,GAAG,CAAC,IAAI,WAAW,CAAC,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACvE,UAAI,gBAAgB,EACf,MAAM,MAAM,EACZ,MAAM,OAAO,OAAO,EACpB,MAAM,OAAO,GAAG,IAAI,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,YAAY,CAAC,CAAC,EACrE,MAAM,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,SAAS,CAAC,CAAC,EACpD;AAAA,QAAM;AAAA;AAAA,QACX,GAAG,IAAI,SAAS,GAAG,IAAI;AAAA,QAAG,SAAS,MAAM;AAAA,MAAC,EACrC,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC;AACjD,UAAI,mBAAmB,GAAG,IAAI,kBAAkB,GAAG,IAAI,oBAAoB,GAAG,IAAI,yBAAyB,GAAG,IAAI,eAAe,GAAG,IAAI,sBAAsB,GAAG,IAAI,aAAa,GAAG,IAAI,oBAAoB,GAAG,IAAI,uBAAuB,GAAG,IAAI,aAAa,CAAC;AAEhQ,UAAI,WAAW,EACV,MAAM,aAAa,EACnB,MAAM,MAAM,EACZ,MAAM,QAAQ,CAAC,gBAAgB,CAAC;AACrC,UAAI,aAAa,EACZ,MAAM,eAAe,UAAU,EAC/B,MAAM,QAAQ,OAAO,UAAU,QAAQ,YAAY,QAAQ,EAC3D,MAAM,OAAO,GAAG,IAAI,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,YAAY,CAAC,CAAC;AAC1E,UAAI,oBAAoB,EACnB,MAAM,eAAe,UAAU,EAC/B,MAAM,OAAO,UAAU,QAAQ,QAAQ,YAAY,QAAQ,EAC3D,MAAM,OAAO,IAAI,aAAa,CAAC;AACpC,UAAI,uBAAuB,EACtB,MAAM,aAAa,EACnB,MAAM,OAAO,SAAS,cAAc,YAAY,QAAQ,EACxD,MAAM,OAAO;AAAA,QAAG,IAAI,SAAS;AAAA,QAAG,IAAI,YAAY;AAAA,QAAG,IAAI,aAAa;AAAA;AAAA,QAEzE,IAAI,YAAY;AAAA,MAAC,CAAC,EACb,MAAM,SAAS,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACjE;AAAA,QAAC;AAAA,QACG;AAAA,MACR,EAAM,QAAQ,SAAU,UAAU;AAC1B,YAAI,QAAQ,EACP,MAAM,QAAQ,GAAG,OAAO,OAAO,UAAU,aAAa,GAAG,WAAY;AAAE,iBAAO;AAAA,QAAS,CAAE,EACzF,MAAM,QAAQ,IAAI,gBAAgB,CAAC,EAEnC,MAAM,UAAU,GAAG,UAAU,WAAW,aAAa,IAAI,GAAG,SAAS,MAAM,CAAC;AAAA,MACzF,CAAK;AACD;AAAA,QAAC;AAAA,QACG;AAAA,QACA;AAAA,MACR,EAAM,QAAQ,SAAU,UAAU;AAC1B,YAAI,QAAQ,EACP,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,UAAU,SAAS,SAAS,OAAO,CAAC,EAC1C,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,iBAAiB,GAAG,UAAU,WAAW,aAAa,IAAI,GAAG,SAAS,MAAM,CAAC,EACnF,MAAM,cAAc,GAAG,CAAC,IAAI,WAAW,CAAC,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EAClE,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC;AAAA,MACzD,CAAK;AACD,UAAI,wBAAwB;AAAA,QAAG,IAAI,UAAU;AAAA,QAAG,IAAI,iBAAiB;AAAA,QAAG,IAAI,uBAAuB;AAAA,QAAG,IAAI,gBAAgB;AAAA;AAAA,QAC1H,IAAI,gBAAgB;AAAA;AAAA,QACpB,IAAI,cAAc;AAAA;AAAA,QAClB,IAAI,aAAa;AAAA,MAAC;AAElB,UAAI,eAAe,EACd,MAAM,SAAS,EACf,MAAM,YAAY,EAClB,MAAM,cAAc,CAAC,qBAAqB,CAAC,EAC3C,MAAM,cAAc,GAAG,CAAC,IAAI,WAAW,CAAC,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACvE,UAAI,gBAAgB,EACf,MAAM,MAAM,EACZ,MAAM,UAAU,EAChB,MAAM,YAAY,IAAI,YAAY,CAAC;AACxC,UAAI,cAAc,EACb,MAAM,MAAM,EACZ,MAAM,UAAU,EAChB,MAAM,YAAY,IAAI,YAAY,CAAC;AACxC,UAAI,mBAAmB,EAClB,MAAM,WAAW,EACjB,MAAM,QAAQ,SAAS,MAAM,EAC7B,MAAM,QAAQ,GAAG,IAAI,qBAAqB,GAAG,IAAI,YAAY,CAAC,CAAC,EAC/D,MAAM,SAAS,IAAI,YAAY,CAAC,EAChC,MAAM,QAAQ,IAAI,WAAW,CAAC;AAEnC,UAAI,QAAQ,EACP,MAAM,YAAY,EAClB;IACR;AACD,IAAAzB,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;AC9OlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,UAAU,QAAQ,gBAAgBY,aAAmB,CAAA;AACzD,QAAI,eAAe,QAAQ,gBAAgBC,iBAAuB,CAAA;AAClE,QAAI,SAAS,QAAQ,gBAAgBC,YAAiB,CAAA;AACtD,QAAI,WAAWE;AACf,aAAS,UAAUQ,OAAM;AACrB,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,MAAMC,OAAM,KAAK;AACrB,MAAAD,MAAK,IAAI,aAAa,OAAO;AAC7B,MAAAA,MAAK,IAAI,OAAO,OAAO;AAEvB,UAAI,uBAAuB,EACtB,MAAM,YAAY,EAClB,MAAM,MAAM,EACZ,MAAM,QAAQ,MAAM;AAGzB,UAAI,gBAAgB,EACf,MAAM,YAAY,EAClB;IACR;AACD,IAAAxB,SAAA,UAAkB;AAClB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;;ACvBlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,QAAI,UAAU;AACd,QAAI,eAAe,QAAQ,gBAAgBY,iBAAuB,CAAA;AAClE,QAAI,qBAAqB,QAAQ,gBAAgBC,uBAA6B,CAAA;AAC9E,QAAI,UAAU,QAAQ,gBAAgBC,aAAmB,CAAA;AACzD,QAAI,WAAW,QAAQ,aAAaE,cAAoB,CAAA;AACxD,aAAS,UAAUQ,OAAM;AAGrB,MAAAA,MAAK,IAAI,aAAa,OAAO;AAC7B,MAAAA,MAAK,IAAI,mBAAmB,OAAO;AACnC,UAAIC,SAAQD,MAAK,IAAI,QAAQ,OAAO;AACpC,UAAI,IAAIC,OAAM;AACd,UAAI,MAAMA,OAAM,KAAK;AACrB,UAAI,KAAKA,OAAM,KAAK;AACpB,UAAI,WAAWD,MAAK,IAAI,SAAS,OAAO,EAAE;AAC1C,UAAI,gBAAgBC,OAAM,KAAK,KAAK,SAAU,OAAO,MAAM;AACvD,YAAI,EAAE,iBACF,EAAE,cAAc,MAAM,OAAO,IAAI,GAAG;AACpC,iBAAO;AAAA,QACV;AACD,YAAI,EAAE,WACF,EAAE,QAAQ,MAAM,OAAO,IAAI,KAC3B,OAAO,MAAM,UAAU,UAAU;AACjC,iBAAO;AAAA,QACV;AACD,eAAO;AAAA,MACV,GAAE,eAAe;AAClB,UAAI,QAAQ,EACP,MAAM,MAAM;AACjB,UAAI,eAAe,GAAG,IAAI,YAAY,GAAG,IAAI,iBAAiB,CAAC;AAC/D,UAAI,iBAAiB,EAChB,MAAM,UAAU,yCAAyC,EACzD,MAAM,YAAY,gBAAgB,EAClC,MAAM,YAAY,YAAY;AAGnC,UAAI,yCAAyC,EACxC,MAAM,kBAAkB,GAAG,IAAI,8BAA8B,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAG5F,UAAI,6BAA6B,EAC5B,MAAM,kBAAkB,GAAG,IAAI,4BAA4B,GAAG,MAAM,MAAM,GAAG,SAAS,MAAM,CAAC;AAGlG,UAAI,6BAA6B,EAC5B,MAAM,kBAAkB,GAAG,IAAI,kBAAkB,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAChF,UAAI,iBAAiB,EAChB,MAAM,MAAM,EACZ,MAAM,QAAQ,OAAO,EACrB,MAAM,QAAQ,YAAY,EAC1B,MAAM,SAAS,YAAY;AAChC,UAAI,gBAAgB,EACf,MAAM,cAAc,SAAS,EAC7B,MAAM,cAAc,gBAAgB,EACpC,MAAM,cAAc,IAAI,YAAY,CAAC,EACrC,MAAM,kBAAkB,IAAI,QAAQ,CAAC,EACrC,MAAM,SAAS,GAAG,EAAE,eAAe,WAAW,IAAI,GAAG,SAAS,MAAM,CAAC;AAC1E,UAAI,sBAAsB,EACrB,MAAM,YAAY,EAClB,MAAM,cAAc,gBAAgB,EACpC,MAAM,cAAc,IAAI,YAAY,CAAC,EACrC,MAAM,kBAAkB,IAAI,QAAQ,CAAC;AAC1C,UAAI,uBAAuB,EACtB,MAAM,cAAc,SAAS,EAC7B,MAAM,cAAc,gBAAgB,EACpC,MAAM,cAAc,IAAI,YAAY,CAAC,EACrC,MAAM,kBAAkB,IAAI,QAAQ,CAAC;AAC1C,UAAI,qBAAqB,EACpB,MAAM,cAAc,SAAS,EAC7B,MAAM,YAAY,EAClB,MAAM,cAAc,IAAI,YAAY,CAAC;AAC1C;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACR,EAAM,QAAQ,SAAU,aAAa;AAC7B,YAAI,WAAW,EACV,MAAM,QAAQ,EACd;MACb,CAAK;AACD,UAAI,aAAa,EACZ,MAAM,QAAQ,EACd,MAAM,aAAa,EACnB,MAAM,eAAe,IAAI,QAAQ,CAAC;AACvC,UAAI,eAAe,EACd,MAAM,QAAQ,EACd,MAAM,SAAS,EACf,MAAM,WAAW,GAAG,IAAI,gBAAgB,GAAG,IAAI,eAAe,GAAG,IAAI,gBAAgB,GAAG,IAAI,iBAAiB,GAAG,IAAI,iBAAiB,GAAG,IAAI,eAAe,CAAC,CAAC;AAClK,UAAI,iBAAiB,EAKhB,MAAM,eAAe,GAAG,CAAC,IAAI,YAAY,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;AAClE;AAAA,QAAC;AAAA,QACG;AAAA,MACR,EAAM,QAAQ,SAAU,UAAU;AAC1B,YAAI,QAAQ,EACP,MAAM,QAAQ,EACd,MAAM,OAAO,EACb,MAAM,SAAS,CAAC,IAAI,QAAQ,CAAC,CAAC;AAAA,MAC3C,CAAK;AACD,UAAI,mBAAmB,EAClB,MAAM,QAAQ,EACd,MAAM,aAAa,eAAe,YAAY,WAAW,EACzD,MAAM,aAAa,IAAI,QAAQ,CAAC,EAChC,MAAM,eAAe,IAAI,QAAQ,CAAC,EAClC,MAAM,YAAY,IAAI,QAAQ,CAAC,EAC/B,MAAM,aAAa,IAAI,QAAQ,CAAC;AACrC,UAAI,aAAa,EACZ,MAAM,QAAQ,EACd,MAAM,eAAe,EACrB,MAAM,iBAAiB,IAAI,iBAAiB,CAAC;AAClD,UAAI,qBAAqB,EACpB,MAAM,QAAQ,EACd,MAAM,gBAAgB,EACtB,MAAM,kBAAkB,IAAI,QAAQ,CAAC;AAC1C,UAAI,iBAAiB,CAAC,GAAG,IAAI,YAAY,GAAG,IAAI,aAAa,GAAG,IAAI,cAAc,GAAG,IAAI,eAAe,CAAC,CAAC;AAC1G;AAAA,QAAC;AAAA,QACG;AAAA,MACR,EAAM,QAAQ,SAAU,UAAU;AAC1B,YAAI,QAAQ,EACP,MAAM,UAAU,+BAA+B,6BAA6B,EAC5E,MAAM,YAAY,EAClB,MAAM,cAAc,cAAc;AAAA,MAC/C,CAAK;AACD,UAAI,mBAAmB,EAClB,MAAM,eAAe,6BAA6B,EAClD,MAAM,MAAM,UAAU,YAAY,EAClC,MAAM,WAAW,SAAS,SAAS,OAAO,CAAC,EAC3C,MAAM,SAAS,SAAS,SAAS,OAAO,CAAC,EACzC,MAAM,aAAa,SAAS,SAAS,OAAO,CAAC,EAC7C,MAAM,MAAM,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EACzD,MAAM,UAAU,CAAC,IAAI,SAAS,CAAC,CAAC,EAEhC,MAAM,cAAc;AAAA,QAAG,IAAI,kBAAkB;AAAA,QAAG,IAAI,MAAM;AAAA;AAAA,QAC/D;AAAA,MAAI,GAAG,SAAS,MAAM,CAAC;AACvB,UAAI,iBAAiB,EAChB,MAAM,eAAe,6BAA6B,EAClD,MAAM,OAAO,UAAU,YAAY,EACnC,MAAM,SAAS,SAAS,SAAS,OAAO,CAAC,EACzC,MAAM,aAAa,SAAS,SAAS,OAAO,CAAC,EAC7C,MAAM,UAAU,CAAC,IAAI,SAAS,CAAC,CAAC,EAEhC,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,iBAAiB,GAAG,UAAU,WAAW,aAAa,MAAM,GAAG,SAAS,WAAW,CAAC,EAC1F,MAAM,UAAU,SAAS,SAAS,OAAO,CAAC,EAC1C,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,OAAO;AAAA,QAAG,IAAI,YAAY;AAAA,QAAG,IAAI,eAAe;AAAA,QAAG,IAAI,gBAAgB;AAAA;AAAA,QAElF,IAAI,YAAY;AAAA,MAAC,CAAC,EAEb,MAAM,QAAQ,GAAG,OAAO,OAAO,UAAU,aAAa,GAAG,SAAS,aAAa;AAAE,eAAO;AAAA,MAAS,CAAE,EACnG;AAAA,QAAM;AAAA;AAAA,QACX,GAAG,UAAU,WAAW,aAAa,MAAM;AAAA,QAAG,SAAS,WAAW;AAAA,MAAC,EAC9D,MAAM,cAAc,GAAG,CAAC,IAAI,WAAW,CAAC,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EAElE,MAAM,cAAc;AAAA,QAAG,IAAI,kBAAkB;AAAA,QAAG,IAAI,MAAM;AAAA;AAAA,QAC/D;AAAA,MAAI,GAAG,SAAS,MAAM,CAAC;AACvB,UAAI,cAAc,EACb,MAAM,QAAQ,EACd,MAAM,iBAAiB,gBAAgB,EACvC,MAAM,YAAY,GAAG,SAAS,KAAK,GAAG,GAAG,SAAS,OAAO,CAAC,EAC1D,MAAM,iBAAiB,IAAI,iBAAiB,CAAC,EAC7C,MAAM,YAAY,GAAG,SAAS,KAAK,GAAG,GAAG,SAAS,OAAO,CAAC,EAC1D,MAAM,kBAAkB,GAAG,IAAI,QAAQ,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACtE,UAAI,aAAa,EACZ,MAAM,QAAQ,EACd,MAAM,cAAc,EACpB,MAAM,gBAAgB,CAAC,GAAG,IAAI,QAAQ,GAAG,IAAI,oBAAoB,CAAC,CAAC,CAAC;AACzE,UAAI,oBAAoB,EACnB,MAAM,QAAQ,EACd,MAAM,SAAS,eAAe,UAAU,EACxC,MAAM,SAAS,IAAI,YAAY,CAAC,EAChC,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,eAAe,IAAI,QAAQ,CAAC;AACvC,UAAI,YAAY,EACX,MAAM,QAAQ,EACd,MAAM,gBAAgB,EACtB,MAAM,kBAAkB,IAAI,QAAQ,CAAC;AAC1C,UAAI,gBAAgB,EACf,MAAM,QAAQ,EACd,MAAM,gBAAgB,EACtB,MAAM,kBAAkB,IAAI,QAAQ,CAAC;AAC1C,UAAI,qBAAqB,EACpB,MAAM,QAAQ,EACd,MAAM,cAAc,WAAW,EAC/B,MAAM,cAAc,IAAI,QAAQ,CAAC,EACjC,MAAM,aAAa,IAAI,QAAQ,CAAC;AACrC,UAAI,gBAAgB,EACf,MAAM,QAAQ,EACd,MAAM,UAAU,EAChB,MAAM,YAAY,MAAM,EACxB,MAAM,kBAAkB,IAAI,QAAQ,CAAC;AAC1C,UAAI,kBAAkB,EACjB,MAAM,MAAM,EACZ,MAAM,gBAAgB,EACtB,MAAM,kBAAkB,GAAG,IAAI,QAAQ,GAAG,IAAI,kBAAkB,CAAC,CAAC;AACvE,UAAI,kBAAkB,EACjB,MAAM,eAAe,6BAA6B,EAClD,MAAM,cAAc,gBAAgB,EACpC,MAAM,cAAc,CAAC,IAAI,YAAY,CAAC,CAAC,EACvC,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC;AACjD,UAAI,qBAAqB,EACpB,MAAM,eAAe,6BAA6B,EAClD,MAAM,OAAO,kBAAkB,UAAU,EACzC,MAAM,OAAO,IAAI,YAAY,CAAC,EAC9B,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,eAAe,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACvE,UAAI,mBAAmB,EAClB,MAAM,eAAe,+BAA+B,6BAA6B,EACjF,MAAM,OAAO,cAAc,gBAAgB,EAC3C,MAAM,OAAO,IAAI,YAAY,CAAC,EAC9B,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,cAAc,cAAc;AACvC,UAAI,iBAAiB,EAChB,MAAM,oBAAoB,QAAQ,EAClC,MAAM,iBAAiB,kBAAkB,SAAS,EAClD,MAAM,iBAAiB,GAAG,IAAI,YAAY,GAAG,IAAI,YAAY,CAAC,CAAC,EAC/D,MAAM,kBAAkB,GAAG,IAAI,kBAAkB,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EAC3E,MAAM,WAAW,SAAS,SAAS,OAAO,CAAC;AAChD;AAAA,QAAC;AAAA,QACG;AAAA,MACR,EAAM,QAAQ,SAAU,UAAU;AAC1B,YAAI,QAAQ,EACP,MAAM,eAAe,+BAA+B,6BAA6B,EACjF,MAAM,cAAc,gBAAgB,EACpC,MAAM,cAAc,cAAc;AAAA,MAC/C,CAAK;AACD,UAAI,cAAc,EACb,MAAM,MAAM,EACZ,MAAM,MAAM,aAAa,EACzB,MAAM,MAAM,GAAG,IAAI,YAAY,GAAG,aAAa,CAAC,EAChD,MAAM,eAAe,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACvE,UAAI,aAAa,EACZ,MAAM,QAAQ,EACd,MAAM,UAAU,EAChB,MAAM,YAAY,GAAG,cAAc,IAAI,cAAc,CAAC,CAAC;AAE5D,UAAI,eAAe,GAAG,IAAI,4BAA4B,GAAG,IAAI,iCAAiC,GAAG,IAAI,kBAAkB,GAAG,IAAI,mBAAmB,GAAG,IAAI,qBAAqB,CAAC;AAC9K,UAAI,eAAe,EACd,MAAM,QAAQ,EACd,MAAM,SAAS,EACf,MAAM,WAAW,CAAC,YAAY,CAAC;AACpC,UAAI,iBAAiB,EAChB,MAAM,YAAY,EAClB,MAAM,QAAQ,cAAc,SAAS,EACrC,MAAM,QAAQ,GAAG,IAAI,YAAY,GAAG,MAAM,CAAC,EAC3C,MAAM,cAAc,GAAG,IAAI,QAAQ,GAAG,MAAM,GAAG,SAAS,WAAW,CAAC,EACpE,MAAM,WAAW,GAAG,IAAI,QAAQ,GAAG,MAAM,GAAG,SAAS,WAAW,CAAC;AACtE,UAAI,iBAAiB,EAChB,MAAM,cAAc,SAAS,EAC7B,MAAM,kBAAkB,YAAY,EACpC,MAAM,kBAAkB,IAAI,QAAQ,CAAC,EACrC,MAAM,cAAc,IAAI,YAAY,CAAC,EACrC,MAAM,SAAS,GAAG,EAAE,eAAe,WAAW,IAAI,GAAG,SAAS,MAAM,CAAC;AAC1E,UAAI,4BAA4B,EAC3B,MAAM,aAAa,EACnB,MAAM,QAAQ,EACd,MAAM,UAAU,CAAC,IAAI,iBAAiB,CAAC,CAAC;AAC7C,UAAI,2BAA2B,EAC1B,MAAM,cAAc,yCAAyC,EAC7D,MAAM,cAAc,gBAAgB,EACpC,MAAM,cAAc,IAAI,YAAY,CAAC;AAC1C,UAAI,8BAA8B,EAC7B,MAAM,MAAM,EACZ,MAAM,QAAQ,EACd,MAAM,UAAU,CAAC,IAAI,QAAQ,CAAC,CAAC;AACpC,UAAI,mBAAmB,EAClB,MAAM,aAAa,EACnB,MAAM,MAAM,SAAS,EACrB,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,SAAS,SAAS,SAAS,OAAO,CAAC,EACzC,MAAM,WAAW,SAAS,SAAS,OAAO,CAAC,EAC3C,MAAM,WAAW,CAAC,IAAI,cAAc,CAAC,CAAC,EACtC,MAAM,eAAe,GAAG,IAAI,YAAY,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AACvE,UAAI,wBAAwB,EACvB,MAAM,eAAe,6BAA6B,EAClD,MAAM,MAAM,gBAAgB,EAC5B,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,WAAW,SAAS,SAAS,OAAO,CAAC,EAC3C,MAAM,kBAAkB,IAAI,QAAQ,CAAC;AAC1C,UAAI,eAAe,EACd,MAAM,MAAM,EACZ,MAAM,MAAM,EACZ,MAAM,QAAQ,CAAC,IAAI,WAAW,CAAC,CAAC;AACrC,UAAI,qBAAqB,EACpB,MAAM,aAAa,EACnB,MAAM,MAAM,MAAM,EAClB,MAAM,MAAM,GAAG,eAAe,YAAY,CAAC,EAC3C,MAAM,WAAW,SAAS,SAAS,OAAO,CAAC,EAC3C,MAAM,UAAU,SAAS,SAAS,OAAO,CAAC,EAC1C,MAAM,QAAQ,GAAG,IAAI,eAAe,GAAG,IAAI,qBAAqB,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC;AAC/F,UAAI,cAAc,EACb,MAAM,UAAU,yCAAyC,EACzD,MAAM,YAAY,aAAa,gBAAgB,EAC/C,MAAM,YAAY,aAAa,EAC/B,MAAM,aAAa,GAAG,cAAc,MAAM,GAAG,SAAS,WAAW,CAAC;AACvE,UAAI,2BAA2B,EAC1B,MAAM,aAAa,EACnB,MAAM,MAAM,iBAAiB,EAC7B,MAAM,MAAM,IAAI,YAAY,CAAC,EAC7B,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,mBAAmB,GAAG,cAAc,IAAI,2BAA2B,CAAC,CAAC;AAChF,UAAI,2BAA2B,EAC1B,MAAM,aAAa,EACnB,MAAM,YAAY,EAClB,MAAM,cAAc,aAAa;AACtC,UAAI,oBAAoB,EACnB,MAAM,WAAW,EACjB,MAAM,YAAY,EAClB,MAAM,cAAc,IAAI,YAAY,CAAC;AAC1C,UAAI,8BAA8B,EAC7B,MAAM,aAAa,EACnB,MAAM,IAAI,EACV,MAAM,MAAM,IAAI,YAAY,CAAC;AAClC,UAAI,iBAAiB,EAChB,MAAM,MAAM,EACZ,MAAM,MAAM,EACZ,MAAM,QAAQ,CAAC,YAAY,CAAC;AACjC,UAAI,+BAA+B,EAC9B,MAAM,UAAU,yCAAyC,EACzD,MAAM,cAAc,gBAAgB,EACpC,MAAM,cAAc,YAAY;AACrC,UAAI,wBAAwB,EACvB,MAAM,eAAe,6BAA6B,EAClD,MAAM,MAAM,MAAM,EAClB,MAAM,MAAM,YAAY,EACxB,MAAM,WAAW,SAAS,SAAS,OAAO,CAAC,EAC3C,MAAM,WAAW,GAAG,CAAC,IAAI,+BAA+B,CAAC,GAAG,IAAI,GAAG,SAAS,MAAM,CAAC,EACnF,MAAM,QAAQ,IAAI,iBAAiB,CAAC;AACzC,UAAI,qBAAqB,EACpB,MAAM,SAAS,EACf,MAAM,WAAW,EACjB,MAAM,iBAAiB,GAAG,UAAU,WAAW,aAAa,MAAM,GAAG,SAAS,WAAW,CAAC,EAC1F,MAAM,YAAY,SAAS,SAAS,OAAO,CAAC,EAC5C,MAAM,aAAa,GAAG,IAAI,YAAY,GAAG,IAAI,mBAAmB,CAAC,CAAC;AACvE,UAAI,eAAe,EACd;AAAA,QAAM;AAAA;AAAA,QACX,GAAG,UAAU,WAAW,aAAa,MAAM;AAAA,QAAG,SAAS,WAAW;AAAA,MAAC;AACnE,UAAI,uBAAuB,EACtB,MAAM,eAAe,6BAA6B;AAEvD,UAAI,WAAW,EACV,MAAM,QAAQ,CAAC;AAAA,QAAG,IAAI,kBAAkB;AAAA,QAAG,IAAI,oBAAoB;AAAA,QAAG,IAAI,yBAAyB;AAAA,QAAG,IAAI,eAAe;AAAA,QAAG,IAAI,sBAAsB;AAAA,QAAG,IAAI,uBAAuB;AAAA,QAAG,IAAI,aAAa;AAAA,QAAG,IAAI,oBAAoB;AAAA,QAAG,IAAI,aAAa;AAAA;AAAA,QAExP,IAAI,iBAAiB;AAAA,QAAG;AAAA,MAAY,CAAC,CAAC;AAAA,IAC7C;AACD,IAAAzB,SAAA,UAAkB;AAElB,KAAI,GAAA,SAAS,uBAAuB,WAAY;AAAE,aAAOsC;AAAA,IAAS,CAAA;AAAA;;;;;;;;;AC9WlE,WAAO,eAActC,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,IAAAA,SAAqB,aAAA;AAErB,IAAC,0BAAUqC,aAAY;AAAA,OACPrC,SAAQ,eAAeA,SAAqB,aAAA,CAAA,EAAG;AAAA;;;;;;;;ACJ/D,WAAO,eAAcA,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,IAAAA,SAAA,QAAgBA,eAAcA,SAAe,OAAAA,SAAA,YAAoBA,uBAAsBA,SAAe,OAAAA,SAAA,WAAmBA,sBAAqBA,SAA4B,oBAAAA,SAAA,gBAAwBA,yBAAwBA,SAAyB,iBAAAA,SAAA,WAAmBA,qBAAoBA,SAAuB,eAAAA,SAAA,eAAuBA,oBAAmBA,SAAgC,wBAAA;AAC3X,QAAI,UAAU;AACd,QAAI,SAAS,QAAQ,gBAAgBY,YAAiB,CAAA;AACtD,QAAI,iBAAiB,QAAQ,gBAAgBC,mBAA6B,CAAA;AAC1E,QAAI,QAAQ,QAAQ,gBAAgBC,WAAoB,CAAA;AACxD,QAAI,SAAS,QAAQ,gBAAgBE,YAAqB,CAAA;AAC1D,QAAI,YAAY,QAAQ,gBAAgBkC,iBAAwB,CAAA;AAChE,QAAI,UAAU,QAAQ,gBAAgBC,aAAsB,CAAA;AAC5D,QAAI,eAAe,QAAQ,gBAAgBE,kBAA2B,CAAA;AACtE,QAAI,eAAeC;AACnB,WAAO,eAAetD,UAAS,cAAc,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,aAAa;AAAA,IAAW,EAAI,CAAA;AACvH,QAAI,SAAS,OAAO,SAAS;AAAA;AAAA;AAAA,MAGzB,eAAe;AAAA,MACf,MAAM;AAAA,MACN,OAAO;AAAA,MACP,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,aAAa;AAAA,IAChB,CAAA,GAAG,wBAAwB,GAAG,uBAAuB,WAAW,GAAG,UAAU,eAAe,GAAG,cAAc,eAAe,GAAG,cAAc,YAAY,GAAG,WAAW,WAAW,GAAG,UAAU,iBAAiB,GAAG,gBAAgB,gBAAgB,GAAG,eAAe,gBAAgB,GAAG,eAAe,oBAAoB,GAAG,mBAAmB,IAAI,GAAG,YAAY,WAAW,GAAG,UAAU,OAAO,GAAG,MAAM,cAAc,GAAG,aAAa,YAAY,GAAG,WAAW,OAAO,GAAG,MAAM,MAAM,GAAG,KAAK,QAAQ,GAAG;AAC9e,IAAAA,SAAA,wBAAgC;AAChC,IAAAA,SAAA,WAAmB;AACnB,IAAAA,SAAA,eAAuB;AACvB,IAAAA,SAAA,eAAuB;AACvB,IAAAA,SAAA,YAAoB;AACpB,IAAAA,SAAA,WAAmB;AACnB,IAAAA,SAAA,iBAAyB;AACzB,IAAAA,SAAA,gBAAwB;AACxB,IAAAA,SAAA,gBAAwB;AACxB,IAAAA,SAAA,oBAA4B;AAC5B,IAAAA,SAAA,WAAmB;AACnB,IAAAA,SAAA,OAAe;AACf,IAAAA,SAAA,cAAsB;AACtB,IAAAA,SAAA,YAAoB;AACpB,IAAAA,SAAA,OAAe;AACf,IAAAA,SAAA,MAAc;AACd,IAAAA,SAAA,QAAgB;AAGhB,WAAO,OAAO,aAAa,YAAY,CAAC;AAAA;;;;;;;;;ACxCxC,MAAI,eAAe,QAAQ,IAAI,aAAa;AAC5C,MAAI,SAAS;AACb,WAAS,UAAU,WAAW,SAAS;AACnC,QAAI,WAAW;AACX;AAAA,IACH;AACD,QAAI,cAAc;AACd,YAAM,IAAI,MAAM,MAAM;AAAA,IACzB;AACD,QAAI,WAAW,OAAO,YAAY,aAAa,QAAO,IAAK;AAC3D,QAAI,QAAQ,WAAW,GAAG,OAAO,QAAQ,IAAI,EAAE,OAAO,QAAQ,IAAI;AAClE,UAAM,IAAI,MAAM,KAAK;AAAA,EACxB;AAED,sBAAiB;;;;;;;;;;;;;ACTjB,MAAI,eAAe,mEAAmE,MAAM,EAAE;AAKhF,SAAA,SAAG,SAAUQ,SAAQ;AACjC,QAAI,KAAKA,WAAUA,UAAS,aAAa,QAAQ;AAC/C,aAAO,aAAaA,OAAM;AAAA,IAC3B;AACD,UAAM,IAAI,UAAU,+BAA+BA,OAAM;AAAA,EAC3D;AAMc,SAAA,SAAG,SAAU,UAAU;AACnC,QAAI,OAAO;AACX,QAAI,OAAO;AAEX,QAAI,UAAU;AACd,QAAI,UAAU;AAEd,QAAI,OAAO;AACX,QAAI,OAAO;AAEX,QAAI,OAAO;AACX,QAAI,QAAQ;AAEZ,QAAI,eAAe;AACnB,QAAI,eAAe;AAGnB,QAAI,QAAQ,YAAY,YAAY,MAAM;AACxC,aAAQ,WAAW;AAAA,IACpB;AAGD,QAAI,WAAW,YAAY,YAAY,SAAS;AAC9C,aAAQ,WAAW,UAAU;AAAA,IAC9B;AAGD,QAAI,QAAQ,YAAY,YAAY,MAAM;AACxC,aAAQ,WAAW,OAAO;AAAA,IAC3B;AAGD,QAAI,YAAY,MAAM;AACpB,aAAO;AAAA,IACR;AAGD,QAAI,YAAY,OAAO;AACrB,aAAO;AAAA,IACR;AAGD,WAAO;AAAA;;;;;;;AC5BT,MAAI+C,UAAStD;AAcb,MAAI,iBAAiB;AAGrB,MAAI,WAAW,KAAK;AAGpB,MAAI,gBAAgB,WAAW;AAG/B,MAAI,uBAAuB;AAQ3B,WAAS,YAAY,QAAQ;AAC3B,WAAO,SAAS,KACV,CAAC,UAAW,KAAK,KAClB,UAAU,KAAK;AAAA,EACrB;AAQD,WAAS,cAAc,QAAQ;AAC7B,QAAI,cAAc,SAAS,OAAO;AAClC,QAAI,UAAU,UAAU;AACxB,WAAO,aACH,CAAC,UACD;AAAA,EACL;AAKD,YAAA,SAAiB,SAAS,iBAAiB,QAAQ;AACjD,QAAI,UAAU;AACd,QAAI;AAEJ,QAAI,MAAM,YAAY,MAAM;AAE5B,OAAG;AACD,cAAQ,MAAM;AACd,eAAS;AACT,UAAI,MAAM,GAAG;AAGX,iBAAS;AAAA,MACV;AACD,iBAAWsD,QAAO,OAAO,KAAK;AAAA,IAClC,SAAW,MAAM;AAEf,WAAO;AAAA,EACT;AAMc,YAAA,SAAG,SAAS,iBAAiB,MAAM,QAAQ,WAAW;AAClE,QAAI,SAAS,KAAK;AAClB,QAAI,SAAS;AACb,QAAI,QAAQ;AACZ,QAAI,cAAc;AAElB,OAAG;AACD,UAAI,UAAU,QAAQ;AACpB,cAAM,IAAI,MAAM,4CAA4C;AAAA,MAC7D;AAED,cAAQA,QAAO,OAAO,KAAK,WAAW,QAAQ,CAAC;AAC/C,UAAI,UAAU,IAAI;AAChB,cAAM,IAAI,MAAM,2BAA2B,KAAK,OAAO,SAAS,CAAC,CAAC;AAAA,MACnE;AAED,qBAAe,CAAC,EAAE,QAAQ;AAC1B,eAAS;AACT,eAAS,UAAU,SAAS;AAC5B,eAAS;AAAA,IACV,SAAQ;AAET,cAAU,QAAQ,cAAc,MAAM;AACtC,cAAU,OAAO;AAAA;;;;;;;;;ACzHnB,aAAS,OAAO,OAAO,OAAO,eAAe;AAC3C,UAAI,SAAS,OAAO;AAClB,eAAO,MAAM,KAAK;AAAA,MACtB,WAAa,UAAU,WAAW,GAAG;AACjC,eAAO;AAAA,MACX,OAAS;AACL,cAAM,IAAI,MAAM,MAAM,QAAQ,2BAA2B;AAAA,MAC1D;AAAA,IACF;AACD,IAAAvD,SAAA,SAAiB;AAEjB,QAAI,YAAY;AAChB,QAAI,gBAAgB;AAEpB,aAAS,SAAS,MAAM;AACtB,UAAI,QAAQ,KAAK,MAAM,SAAS;AAChC,UAAI,CAAC,OAAO;AACV,eAAO;AAAA,MACR;AACD,aAAO;AAAA,QACL,QAAQ,MAAM,CAAC;AAAA,QACf,MAAM,MAAM,CAAC;AAAA,QACb,MAAM,MAAM,CAAC;AAAA,QACb,MAAM,MAAM,CAAC;AAAA,QACb,MAAM,MAAM,CAAC;AAAA,MACjB;AAAA,IACC;AACD,IAAAA,SAAA,WAAmB;AAEnB,aAAS,YAAY,YAAY;AAC/B,UAAIW,OAAM;AACV,UAAI,WAAW,QAAQ;AACrB,QAAAA,QAAO,WAAW,SAAS;AAAA,MAC5B;AACD,MAAAA,QAAO;AACP,UAAI,WAAW,MAAM;AACnB,QAAAA,QAAO,WAAW,OAAO;AAAA,MAC1B;AACD,UAAI,WAAW,MAAM;AACnB,QAAAA,QAAO,WAAW;AAAA,MACnB;AACD,UAAI,WAAW,MAAM;AACnB,QAAAA,QAAO,MAAM,WAAW;AAAA,MACzB;AACD,UAAI,WAAW,MAAM;AACnB,QAAAA,QAAO,WAAW;AAAA,MACnB;AACD,aAAOA;AAAA,IACR;AACD,IAAAX,SAAA,cAAsB;AAatB,aAAS,UAAU,OAAO;AACxB,UAAIwC,QAAO;AACX,UAAI7B,OAAM,SAAS,KAAK;AACxB,UAAIA,MAAK;AACP,YAAI,CAACA,KAAI,MAAM;AACb,iBAAO;AAAA,QACR;AACD,QAAA6B,QAAO7B,KAAI;AAAA,MACZ;AACD,UAAI,aAAaX,SAAQ,WAAWwC,KAAI;AAExC,UAAI,QAAQA,MAAK,MAAM,KAAK;AAC5B,eAAS,MAAM,KAAK,GAAG,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AACxD,eAAO,MAAM,CAAC;AACd,YAAI,SAAS,KAAK;AAChB,gBAAM,OAAO,GAAG,CAAC;AAAA,QACvB,WAAe,SAAS,MAAM;AACxB;AAAA,QACN,WAAe,KAAK,GAAG;AACjB,cAAI,SAAS,IAAI;AAIf,kBAAM,OAAO,IAAI,GAAG,EAAE;AACtB,iBAAK;AAAA,UACb,OAAa;AACL,kBAAM,OAAO,GAAG,CAAC;AACjB;AAAA,UACD;AAAA,QACF;AAAA,MACF;AACD,MAAAA,QAAO,MAAM,KAAK,GAAG;AAErB,UAAIA,UAAS,IAAI;AACf,QAAAA,QAAO,aAAa,MAAM;AAAA,MAC3B;AAED,UAAI7B,MAAK;AACP,QAAAA,KAAI,OAAO6B;AACX,eAAO,YAAY7B,IAAG;AAAA,MACvB;AACD,aAAO6B;AAAA,IACR;AACD,IAAAxC,SAAA,YAAoB;AAkBpB,aAAS,KAAK,OAAO,OAAO;AAC1B,UAAI,UAAU,IAAI;AAChB,gBAAQ;AAAA,MACT;AACD,UAAI,UAAU,IAAI;AAChB,gBAAQ;AAAA,MACT;AACD,UAAI,WAAW,SAAS,KAAK;AAC7B,UAAI,WAAW,SAAS,KAAK;AAC7B,UAAI,UAAU;AACZ,gBAAQ,SAAS,QAAQ;AAAA,MAC1B;AAGD,UAAI,YAAY,CAAC,SAAS,QAAQ;AAChC,YAAI,UAAU;AACZ,mBAAS,SAAS,SAAS;AAAA,QAC5B;AACD,eAAO,YAAY,QAAQ;AAAA,MAC5B;AAED,UAAI,YAAY,MAAM,MAAM,aAAa,GAAG;AAC1C,eAAO;AAAA,MACR;AAGD,UAAI,YAAY,CAAC,SAAS,QAAQ,CAAC,SAAS,MAAM;AAChD,iBAAS,OAAO;AAChB,eAAO,YAAY,QAAQ;AAAA,MAC5B;AAED,UAAI,SAAS,MAAM,OAAO,CAAC,MAAM,MAC7B,QACA,UAAU,MAAM,QAAQ,QAAQ,EAAE,IAAI,MAAM,KAAK;AAErD,UAAI,UAAU;AACZ,iBAAS,OAAO;AAChB,eAAO,YAAY,QAAQ;AAAA,MAC5B;AACD,aAAO;AAAA,IACR;AACD,IAAAA,SAAA,OAAe;AAEf,IAAAA,SAAqB,aAAA,SAAU,OAAO;AACpC,aAAO,MAAM,OAAO,CAAC,MAAM,OAAO,UAAU,KAAK,KAAK;AAAA,IACxD;AAQA,aAAS,SAAS,OAAO,OAAO;AAC9B,UAAI,UAAU,IAAI;AAChB,gBAAQ;AAAA,MACT;AAED,cAAQ,MAAM,QAAQ,OAAO,EAAE;AAM/B,UAAI,QAAQ;AACZ,aAAO,MAAM,QAAQ,QAAQ,GAAG,MAAM,GAAG;AACvC,YAAI,QAAQ,MAAM,YAAY,GAAG;AACjC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACR;AAKD,gBAAQ,MAAM,MAAM,GAAG,KAAK;AAC5B,YAAI,MAAM,MAAM,mBAAmB,GAAG;AACpC,iBAAO;AAAA,QACR;AAED,UAAE;AAAA,MACH;AAGD,aAAO,MAAM,QAAQ,CAAC,EAAE,KAAK,KAAK,IAAI,MAAM,OAAO,MAAM,SAAS,CAAC;AAAA,IACpE;AACD,IAAAA,SAAA,WAAmB;AAEnB,QAAI,oBAAqB,WAAY;AACnC,UAAI,MAAM,uBAAO,OAAO,IAAI;AAC5B,aAAO,EAAE,eAAe;AAAA,IACzB,EAAA;AAED,aAAS,SAAU,GAAG;AACpB,aAAO;AAAA,IACR;AAWD,aAAS,YAAY,MAAM;AACzB,UAAI,cAAc,IAAI,GAAG;AACvB,eAAO,MAAM;AAAA,MACd;AAED,aAAO;AAAA,IACR;AACD,IAAAA,SAAA,cAAsB,oBAAoB,WAAW;AAErD,aAAS,cAAc,MAAM;AAC3B,UAAI,cAAc,IAAI,GAAG;AACvB,eAAO,KAAK,MAAM,CAAC;AAAA,MACpB;AAED,aAAO;AAAA,IACR;AACD,IAAAA,SAAA,gBAAwB,oBAAoB,WAAW;AAEvD,aAAS,cAAc,GAAG;AACxB,UAAI,CAAC,GAAG;AACN,eAAO;AAAA,MACR;AAED,UAAI,SAAS,EAAE;AAEf,UAAI,SAAS,GAA4B;AACvC,eAAO;AAAA,MACR;AAED,UAAI,EAAE,WAAW,SAAS,CAAC,MAAM,MAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,MAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,OAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,MAC7B,EAAE,WAAW,SAAS,CAAC,MAAM,IAAe;AAC9C,eAAO;AAAA,MACR;AAED,eAAS,IAAI,SAAS,IAAI,KAAK,GAAG,KAAK;AACrC,YAAI,EAAE,WAAW,CAAC,MAAM,IAAc;AACpC,iBAAO;AAAA,QACR;AAAA,MACF;AAED,aAAO;AAAA,IACR;AAUD,aAAS,2BAA2B,UAAU,UAAU,qBAAqB;AAC3E,UAAI,MAAM,OAAO,SAAS,QAAQ,SAAS,MAAM;AACjD,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACR;AAED,YAAM,SAAS,eAAe,SAAS;AACvC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACR;AAED,YAAM,SAAS,iBAAiB,SAAS;AACzC,UAAI,QAAQ,KAAK,qBAAqB;AACpC,eAAO;AAAA,MACR;AAED,YAAM,SAAS,kBAAkB,SAAS;AAC1C,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACR;AAED,YAAM,SAAS,gBAAgB,SAAS;AACxC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACR;AAED,aAAO,OAAO,SAAS,MAAM,SAAS,IAAI;AAAA,IAC3C;AACD,IAAAA,SAAA,6BAAqC;AAWrC,aAAS,oCAAoC,UAAU,UAAU,sBAAsB;AACrF,UAAI,MAAM,SAAS,gBAAgB,SAAS;AAC5C,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACR;AAED,YAAM,SAAS,kBAAkB,SAAS;AAC1C,UAAI,QAAQ,KAAK,sBAAsB;AACrC,eAAO;AAAA,MACR;AAED,YAAM,OAAO,SAAS,QAAQ,SAAS,MAAM;AAC7C,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACR;AAED,YAAM,SAAS,eAAe,SAAS;AACvC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACR;AAED,YAAM,SAAS,iBAAiB,SAAS;AACzC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACR;AAED,aAAO,OAAO,SAAS,MAAM,SAAS,IAAI;AAAA,IAC3C;AACD,IAAAA,SAAA,sCAA8C;AAE9C,aAAS,OAAO,OAAO,OAAO;AAC5B,UAAI,UAAU,OAAO;AACnB,eAAO;AAAA,MACR;AAED,UAAI,UAAU,MAAM;AAClB,eAAO;AAAA,MACR;AAED,UAAI,UAAU,MAAM;AAClB,eAAO;AAAA,MACR;AAED,UAAI,QAAQ,OAAO;AACjB,eAAO;AAAA,MACR;AAED,aAAO;AAAA,IACR;AAMD,aAAS,oCAAoC,UAAU,UAAU;AAC/D,UAAI,MAAM,SAAS,gBAAgB,SAAS;AAC5C,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACR;AAED,YAAM,SAAS,kBAAkB,SAAS;AAC1C,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACR;AAED,YAAM,OAAO,SAAS,QAAQ,SAAS,MAAM;AAC7C,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACR;AAED,YAAM,SAAS,eAAe,SAAS;AACvC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACR;AAED,YAAM,SAAS,iBAAiB,SAAS;AACzC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACR;AAED,aAAO,OAAO,SAAS,MAAM,SAAS,IAAI;AAAA,IAC3C;AACD,IAAAA,SAAA,sCAA8C;AAO9C,aAAS,oBAAoB,KAAK;AAChC,aAAO,KAAK,MAAM,IAAI,QAAQ,kBAAkB,EAAE,CAAC;AAAA,IACpD;AACD,IAAAA,SAAA,sBAA8B;AAM9B,aAAS,iBAAiB,YAAY,WAAW,cAAc;AAC7D,kBAAY,aAAa;AAEzB,UAAI,YAAY;AAEd,YAAI,WAAW,WAAW,SAAS,CAAC,MAAM,OAAO,UAAU,CAAC,MAAM,KAAK;AACrE,wBAAc;AAAA,QACf;AAMD,oBAAY,aAAa;AAAA,MAC1B;AAgBD,UAAI,cAAc;AAChB,YAAI,SAAS,SAAS,YAAY;AAClC,YAAI,CAAC,QAAQ;AACX,gBAAM,IAAI,MAAM,kCAAkC;AAAA,QACnD;AACD,YAAI,OAAO,MAAM;AAEf,cAAI,QAAQ,OAAO,KAAK,YAAY,GAAG;AACvC,cAAI,SAAS,GAAG;AACd,mBAAO,OAAO,OAAO,KAAK,UAAU,GAAG,QAAQ,CAAC;AAAA,UACjD;AAAA,QACF;AACD,oBAAY,KAAK,YAAY,MAAM,GAAG,SAAS;AAAA,MAChD;AAED,aAAO,UAAU,SAAS;AAAA,IAC3B;AACD,IAAAA,SAAA,mBAA2B;AAAA;;;;;;;;AChe3B,MAAIwD,QAAOvD;AACX,MAAI,MAAM,OAAO,UAAU;AAC3B,MAAI,eAAe,OAAO,QAAQ;AAQlC,WAAS,WAAW;AAClB,SAAK,SAAS;AACd,SAAK,OAAO,eAAe,oBAAI,IAAK,IAAG,uBAAO,OAAO,IAAI;AAAA,EAC1D;AAKD,WAAS,YAAY,SAAS,mBAAmB,QAAQ,kBAAkB;AACzE,QAAI,MAAM,IAAI;AACd,aAAS,IAAI,GAAG,MAAM,OAAO,QAAQ,IAAI,KAAK,KAAK;AACjD,UAAI,IAAI,OAAO,CAAC,GAAG,gBAAgB;AAAA,IACpC;AACD,WAAO;AAAA,EACT;AAQA,WAAS,UAAU,OAAO,SAAS,gBAAgB;AACjD,WAAO,eAAe,KAAK,KAAK,OAAO,OAAO,oBAAoB,KAAK,IAAI,EAAE;AAAA,EAC/E;AAOA,WAAS,UAAU,MAAM,SAAS,aAAa,MAAM,kBAAkB;AACrE,QAAI,OAAO,eAAe,OAAOuD,MAAK,YAAY,IAAI;AACtD,QAAI,cAAc,eAAe,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,MAAM,IAAI;AAC1E,QAAI,MAAM,KAAK,OAAO;AACtB,QAAI,CAAC,eAAe,kBAAkB;AACpC,WAAK,OAAO,KAAK,IAAI;AAAA,IACtB;AACD,QAAI,CAAC,aAAa;AAChB,UAAI,cAAc;AAChB,aAAK,KAAK,IAAI,MAAM,GAAG;AAAA,MAC7B,OAAW;AACL,aAAK,KAAK,IAAI,IAAI;AAAA,MACnB;AAAA,IACF;AAAA,EACH;AAOA,WAAS,UAAU,MAAM,SAAS,aAAa,MAAM;AACnD,QAAI,cAAc;AAChB,aAAO,KAAK,KAAK,IAAI,IAAI;AAAA,IAC7B,OAAS;AACL,UAAI,OAAOA,MAAK,YAAY,IAAI;AAChC,aAAO,IAAI,KAAK,KAAK,MAAM,IAAI;AAAA,IAChC;AAAA,EACH;AAOA,WAAS,UAAU,UAAU,SAAS,iBAAiB,MAAM;AAC3D,QAAI,cAAc;AAChB,UAAI,MAAM,KAAK,KAAK,IAAI,IAAI;AAC5B,UAAI,OAAO,GAAG;AACV,eAAO;AAAA,MACV;AAAA,IACL,OAAS;AACL,UAAI,OAAOA,MAAK,YAAY,IAAI;AAChC,UAAI,IAAI,KAAK,KAAK,MAAM,IAAI,GAAG;AAC7B,eAAO,KAAK,KAAK,IAAI;AAAA,MACtB;AAAA,IACF;AAED,UAAM,IAAI,MAAM,MAAM,OAAO,sBAAsB;AAAA,EACrD;AAOA,WAAS,UAAU,KAAK,SAAS,YAAY,MAAM;AACjD,QAAI,QAAQ,KAAK,OAAO,KAAK,OAAO,QAAQ;AAC1C,aAAO,KAAK,OAAO,IAAI;AAAA,IACxB;AACD,UAAM,IAAI,MAAM,2BAA2B,IAAI;AAAA,EACjD;AAOA,WAAS,UAAU,UAAU,SAAS,mBAAmB;AACvD,WAAO,KAAK,OAAO;EACrB;AAEA,WAAA,WAAmB;;;;;;;;ACjHnB,MAAIA,QAAOvD;AAMX,WAAS,uBAAuB,UAAU,UAAU;AAElD,QAAI,QAAQ,SAAS;AACrB,QAAI,QAAQ,SAAS;AACrB,QAAI,UAAU,SAAS;AACvB,QAAI,UAAU,SAAS;AACvB,WAAO,QAAQ,SAAS,SAAS,SAAS,WAAW,WAC9CuD,MAAK,oCAAoC,UAAU,QAAQ,KAAK;AAAA,EACxE;AAOD,WAAS,cAAc;AACrB,SAAK,SAAS;AACd,SAAK,UAAU;AAEf,SAAK,QAAQ,EAAC,eAAe,IAAI,iBAAiB,EAAC;AAAA,EACpD;AAQD,cAAY,UAAU,kBACpB,SAAS,oBAAoB,WAAW,UAAU;AAChD,SAAK,OAAO,QAAQ,WAAW,QAAQ;AAAA,EAC3C;AAOA,cAAY,UAAU,MAAM,SAAS,gBAAgB,UAAU;AAC7D,QAAI,uBAAuB,KAAK,OAAO,QAAQ,GAAG;AAChD,WAAK,QAAQ;AACb,WAAK,OAAO,KAAK,QAAQ;AAAA,IAC7B,OAAS;AACL,WAAK,UAAU;AACf,WAAK,OAAO,KAAK,QAAQ;AAAA,IAC1B;AAAA,EACH;AAWA,cAAY,UAAU,UAAU,SAAS,sBAAsB;AAC7D,QAAI,CAAC,KAAK,SAAS;AACjB,WAAK,OAAO,KAAKA,MAAK,mCAAmC;AACzD,WAAK,UAAU;AAAA,IAChB;AACD,WAAO,KAAK;AAAA,EACd;AAEA,cAAA,cAAsB;;;;;;;ACvEtB,MAAI,YAAYvD;AAChB,MAAIuD,QAAO5C;AACX,MAAI,WAAWC,gBAAsB,EAAC;AACtC,MAAI,cAAcC,mBAAyB,EAAC;AAU5C,WAAS,mBAAmB,OAAO;AACjC,QAAI,CAAC,OAAO;AACV,cAAQ,CAAA;AAAA,IACT;AACD,SAAK,QAAQ0C,MAAK,OAAO,OAAO,QAAQ,IAAI;AAC5C,SAAK,cAAcA,MAAK,OAAO,OAAO,cAAc,IAAI;AACxD,SAAK,kBAAkBA,MAAK,OAAO,OAAO,kBAAkB,KAAK;AACjE,SAAK,WAAW,IAAI;AACpB,SAAK,SAAS,IAAI;AAClB,SAAK,YAAY,IAAI;AACrB,SAAK,mBAAmB;AAAA,EACzB;AAED,qBAAmB,UAAU,WAAW;AAOxC,qBAAmB,gBACjB,SAAS,iCAAiC,oBAAoB;AAC5D,QAAI,aAAa,mBAAmB;AACpC,QAAI,YAAY,IAAI,mBAAmB;AAAA,MACrC,MAAM,mBAAmB;AAAA,MACzB;AAAA,IACN,CAAK;AACD,uBAAmB,YAAY,SAAUC,UAAS;AAChD,UAAI,aAAa;AAAA,QACf,WAAW;AAAA,UACT,MAAMA,SAAQ;AAAA,UACd,QAAQA,SAAQ;AAAA,QACjB;AAAA,MACT;AAEM,UAAIA,SAAQ,UAAU,MAAM;AAC1B,mBAAW,SAASA,SAAQ;AAC5B,YAAI,cAAc,MAAM;AACtB,qBAAW,SAASD,MAAK,SAAS,YAAY,WAAW,MAAM;AAAA,QAChE;AAED,mBAAW,WAAW;AAAA,UACpB,MAAMC,SAAQ;AAAA,UACd,QAAQA,SAAQ;AAAA,QAC1B;AAEQ,YAAIA,SAAQ,QAAQ,MAAM;AACxB,qBAAW,OAAOA,SAAQ;AAAA,QAC3B;AAAA,MACF;AAED,gBAAU,WAAW,UAAU;AAAA,IACrC,CAAK;AACD,uBAAmB,QAAQ,QAAQ,SAAU,YAAY;AACvD,UAAI,iBAAiB;AACrB,UAAI,eAAe,MAAM;AACvB,yBAAiBD,MAAK,SAAS,YAAY,UAAU;AAAA,MACtD;AAED,UAAI,CAAC,UAAU,SAAS,IAAI,cAAc,GAAG;AAC3C,kBAAU,SAAS,IAAI,cAAc;AAAA,MACtC;AAED,UAAI,UAAU,mBAAmB,iBAAiB,UAAU;AAC5D,UAAI,WAAW,MAAM;AACnB,kBAAU,iBAAiB,YAAY,OAAO;AAAA,MAC/C;AAAA,IACP,CAAK;AACD,WAAO;AAAA,EACX;AAYA,qBAAmB,UAAU,aAC3B,SAAS,8BAA8B,OAAO;AAC5C,QAAI,YAAYA,MAAK,OAAO,OAAO,WAAW;AAC9C,QAAI,WAAWA,MAAK,OAAO,OAAO,YAAY,IAAI;AAClD,QAAI,SAASA,MAAK,OAAO,OAAO,UAAU,IAAI;AAC9C,QAAI,OAAOA,MAAK,OAAO,OAAO,QAAQ,IAAI;AAE1C,QAAI,CAAC,KAAK,iBAAiB;AACzB,WAAK,iBAAiB,WAAW,UAAU,QAAQ,IAAI;AAAA,IACxD;AAED,QAAI,UAAU,MAAM;AAClB,eAAS,OAAO,MAAM;AACtB,UAAI,CAAC,KAAK,SAAS,IAAI,MAAM,GAAG;AAC9B,aAAK,SAAS,IAAI,MAAM;AAAA,MACzB;AAAA,IACF;AAED,QAAI,QAAQ,MAAM;AAChB,aAAO,OAAO,IAAI;AAClB,UAAI,CAAC,KAAK,OAAO,IAAI,IAAI,GAAG;AAC1B,aAAK,OAAO,IAAI,IAAI;AAAA,MACrB;AAAA,IACF;AAED,SAAK,UAAU,IAAI;AAAA,MACjB,eAAe,UAAU;AAAA,MACzB,iBAAiB,UAAU;AAAA,MAC3B,cAAc,YAAY,QAAQ,SAAS;AAAA,MAC3C,gBAAgB,YAAY,QAAQ,SAAS;AAAA,MAC7C;AAAA,MACA;AAAA,IACN,CAAK;AAAA,EACL;AAKA,qBAAmB,UAAU,mBAC3B,SAAS,oCAAoC,aAAa,gBAAgB;AACxE,QAAI,SAAS;AACb,QAAI,KAAK,eAAe,MAAM;AAC5B,eAASA,MAAK,SAAS,KAAK,aAAa,MAAM;AAAA,IAChD;AAED,QAAI,kBAAkB,MAAM;AAG1B,UAAI,CAAC,KAAK,kBAAkB;AAC1B,aAAK,mBAAmB,uBAAO,OAAO,IAAI;AAAA,MAC3C;AACD,WAAK,iBAAiBA,MAAK,YAAY,MAAM,CAAC,IAAI;AAAA,IACxD,WAAe,KAAK,kBAAkB;AAGhC,aAAO,KAAK,iBAAiBA,MAAK,YAAY,MAAM,CAAC;AACrD,UAAI,OAAO,KAAK,KAAK,gBAAgB,EAAE,WAAW,GAAG;AACnD,aAAK,mBAAmB;AAAA,MACzB;AAAA,IACF;AAAA,EACL;AAkBA,qBAAmB,UAAU,iBAC3B,SAAS,kCAAkC,oBAAoB,aAAa,gBAAgB;AAC1F,QAAI,aAAa;AAEjB,QAAI,eAAe,MAAM;AACvB,UAAI,mBAAmB,QAAQ,MAAM;AACnC,cAAM,IAAI;AAAA,UACR;AAAA,QAEV;AAAA,MACO;AACD,mBAAa,mBAAmB;AAAA,IACjC;AACD,QAAI,aAAa,KAAK;AAEtB,QAAI,cAAc,MAAM;AACtB,mBAAaA,MAAK,SAAS,YAAY,UAAU;AAAA,IAClD;AAGD,QAAI,aAAa,IAAI;AACrB,QAAI,WAAW,IAAI;AAGnB,SAAK,UAAU,gBAAgB,SAAUC,UAAS;AAChD,UAAIA,SAAQ,WAAW,cAAcA,SAAQ,gBAAgB,MAAM;AAEjE,YAAI,WAAW,mBAAmB,oBAAoB;AAAA,UACpD,MAAMA,SAAQ;AAAA,UACd,QAAQA,SAAQ;AAAA,QAC1B,CAAS;AACD,YAAI,SAAS,UAAU,MAAM;AAE3B,UAAAA,SAAQ,SAAS,SAAS;AAC1B,cAAI,kBAAkB,MAAM;AAC1B,YAAAA,SAAQ,SAASD,MAAK,KAAK,gBAAgBC,SAAQ,MAAM;AAAA,UAC1D;AACD,cAAI,cAAc,MAAM;AACtB,YAAAA,SAAQ,SAASD,MAAK,SAAS,YAAYC,SAAQ,MAAM;AAAA,UAC1D;AACD,UAAAA,SAAQ,eAAe,SAAS;AAChC,UAAAA,SAAQ,iBAAiB,SAAS;AAClC,cAAI,SAAS,QAAQ,MAAM;AACzB,YAAAA,SAAQ,OAAO,SAAS;AAAA,UACzB;AAAA,QACF;AAAA,MACF;AAED,UAAI,SAASA,SAAQ;AACrB,UAAI,UAAU,QAAQ,CAAC,WAAW,IAAI,MAAM,GAAG;AAC7C,mBAAW,IAAI,MAAM;AAAA,MACtB;AAED,UAAI,OAAOA,SAAQ;AACnB,UAAI,QAAQ,QAAQ,CAAC,SAAS,IAAI,IAAI,GAAG;AACvC,iBAAS,IAAI,IAAI;AAAA,MAClB;AAAA,IAEF,GAAE,IAAI;AACP,SAAK,WAAW;AAChB,SAAK,SAAS;AAGd,uBAAmB,QAAQ,QAAQ,SAAUC,aAAY;AACvD,UAAI,UAAU,mBAAmB,iBAAiBA,WAAU;AAC5D,UAAI,WAAW,MAAM;AACnB,YAAI,kBAAkB,MAAM;AAC1B,UAAAA,cAAaF,MAAK,KAAK,gBAAgBE,WAAU;AAAA,QAClD;AACD,YAAI,cAAc,MAAM;AACtB,UAAAA,cAAaF,MAAK,SAAS,YAAYE,WAAU;AAAA,QAClD;AACD,aAAK,iBAAiBA,aAAY,OAAO;AAAA,MAC1C;AAAA,IACF,GAAE,IAAI;AAAA,EACX;AAaA,qBAAmB,UAAU,mBAC3B,SAAS,mCAAmC,YAAY,WAAW,SACvB,OAAO;AAKjD,QAAI,aAAa,OAAO,UAAU,SAAS,YAAY,OAAO,UAAU,WAAW,UAAU;AACzF,YAAM,IAAI;AAAA,QACN;AAAA,MAGZ;AAAA,IACK;AAED,QAAI,cAAc,UAAU,cAAc,YAAY,cAC/C,WAAW,OAAO,KAAK,WAAW,UAAU,KAC5C,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO;AAEvC;AAAA,IACD,WACQ,cAAc,UAAU,cAAc,YAAY,cAC/C,aAAa,UAAU,aAAa,YAAY,aAChD,WAAW,OAAO,KAAK,WAAW,UAAU,KAC5C,UAAU,OAAO,KAAK,UAAU,UAAU,KAC1C,SAAS;AAEnB;AAAA,IACD,OACI;AACH,YAAM,IAAI,MAAM,sBAAsB,KAAK,UAAU;AAAA,QACnD,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,MAAM;AAAA,MACP,CAAA,CAAC;AAAA,IACH;AAAA,EACL;AAMA,qBAAmB,UAAU,qBAC3B,SAAS,uCAAuC;AAC9C,QAAI,0BAA0B;AAC9B,QAAI,wBAAwB;AAC5B,QAAI,yBAAyB;AAC7B,QAAI,uBAAuB;AAC3B,QAAI,eAAe;AACnB,QAAI,iBAAiB;AACrB,QAAI,SAAS;AACb,QAAI;AACJ,QAAID;AACJ,QAAI;AACJ,QAAI;AAEJ,QAAI,WAAW,KAAK,UAAU,QAAO;AACrC,aAAS,IAAI,GAAG,MAAM,SAAS,QAAQ,IAAI,KAAK,KAAK;AACnD,MAAAA,WAAU,SAAS,CAAC;AACpB,aAAO;AAEP,UAAIA,SAAQ,kBAAkB,uBAAuB;AACnD,kCAA0B;AAC1B,eAAOA,SAAQ,kBAAkB,uBAAuB;AACtD,kBAAQ;AACR;AAAA,QACD;AAAA,MACF,OACI;AACH,YAAI,IAAI,GAAG;AACT,cAAI,CAACD,MAAK,oCAAoCC,UAAS,SAAS,IAAI,CAAC,CAAC,GAAG;AACvE;AAAA,UACD;AACD,kBAAQ;AAAA,QACT;AAAA,MACF;AAED,cAAQ,UAAU,OAAOA,SAAQ,kBACJ,uBAAuB;AACpD,gCAA0BA,SAAQ;AAElC,UAAIA,SAAQ,UAAU,MAAM;AAC1B,oBAAY,KAAK,SAAS,QAAQA,SAAQ,MAAM;AAChD,gBAAQ,UAAU,OAAO,YAAY,cAAc;AACnD,yBAAiB;AAGjB,gBAAQ,UAAU,OAAOA,SAAQ,eAAe,IACnB,oBAAoB;AACjD,+BAAuBA,SAAQ,eAAe;AAE9C,gBAAQ,UAAU,OAAOA,SAAQ,iBACJ,sBAAsB;AACnD,iCAAyBA,SAAQ;AAEjC,YAAIA,SAAQ,QAAQ,MAAM;AACxB,oBAAU,KAAK,OAAO,QAAQA,SAAQ,IAAI;AAC1C,kBAAQ,UAAU,OAAO,UAAU,YAAY;AAC/C,yBAAe;AAAA,QAChB;AAAA,MACF;AAED,gBAAU;AAAA,IACX;AAED,WAAO;AAAA,EACX;AAEA,qBAAmB,UAAU,0BAC3B,SAAS,0CAA0C,UAAU,aAAa;AACxE,WAAO,SAAS,IAAI,SAAU,QAAQ;AACpC,UAAI,CAAC,KAAK,kBAAkB;AAC1B,eAAO;AAAA,MACR;AACD,UAAI,eAAe,MAAM;AACvB,iBAASD,MAAK,SAAS,aAAa,MAAM;AAAA,MAC3C;AACD,UAAI,MAAMA,MAAK,YAAY,MAAM;AACjC,aAAO,OAAO,UAAU,eAAe,KAAK,KAAK,kBAAkB,GAAG,IAClE,KAAK,iBAAiB,GAAG,IACzB;AAAA,IACL,GAAE,IAAI;AAAA,EACX;AAKA,qBAAmB,UAAU,SAC3B,SAAS,4BAA4B;AACnC,QAAI,MAAM;AAAA,MACR,SAAS,KAAK;AAAA,MACd,SAAS,KAAK,SAAS,QAAS;AAAA,MAChC,OAAO,KAAK,OAAO,QAAS;AAAA,MAC5B,UAAU,KAAK,mBAAoB;AAAA,IACzC;AACI,QAAI,KAAK,SAAS,MAAM;AACtB,UAAI,OAAO,KAAK;AAAA,IACjB;AACD,QAAI,KAAK,eAAe,MAAM;AAC5B,UAAI,aAAa,KAAK;AAAA,IACvB;AACD,QAAI,KAAK,kBAAkB;AACzB,UAAI,iBAAiB,KAAK,wBAAwB,IAAI,SAAS,IAAI,UAAU;AAAA,IAC9E;AAED,WAAO;AAAA,EACX;AAKA,qBAAmB,UAAU,WAC3B,SAAS,8BAA8B;AACrC,WAAO,KAAK,UAAU,KAAK,OAAQ,CAAA;AAAA,EACvC;AAEA,qBAAA,qBAA6B;;;;;;;;;;ACja7B,IAAAxD,SAAA,uBAA+B;AAC/B,IAAAA,SAAA,oBAA4B;AAe5B,aAAS,gBAAgB,MAAM,OAAO,SAAS,WAAW,UAAU,OAAO;AAUzE,UAAI,MAAM,KAAK,OAAO,QAAQ,QAAQ,CAAC,IAAI;AAC3C,UAAI,MAAM,SAAS,SAAS,UAAU,GAAG,GAAG,IAAI;AAChD,UAAI,QAAQ,GAAG;AAEb,eAAO;AAAA,MACR,WACQ,MAAM,GAAG;AAEhB,YAAI,QAAQ,MAAM,GAAG;AAEnB,iBAAO,gBAAgB,KAAK,OAAO,SAAS,WAAW,UAAU,KAAK;AAAA,QACvE;AAID,YAAI,SAASA,SAAQ,mBAAmB;AACtC,iBAAO,QAAQ,UAAU,SAAS,QAAQ;AAAA,QAChD,OAAW;AACL,iBAAO;AAAA,QACR;AAAA,MACF,OACI;AAEH,YAAI,MAAM,OAAO,GAAG;AAElB,iBAAO,gBAAgB,MAAM,KAAK,SAAS,WAAW,UAAU,KAAK;AAAA,QACtE;AAGD,YAAI,SAASA,SAAQ,mBAAmB;AACtC,iBAAO;AAAA,QACb,OAAW;AACL,iBAAO,OAAO,IAAI,KAAK;AAAA,QACxB;AAAA,MACF;AAAA,IACF;AAoBD,IAAAA,SAAiB,SAAA,SAAS,OAAO,SAAS,WAAW,UAAU,OAAO;AACpE,UAAI,UAAU,WAAW,GAAG;AAC1B,eAAO;AAAA,MACR;AAED,UAAI,QAAQ;AAAA,QAAgB;AAAA,QAAI,UAAU;AAAA,QAAQ;AAAA,QAAS;AAAA,QAC/B;AAAA,QAAU,SAASA,SAAQ;AAAA,MAAoB;AAC3E,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACR;AAKD,aAAO,QAAQ,KAAK,GAAG;AACrB,YAAI,SAAS,UAAU,KAAK,GAAG,UAAU,QAAQ,CAAC,GAAG,IAAI,MAAM,GAAG;AAChE;AAAA,QACD;AACD,UAAE;AAAA,MACH;AAED,aAAO;AAAA;;;;;;;;;AClFT,WAAS,KAAK,KAAK,GAAG,GAAG;AACvB,QAAI,OAAO,IAAI,CAAC;AAChB,QAAI,CAAC,IAAI,IAAI,CAAC;AACd,QAAI,CAAC,IAAI;AAAA,EACV;AAUD,WAAS,iBAAiB,KAAK,MAAM;AACnC,WAAO,KAAK,MAAM,MAAO,KAAK,OAAM,KAAM,OAAO,IAAK;AAAA,EACvD;AAcD,WAAS,YAAY,KAAK,YAAY,GAAG,GAAG;AAK1C,QAAI,IAAI,GAAG;AAYT,UAAI,aAAa,iBAAiB,GAAG,CAAC;AACtC,UAAI,IAAI,IAAI;AAEZ,WAAK,KAAK,YAAY,CAAC;AACvB,UAAI,QAAQ,IAAI,CAAC;AAQjB,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAI,WAAW,IAAI,CAAC,GAAG,KAAK,KAAK,GAAG;AAClC,eAAK;AACL,eAAK,KAAK,GAAG,CAAC;AAAA,QACf;AAAA,MACF;AAED,WAAK,KAAK,IAAI,GAAG,CAAC;AAClB,UAAI,IAAI,IAAI;AAIZ,kBAAY,KAAK,YAAY,GAAG,IAAI,CAAC;AACrC,kBAAY,KAAK,YAAY,IAAI,GAAG,CAAC;AAAA,IACtC;AAAA,EACF;AAUD,YAAA,YAAoB,SAAU,KAAK,YAAY;AAC7C,gBAAY,KAAK,YAAY,GAAG,IAAI,SAAS,CAAC;AAAA;;;;;;;ACzGhD,MAAIwD,QAAOvD;AACX,MAAI0D,gBAAe/C;AACnB,MAAI,WAAWC,gBAAsB,EAAC;AACtC,MAAI,YAAYC;AAChB,MAAI8C,aAAY5C,iBAAuB,EAAC;AAExC,WAAS,kBAAkB,YAAY,eAAe;AACpD,QAAI6C,aAAY;AAChB,QAAI,OAAO,eAAe,UAAU;AAClC,MAAAA,aAAYL,MAAK,oBAAoB,UAAU;AAAA,IAChD;AAED,WAAOK,WAAU,YAAY,OACzB,IAAI,yBAAyBA,YAAW,aAAa,IACrD,IAAI,uBAAuBA,YAAW,aAAa;AAAA,EACxD;AAED,oBAAkB,gBAAgB,SAAS,YAAY,eAAe;AACpE,WAAO,uBAAuB,cAAc,YAAY,aAAa;AAAA,EACtE;AAKD,oBAAkB,UAAU,WAAW;AAgCvC,oBAAkB,UAAU,sBAAsB;AAClD,SAAO,eAAe,kBAAkB,WAAW,sBAAsB;AAAA,IACvE,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,KAAK,WAAY;AACf,UAAI,CAAC,KAAK,qBAAqB;AAC7B,aAAK,eAAe,KAAK,WAAW,KAAK,UAAU;AAAA,MACpD;AAED,aAAO,KAAK;AAAA,IACb;AAAA,EACH,CAAC;AAED,oBAAkB,UAAU,qBAAqB;AACjD,SAAO,eAAe,kBAAkB,WAAW,qBAAqB;AAAA,IACtE,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,KAAK,WAAY;AACf,UAAI,CAAC,KAAK,oBAAoB;AAC5B,aAAK,eAAe,KAAK,WAAW,KAAK,UAAU;AAAA,MACpD;AAED,aAAO,KAAK;AAAA,IACb;AAAA,EACH,CAAC;AAED,oBAAkB,UAAU,0BAC1B,SAAS,yCAAyC,MAAM,OAAO;AAC7D,QAAI,IAAI,KAAK,OAAO,KAAK;AACzB,WAAO,MAAM,OAAO,MAAM;AAAA,EAC9B;AAOA,oBAAkB,UAAU,iBAC1B,SAAS,gCAAgC,MAAM,aAAa;AAC1D,UAAM,IAAI,MAAM,0CAA0C;AAAA,EAC9D;AAEA,oBAAkB,kBAAkB;AACpC,oBAAkB,iBAAiB;AAEnC,oBAAkB,uBAAuB;AACzC,oBAAkB,oBAAoB;AAkBtC,oBAAkB,UAAU,cAC1B,SAAS,8BAA8B,WAAW,UAAU,QAAQ;AAClE,QAAI,UAAU,YAAY;AAC1B,QAAI,QAAQ,UAAU,kBAAkB;AAExC,QAAI;AACJ,YAAQ,OAAK;AAAA,MACb,KAAK,kBAAkB;AACrB,mBAAW,KAAK;AAChB;AAAA,MACF,KAAK,kBAAkB;AACrB,mBAAW,KAAK;AAChB;AAAA,MACF;AACE,cAAM,IAAI,MAAM,6BAA6B;AAAA,IAC9C;AAED,QAAI,aAAa,KAAK;AACtB,aAAS,IAAI,SAAUJ,UAAS;AAC9B,UAAI,SAASA,SAAQ,WAAW,OAAO,OAAO,KAAK,SAAS,GAAGA,SAAQ,MAAM;AAC7E,eAASD,MAAK,iBAAiB,YAAY,QAAQ,KAAK,aAAa;AACrE,aAAO;AAAA,QACL;AAAA,QACA,eAAeC,SAAQ;AAAA,QACvB,iBAAiBA,SAAQ;AAAA,QACzB,cAAcA,SAAQ;AAAA,QACtB,gBAAgBA,SAAQ;AAAA,QACxB,MAAMA,SAAQ,SAAS,OAAO,OAAO,KAAK,OAAO,GAAGA,SAAQ,IAAI;AAAA,MACxE;AAAA,IACK,GAAE,IAAI,EAAE,QAAQ,WAAW,OAAO;AAAA,EACvC;AAwBA,oBAAkB,UAAU,2BAC1B,SAAS,2CAA2C,OAAO;AACzD,QAAI,OAAOD,MAAK,OAAO,OAAO,MAAM;AAMpC,QAAI,SAAS;AAAA,MACX,QAAQA,MAAK,OAAO,OAAO,QAAQ;AAAA,MACnC,cAAc;AAAA,MACd,gBAAgBA,MAAK,OAAO,OAAO,UAAU,CAAC;AAAA,IACpD;AAEI,WAAO,SAAS,KAAK,iBAAiB,OAAO,MAAM;AACnD,QAAI,OAAO,SAAS,GAAG;AACrB,aAAO;IACR;AAED,QAAI,WAAW,CAAA;AAEf,QAAI,QAAQ,KAAK;AAAA,MAAa;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACAA,MAAK;AAAA,MACLG,cAAa;AAAA,IAAiB;AAC5D,QAAI,SAAS,GAAG;AACd,UAAIF,WAAU,KAAK,kBAAkB,KAAK;AAE1C,UAAI,MAAM,WAAW,QAAW;AAC9B,YAAI,eAAeA,SAAQ;AAM3B,eAAOA,YAAWA,SAAQ,iBAAiB,cAAc;AACvD,mBAAS,KAAK;AAAA,YACZ,MAAMD,MAAK,OAAOC,UAAS,iBAAiB,IAAI;AAAA,YAChD,QAAQD,MAAK,OAAOC,UAAS,mBAAmB,IAAI;AAAA,YACpD,YAAYD,MAAK,OAAOC,UAAS,uBAAuB,IAAI;AAAA,UACxE,CAAW;AAED,UAAAA,WAAU,KAAK,kBAAkB,EAAE,KAAK;AAAA,QACzC;AAAA,MACT,OAAa;AACL,YAAI,iBAAiBA,SAAQ;AAM7B,eAAOA,YACAA,SAAQ,iBAAiB,QACzBA,SAAQ,kBAAkB,gBAAgB;AAC/C,mBAAS,KAAK;AAAA,YACZ,MAAMD,MAAK,OAAOC,UAAS,iBAAiB,IAAI;AAAA,YAChD,QAAQD,MAAK,OAAOC,UAAS,mBAAmB,IAAI;AAAA,YACpD,YAAYD,MAAK,OAAOC,UAAS,uBAAuB,IAAI;AAAA,UACxE,CAAW;AAED,UAAAA,WAAU,KAAK,kBAAkB,EAAE,KAAK;AAAA,QACzC;AAAA,MACF;AAAA,IACF;AAED,WAAO;AAAA,EACX;AAEyB,oBAAA,oBAAG;AAoC5B,WAAS,uBAAuB,YAAY,eAAe;AACzD,QAAII,aAAY;AAChB,QAAI,OAAO,eAAe,UAAU;AAClC,MAAAA,aAAYL,MAAK,oBAAoB,UAAU;AAAA,IAChD;AAED,QAAI,UAAUA,MAAK,OAAOK,YAAW,SAAS;AAC9C,QAAI,UAAUL,MAAK,OAAOK,YAAW,SAAS;AAG9C,QAAI,QAAQL,MAAK,OAAOK,YAAW,SAAS,CAAA,CAAE;AAC9C,QAAI,aAAaL,MAAK,OAAOK,YAAW,cAAc,IAAI;AAC1D,QAAI,iBAAiBL,MAAK,OAAOK,YAAW,kBAAkB,IAAI;AAClE,QAAI,WAAWL,MAAK,OAAOK,YAAW,UAAU;AAChD,QAAI,OAAOL,MAAK,OAAOK,YAAW,QAAQ,IAAI;AAI9C,QAAI,WAAW,KAAK,UAAU;AAC5B,YAAM,IAAI,MAAM,0BAA0B,OAAO;AAAA,IAClD;AAED,QAAI,YAAY;AACd,mBAAaL,MAAK,UAAU,UAAU;AAAA,IACvC;AAED,cAAU,QACP,IAAI,MAAM,EAIV,IAAIA,MAAK,SAAS,EAKlB,IAAI,SAAU,QAAQ;AACrB,aAAO,cAAcA,MAAK,WAAW,UAAU,KAAKA,MAAK,WAAW,MAAM,IACtEA,MAAK,SAAS,YAAY,MAAM,IAChC;AAAA,IACV,CAAK;AAMH,SAAK,SAAS,SAAS,UAAU,MAAM,IAAI,MAAM,GAAG,IAAI;AACxD,SAAK,WAAW,SAAS,UAAU,SAAS,IAAI;AAEhD,SAAK,mBAAmB,KAAK,SAAS,UAAU,IAAI,SAAU,GAAG;AAC/D,aAAOA,MAAK,iBAAiB,YAAY,GAAG,aAAa;AAAA,IAC7D,CAAG;AAED,SAAK,aAAa;AAClB,SAAK,iBAAiB;AACtB,SAAK,YAAY;AACjB,SAAK,gBAAgB;AACrB,SAAK,OAAO;AAAA,EACb;AAED,yBAAuB,YAAY,OAAO,OAAO,kBAAkB,SAAS;AAC5E,yBAAuB,UAAU,WAAW;AAM5C,yBAAuB,UAAU,mBAAmB,SAAS,SAAS;AACpE,QAAI,iBAAiB;AACrB,QAAI,KAAK,cAAc,MAAM;AAC3B,uBAAiBA,MAAK,SAAS,KAAK,YAAY,cAAc;AAAA,IAC/D;AAED,QAAI,KAAK,SAAS,IAAI,cAAc,GAAG;AACrC,aAAO,KAAK,SAAS,QAAQ,cAAc;AAAA,IAC5C;AAID,QAAI;AACJ,SAAK,IAAI,GAAG,IAAI,KAAK,iBAAiB,QAAQ,EAAE,GAAG;AACjD,UAAI,KAAK,iBAAiB,CAAC,KAAK,SAAS;AACvC,eAAO;AAAA,MACR;AAAA,IACF;AAED,WAAO;AAAA,EACT;AAWA,yBAAuB,gBACrB,SAAS,gCAAgC,YAAY,eAAe;AAClE,QAAI,MAAM,OAAO,OAAO,uBAAuB,SAAS;AAExD,QAAI,QAAQ,IAAI,SAAS,SAAS,UAAU,WAAW,OAAO,WAAW,IAAI;AAC7E,QAAI,UAAU,IAAI,WAAW,SAAS,UAAU,WAAW,SAAS,WAAW,IAAI;AACnF,QAAI,aAAa,WAAW;AAC5B,QAAI,iBAAiB,WAAW;AAAA,MAAwB,IAAI,SAAS,QAAS;AAAA,MACtB,IAAI;AAAA,IAAU;AACtE,QAAI,OAAO,WAAW;AACtB,QAAI,gBAAgB;AACpB,QAAI,mBAAmB,IAAI,SAAS,UAAU,IAAI,SAAU,GAAG;AAC7D,aAAOA,MAAK,iBAAiB,IAAI,YAAY,GAAG,aAAa;AAAA,IACnE,CAAK;AAOD,QAAI,oBAAoB,WAAW,UAAU,QAAS,EAAC,MAAK;AAC5D,QAAI,wBAAwB,IAAI,sBAAsB;AACtD,QAAI,uBAAuB,IAAI,qBAAqB;AAEpD,aAAS,IAAI,GAAG,SAAS,kBAAkB,QAAQ,IAAI,QAAQ,KAAK;AAClE,UAAI,aAAa,kBAAkB,CAAC;AACpC,UAAI,cAAc,IAAI;AACtB,kBAAY,gBAAgB,WAAW;AACvC,kBAAY,kBAAkB,WAAW;AAEzC,UAAI,WAAW,QAAQ;AACrB,oBAAY,SAAS,QAAQ,QAAQ,WAAW,MAAM;AACtD,oBAAY,eAAe,WAAW;AACtC,oBAAY,iBAAiB,WAAW;AAExC,YAAI,WAAW,MAAM;AACnB,sBAAY,OAAO,MAAM,QAAQ,WAAW,IAAI;AAAA,QACjD;AAED,6BAAqB,KAAK,WAAW;AAAA,MACtC;AAED,4BAAsB,KAAK,WAAW;AAAA,IACvC;AAED,IAAAI,WAAU,IAAI,oBAAoBJ,MAAK,0BAA0B;AAEjE,WAAO;AAAA,EACX;AAKA,yBAAuB,UAAU,WAAW;AAK5C,SAAO,eAAe,uBAAuB,WAAW,WAAW;AAAA,IACjE,KAAK,WAAY;AACf,aAAO,KAAK,iBAAiB;IAC9B;AAAA,EACH,CAAC;AAKD,WAAS,UAAU;AACjB,SAAK,gBAAgB;AACrB,SAAK,kBAAkB;AACvB,SAAK,SAAS;AACd,SAAK,eAAe;AACpB,SAAK,iBAAiB;AACtB,SAAK,OAAO;AAAA,EACb;AAOD,yBAAuB,UAAU,iBAC/B,SAAS,gCAAgC,MAAM,aAAa;AAC1D,QAAI,gBAAgB;AACpB,QAAI,0BAA0B;AAC9B,QAAI,uBAAuB;AAC3B,QAAI,yBAAyB;AAC7B,QAAI,iBAAiB;AACrB,QAAI,eAAe;AACnB,QAAI,SAAS,KAAK;AAClB,QAAI,QAAQ;AACZ,QAAI,iBAAiB,CAAA;AACrB,QAAI,OAAO,CAAA;AACX,QAAI,mBAAmB,CAAA;AACvB,QAAI,oBAAoB,CAAA;AACxB,QAAIC,UAAS,KAAK,SAAS,KAAK;AAEhC,WAAO,QAAQ,QAAQ;AACrB,UAAI,KAAK,OAAO,KAAK,MAAM,KAAK;AAC9B;AACA;AACA,kCAA0B;AAAA,MAC3B,WACQ,KAAK,OAAO,KAAK,MAAM,KAAK;AACnC;AAAA,MACD,OACI;AACH,QAAAA,WAAU,IAAI;AACd,QAAAA,SAAQ,gBAAgB;AAOxB,aAAK,MAAM,OAAO,MAAM,QAAQ,OAAO;AACrC,cAAI,KAAK,wBAAwB,MAAM,GAAG,GAAG;AAC3C;AAAA,UACD;AAAA,QACF;AACD,cAAM,KAAK,MAAM,OAAO,GAAG;AAE3B,kBAAU,eAAe,GAAG;AAC5B,YAAI,SAAS;AACX,mBAAS,IAAI;AAAA,QACvB,OAAe;AACL,oBAAU,CAAA;AACV,iBAAO,QAAQ,KAAK;AAClB,sBAAU,OAAO,MAAM,OAAO,IAAI;AAClC,oBAAQ,KAAK;AACb,oBAAQ,KAAK;AACb,oBAAQ,KAAK,KAAK;AAAA,UACnB;AAED,cAAI,QAAQ,WAAW,GAAG;AACxB,kBAAM,IAAI,MAAM,wCAAwC;AAAA,UACzD;AAED,cAAI,QAAQ,WAAW,GAAG;AACxB,kBAAM,IAAI,MAAM,wCAAwC;AAAA,UACzD;AAED,yBAAe,GAAG,IAAI;AAAA,QACvB;AAGD,QAAAA,SAAQ,kBAAkB,0BAA0B,QAAQ,CAAC;AAC7D,kCAA0BA,SAAQ;AAElC,YAAI,QAAQ,SAAS,GAAG;AAEtB,UAAAA,SAAQ,SAAS,iBAAiB,QAAQ,CAAC;AAC3C,4BAAkB,QAAQ,CAAC;AAG3B,UAAAA,SAAQ,eAAe,uBAAuB,QAAQ,CAAC;AACvD,iCAAuBA,SAAQ;AAE/B,UAAAA,SAAQ,gBAAgB;AAGxB,UAAAA,SAAQ,iBAAiB,yBAAyB,QAAQ,CAAC;AAC3D,mCAAyBA,SAAQ;AAEjC,cAAI,QAAQ,SAAS,GAAG;AAEtB,YAAAA,SAAQ,OAAO,eAAe,QAAQ,CAAC;AACvC,4BAAgB,QAAQ,CAAC;AAAA,UAC1B;AAAA,QACF;AAED,0BAAkB,KAAKA,QAAO;AAC9B,YAAI,OAAOA,SAAQ,iBAAiB,UAAU;AAC5C,2BAAiB,KAAKA,QAAO;AAAA,QAC9B;AAAA,MACF;AAAA,IACF;AAED,IAAAG,WAAU,mBAAmBJ,MAAK,mCAAmC;AACrE,SAAK,sBAAsB;AAE3B,IAAAI,WAAU,kBAAkBJ,MAAK,0BAA0B;AAC3D,SAAK,qBAAqB;AAAA,EAC9B;AAMA,yBAAuB,UAAU,eAC/B,SAAS,8BAA8B,SAAS,WAAW,WACpB,aAAa,aAAa,OAAO;AAMtE,QAAI,QAAQ,SAAS,KAAK,GAAG;AAC3B,YAAM,IAAI,UAAU,kDACE,QAAQ,SAAS,CAAC;AAAA,IACzC;AACD,QAAI,QAAQ,WAAW,IAAI,GAAG;AAC5B,YAAM,IAAI,UAAU,oDACE,QAAQ,WAAW,CAAC;AAAA,IAC3C;AAED,WAAOG,cAAa,OAAO,SAAS,WAAW,aAAa,KAAK;AAAA,EACrE;AAMA,yBAAuB,UAAU,qBAC/B,SAAS,uCAAuC;AAC9C,aAAS,QAAQ,GAAG,QAAQ,KAAK,mBAAmB,QAAQ,EAAE,OAAO;AACnE,UAAIF,WAAU,KAAK,mBAAmB,KAAK;AAM3C,UAAI,QAAQ,IAAI,KAAK,mBAAmB,QAAQ;AAC9C,YAAI,cAAc,KAAK,mBAAmB,QAAQ,CAAC;AAEnD,YAAIA,SAAQ,kBAAkB,YAAY,eAAe;AACvD,UAAAA,SAAQ,sBAAsB,YAAY,kBAAkB;AAC5D;AAAA,QACD;AAAA,MACF;AAGD,MAAAA,SAAQ,sBAAsB;AAAA,IAC/B;AAAA,EACL;AA0BA,yBAAuB,UAAU,sBAC/B,SAAS,sCAAsC,OAAO;AACpD,QAAI,SAAS;AAAA,MACX,eAAeD,MAAK,OAAO,OAAO,MAAM;AAAA,MACxC,iBAAiBA,MAAK,OAAO,OAAO,QAAQ;AAAA,IAClD;AAEI,QAAI,QAAQ,KAAK;AAAA,MACf;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACAA,MAAK;AAAA,MACLA,MAAK,OAAO,OAAO,QAAQ,kBAAkB,oBAAoB;AAAA,IACvE;AAEI,QAAI,SAAS,GAAG;AACd,UAAIC,WAAU,KAAK,mBAAmB,KAAK;AAE3C,UAAIA,SAAQ,kBAAkB,OAAO,eAAe;AAClD,YAAI,SAASD,MAAK,OAAOC,UAAS,UAAU,IAAI;AAChD,YAAI,WAAW,MAAM;AACnB,mBAAS,KAAK,SAAS,GAAG,MAAM;AAChC,mBAASD,MAAK,iBAAiB,KAAK,YAAY,QAAQ,KAAK,aAAa;AAAA,QAC3E;AACD,YAAI,OAAOA,MAAK,OAAOC,UAAS,QAAQ,IAAI;AAC5C,YAAI,SAAS,MAAM;AACjB,iBAAO,KAAK,OAAO,GAAG,IAAI;AAAA,QAC3B;AACD,eAAO;AAAA,UACL;AAAA,UACA,MAAMD,MAAK,OAAOC,UAAS,gBAAgB,IAAI;AAAA,UAC/C,QAAQD,MAAK,OAAOC,UAAS,kBAAkB,IAAI;AAAA,UACnD;AAAA,QACV;AAAA,MACO;AAAA,IACF;AAED,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,IACZ;AAAA,EACA;AAMA,yBAAuB,UAAU,0BAC/B,SAAS,iDAAiD;AACxD,QAAI,CAAC,KAAK,gBAAgB;AACxB,aAAO;AAAA,IACR;AACD,WAAO,KAAK,eAAe,UAAU,KAAK,SAAS,KAAM,KACvD,CAAC,KAAK,eAAe,KAAK,SAAU,IAAI;AAAE,aAAO,MAAM;AAAA,IAAK,CAAE;AAAA,EACpE;AAOA,yBAAuB,UAAU,mBAC/B,SAAS,mCAAmC,SAAS,eAAe;AAClE,QAAI,CAAC,KAAK,gBAAgB;AACxB,aAAO;AAAA,IACR;AAED,QAAI,QAAQ,KAAK,iBAAiB,OAAO;AACzC,QAAI,SAAS,GAAG;AACd,aAAO,KAAK,eAAe,KAAK;AAAA,IACjC;AAED,QAAI,iBAAiB;AACrB,QAAI,KAAK,cAAc,MAAM;AAC3B,uBAAiBD,MAAK,SAAS,KAAK,YAAY,cAAc;AAAA,IAC/D;AAED,QAAI7C;AACJ,QAAI,KAAK,cAAc,SACfA,OAAM6C,MAAK,SAAS,KAAK,UAAU,IAAI;AAK7C,UAAI,iBAAiB,eAAe,QAAQ,cAAc,EAAE;AAC5D,UAAI7C,KAAI,UAAU,UACX,KAAK,SAAS,IAAI,cAAc,GAAG;AACxC,eAAO,KAAK,eAAe,KAAK,SAAS,QAAQ,cAAc,CAAC;AAAA,MACjE;AAED,WAAK,CAACA,KAAI,QAAQA,KAAI,QAAQ,QACvB,KAAK,SAAS,IAAI,MAAM,cAAc,GAAG;AAC9C,eAAO,KAAK,eAAe,KAAK,SAAS,QAAQ,MAAM,cAAc,CAAC;AAAA,MACvE;AAAA,IACF;AAMD,QAAI,eAAe;AACjB,aAAO;AAAA,IACR,OACI;AACH,YAAM,IAAI,MAAM,MAAM,iBAAiB,4BAA4B;AAAA,IACpE;AAAA,EACL;AAyBA,yBAAuB,UAAU,uBAC/B,SAAS,uCAAuC,OAAO;AACrD,QAAI,SAAS6C,MAAK,OAAO,OAAO,QAAQ;AACxC,aAAS,KAAK,iBAAiB,MAAM;AACrC,QAAI,SAAS,GAAG;AACd,aAAO;AAAA,QACL,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,YAAY;AAAA,MACpB;AAAA,IACK;AAED,QAAI,SAAS;AAAA,MACX;AAAA,MACA,cAAcA,MAAK,OAAO,OAAO,MAAM;AAAA,MACvC,gBAAgBA,MAAK,OAAO,OAAO,QAAQ;AAAA,IACjD;AAEI,QAAI,QAAQ,KAAK;AAAA,MACf;AAAA,MACA,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACAA,MAAK;AAAA,MACLA,MAAK,OAAO,OAAO,QAAQ,kBAAkB,oBAAoB;AAAA,IACvE;AAEI,QAAI,SAAS,GAAG;AACd,UAAIC,WAAU,KAAK,kBAAkB,KAAK;AAE1C,UAAIA,SAAQ,WAAW,OAAO,QAAQ;AACpC,eAAO;AAAA,UACL,MAAMD,MAAK,OAAOC,UAAS,iBAAiB,IAAI;AAAA,UAChD,QAAQD,MAAK,OAAOC,UAAS,mBAAmB,IAAI;AAAA,UACpD,YAAYD,MAAK,OAAOC,UAAS,uBAAuB,IAAI;AAAA,QACtE;AAAA,MACO;AAAA,IACF;AAED,WAAO;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,YAAY;AAAA,IAClB;AAAA,EACA;AAE8B,oBAAA,yBAAG;AAmDjC,WAAS,yBAAyB,YAAY,eAAe;AAC3D,QAAII,aAAY;AAChB,QAAI,OAAO,eAAe,UAAU;AAClC,MAAAA,aAAYL,MAAK,oBAAoB,UAAU;AAAA,IAChD;AAED,QAAI,UAAUA,MAAK,OAAOK,YAAW,SAAS;AAC9C,QAAI,WAAWL,MAAK,OAAOK,YAAW,UAAU;AAEhD,QAAI,WAAW,KAAK,UAAU;AAC5B,YAAM,IAAI,MAAM,0BAA0B,OAAO;AAAA,IAClD;AAED,SAAK,WAAW,IAAI;AACpB,SAAK,SAAS,IAAI;AAElB,QAAI,aAAa;AAAA,MACf,MAAM;AAAA,MACN,QAAQ;AAAA,IACZ;AACE,SAAK,YAAY,SAAS,IAAI,SAAU,GAAG;AACzC,UAAI,EAAE,KAAK;AAGT,cAAM,IAAI,MAAM,oDAAoD;AAAA,MACrE;AACD,UAAI,SAASL,MAAK,OAAO,GAAG,QAAQ;AACpC,UAAI,aAAaA,MAAK,OAAO,QAAQ,MAAM;AAC3C,UAAI,eAAeA,MAAK,OAAO,QAAQ,QAAQ;AAE/C,UAAI,aAAa,WAAW,QACvB,eAAe,WAAW,QAAQ,eAAe,WAAW,QAAS;AACxE,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACvE;AACD,mBAAa;AAEb,aAAO;AAAA,QACL,iBAAiB;AAAA;AAAA;AAAA,UAGf,eAAe,aAAa;AAAA,UAC5B,iBAAiB,eAAe;AAAA,QACjC;AAAA,QACD,UAAU,IAAI,kBAAkBA,MAAK,OAAO,GAAG,KAAK,GAAG,aAAa;AAAA,MACrE;AAAA,IACL,CAAG;AAAA,EACF;AAED,2BAAyB,YAAY,OAAO,OAAO,kBAAkB,SAAS;AAC9E,2BAAyB,UAAU,cAAc;AAKjD,2BAAyB,UAAU,WAAW;AAK9C,SAAO,eAAe,yBAAyB,WAAW,WAAW;AAAA,IACnE,KAAK,WAAY;AACf,UAAI,UAAU,CAAA;AACd,eAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,iBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,CAAC,EAAE,SAAS,QAAQ,QAAQ,KAAK;AAClE,kBAAQ,KAAK,KAAK,UAAU,CAAC,EAAE,SAAS,QAAQ,CAAC,CAAC;AAAA,QACnD;AAAA,MACF;AACD,aAAO;AAAA,IACR;AAAA,EACH,CAAC;AAqBD,2BAAyB,UAAU,sBACjC,SAAS,6CAA6C,OAAO;AAC3D,QAAI,SAAS;AAAA,MACX,eAAeA,MAAK,OAAO,OAAO,MAAM;AAAA,MACxC,iBAAiBA,MAAK,OAAO,OAAO,QAAQ;AAAA,IAClD;AAII,QAAI,eAAeG,cAAa;AAAA,MAAO;AAAA,MAAQ,KAAK;AAAA,MAClD,SAASG,SAAQC,UAAS;AACxB,YAAI,MAAMD,QAAO,gBAAgBC,SAAQ,gBAAgB;AACzD,YAAI,KAAK;AACP,iBAAO;AAAA,QACR;AAED,eAAQD,QAAO,kBACPC,SAAQ,gBAAgB;AAAA,MACxC;AAAA,IAAO;AACH,QAAI,UAAU,KAAK,UAAU,YAAY;AAEzC,QAAI,CAAC,SAAS;AACZ,aAAO;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,MAAM;AAAA,MACd;AAAA,IACK;AAED,WAAO,QAAQ,SAAS,oBAAoB;AAAA,MAC1C,MAAM,OAAO,iBACV,QAAQ,gBAAgB,gBAAgB;AAAA,MAC3C,QAAQ,OAAO,mBACZ,QAAQ,gBAAgB,kBAAkB,OAAO,gBAC/C,QAAQ,gBAAgB,kBAAkB,IAC1C;AAAA,MACL,MAAM,MAAM;AAAA,IAClB,CAAK;AAAA,EACL;AAMA,2BAAyB,UAAU,0BACjC,SAAS,mDAAmD;AAC1D,WAAO,KAAK,UAAU,MAAM,SAAU,GAAG;AACvC,aAAO,EAAE,SAAS;IACxB,CAAK;AAAA,EACL;AAOA,2BAAyB,UAAU,mBACjC,SAAS,0CAA0C,SAAS,eAAe;AACzE,aAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,UAAI,UAAU,KAAK,UAAU,CAAC;AAE9B,UAAI,UAAU,QAAQ,SAAS,iBAAiB,SAAS,IAAI;AAC7D,UAAI,SAAS;AACX,eAAO;AAAA,MACR;AAAA,IACF;AACD,QAAI,eAAe;AACjB,aAAO;AAAA,IACR,OACI;AACH,YAAM,IAAI,MAAM,MAAM,UAAU,4BAA4B;AAAA,IAC7D;AAAA,EACL;AAoBA,2BAAyB,UAAU,uBACjC,SAAS,8CAA8C,OAAO;AAC5D,aAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,UAAI,UAAU,KAAK,UAAU,CAAC;AAI9B,UAAI,QAAQ,SAAS,iBAAiBP,MAAK,OAAO,OAAO,QAAQ,CAAC,MAAM,IAAI;AAC1E;AAAA,MACD;AACD,UAAI,oBAAoB,QAAQ,SAAS,qBAAqB,KAAK;AACnE,UAAI,mBAAmB;AACrB,YAAI,MAAM;AAAA,UACR,MAAM,kBAAkB,QACrB,QAAQ,gBAAgB,gBAAgB;AAAA,UAC3C,QAAQ,kBAAkB,UACvB,QAAQ,gBAAgB,kBAAkB,kBAAkB,OAC1D,QAAQ,gBAAgB,kBAAkB,IAC1C;AAAA,QACf;AACQ,eAAO;AAAA,MACR;AAAA,IACF;AAED,WAAO;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,IACd;AAAA,EACA;AAOA,2BAAyB,UAAU,iBACjC,SAAS,uCAAuC,MAAM,aAAa;AACjE,SAAK,sBAAsB;AAC3B,SAAK,qBAAqB;AAC1B,aAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC9C,UAAI,UAAU,KAAK,UAAU,CAAC;AAC9B,UAAI,kBAAkB,QAAQ,SAAS;AACvC,eAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,YAAIC,WAAU,gBAAgB,CAAC;AAE/B,YAAI,SAAS,QAAQ,SAAS,SAAS,GAAGA,SAAQ,MAAM;AACxD,iBAASD,MAAK,iBAAiB,QAAQ,SAAS,YAAY,QAAQ,KAAK,aAAa;AACtF,aAAK,SAAS,IAAI,MAAM;AACxB,iBAAS,KAAK,SAAS,QAAQ,MAAM;AAErC,YAAI,OAAO;AACX,YAAIC,SAAQ,MAAM;AAChB,iBAAO,QAAQ,SAAS,OAAO,GAAGA,SAAQ,IAAI;AAC9C,eAAK,OAAO,IAAI,IAAI;AACpB,iBAAO,KAAK,OAAO,QAAQ,IAAI;AAAA,QAChC;AAMD,YAAI,kBAAkB;AAAA,UACpB;AAAA,UACA,eAAeA,SAAQ,iBACpB,QAAQ,gBAAgB,gBAAgB;AAAA,UAC3C,iBAAiBA,SAAQ,mBACtB,QAAQ,gBAAgB,kBAAkBA,SAAQ,gBACjD,QAAQ,gBAAgB,kBAAkB,IAC1C;AAAA,UACJ,cAAcA,SAAQ;AAAA,UACtB,gBAAgBA,SAAQ;AAAA,UACxB;AAAA,QACV;AAEQ,aAAK,oBAAoB,KAAK,eAAe;AAC7C,YAAI,OAAO,gBAAgB,iBAAiB,UAAU;AACpD,eAAK,mBAAmB,KAAK,eAAe;AAAA,QAC7C;AAAA,MACF;AAAA,IACF;AAED,IAAAG,WAAU,KAAK,qBAAqBJ,MAAK,mCAAmC;AAC5E,IAAAI,WAAU,KAAK,oBAAoBJ,MAAK,0BAA0B;AAAA,EACtE;AAEA,oBAAA,2BAAmC;;;;;;;;ACjnCnC,MAAI,qBAAqBvD,0BAAiC,EAAC;AAC3D,MAAIuD,QAAO5C;AAIX,MAAI,gBAAgB;AAGpB,MAAI,eAAe;AAKnB,MAAI,eAAe;AAcnB,WAAS,WAAW,OAAO,SAAS,SAAS,SAAS,OAAO;AAC3D,SAAK,WAAW;AAChB,SAAK,iBAAiB;AACtB,SAAK,OAAO,SAAS,OAAO,OAAO;AACnC,SAAK,SAAS,WAAW,OAAO,OAAO;AACvC,SAAK,SAAS,WAAW,OAAO,OAAO;AACvC,SAAK,OAAO,SAAS,OAAO,OAAO;AACnC,SAAK,YAAY,IAAI;AACrB,QAAI,WAAW,KAAM,MAAK,IAAI,OAAO;AAAA,EACtC;AAUD,aAAW,0BACT,SAAS,mCAAmC,gBAAgB,oBAAoB,eAAe;AAG7F,QAAI,OAAO,IAAI;AAMf,QAAI,iBAAiB,eAAe,MAAM,aAAa;AACvD,QAAI,sBAAsB;AAC1B,QAAI,gBAAgB,WAAW;AAC7B,UAAI,eAAe;AAEnB,UAAI,UAAU,YAAa,KAAI;AAC/B,aAAO,eAAe;AAEtB,eAAS,cAAc;AACrB,eAAO,sBAAsB,eAAe,SACxC,eAAe,qBAAqB,IAAI;AAAA,MAC7C;AAAA,IACP;AAGI,QAAI,oBAAoB,GAAG,sBAAsB;AAKjD,QAAI,cAAc;AAElB,uBAAmB,YAAY,SAAU6C,UAAS;AAChD,UAAI,gBAAgB,MAAM;AAGxB,YAAI,oBAAoBA,SAAQ,eAAe;AAE7C,6BAAmB,aAAa,cAAa,CAAE;AAC/C;AACA,gCAAsB;AAAA,QAEhC,OAAe;AAIL,cAAI,WAAW,eAAe,mBAAmB,KAAK;AACtD,cAAIO,QAAO,SAAS,OAAO,GAAGP,SAAQ,kBACR,mBAAmB;AACjD,yBAAe,mBAAmB,IAAI,SAAS,OAAOA,SAAQ,kBAC1B,mBAAmB;AACvD,gCAAsBA,SAAQ;AAC9B,6BAAmB,aAAaO,KAAI;AAEpC,wBAAcP;AACd;AAAA,QACD;AAAA,MACF;AAID,aAAO,oBAAoBA,SAAQ,eAAe;AAChD,aAAK,IAAI,cAAa,CAAE;AACxB;AAAA,MACD;AACD,UAAI,sBAAsBA,SAAQ,iBAAiB;AACjD,YAAI,WAAW,eAAe,mBAAmB,KAAK;AACtD,aAAK,IAAI,SAAS,OAAO,GAAGA,SAAQ,eAAe,CAAC;AACpD,uBAAe,mBAAmB,IAAI,SAAS,OAAOA,SAAQ,eAAe;AAC7E,8BAAsBA,SAAQ;AAAA,MAC/B;AACD,oBAAcA;AAAA,IACf,GAAE,IAAI;AAEP,QAAI,sBAAsB,eAAe,QAAQ;AAC/C,UAAI,aAAa;AAEf,2BAAmB,aAAa,cAAa,CAAE;AAAA,MAChD;AAED,WAAK,IAAI,eAAe,OAAO,mBAAmB,EAAE,KAAK,EAAE,CAAC;AAAA,IAC7D;AAGD,uBAAmB,QAAQ,QAAQ,SAAU,YAAY;AACvD,UAAI,UAAU,mBAAmB,iBAAiB,UAAU;AAC5D,UAAI,WAAW,MAAM;AACnB,YAAI,iBAAiB,MAAM;AACzB,uBAAaD,MAAK,KAAK,eAAe,UAAU;AAAA,QACjD;AACD,aAAK,iBAAiB,YAAY,OAAO;AAAA,MAC1C;AAAA,IACP,CAAK;AAED,WAAO;AAEP,aAAS,mBAAmBC,UAASO,OAAM;AACzC,UAAIP,aAAY,QAAQA,SAAQ,WAAW,QAAW;AACpD,aAAK,IAAIO,KAAI;AAAA,MACrB,OAAa;AACL,YAAI,SAAS,gBACTR,MAAK,KAAK,eAAeC,SAAQ,MAAM,IACvCA,SAAQ;AACZ,aAAK,IAAI,IAAI;AAAA,UAAWA,SAAQ;AAAA,UACRA,SAAQ;AAAA,UACR;AAAA,UACAO;AAAA,UACAP,SAAQ;AAAA,QAAI,CAAC;AAAA,MACtC;AAAA,IACF;AAAA,EACL;AAQA,aAAW,UAAU,MAAM,SAAS,eAAe,QAAQ;AACzD,QAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,aAAO,QAAQ,SAAU,OAAO;AAC9B,aAAK,IAAI,KAAK;AAAA,MACf,GAAE,IAAI;AAAA,IACR,WACQ,OAAO,YAAY,KAAK,OAAO,WAAW,UAAU;AAC3D,UAAI,QAAQ;AACV,aAAK,SAAS,KAAK,MAAM;AAAA,MAC1B;AAAA,IACF,OACI;AACH,YAAM,IAAI;AAAA,QACR,gFAAgF;AAAA,MACtF;AAAA,IACG;AACD,WAAO;AAAA,EACT;AAQA,aAAW,UAAU,UAAU,SAAS,mBAAmB,QAAQ;AACjE,QAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,eAAS,IAAI,OAAO,SAAO,GAAG,KAAK,GAAG,KAAK;AACzC,aAAK,QAAQ,OAAO,CAAC,CAAC;AAAA,MACvB;AAAA,IACF,WACQ,OAAO,YAAY,KAAK,OAAO,WAAW,UAAU;AAC3D,WAAK,SAAS,QAAQ,MAAM;AAAA,IAC7B,OACI;AACH,YAAM,IAAI;AAAA,QACR,gFAAgF;AAAA,MACtF;AAAA,IACG;AACD,WAAO;AAAA,EACT;AASA,aAAW,UAAU,OAAO,SAAS,gBAAgB,KAAK;AACxD,QAAI;AACJ,aAAS,IAAI,GAAG,MAAM,KAAK,SAAS,QAAQ,IAAI,KAAK,KAAK;AACxD,cAAQ,KAAK,SAAS,CAAC;AACvB,UAAI,MAAM,YAAY,GAAG;AACvB,cAAM,KAAK,GAAG;AAAA,MACf,OACI;AACH,YAAI,UAAU,IAAI;AAChB,cAAI,OAAO;AAAA,YAAE,QAAQ,KAAK;AAAA,YACb,MAAM,KAAK;AAAA,YACX,QAAQ,KAAK;AAAA,YACb,MAAM,KAAK;AAAA,UAAI,CAAE;AAAA,QAC/B;AAAA,MACF;AAAA,IACF;AAAA,EACH;AAQA,aAAW,UAAU,OAAO,SAAS,gBAAgB,MAAM;AACzD,QAAI;AACJ,QAAI;AACJ,QAAI,MAAM,KAAK,SAAS;AACxB,QAAI,MAAM,GAAG;AACX,oBAAc,CAAA;AACd,WAAK,IAAI,GAAG,IAAI,MAAI,GAAG,KAAK;AAC1B,oBAAY,KAAK,KAAK,SAAS,CAAC,CAAC;AACjC,oBAAY,KAAK,IAAI;AAAA,MACtB;AACD,kBAAY,KAAK,KAAK,SAAS,CAAC,CAAC;AACjC,WAAK,WAAW;AAAA,IACjB;AACD,WAAO;AAAA,EACT;AASA,aAAW,UAAU,eAAe,SAAS,wBAAwB,UAAU,cAAc;AAC3F,QAAI,YAAY,KAAK,SAAS,KAAK,SAAS,SAAS,CAAC;AACtD,QAAI,UAAU,YAAY,GAAG;AAC3B,gBAAU,aAAa,UAAU,YAAY;AAAA,IAC9C,WACQ,OAAO,cAAc,UAAU;AACtC,WAAK,SAAS,KAAK,SAAS,SAAS,CAAC,IAAI,UAAU,QAAQ,UAAU,YAAY;AAAA,IACnF,OACI;AACH,WAAK,SAAS,KAAK,GAAG,QAAQ,UAAU,YAAY,CAAC;AAAA,IACtD;AACD,WAAO;AAAA,EACT;AASA,aAAW,UAAU,mBACnB,SAAS,4BAA4B,aAAa,gBAAgB;AAChE,SAAK,eAAeD,MAAK,YAAY,WAAW,CAAC,IAAI;AAAA,EACzD;AAQA,aAAW,UAAU,qBACnB,SAAS,8BAA8B,KAAK;AAC1C,aAAS,IAAI,GAAG,MAAM,KAAK,SAAS,QAAQ,IAAI,KAAK,KAAK;AACxD,UAAI,KAAK,SAAS,CAAC,EAAE,YAAY,GAAG;AAClC,aAAK,SAAS,CAAC,EAAE,mBAAmB,GAAG;AAAA,MACxC;AAAA,IACF;AAED,QAAI,UAAU,OAAO,KAAK,KAAK,cAAc;AAC7C,aAAS,IAAI,GAAG,MAAM,QAAQ,QAAQ,IAAI,KAAK,KAAK;AAClD,UAAIA,MAAK,cAAc,QAAQ,CAAC,CAAC,GAAG,KAAK,eAAe,QAAQ,CAAC,CAAC,CAAC;AAAA,IACpE;AAAA,EACL;AAMA,aAAW,UAAU,WAAW,SAAS,sBAAsB;AAC7D,QAAI,MAAM;AACV,SAAK,KAAK,SAAU,OAAO;AACzB,aAAO;AAAA,IACX,CAAG;AACD,WAAO;AAAA,EACT;AAMA,aAAW,UAAU,wBAAwB,SAAS,iCAAiC,OAAO;AAC5F,QAAI,YAAY;AAAA,MACd,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,IACZ;AACE,QAAI,MAAM,IAAI,mBAAmB,KAAK;AACtC,QAAI,sBAAsB;AAC1B,QAAI,qBAAqB;AACzB,QAAI,mBAAmB;AACvB,QAAI,qBAAqB;AACzB,QAAI,mBAAmB;AACvB,SAAK,KAAK,SAAU,OAAO,UAAU;AACnC,gBAAU,QAAQ;AAClB,UAAI,SAAS,WAAW,QACjB,SAAS,SAAS,QAClB,SAAS,WAAW,MAAM;AAC/B,YAAG,uBAAuB,SAAS,UAC7B,qBAAqB,SAAS,QAC9B,uBAAuB,SAAS,UAChC,qBAAqB,SAAS,MAAM;AACxC,cAAI,WAAW;AAAA,YACb,QAAQ,SAAS;AAAA,YACjB,UAAU;AAAA,cACR,MAAM,SAAS;AAAA,cACf,QAAQ,SAAS;AAAA,YAClB;AAAA,YACD,WAAW;AAAA,cACT,MAAM,UAAU;AAAA,cAChB,QAAQ,UAAU;AAAA,YACnB;AAAA,YACD,MAAM,SAAS;AAAA,UACzB,CAAS;AAAA,QACF;AACD,6BAAqB,SAAS;AAC9B,2BAAmB,SAAS;AAC5B,6BAAqB,SAAS;AAC9B,2BAAmB,SAAS;AAC5B,8BAAsB;AAAA,MACvB,WAAU,qBAAqB;AAC9B,YAAI,WAAW;AAAA,UACb,WAAW;AAAA,YACT,MAAM,UAAU;AAAA,YAChB,QAAQ,UAAU;AAAA,UACnB;AAAA,QACT,CAAO;AACD,6BAAqB;AACrB,8BAAsB;AAAA,MACvB;AACD,eAAS,MAAM,GAAG,SAAS,MAAM,QAAQ,MAAM,QAAQ,OAAO;AAC5D,YAAI,MAAM,WAAW,GAAG,MAAM,cAAc;AAC1C,oBAAU;AACV,oBAAU,SAAS;AAEnB,cAAI,MAAM,MAAM,QAAQ;AACtB,iCAAqB;AACrB,kCAAsB;AAAA,UACvB,WAAU,qBAAqB;AAC9B,gBAAI,WAAW;AAAA,cACb,QAAQ,SAAS;AAAA,cACjB,UAAU;AAAA,gBACR,MAAM,SAAS;AAAA,gBACf,QAAQ,SAAS;AAAA,cAClB;AAAA,cACD,WAAW;AAAA,gBACT,MAAM,UAAU;AAAA,gBAChB,QAAQ,UAAU;AAAA,cACnB;AAAA,cACD,MAAM,SAAS;AAAA,YAC3B,CAAW;AAAA,UACF;AAAA,QACT,OAAa;AACL,oBAAU;AAAA,QACX;AAAA,MACF;AAAA,IACL,CAAG;AACD,SAAK,mBAAmB,SAAU,YAAY,eAAe;AAC3D,UAAI,iBAAiB,YAAY,aAAa;AAAA,IAClD,CAAG;AAED,WAAO,EAAE,MAAM,UAAU,MAAM,IAAQ;AAAA,EACzC;AAEA,aAAA,aAAqB;;;;;;;ACvZrB,YAAA,qBAA6BvD,0BAAqC,EAAC;AACnE,YAAA,oBAA4BW,yBAAoC,EAAC;AAC/C,YAAA,aAAGC,kBAA4B,EAAC;;;;;;;ACNlD,SAAO,eAAe2C,QAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC9BA,SAAA,yBAAGA,OAAkC,6BAAGA,OAA2B,sBAAGA,4BAA6BA,OAAA,aAAqBA,OAAA,oBAA4BA,OAAA,UAAkBA,OAAkB,aAAGA,OAAsB,iBAAGA,OAAiB,YAAGA,OAAiB,YAAGA,OAAyB,oBAAG;AACtT,MAAI,UAAU;AACd,MAAI,mBAAmB,QAAQ,gBAAgB5C,yBAAyB,CAAA;AACxE,MAAIa,SAAQ,QAAQ,aAAaZ,YAAoB,CAAA;AACrD,MAAI,IAAIY,OAAM;AACd,MAAI,eAAe,QAAQ,gBAAgBX,iBAAqB,CAAA;AAChE,MAAI,oBAAoB,aAAa,QAAQ;AAC7C,MAAI,qBAAqB,aAAa,QAAQ;AAC9C,MAAI,SAAS,OAAO,UAAU;AAC9B,WAAS,oBAAoB;AACzB,WAAO,UAAS,IAAK,OAAOE,WAAc,OAAO;AAAA,EACpD;AACwBwC,SAAA,oBAAG;AAC5B,WAAS,YAAY;AACjB,WAAQ,OAAO,WAAW,eAAe,OAAO,OAAO,aAAa;AAAA,EACvE;AACgBA,SAAA,YAAG;AACpB,WAAS,UAAUS,UAAS,KAAK,cAAc;AAC3C,QAAIA,YAAW,OAAO,KAAKA,UAAS,GAAG,GAAG;AACtC,aAAOA,SAAQ,GAAG;AAAA,IACrB;AACD,WAAO;AAAA,EACV;AACgBT,SAAA,YAAG;AACpB,WAAS,iBAAiB;AACtB,QAAI,OAAO,CAAA;AACX,aAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,WAAK,EAAE,IAAI,UAAU,EAAE;AAAA,IAC1B;AACD,QAAI,SAAS,CAAA;AACb,QAAI,OAAO,KAAK;AAChB,aAAS,IAAI,GAAG,IAAI,MAAM,EAAE,GAAG;AAC3B,UAAI,OAAO,OAAO,KAAK,KAAK,CAAC,CAAC;AAC9B,UAAI,WAAW,KAAK;AACpB,eAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AAC/B,eAAO,KAAK,CAAC,CAAC,IAAI;AAAA,MACrB;AAAA,IACJ;AACD,WAAO;AAAA,EACV;AACqBA,SAAA,iBAAG;AACzB,WAAS,WAAW,MAAM,MAAM;AAC5B,WAAO,KAAK,OAAO,KAAK,QAAQ,KAAK,SAAS,KAAK;AAAA,EACtD;AACiBA,SAAA,aAAG;AACrB,WAAS,QAAQ,KAAK;AAClB,WAAO;AAAA,MACH,MAAM,IAAI;AAAA,MACV,QAAQ,IAAI;AAAA,IACpB;AAAA,EACC;AACcA,SAAA,UAAG;AAClB,WAAS,kBAAkB,WAAW,WAAW;AAC7C,QAAI,WAAW;AACX,UAAI,CAAC,WAAW;AACZ,eAAO;AAAA,MACV;AAAA,IACJ,OACI;AACD,aAAO,aAAa;AAAA,IACvB;AACD,QAAI,YAAY,IAAI,kBAAkB,SAAS;AAC/C,QAAI,YAAY,IAAI,kBAAkB,SAAS;AAC/C,QAAI,MAAM,IAAI,mBAAmB;AAAA,MAC7B,MAAM,UAAU;AAAA,MAChB,YAAY,UAAU;AAAA,IAC9B,CAAK;AACD,QAAI,oBAAoB,CAAA;AACxB,cAAU,YAAY,SAAUC,UAAS;AACrC,UAAI,UAAU,UAAU,oBAAoB;AAAA,QACxC,MAAMA,SAAQ;AAAA,QACd,QAAQA,SAAQ;AAAA,MAC5B,CAAS;AACD,UAAI,aAAa,QAAQ;AACzB,UAAI,eAAe,MAAM;AACrB;AAAA,MACH;AACD,UAAI,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,UAAU,QAAQ,OAAO;AAAA,QACzB,WAAW;AAAA,UACP,MAAMA,SAAQ;AAAA,UACd,QAAQA,SAAQ;AAAA,QACnB;AAAA,QACD,MAAMA,SAAQ;AAAA,MAC1B,CAAS;AACD,UAAI,gBAAgB,UAAU,iBAAiB,UAAU;AACzD,UAAI,iBAAiB,CAAC,OAAO,KAAK,mBAAmB,UAAU,GAAG;AAC9D,0BAAkB,UAAU,IAAI;AAChC,YAAI,iBAAiB,YAAY,aAAa;AAAA,MACjD;AAAA,IACT,CAAK;AACD,WAAO,IAAI;EACd;AACwBD,SAAA,oBAAG;AAC5B,WAAS,WAAW,MAAMU,QAAO;AAK7B,QAAI,CAAC,KAAK,KAAK;AACX,aAAO;AAAA,IACV;AACD,QAAI,SAAS;AAAA,MACT,OAAO,KAAK,IAAI;AAAA,MAChB,KAAK,KAAK,IAAI;AAAA,IACtB;AACI,aAAS,QAAQC,OAAM;AACnB,gBAAU,QAAQA,MAAK,GAAG;AAAA,IAC7B;AAID,QAAI,KAAK,eACL,KAAK,YAAY,cACjB,oBAAoB,IAAI,GAAG;AAC3B,WAAK,YAAY,WAAW,QAAQ,OAAO;AAAA,IAC9C;AACD,QAAI,WAAW,OAAO,OAAO,OAAO,GAAG,IAAI,GAAG;AAE1C,aAAO,QAAQ,QAAQ,OAAO,KAAK;AACnC,MAAAD,OAAM,WAAW,OAAO,OAAO,OAAO,IAAI;AAC1C,UAAI,WAAW,OAAO,OAAO,OAAO,GAAG,IAAI,GAAG;AAG1C,eAAO,MAAM,QAAQ,OAAO,GAAG;AAC/B,QAAAA,OAAM,WAAW,OAAO,KAAK,MAAM,IAAI;AAAA,MAC1C;AAAA,IACJ;AAGD,QAAI,KAAK,UAAU;AACf,WAAK,SAAS,QAAQ,OAAO;AAAA,IAChC;AACD,WAAO;AAAA,EACV;AACiBV,SAAA,aAAG;AACrB,WAAS,UAAU,WAAW,UAAU;AACpC,QAAI,aAAa,UAAU;AACvB,UAAI,WAAW,SAAS,OAAO,UAAU,KAAK,IAAI,GAAG;AACjD,kBAAU,QAAQ,SAAS;AAAA,MAC9B;AACD,UAAI,WAAW,UAAU,KAAK,SAAS,GAAG,IAAI,GAAG;AAC7C,kBAAU,MAAM,SAAS;AAAA,MAC5B;AAAA,IACJ;AAAA,EACJ;AACD,WAAS,mBAAmB,MAAMU,QAAO;AACrC,QAAI,MAAM,KAAK;AACf,QAAI,KAAK;AACL,UAAI,IAAI,MAAM,OAAO,GAAG;AACpB,YAAI,MAAM,OAAO;AAAA,MACpB;AACD,UAAI,IAAI,IAAI,OAAO,GAAG;AAClB,YAAI,IAAI,OAAO;AAAA,MAClB;AAAA,IACJ;AACD,QAAI,KAAK,SAAS,QAAQ;AAGtB,UAAI,QAAQA,OAAM;AAClB,UAAI,MAAMA,OAAM;IACnB;AACD,mBAAe,MAAMA,MAAK;AAC1B,uBAAmB,MAAMA,MAAK;AAC9B,QAAI,OAAO,KAAK,YAAY;AAGxB,WAAK,WAAW,QAAQ,SAAU9D,YAAW;AACzC,kBAAU,KAAKA,WAAU,GAAG;AAAA,MACxC,CAAS;AAAA,IACJ,WACQ,KAAK,eAAe,oBAAoB,IAAI,GAAG;AAGpD,WAAK,YAAY,MAAM;AAGvB,UAAI,aAAa,KAAK,YAAY;AAClC,UAAI,YAAY;AACZ,mBAAW,QAAQ,SAAUA,YAAW;AACpC,oBAAU,KAAKA,WAAU,GAAG;AAAA,QAC5C,CAAa;AAAA,MACJ;AAAA,IACJ,WACS,EAAE,oBAAoB,EAAE,iBAAiB,MAAM,IAAI,KACxD,EAAE,SAAS,MAAM,IAAI,MAAM,KAAK,UAAU,KAAK,YAAa;AAO7D,WAAK,MAAM,MAAM;AACjB,UAAI,EAAE,mBAAmB,MAAM,KAAK,KAAK,GAAG;AAGxC,aAAK,MAAM,KAAK;AAAA,MACnB;AAAA,IACJ,WACQ,KAAK,SAAS,sBAAsB;AACzC,UAAI,QAAQ,KAAK;AACjB,UAAI,MAAM,SAAS,MAAM;AACzB,UAAI,KAAK;AACL,cAAM,QAAQ,GAAG;AACjB,YAAI8D,OAAM,QAAQ,GAAG,KAAKA,OAAM,OAAO,GAAG,MAAM,KAAK;AAGjD,cAAK,MAAMA,OAAM,WAAW,KAAK,MAAM,IAAI,GAAI;AAC3C,kBAAM,MAAM;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACyBV,SAAA,qBAAG;AAC7B,WAAS,eAAe,MAAMU,QAAO;AACjC,QAAI,KAAK,SAAS,gBAAgB;AAC9B;AAAA,IACH;AACD,aAAS,IAAI,OAAO;AAChB,UAAI,MAAM,SAAS,MAAM;AACzB,UAAI,QAAQ,OAAO,IAAI;AACvB,UAAI,MAAM,OAAO,QAAQ,IAAI,GAAG;AAChC,aAAO,SAAS,OAAO,WAAW,OAAO,GAAG,IAAI,GAAG;AAC/C,QAAAA,OAAM,QAAQ,GAAG;AACjB,YAAIA,OAAM,OAAO,GAAG,MAAM,KAAK;AAE3B,cAAI,IAAI,OAAO,IAAI;AACnB,cAAI,IAAI,SAAS,IAAI;AAAA,QACxB,OACI;AACD;AAAA,QACH;AAAA,MACJ;AAAA,IACJ;AACD,QAAI,KAAK,IAAI;AACb,QAAI,KAAK,IAAI;AACb,QAAI,KAAK,MAAM;AAAA,EAClB;AACD,WAAS,mBAAmB,MAAMA,QAAO;AACrC,QAAI,KAAK,SAAS,mBAAmB;AACjC;AAAA,IACH;AACD,QAAI,KAAK,OAAO,WAAW,GAAG;AAE1B;AAAA,IACH;AAED,QAAI,KAAK,KAAK;AAGV,UAAI,uBAAuB,QAAQ,KAAK,IAAI,KAAK;AACjD,OAAI,GAAA,iBAAiB,SAASA,OAAM,OAAO,oBAAoB,MAAM,GAAG;AACxE,OAAI,GAAA,iBAAiB,SAASA,OAAM,QAAQ,oBAAoB,CAAC;AACjE,UAAI,aAAa,KAAK,OAAO,CAAC;AAC9B,UAAI,WAAW,WAAW,IAAI,OAAO,oBAAoB,IAAI,GAAG;AAC5D,mBAAW,IAAI,QAAQ;AAAA,MAC1B;AAGD,UAAI,mBAAmB,QAAQ,KAAK,IAAI,GAAG;AAC3C,OAAI,GAAA,iBAAiB,SAASA,OAAM,QAAQ,gBAAgB,CAAC;AAC7D,OAAI,GAAA,iBAAiB,SAASA,OAAM,OAAO,gBAAgB,MAAM,GAAG;AACpE,UAAI,YAAY,KAAK,OAAO,KAAK,OAAO,SAAS,CAAC;AAClD,UAAI,WAAW,kBAAkB,UAAU,IAAI,GAAG,IAAI,GAAG;AACrD,kBAAU,IAAI,MAAM;AAAA,MACvB;AAAA,IACJ;AAGD,SAAK,YAAY,QAAQ,SAAU,MAAM,GAAG;AAKxC,UAAI,iBAAiBA,OAAM,WAAW,KAAK,IAAI,OAAO,MAAM,KAAK;AACjE,UAAIA,OAAM,QAAQ,cAAc,KAC5BA,OAAM,OAAO,cAAc,MAAM,OACjCA,OAAM,QAAQ,cAAc,KAC5BA,OAAM,OAAO,cAAc,MAAM,KAAK;AACtC,YAAI,cAAc,KAAK,OAAO,CAAC;AAC/B,YAAI,WAAW,gBAAgB,YAAY,IAAI,GAAG,IAAI,GAAG;AACrD,sBAAY,IAAI,MAAM;AAAA,QACzB;AAAA,MACJ;AAGD,UAAI,gBAAgBA,OAAM,WAAW,KAAK,IAAI,KAAK,OAAO,KAAK;AAC/D,UAAIA,OAAM,OAAO,aAAa,MAAM,KAAK;AACrC,SAAI,GAAA,iBAAiB,SAASA,OAAM,QAAQ,aAAa,CAAC;AAE1D,YAAI,aAAa,KAAK,OAAO,IAAI,CAAC;AAClC,YAAI,WAAW,WAAW,IAAI,OAAO,aAAa,IAAI,GAAG;AACrD,qBAAW,IAAI,QAAQ;AAAA,QAC1B;AAAA,MACJ;AAAA,IACT,CAAK;AAAA,EACJ;AACD,WAAS,oBAAoB,MAAM;AAC/B,QAAI;AACA,cAAQ,KAAK,MAAI;AAAA,QACb,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACD,iBAAO;AAAA,MACd;AACL,WAAO;AAAA,EACV;AAC0BV,SAAA,sBAAG;AAC9B,WAAS,2BAA2BhB,OAAM;AACtC,QAAI,aAAaA,MAAK;AACtB,QAAIA,MAAK,QAAS,MAAK,iBAAiB,oBAAoB,UAAU,GAAG;AACrE,aAAO;AAAA,IACV;AACD,WAAO;AAAA,EACV;AACiCgB,SAAA,6BAAG;AACrC,WAAS,uBAAuBS,UAAS,SAAS;AAC9C,QAAI,gBAAgBA,SAAQ;AAC5B,QAAI,OAAO,kBAAkB,UAAU;AACnC,aAAO,CAAC,CAAC,cAAc,OAAO;AAAA,IACjC;AACD,WAAO,CAAC,CAAC;AAAA,EACZ;AACDT,SAAA,yBAAiC;;;;;;;;;;AC1UjC,KAAC,SAAS,iCAAiC,MAAM,SAAS;AAGxD,MAAAlB,QAAA,UAAiB;IAQlB,GAAEzC,gBAAM,WAAW;AACpB;AAAA;AAAA,QAAiB,SAAS,SAAS;AAEzB,cAAI,mBAAmB,CAAA;AAGvB,mBAAS,oBAAoB,UAAU;AAItC,gBAAG,iBAAiB,QAAQ;AAC3B,qBAAO,iBAAiB,QAAQ,EAAE;AAGnC,gBAAIyC,UAAS,iBAAiB,QAAQ,IAAI;AAAA;AAAA,cACzC,SAAS,CAAE;AAAA;AAAA,cACX,IAAI;AAAA;AAAA,cACJ,QAAQ;AAAA;AAAA,YACpB;AAGW,oBAAQ,QAAQ,EAAE,KAAKA,QAAO,SAASA,SAAQA,QAAO,SAAS,mBAAmB;AAGlF,YAAAA,QAAO,SAAS;AAGhB,mBAAOA,QAAO;AAAA,UACd;AAID,8BAAoB,IAAI;AAGxB,8BAAoB,IAAI;AAGxB,8BAAoB,IAAI;AAGxB,iBAAO,oBAAoB,CAAC;AAAA,QAC5B,EAEA;AAAA;AAAA;AAAA,UAEJ,SAASA,SAAQtC,UAAS,qBAAqB;AA0BpD,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,gBAAI,oBAAoB,oBAAoB,CAAC;AAC7C,gBAAI,eAAe,oBAAoB,CAAC;AACxC,gBAAI,WAAW,oBAAoB,CAAC;AACpC,gBAAI,cAAc,oBAAoB,EAAE;AACxC,qBAAS,MAAMgE,OAAMC,UAAS,UAAU;AACpC,kBAAI,iBAAiB;AACrB,kBAAI,gBAAgB,SAAU,MAAM,UAAU;AAC1C,oBAAI,UAAU;AACV,2BAAS,MAAM,QAAQ;AAAA,gBAC1B;AACD,oBAAI,gBAAgB;AAChB,iCAAe,MAAM,MAAM,QAAQ;AAAA,gBACtC;AAAA,cACV;AACK,kBAAI,iBAAkB,OAAO,aAAa,aAAc,gBAAgB;AACxE,kBAAI,iBAAiB;AACrB,kBAAIA,UAAS;AACT,iCAAkB,OAAOA,SAAQ,YAAY,aAAaA,SAAQ;AAClE,oBAAI,gBAAiB,OAAOA,SAAQ,kBAAkB,aAAaA,SAAQ;AAC3E,oBAAI,kBAAkB,eAAe;AACjC,mCAAiB,IAAI,kBAAkB;AACvC,iCAAe,SAAS;AACxB,kBAAAA,SAAQ,UAAU;AAClB,mCAAiB;AAAA,gBACpB;AAAA,cACJ;AACD,kBAAI,WAAW;AACf,kBAAIA,YAAW,OAAOA,SAAQ,eAAe,UAAU;AACnD,2BAAYA,SAAQ,eAAe;AAAA,cACtC;AACD,kBAAIG;AACJ,kBAAIH,YAAW,OAAOA,SAAQ,QAAQ,aAAaA,SAAQ,KAAK;AAC5D,gBAAAG,UAAS,IAAI,aAAa,UAAUJ,OAAMC,UAAS,cAAc;AAAA,cACpE,OACI;AACD,gBAAAG,UAAS,IAAI,SAAS,OAAOJ,OAAMC,UAAS,cAAc;AAAA,cAC7D;AACD,kBAAI,UAAU,WAAWG,QAAO,YAAW,IAAKA,QAAO;AACvD,kBAAIC,OAAM;AACV,kBAAI,kBAAkB,gBAAgB;AAClC,gBAAAA,KAAI,WAAW,eAAe;AAAA,cACjC;AACD,kBAAID,QAAO,OAAO,QAAQ;AACtB,gBAAAC,KAAI,SAASD,QAAO;AAAA,cACvB;AACD,kBAAIA,QAAO,OAAO,UAAU;AACxB,gBAAAC,KAAI,SAASD,QAAO,aAAa;AAAA,cACpC;AACD,qBAAOC;AAAA,YACV;AACD,YAAArE,SAAQ,QAAQ;AAChB,qBAAS,YAAYgE,OAAMC,UAAS,UAAU;AAC1C,kBAAI,iBAAiBA,YAAW;AAChC,6BAAe,aAAa;AAC5B,qBAAO,MAAMD,OAAM,gBAAgB,QAAQ;AAAA,YAC9C;AACD,YAAAhE,SAAQ,cAAc;AACtB,qBAAS,YAAYgE,OAAMC,UAAS,UAAU;AAC1C,kBAAI,iBAAiBA,YAAW;AAChC,6BAAe,aAAa;AAC5B,qBAAO,MAAMD,OAAM,gBAAgB,QAAQ;AAAA,YAC9C;AACD,YAAAhE,SAAQ,cAAc;AACtB,qBAAS,SAASgE,OAAMC,UAAS,UAAU;AACvC,kBAAI,YAAY,IAAI,YAAY,UAAUD,OAAMC,QAAO;AACvD,kBAAI;AACJ,uBAAS,CAAA;AACT,kBAAI;AACA,uBAAO,MAAM;AACT,sBAAI,QAAQ,UAAU;AACtB,sBAAI,CAAC,OAAO;AACR;AAAA,kBACH;AACD,sBAAI,UAAU;AACV,4BAAQ,SAAS,KAAK;AAAA,kBACzB;AACD,yBAAO,KAAK,KAAK;AAAA,gBACpB;AAAA,cACJ,SACM,GAAG;AACN,0BAAU,aAAa,SAAS,CAAC;AAAA,cACpC;AACD,kBAAI,UAAU,aAAa,UAAU;AACjC,uBAAO,SAAS,UAAU;cAC7B;AACD,qBAAO;AAAA,YACV;AACD,YAAAjE,SAAQ,WAAW;AACnB,gBAAI,WAAW,oBAAoB,CAAC;AACpC,YAAAA,SAAQ,SAAS,SAAS;AAE1B,YAAAA,SAAQ,UAAU;AAAA,UAGZ;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS,qBAAqB;AAGpD,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,gBAAI,WAAW,oBAAoB,CAAC;AACpC,gBAAI,iBAAkB,WAAY;AAC9B,uBAASsE,kBAAiB;AACtB,qBAAK,SAAS;AACd,qBAAK,WAAW;AAChB,qBAAK,QAAQ;AACb,qBAAK,UAAU;AACf,qBAAK,WAAW;cACnB;AACD,cAAAA,gBAAe,UAAU,sBAAsB,SAAU,MAAM,UAAU;AAGrE,oBAAI,KAAK,SAAS,SAAS,OAAO,kBAAkB,KAAK,KAAK,WAAW,GAAG;AACxE,sBAAI,gBAAgB,CAAA;AACpB,2BAAS,IAAI,KAAK,QAAQ,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAC/C,wBAAI,QAAQ,KAAK,QAAQ,CAAC;AAC1B,wBAAI,SAAS,IAAI,UAAU,MAAM,OAAO;AACpC,oCAAc,QAAQ,MAAM,OAAO;AACnC,2BAAK,QAAQ,OAAO,GAAG,CAAC;AACxB,2BAAK,SAAS,OAAO,GAAG,CAAC;AAAA,oBAC5B;AAAA,kBACJ;AACD,sBAAI,cAAc,QAAQ;AACtB,yBAAK,gBAAgB;AAAA,kBACxB;AAAA,gBACJ;AAAA,cACV;AACK,cAAAA,gBAAe,UAAU,uBAAuB,SAAU,UAAU;AAChE,oBAAI,mBAAmB,CAAA;AACvB,oBAAI,KAAK,SAAS,SAAS,GAAG;AAC1B,2BAAS,IAAI,KAAK,SAAS,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAChD,wBAAI,UAAU,KAAK,SAAS,CAAC;AAC7B,wBAAI,QAAQ,SAAS,SAAS,IAAI,QAAQ;AACtC,uCAAiB,QAAQ,QAAQ,OAAO;AAAA,oBAC3C;AAAA,kBACJ;AACD,uBAAK,SAAS,SAAS;AACvB,yBAAO;AAAA,gBACV;AACD,oBAAI,QAAQ,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC5C,oBAAI,SAAS,MAAM,KAAK,kBAAkB;AACtC,sBAAI,eAAe,MAAM,KAAK,iBAAiB,CAAC;AAChD,sBAAI,gBAAgB,aAAa,MAAM,CAAC,KAAK,SAAS,IAAI,QAAQ;AAC9D,uCAAmB,MAAM,KAAK;AAC9B,2BAAO,MAAM,KAAK;AAAA,kBACrB;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,gBAAe,UAAU,sBAAsB,SAAU,UAAU;AAC/D,oBAAI,kBAAkB,CAAA;AACtB,oBAAI;AACJ,uBAAO,KAAK,MAAM,SAAS,GAAG;AAC1B,sBAAI,QAAQ,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAC5C,sBAAI,SAAS,MAAM,SAAS,SAAS,MAAM,QAAQ;AAC/C,6BAAS,MAAM;AACf,yBAAK,MAAM;kBACd,OACI;AACD;AAAA,kBACH;AAAA,gBACJ;AACD,oBAAI,QAAQ;AACR,sBAAI,QAAQ,OAAO,kBAAkB,OAAO,gBAAgB,SAAS;AACrE,2BAAS,IAAI,QAAQ,GAAG,KAAK,GAAG,EAAE,GAAG;AACjC,wBAAI,UAAU,OAAO,gBAAgB,CAAC;AACtC,wBAAI,QAAQ,MAAM,CAAC,KAAK,SAAS,MAAM,QAAQ;AAC3C,sCAAgB,QAAQ,OAAO;AAC/B,6BAAO,gBAAgB,OAAO,GAAG,CAAC;AAAA,oBACrC;AAAA,kBACJ;AACD,sBAAI,OAAO,mBAAmB,OAAO,gBAAgB,WAAW,GAAG;AAC/D,2BAAO,OAAO;AAAA,kBACjB;AACD,yBAAO;AAAA,gBACV;AACD,yBAAS,IAAI,KAAK,QAAQ,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAC/C,sBAAI,QAAQ,KAAK,QAAQ,CAAC;AAC1B,sBAAI,MAAM,SAAS,SAAS,MAAM,QAAQ;AACtC,oCAAgB,QAAQ,MAAM,OAAO;AACrC,yBAAK,QAAQ,OAAO,GAAG,CAAC;AAAA,kBAC3B;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,gBAAe,UAAU,YAAY,SAAU,MAAM,UAAU;AAC3D,oBAAI,KAAK,SAAS,SAAS,OAAO,WAAW,KAAK,KAAK,SAAS,GAAG;AAC/D;AAAA,gBACH;AACD,qBAAK,oBAAoB,MAAM,QAAQ;AACvC,oBAAI,mBAAmB,KAAK,qBAAqB,QAAQ;AACzD,oBAAI,kBAAkB,KAAK,oBAAoB,QAAQ;AACvD,oBAAI,gBAAgB,SAAS,GAAG;AAC5B,uBAAK,kBAAkB;AAAA,gBAC1B;AACD,oBAAI,iBAAiB,SAAS,GAAG;AAC7B,uBAAK,mBAAmB;AAAA,gBAC3B;AACD,qBAAK,MAAM,KAAK;AAAA,kBACZ;AAAA,kBACA,OAAO,SAAS,MAAM;AAAA,gBACnC,CAAU;AAAA,cACV;AACK,cAAAA,gBAAe,UAAU,eAAe,SAAU,MAAM,UAAU;AAC9D,oBAAI,OAAQ,KAAK,KAAK,CAAC,MAAM,MAAO,SAAS;AAC7C,oBAAI,UAAU;AAAA,kBACV;AAAA,kBACA,OAAO,KAAK;AAAA,gBACzB;AACS,oBAAI,KAAK,OAAO;AACZ,0BAAQ,QAAQ,KAAK;AAAA,gBACxB;AACD,oBAAI,KAAK,KAAK;AACV,0BAAQ,MAAM,KAAK;AAAA,gBACtB;AACD,qBAAK,SAAS,KAAK,OAAO;AAC1B,oBAAI,KAAK,QAAQ;AACb,sBAAI,QAAQ;AAAA,oBACR,SAAS;AAAA,sBACL;AAAA,sBACA,OAAO,KAAK;AAAA,sBACZ,OAAO,CAAC,SAAS,MAAM,QAAQ,SAAS,IAAI,MAAM;AAAA,oBACrD;AAAA,oBACD,OAAO,SAAS,MAAM;AAAA,kBACvC;AACa,sBAAI,KAAK,KAAK;AACV,0BAAM,QAAQ,MAAM,KAAK;AAAA,kBAC5B;AACD,uBAAK,OAAO;AACZ,uBAAK,QAAQ,KAAK,KAAK;AACvB,uBAAK,SAAS,KAAK,KAAK;AAAA,gBAC3B;AAAA,cACV;AACK,cAAAA,gBAAe,UAAU,QAAQ,SAAU,MAAM,UAAU;AACvD,oBAAI,KAAK,SAAS,eAAe;AAC7B,uBAAK,aAAa,MAAM,QAAQ;AAAA,gBACnC,WACQ,KAAK,SAAS,gBAAgB;AACnC,uBAAK,aAAa,MAAM,QAAQ;AAAA,gBACnC,WACQ,KAAK,QAAQ;AAClB,uBAAK,UAAU,MAAM,QAAQ;AAAA,gBAChC;AAAA,cACV;AACK,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAtE,SAAQ,iBAAiB;AAAA,UAGnB;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS;AAG/B,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,YAAAA,SAAQ,SAAS;AAAA,cACb,sBAAsB;AAAA,cACtB,mBAAmB;AAAA,cACnB,iBAAiB;AAAA,cACjB,cAAc;AAAA,cACd,yBAAyB;AAAA,cACzB,iBAAiB;AAAA,cACjB,gBAAgB;AAAA,cAChB,kBAAkB;AAAA,cAClB,gBAAgB;AAAA,cAChB,gBAAgB;AAAA,cAChB,aAAa;AAAA,cACb,WAAW;AAAA,cACX,kBAAkB;AAAA,cAClB,iBAAiB;AAAA,cACjB,uBAAuB;AAAA,cACvB,mBAAmB;AAAA,cACnB,kBAAkB;AAAA,cAClB,mBAAmB;AAAA,cACnB,gBAAgB;AAAA,cAChB,sBAAsB;AAAA,cACtB,0BAA0B;AAAA,cAC1B,wBAAwB;AAAA,cACxB,iBAAiB;AAAA,cACjB,qBAAqB;AAAA,cACrB,cAAc;AAAA,cACd,gBAAgB;AAAA,cAChB,gBAAgB;AAAA,cAChB,qBAAqB;AAAA,cACrB,oBAAoB;AAAA,cACpB,YAAY;AAAA,cACZ,aAAa;AAAA,cACb,mBAAmB;AAAA,cACnB,wBAAwB;AAAA,cACxB,0BAA0B;AAAA,cAC1B,iBAAiB;AAAA,cACjB,SAAS;AAAA,cACT,kBAAkB;AAAA,cAClB,mBAAmB;AAAA,cACnB,kBAAkB;AAAA,cAClB,cAAc;AAAA,cACd,kBAAkB;AAAA,cAClB,eAAe;AAAA,cACf,kBAAkB;AAAA,cAClB,eAAe;AAAA,cACf,SAAS;AAAA,cACT,UAAU;AAAA,cACV,aAAa;AAAA,cACb,iBAAiB;AAAA,cACjB,oBAAoB;AAAA,cACpB,eAAe;AAAA,cACf,OAAO;AAAA,cACP,YAAY;AAAA,cACZ,iBAAiB;AAAA,cACjB,0BAA0B;AAAA,cAC1B,iBAAiB;AAAA,cACjB,iBAAiB;AAAA,cACjB,gBAAgB;AAAA,cAChB,gBAAgB;AAAA,cAChB,cAAc;AAAA,cACd,iBAAiB;AAAA,cACjB,kBAAkB;AAAA,cAClB,qBAAqB;AAAA,cACrB,oBAAoB;AAAA,cACpB,gBAAgB;AAAA,cAChB,eAAe;AAAA,cACf,iBAAiB;AAAA,YACtB;AAAA,UAGO;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS,qBAAqB;AAIpD,gBAAIuE,aAAa,QAAQ,KAAK,aAAe,WAAY;AACrD,kBAAIC,iBAAgB,OAAO,kBACtB,EAAE,WAAW,CAAA,eAAgB,SAAS,SAAU,GAAGrD,IAAG;AAAE,kBAAE,YAAYA;AAAA,cAAE,KACzE,SAAU,GAAGA,IAAG;AAAE,yBAAS,KAAKA,GAAG,KAAIA,GAAE,eAAe,CAAC,EAAG,GAAE,CAAC,IAAIA,GAAE,CAAC;AAAA;AAC1E,qBAAO,SAAU,GAAGA,IAAG;AACnB,gBAAAqD,eAAc,GAAGrD,EAAC;AAClB,yBAAS,KAAK;AAAE,uBAAK,cAAc;AAAA,gBAAI;AACvC,kBAAE,YAAYA,OAAM,OAAO,OAAO,OAAOA,EAAC,KAAK,GAAG,YAAYA,GAAE,WAAW,IAAI,GAAI;AAAA,cAC5F;AAAA,YACA;AACC,mBAAO,eAAenB,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,gBAAI,cAAc,oBAAoB,CAAC;AACvC,gBAAI,UAAU,oBAAoB,CAAC;AACnC,gBAAI,eAAe,oBAAoB,CAAC;AACxC,gBAAI,OAAO,oBAAoB,CAAC;AAChC,gBAAI,WAAW,oBAAoB,CAAC;AACpC,gBAAI,UAAU,oBAAoB,EAAE;AACpC,gBAAI,mBAAmB,oBAAoB,EAAE;AAC7C,oBAAQ;AAAA,cAAU;AAAA;AAAA,YAAqB,IAAG;AAC1C,oBAAQ;AAAA,cAAU;AAAA;AAAA,YAAe,IAAG;AAEpC,qBAAS,wBAAwB,aAAa;AAC1C,kBAAI;AACJ,sBAAQ,YAAY,MAAI;AAAA,gBACpB,KAAK,aAAa,UAAU;AACxB,sBAAI,KAAK;AACT,kCAAgB,GAAG;AACnB;AAAA,gBACJ,KAAK,aAAa,UAAU;AACxB,sBAAI,KAAK;AACT,kCAAgB,wBAAwB,GAAG,SAAS,IAAI,MACpD,wBAAwB,GAAG,IAAI;AACnC;AAAA,gBACJ,KAAK,aAAa,UAAU;AACxB,sBAAI,OAAO;AACX,kCAAgB,wBAAwB,KAAK,MAAM,IAAI,MACnD,wBAAwB,KAAK,QAAQ;AACzC;AAAA,cAIP;AACD,qBAAO;AAAA,YACV;AACD,gBAAI,YAAa,SAAU,QAAQ;AAC/B,cAAAuE,WAAUE,YAAW,MAAM;AAC3B,uBAASA,WAAUT,OAAMC,UAAS,UAAU;AACxC,uBAAO,OAAO,KAAK,MAAMD,OAAMC,UAAS,QAAQ,KAAK;AAAA,cACxD;AACD,cAAAQ,WAAU,UAAU,yBAAyB,WAAY;AACrD,uBAAO,KAAK,MAAM,GAAG,IAAI,KAAK,iBAAiB,OAAO,UAAU,uBAAuB,KAAK,IAAI;AAAA,cACzG;AACK,cAAAA,WAAU,UAAU,WAAW,WAAY;AAEvC,qBAAK,QAAQ,QAAQ,KAAK,YAAY;AACtC,qBAAK,QAAQ,aAAa,KAAK,YAAY;AAC3C,qBAAK,QAAQ,YAAY,KAAK,YAAY,QAAQ,KAAK,YAAY;AAAA,cAC5E;AACK,cAAAA,WAAU,UAAU,YAAY,WAAY;AAExC,qBAAK,UAAS;AAAA,cACvB;AACK,cAAAA,WAAU,UAAU,aAAa,WAAY;AACzC,qBAAK,SAAQ;AACb,qBAAK,UAAU,GAAG;AAElB,oBAAI,KAAK,OAAO,QAAQ;AACpB,uBAAK,OAAO;gBACf;AAAA,cACV;AACK,cAAAA,WAAU,UAAU,gBAAgB,WAAY;AAC5C,qBAAK,gBAAe;AACpB,uBAAO;AAAA,kBACH,OAAO,KAAK,QAAQ;AAAA,kBACpB,MAAM,KAAK,QAAQ;AAAA,kBACnB,QAAQ,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAAA,gBACvD;AAAA,cACA;AACK,cAAAA,WAAU,UAAU,qBAAqB,WAAY;AACjD,uBAAO;AAAA,kBACH,OAAO,KAAK,QAAQ;AAAA,kBACpB,MAAM,KAAK,QAAQ;AAAA,kBACnB,QAAQ,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAAA,gBACvD;AAAA,cACA;AACK,cAAAA,WAAU,UAAU,kBAAkB,SAAU,OAAO;AACnD,oBAAI,SAAS;AACb,oBAAI,QAAQ;AACZ,oBAAI,aAAa;AACjB,oBAAI,UAAU;AACd,oBAAI,MAAM;AACV,uBAAO,CAAC,KAAK,QAAQ,IAAG,KAAM,SAAS,CAAC,YAAY;AAChD,sBAAI,KAAK,KAAK,QAAQ,OAAO,KAAK,QAAQ,KAAK;AAC/C,sBAAI,OAAO,OAAO;AACd;AAAA,kBACH;AACD,+BAAc,OAAO;AACrB,4BAAU;AACV,oBAAE,KAAK,QAAQ;AACf,sBAAI,CAAC,YAAY;AACb,4BAAQ,OAAO,QAAM;AAAA,sBACjB,KAAK;AAED,kCAAW,OAAO;AAClB;AAAA,sBACJ,KAAK;AACD,4BAAI,SAAS;AAET,gCAAO,OAAO;AACd,kCAAQ,OAAO,YAAY,UAAU,eAAe,GAAG,WAAW,CAAC,CAAC;AACpE,oCAAU,WAAW,CAAC;AAAA,wBACzB;AACD;AAAA,sBACJ;AACI,gCAAQ,SAAS,EAAE,WAAW,CAAC,YAAY,UAAU,eAAe,GAAG,WAAW,CAAC,CAAC;AACpF,gCAAQ,SAAS,EAAE,OAAO,CAAC,YAAY,UAAU,WAAW,GAAG,WAAW,CAAC,CAAC;AAC5E;AAAA,oBACP;AAAA,kBACJ;AAAA,gBACJ;AACD,oBAAI,SAAS,cAAc,OAAO,SAAS,GAAG;AAE1C,sBAAI,MAAM,OAAO,OAAO,GAAG,OAAO,SAAS,CAAC;AAC5C,sBAAI,WAAW,IAAI,SAAS,GAAG;AAC3B,6BAAS,OAAO,aAAa,SAAS,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC;AAAA,kBAC3D,WACQ,OAAO,IAAI,SAAS,GAAG;AAC5B,6BAAS,OAAO,aAAa,SAAS,MAAM,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC;AAAA,kBACjE,WACQ,CAAC,WAAW,CAAC,OAAO,iBAAiB,cAAc,GAAG,GAAG;AAC9D,6BAAS,iBAAiB,cAAc,GAAG;AAAA,kBAC9C;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AAEK,cAAAA,WAAU,UAAU,SAAS,WAAY;AACrC,oBAAI,KAAK,KAAK,QAAQ,OAAO,WAAW,KAAK,QAAQ,KAAK;AAE1D,oBAAI,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,OAAO,OAAO,KAAK;AAC3F,sBAAI,QAAQ,KAAK,QAAQ,OAAO,KAAK,QAAQ,OAAO;AACpD,yBAAO;AAAA,oBACH,MAAM;AAAA,oBACN;AAAA,oBACA,YAAY,KAAK,QAAQ;AAAA,oBACzB,WAAW,KAAK,QAAQ;AAAA,oBACxB,OAAO,KAAK,QAAQ,QAAQ;AAAA,oBAC5B,KAAK,KAAK,QAAQ;AAAA,kBACnC;AAAA,gBACU;AAED,oBAAI,OAAO,MAAM,OAAO,IAAI;AACxB,sBAAI,QAAQ,KAAK,QAAQ;AACzB,sBAAI,QAAQ,KAAK,QAAQ,OAAO,KAAK,QAAQ,OAAO;AACpD,sBAAI,MAAM;AACV,yBAAO,CAAC,KAAK,QAAQ,OAAO;AACxB,wBAAI,KAAK,KAAK,QAAQ,OAAO,KAAK,QAAQ,OAAO;AACjD,wBAAI,OAAO,OAAO;AACd;AAAA,oBACH,WACQ,OAAO,KAAK;AACjB,6BAAO,KAAK,gBAAgB,KAAK;AAAA,oBACpC,OACI;AACD,6BAAO;AAAA,oBACV;AAAA,kBACJ;AACD,yBAAO;AAAA,oBACH,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,YAAY,KAAK,QAAQ;AAAA,oBACzB,WAAW,KAAK,QAAQ;AAAA,oBACxB;AAAA,oBACA,KAAK,KAAK,QAAQ;AAAA,kBACnC;AAAA,gBACU;AAED,oBAAI,OAAO,IAAI;AACX,sBAAI,KAAK,KAAK,QAAQ,OAAO,WAAW,KAAK,QAAQ,QAAQ,CAAC;AAC9D,sBAAI,KAAK,KAAK,QAAQ,OAAO,WAAW,KAAK,QAAQ,QAAQ,CAAC;AAC9D,sBAAI,QAAS,OAAO,MAAM,OAAO,KAAM,QAAQ;AAC/C,sBAAI,QAAQ,KAAK,QAAQ;AACzB,uBAAK,QAAQ,SAAS,MAAM;AAC5B,yBAAO;AAAA,oBACH,MAAM;AAAA,oBACN;AAAA,oBACA,YAAY,KAAK,QAAQ;AAAA,oBACzB,WAAW,KAAK,QAAQ;AAAA,oBACxB;AAAA,oBACA,KAAK,KAAK,QAAQ;AAAA,kBACnC;AAAA,gBACU;AAED,oBAAI,OAAO,IAAI;AAEX,yBAAO;AAAA,oBACH,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,YAAY,KAAK,QAAQ;AAAA,oBACzB,WAAW,KAAK,QAAQ;AAAA,oBACxB,OAAO,KAAK,QAAQ;AAAA,oBACpB,KAAK,KAAK,QAAQ;AAAA,kBACnC;AAAA,gBACU;AAED,oBAAI,YAAY,UAAU,kBAAkB,EAAE,KAAM,OAAO,IAAK;AAC5D,sBAAI,QAAQ,KAAK,QAAQ;AACzB,oBAAE,KAAK,QAAQ;AACf,yBAAO,CAAC,KAAK,QAAQ,OAAO;AACxB,wBAAI,KAAK,KAAK,QAAQ,OAAO,WAAW,KAAK,QAAQ,KAAK;AAC1D,wBAAI,YAAY,UAAU,iBAAiB,EAAE,KAAM,OAAO,IAAK;AAC3D,wBAAE,KAAK,QAAQ;AAAA,oBAClB,WACQ,OAAO,IAAI;AAEhB,wBAAE,KAAK,QAAQ;AAAA,oBAClB,OACI;AACD;AAAA,oBACH;AAAA,kBACJ;AACD,sBAAI,KAAK,KAAK,QAAQ,OAAO,MAAM,OAAO,KAAK,QAAQ,KAAK;AAC5D,yBAAO;AAAA,oBACH,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,YAAY,KAAK,QAAQ;AAAA,oBACzB,WAAW,KAAK,QAAQ;AAAA,oBACxB;AAAA,oBACA,KAAK,KAAK,QAAQ;AAAA,kBACnC;AAAA,gBACU;AACD,uBAAO,KAAK,QAAQ;cAC7B;AACK,cAAAA,WAAU,UAAU,eAAe,WAAY;AAC3C,qBAAK,gBAAe;AACpB,qBAAK,YAAY,QAAQ,KAAK,QAAQ;AACtC,qBAAK,YAAY,OAAO,KAAK,QAAQ;AACrC,qBAAK,YAAY,SAAS,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAC5D,oBAAI,QAAQ,KAAK;AACjB,qBAAK,WAAW,QAAQ,KAAK,QAAQ;AACrC,qBAAK,WAAW,OAAO,KAAK,QAAQ;AACpC,qBAAK,WAAW,SAAS,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAC3D,oBAAI,KAAK,OAAO,QAAQ;AACpB,uBAAK,OAAO,KAAK,KAAK,aAAa,KAAK,CAAC;AAAA,gBAC5C;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,WAAU,UAAU,cAAc,WAAY;AAC1C,qBAAK,YAAY,QAAQ,KAAK,QAAQ;AACtC,qBAAK,YAAY,OAAO,KAAK,QAAQ;AACrC,qBAAK,YAAY,SAAS,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAC5D,oBAAI,QAAQ,KAAK,QAAQ;AACzB,oBAAI,OAAO;AACX,uBAAO,CAAC,KAAK,QAAQ,OAAO;AACxB,sBAAI,KAAK,KAAK,QAAQ,OAAO,KAAK,QAAQ,KAAK;AAC/C,sBAAI,OAAO,OAAO,OAAO,KAAK;AAC1B;AAAA,kBACH;AACD,oBAAE,KAAK,QAAQ;AACf,0BAAQ;AACR,sBAAI,YAAY,UAAU,iBAAiB,GAAG,WAAW,CAAC,CAAC,GAAG;AAC1D,sBAAE,KAAK,QAAQ;AACf,wBAAI,OAAO,QAAQ,KAAK,QAAQ,OAAO,KAAK,QAAQ,KAAK,MAAM,MAAM;AACjE,wBAAE,KAAK,QAAQ;AAAA,oBAClB;AACD,yBAAK,QAAQ,YAAY,KAAK,QAAQ;AAAA,kBACzC;AAAA,gBACJ;AACD,qBAAK,WAAW,QAAQ,KAAK,QAAQ;AACrC,qBAAK,WAAW,OAAO,KAAK,QAAQ;AACpC,qBAAK,WAAW,SAAS,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAC3D,oBAAI,QAAQ;AAAA,kBACR,MAAM;AAAA,kBACN,OAAO;AAAA,kBACP,YAAY,KAAK,QAAQ;AAAA,kBACzB,WAAW,KAAK,QAAQ;AAAA,kBACxB;AAAA,kBACA,KAAK,KAAK,QAAQ;AAAA,gBAC/B;AACS,oBAAK,KAAK,SAAS,KAAM,KAAK,OAAO,QAAQ;AACzC,uBAAK,OAAO,KAAK,KAAK,aAAa,KAAK,CAAC;AAAA,gBAC5C;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,WAAU,UAAU,eAAe,WAAY;AAC3C,oBAAI,QAAQ,KAAK,QAAQ,UAAS;AAClC,qBAAK,QAAQ;AACb,oBAAI,OAAO,KAAK;AAChB,qBAAK,QAAQ,aAAa,KAAK;AAC/B,uBAAO;AAAA,cAChB;AAGK,cAAAA,WAAU,UAAU,YAAY,SAAU,OAAO;AAC7C,oBAAI,QAAQ,KAAK;AACjB,oBAAI,MAAM,SAAS,KAAsB,MAAM,UAAU,OAAO;AAC5D,uBAAK,qBAAqB,KAAK;AAAA,gBAClC;AAAA,cACV;AAEK,cAAAA,WAAU,UAAU,WAAW,SAAU,OAAO;AAC5C,oBAAI,OAAO,KAAK;AAChB,uBAAO,KAAK,SAAS,KAAsB,KAAK,UAAU;AAAA,cACnE;AACK,cAAAA,WAAU,UAAU,qBAAqB,WAAY;AACjD,oBAAI,OAAO,KAAK;AAChB,oBAAI,QAAQ,KAAK;AACjB,oBAAI,MAAM,SAAS,KAAsB;AACrC,uBAAK,qBAAqB,KAAK;AAAA,gBAClC;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,QAAQ,cAAc,MAAM,KAAK,CAAC;AAAA,cAC1E;AACK,cAAAA,WAAU,UAAU,sBAAsB,WAAY;AAClD,oBAAI,OAAO,KAAK;AAChB,oBAAI,cAAc,KAAK;AACvB,oBAAI,KAAK,SAAS,GAAG,GAAG;AACpB,sBAAI,YAAY;AAChB,uBAAK,UAAU,GAAG;AAClB,sBAAI,SAAS,KAAK;AAClB,gCAAc,KAAK,SAAS,MAAM,IAAI,QAAQ,kBAAkB,WAAW,MAAM,CAAC;AAAA,gBACrF,WACQ,KAAK,SAAS,GAAG,GAAG;AACzB,yBAAO,KAAK,SAAS,GAAG,GAAG;AACvB,wBAAI,SAAS;AACb,yBAAK,UAAU,GAAG;AAClB,wBAAI,WAAW,KAAK;AACpB,kCAAc,KAAK,SAAS,MAAM,IAAI,QAAQ,oBAAoB,QAAQ,QAAQ,CAAC;AAAA,kBACtF;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,WAAU,UAAU,wBAAwB,WAAY;AACpD,oBAAI,OAAO,KAAK;AAChB,oBAAI;AACJ,oBAAI,aAAa,KAAK;AACtB,oBAAI,KAAK,SAAS,GAAG,GAAG;AACpB,sBAAI,YAAY;AAChB,uBAAK,UAAU,GAAG;AAClB,sBAAI,SAAS,KAAK;AAClB,kCAAgB,KAAK,SAAS,MAAM,IAAI,QAAQ,kBAAkB,WAAW,MAAM,CAAC;AAAA,gBACvF,OACI;AACD,kCAAgB;AAAA,gBACnB;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,WAAU,UAAU,iCAAiC,WAAY;AAC7D,oBAAI,OAAO,KAAK;AAChB,oBAAI,QAAQ,KAAK;AACjB,oBAAI,MAAM,SAAS,GAAuB;AACtC,uBAAK,qBAAqB,KAAK;AAAA,gBAClC;AACD,oBAAI,MAAM,KAAK,YAAY,KAAK;AAChC,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,QAAQ,MAAM,OAAO,GAAG,CAAC;AAAA,cACtE;AACK,cAAAA,WAAU,UAAU,8BAA8B,WAAY;AAC1D,oBAAI,OAAO,KAAK;AAChB,qBAAK,UAAU,GAAG;AAClB,qBAAK,UAAS;AACd,oBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,uBAAK,cAAc,6DAA6D;AAAA,gBACnF;AACD,oBAAI,aAAa,KAAK;AACtB,qBAAK,WAAU;AACf,uBAAO,KAAK,SAAS,MAAM,IAAI,QAAQ,uBAAuB,UAAU,CAAC;AAAA,cAClF;AACK,cAAAA,WAAU,UAAU,yBAAyB,WAAY;AACrD,uBAAO,KAAK,SAAS,GAAG,IAAI,KAAK,4BAA6B,IAC1D,KAAK,SAAS,GAAG,IAAI,KAAK,oBAAoB,KAAK;cAChE;AACK,cAAAA,WAAU,UAAU,6BAA6B,WAAY;AACzD,oBAAI,OAAO,KAAK;AAChB,oBAAI,OAAO,KAAK;AAChB,oBAAI,QAAQ;AACZ,oBAAI,KAAK,SAAS,GAAG,GAAG;AACpB,uBAAK,UAAU,GAAG;AAClB,0BAAQ,KAAK;gBAChB;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,QAAQ,aAAa,MAAM,KAAK,CAAC;AAAA,cACzE;AACK,cAAAA,WAAU,UAAU,0BAA0B,WAAY;AACtD,oBAAI,OAAO,KAAK;AAChB,qBAAK,UAAU,GAAG;AAClB,qBAAK,UAAU,KAAK;AACpB,qBAAK,UAAS;AACd,oBAAI,WAAW,KAAK;AACpB,qBAAK,WAAU;AACf,uBAAO,KAAK,SAAS,MAAM,IAAI,QAAQ,mBAAmB,QAAQ,CAAC;AAAA,cAC5E;AACK,cAAAA,WAAU,UAAU,qBAAqB,WAAY;AACjD,oBAAI,aAAa,CAAA;AACjB,uBAAO,CAAC,KAAK,SAAS,GAAG,KAAK,CAAC,KAAK,SAAS,GAAG,GAAG;AAC/C,sBAAI,YAAY,KAAK,SAAS,GAAG,IAAI,KAAK,wBAAyB,IAC/D,KAAK,2BAA0B;AACnC,6BAAW,KAAK,SAAS;AAAA,gBAC5B;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,WAAU,UAAU,yBAAyB,WAAY;AACrD,oBAAI,OAAO,KAAK;AAChB,qBAAK,UAAU,GAAG;AAClB,oBAAI,OAAO,KAAK;AAChB,oBAAI,aAAa,KAAK;AACtB,oBAAI,cAAc,KAAK,SAAS,GAAG;AACnC,oBAAI,aAAa;AACb,uBAAK,UAAU,GAAG;AAAA,gBACrB;AACD,qBAAK,UAAU,GAAG;AAClB,uBAAO,KAAK,SAAS,MAAM,IAAI,QAAQ,kBAAkB,MAAM,aAAa,UAAU,CAAC;AAAA,cAChG;AACK,cAAAA,WAAU,UAAU,0BAA0B,WAAY;AACtD,oBAAI,OAAO,KAAK;AAChB,qBAAK,UAAU,GAAG;AAClB,oBAAI,KAAK,SAAS,GAAG,GAAG;AACpB,uBAAK,UAAU,GAAG;AAClB,sBAAI,SAAS,KAAK;AAClB,uBAAK,UAAU,GAAG;AAClB,yBAAO,KAAK,SAAS,MAAM,IAAI,QAAQ,kBAAkB,MAAM,CAAC;AAAA,gBACnE;AACD,oBAAI,OAAO,KAAK;AAChB,oBAAI,aAAa,KAAK;AACtB,oBAAI,cAAc,KAAK,SAAS,GAAG;AACnC,oBAAI,aAAa;AACb,uBAAK,UAAU,GAAG;AAAA,gBACrB;AACD,qBAAK,UAAU,GAAG;AAClB,uBAAO,KAAK,SAAS,MAAM,IAAI,QAAQ,kBAAkB,MAAM,aAAa,UAAU,CAAC;AAAA,cAChG;AACK,cAAAA,WAAU,UAAU,0BAA0B,WAAY;AACtD,oBAAI,OAAO,KAAK;AAChB,qBAAK,gBAAe;AACpB,qBAAK,WAAW,QAAQ,KAAK,QAAQ;AACrC,qBAAK,WAAW,OAAO,KAAK,QAAQ;AACpC,qBAAK,WAAW,SAAS,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAC3D,uBAAO,KAAK,SAAS,MAAM,IAAI,QAAQ,mBAAkB,CAAE;AAAA,cACpE;AACK,cAAAA,WAAU,UAAU,8BAA8B,WAAY;AAC1D,oBAAI,OAAO,KAAK;AAChB,qBAAK,UAAU,GAAG;AAClB,oBAAI;AACJ,oBAAI,KAAK,SAAS,GAAG,GAAG;AACpB,+BAAa,KAAK;AAClB,uBAAK,UAAU,GAAG;AAAA,gBACrB,OACI;AACD,uBAAK,UAAS;AACd,+BAAa,KAAK;AAClB,uBAAK,WAAU;AAAA,gBAClB;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,QAAQ,uBAAuB,UAAU,CAAC;AAAA,cAClF;AACK,cAAAA,WAAU,UAAU,mBAAmB,WAAY;AAC/C,oBAAI,WAAW,CAAA;AACf,uBAAO,CAAC,KAAK,QAAQ,OAAO;AACxB,sBAAI,OAAO,KAAK;AAChB,sBAAI,QAAQ,KAAK;AACjB,sBAAI,MAAM,QAAQ,MAAM,KAAK;AACzB,wBAAI,MAAM,KAAK,YAAY,KAAK;AAChC,wBAAI,QAAQ,KAAK,SAAS,MAAM,IAAI,QAAQ,QAAQ,MAAM,OAAO,GAAG,CAAC;AACrE,6BAAS,KAAK,KAAK;AAAA,kBACtB;AACD,sBAAI,KAAK,QAAQ,OAAO,KAAK,QAAQ,KAAK,MAAM,KAAK;AACjD,wBAAI,YAAY,KAAK;AACrB,6BAAS,KAAK,SAAS;AAAA,kBAC1B,OACI;AACD;AAAA,kBACH;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,WAAU,UAAU,yBAAyB,SAAU,IAAI;AACvD,oBAAI,QAAQ,CAAA;AACZ,uBAAO,CAAC,KAAK,QAAQ,OAAO;AACxB,qBAAG,WAAW,GAAG,SAAS,OAAO,KAAK,iBAAgB,CAAE;AACxD,sBAAI,OAAO,KAAK;AAChB,sBAAI,UAAU,KAAK;AACnB,sBAAI,QAAQ,SAAS,aAAa,UAAU,mBAAmB;AAC3D,wBAAI,UAAU;AACd,wBAAI,QAAQ,aAAa;AACrB,0BAAI,QAAQ,KAAK,SAAS,MAAM,IAAI,QAAQ,WAAW,SAAS,IAAI,IAAI,CAAC;AACzE,yBAAG,SAAS,KAAK,KAAK;AAAA,oBACzB,OACI;AACD,4BAAM,KAAK,EAAE;AACb,2BAAK,EAAE,MAAY,SAAkB,SAAS,MAAM,UAAU,CAAA;oBACjE;AAAA,kBACJ;AACD,sBAAI,QAAQ,SAAS,aAAa,UAAU,mBAAmB;AAC3D,uBAAG,UAAU;AACb,wBAAI,SAAS,wBAAwB,GAAG,QAAQ,IAAI;AACpD,wBAAI,UAAU,wBAAwB,GAAG,QAAQ,IAAI;AACrD,wBAAI,WAAW,SAAS;AACpB,2BAAK,cAAc,iDAAiD,MAAM;AAAA,oBAC7E;AACD,wBAAI,MAAM,SAAS,GAAG;AAClB,0BAAI,QAAQ,KAAK,SAAS,GAAG,MAAM,IAAI,QAAQ,WAAW,GAAG,SAAS,GAAG,UAAU,GAAG,OAAO,CAAC;AAC9F,2BAAK,MAAM,MAAM,SAAS,CAAC;AAC3B,yBAAG,SAAS,KAAK,KAAK;AACtB,4BAAM,IAAG;AAAA,oBACZ,OACI;AACD;AAAA,oBACH;AAAA,kBACJ;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,WAAU,UAAU,kBAAkB,WAAY;AAC9C,oBAAI,OAAO,KAAK;AAChB,oBAAI,UAAU,KAAK;AACnB,oBAAI,WAAW,CAAA;AACf,oBAAI,UAAU;AACd,oBAAI,CAAC,QAAQ,aAAa;AACtB,sBAAI,KAAK,KAAK,uBAAuB,EAAE,MAAY,SAAkB,SAAkB,SAAoB,CAAA;AAC3G,6BAAW,GAAG;AACd,4BAAU,GAAG;AAAA,gBAChB;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,QAAQ,WAAW,SAAS,UAAU,OAAO,CAAC;AAAA,cACtF;AACK,cAAAA,WAAU,UAAU,eAAe,WAAY;AAE3C,oBAAI,KAAK,OAAO,QAAQ;AACpB,uBAAK,OAAO;gBACf;AACD,qBAAK,SAAQ;AACb,oBAAI,UAAU,KAAK;AACnB,qBAAK,UAAS;AACd,uBAAO;AAAA,cAChB;AACK,cAAAA,WAAU,UAAU,sBAAsB,WAAY;AAClD,uBAAO,OAAO,UAAU,oBAAoB,KAAK,IAAI,KAAK,KAAK,MAAM,GAAG;AAAA,cACjF;AACK,qBAAOA;AAAA,YACZ,EAAG,SAAS,MAAM;AACjB,YAAAzE,SAAQ,YAAY;AAAA,UAGd;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS;AAG/B,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAE5D,gBAAI,QAAQ;AAAA;AAAA,cAER,yBAAyB;AAAA;AAAA,cAEzB,wBAAwB;AAAA,YAC7B;AACC,YAAAA,SAAQ,YAAY;AAAA;AAAA,cAEhB,eAAe,SAAU,IAAI;AACzB,uBAAQ,KAAK,QAAW,OAAO,aAAa,EAAE,IAC1C,OAAO,aAAa,SAAW,KAAK,SAAY,GAAG,IAC/C,OAAO,aAAa,SAAW,KAAK,QAAW,KAAK;AAAA,cAC/D;AAAA;AAAA,cAED,cAAc,SAAU,IAAI;AACxB,uBAAQ,OAAO,MAAU,OAAO,KAAU,OAAO,MAAU,OAAO,MAAU,OAAO,OAC9E,MAAM,QAAU,CAAC,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,OAAQ,KAAM,EAAE,QAAQ,EAAE,KAAK;AAAA,cACxK;AAAA;AAAA,cAED,kBAAkB,SAAU,IAAI;AAC5B,uBAAQ,OAAO,MAAU,OAAO,MAAU,OAAO,QAAY,OAAO;AAAA,cACvE;AAAA;AAAA,cAED,mBAAmB,SAAU,IAAI;AAC7B,uBAAQ,OAAO,MAAU,OAAO,MAC3B,MAAM,MAAQ,MAAM,MACpB,MAAM,MAAQ,MAAM,OACpB,OAAO,MACN,MAAM,OAAS,MAAM,wBAAwB,KAAKA,SAAQ,UAAU,cAAc,EAAE,CAAC;AAAA,cAC9F;AAAA,cACD,kBAAkB,SAAU,IAAI;AAC5B,uBAAQ,OAAO,MAAU,OAAO,MAC3B,MAAM,MAAQ,MAAM,MACpB,MAAM,MAAQ,MAAM,OACpB,MAAM,MAAQ,MAAM,MACpB,OAAO,MACN,MAAM,OAAS,MAAM,uBAAuB,KAAKA,SAAQ,UAAU,cAAc,EAAE,CAAC;AAAA,cAC7F;AAAA;AAAA,cAED,gBAAgB,SAAU,IAAI;AAC1B,uBAAQ,MAAM,MAAQ,MAAM;AAAA,cAC/B;AAAA,cACD,YAAY,SAAU,IAAI;AACtB,uBAAQ,MAAM,MAAQ,MAAM,MACvB,MAAM,MAAQ,MAAM,MACpB,MAAM,MAAQ,MAAM;AAAA,cAC5B;AAAA,cACD,cAAc,SAAU,IAAI;AACxB,uBAAQ,MAAM,MAAQ,MAAM;AAAA,cAC/B;AAAA,YACN;AAAA,UAGO;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS,qBAAqB;AAGpD,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,gBAAI,eAAe,oBAAoB,CAAC;AAExC,gBAAI,oBAAqB,2BAAY;AACjC,uBAAS0E,mBAAkB,MAAM;AAC7B,qBAAK,OAAO,aAAa,UAAU;AACnC,qBAAK,OAAO;AAAA,cACf;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA1E,SAAQ,oBAAoB;AAC5B,gBAAI,aAAc,2BAAY;AAC1B,uBAAS2E,YAAW,gBAAgB,UAAU,gBAAgB;AAC1D,qBAAK,OAAO,aAAa,UAAU;AACnC,qBAAK,iBAAiB;AACtB,qBAAK,WAAW;AAChB,qBAAK,iBAAiB;AAAA,cACzB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA3E,SAAQ,aAAa;AACrB,gBAAI,qBAAsB,2BAAY;AAClC,uBAAS4E,sBAAqB;AAC1B,qBAAK,OAAO,aAAa,UAAU;AAAA,cACtC;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA5E,SAAQ,qBAAqB;AAC7B,gBAAI,yBAA0B,2BAAY;AACtC,uBAAS6E,wBAAuB,YAAY;AACxC,qBAAK,OAAO,aAAa,UAAU;AACnC,qBAAK,aAAa;AAAA,cACrB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA7E,SAAQ,yBAAyB;AACjC,gBAAI,gBAAiB,2BAAY;AAC7B,uBAAS8E,eAAc,MAAM;AACzB,qBAAK,OAAO,aAAa,UAAU;AACnC,qBAAK,OAAO;AAAA,cACf;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA9E,SAAQ,gBAAgB;AACxB,gBAAI,sBAAuB,2BAAY;AACnC,uBAAS+E,qBAAoB,QAAQ,UAAU;AAC3C,qBAAK,OAAO,aAAa,UAAU;AACnC,qBAAK,SAAS;AACd,qBAAK,WAAW;AAAA,cACnB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA/E,SAAQ,sBAAsB;AAC9B,gBAAI,eAAgB,2BAAY;AAC5B,uBAASgF,cAAa,MAAM,OAAO;AAC/B,qBAAK,OAAO,aAAa,UAAU;AACnC,qBAAK,OAAO;AACZ,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAhF,SAAQ,eAAe;AACvB,gBAAI,oBAAqB,2BAAY;AACjC,uBAASiF,mBAAkB,WAAW,MAAM;AACxC,qBAAK,OAAO,aAAa,UAAU;AACnC,qBAAK,YAAY;AACjB,qBAAK,OAAO;AAAA,cACf;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAjF,SAAQ,oBAAoB;AAC5B,gBAAI,oBAAqB,2BAAY;AACjC,uBAASkF,mBAAkB,MAAM,aAAa,YAAY;AACtD,qBAAK,OAAO,aAAa,UAAU;AACnC,qBAAK,OAAO;AACZ,qBAAK,cAAc;AACnB,qBAAK,aAAa;AAAA,cACrB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAlF,SAAQ,oBAAoB;AAC5B,gBAAI,qBAAsB,2BAAY;AAClC,uBAASmF,oBAAmB,UAAU;AAClC,qBAAK,OAAO,aAAa,UAAU;AACnC,qBAAK,WAAW;AAAA,cACnB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAnF,SAAQ,qBAAqB;AAC7B,gBAAI,UAAW,2BAAY;AACvB,uBAASoF,SAAQ,OAAO,KAAK;AACzB,qBAAK,OAAO,aAAa,UAAU;AACnC,qBAAK,QAAQ;AACb,qBAAK,MAAM;AAAA,cACd;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAApF,SAAQ,UAAU;AAAA,UAGZ;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS;AAG/B,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,YAAAA,SAAQ,YAAY;AAAA,cAChB,cAAc;AAAA,cACd,mBAAmB;AAAA,cACnB,YAAY;AAAA,cACZ,oBAAoB;AAAA,cACpB,wBAAwB;AAAA,cACxB,eAAe;AAAA,cACf,qBAAqB;AAAA,cACrB,mBAAmB;AAAA,cACnB,mBAAmB;AAAA,cACnB,oBAAoB;AAAA,cACpB,SAAS;AAAA,YACd;AAAA,UAGO;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS,qBAAqB;AAGpD,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,gBAAI,WAAW,oBAAoB,CAAC;AAEpC,gBAAI,kBAAmB,2BAAY;AAC/B,uBAASqF,iBAAgB,UAAU;AAC/B,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,WAAW;AAAA,cACnB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAArF,SAAQ,kBAAkB;AAC1B,gBAAI,eAAgB,2BAAY;AAC5B,uBAASsF,cAAa,UAAU;AAC5B,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,WAAW;AAAA,cACnB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAtF,SAAQ,eAAe;AACvB,gBAAI,0BAA2B,2BAAY;AACvC,uBAASuF,yBAAwB,QAAQjE,OAAM,YAAY;AACvD,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,KAAK;AACV,qBAAK,SAAS;AACd,qBAAK,OAAOA;AACZ,qBAAK,YAAY;AACjB,qBAAK,aAAa;AAClB,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOiE;AAAA,YACV,EAAA;AACD,YAAAvF,SAAQ,0BAA0B;AAClC,gBAAI,uBAAwB,2BAAY;AACpC,uBAASwF,sBAAqB,UAAU,MAAM,OAAO;AACjD,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,WAAW;AAChB,qBAAK,OAAO;AACZ,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAxF,SAAQ,uBAAuB;AAC/B,gBAAI,oBAAqB,2BAAY;AACjC,uBAASyF,mBAAkB,MAAM,OAAO;AACpC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAO;AACZ,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAzF,SAAQ,oBAAoB;AAC5B,gBAAI,+BAAgC,2BAAY;AAC5C,uBAAS0F,8BAA6B,QAAQpE,OAAM,YAAY;AAC5D,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,KAAK;AACV,qBAAK,SAAS;AACd,qBAAK,OAAOA;AACZ,qBAAK,YAAY;AACjB,qBAAK,aAAa;AAClB,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOoE;AAAA,YACV,EAAA;AACD,YAAA1F,SAAQ,+BAA+B;AACvC,gBAAI,2BAA4B,2BAAY;AACxC,uBAAS2F,0BAAyB,IAAI,QAAQrE,OAAM;AAChD,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,KAAK;AACV,qBAAK,SAAS;AACd,qBAAK,OAAOA;AACZ,qBAAK,YAAY;AACjB,qBAAK,aAAa;AAClB,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOqE;AAAA,YACV,EAAA;AACD,YAAA3F,SAAQ,2BAA2B;AACnC,gBAAI,0BAA2B,2BAAY;AACvC,uBAAS4F,yBAAwB,IAAI,QAAQtE,OAAM;AAC/C,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,KAAK;AACV,qBAAK,SAAS;AACd,qBAAK,OAAOA;AACZ,qBAAK,YAAY;AACjB,qBAAK,aAAa;AAClB,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOsE;AAAA,YACV,EAAA;AACD,YAAA5F,SAAQ,0BAA0B;AAClC,gBAAI,kBAAmB,2BAAY;AAC/B,uBAAS6F,iBAAgB,UAAU;AAC/B,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,WAAW;AAAA,cACnB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA7F,SAAQ,kBAAkB;AAC1B,gBAAI,mBAAoB,2BAAY;AAChC,uBAAS8F,kBAAiB,UAAU,MAAM,OAAO;AAC7C,oBAAI,UAAW,aAAa,QAAQ,aAAa;AACjD,qBAAK,OAAO,UAAU,SAAS,OAAO,oBAAoB,SAAS,OAAO;AAC1E,qBAAK,WAAW;AAChB,qBAAK,OAAO;AACZ,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA9F,SAAQ,mBAAmB;AAC3B,gBAAI,iBAAkB,2BAAY;AAC9B,uBAAS+F,gBAAezE,OAAM;AAC1B,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAOA;AAAA,cACf;AACD,qBAAOyE;AAAA,YACV,EAAA;AACD,YAAA/F,SAAQ,iBAAiB;AACzB,gBAAI,iBAAkB,2BAAY;AAC9B,uBAASgG,gBAAe,OAAO;AAC3B,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAhG,SAAQ,iBAAiB;AACzB,gBAAI,iBAAkB,2BAAY;AAC9B,uBAASiG,gBAAe,QAAQ,MAAM;AAClC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,SAAS;AACd,qBAAK,YAAY;AAAA,cACpB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAjG,SAAQ,iBAAiB;AACzB,gBAAI,cAAe,2BAAY;AAC3B,uBAASkG,aAAY,OAAO5E,OAAM;AAC9B,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,QAAQ;AACb,qBAAK,OAAOA;AAAA,cACf;AACD,qBAAO4E;AAAA,YACV,EAAA;AACD,YAAAlG,SAAQ,cAAc;AACtB,gBAAI,YAAa,2BAAY;AACzB,uBAASmG,WAAU7E,OAAM;AACrB,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAOA;AAAA,cACf;AACD,qBAAO6E;AAAA,YACV,EAAA;AACD,YAAAnG,SAAQ,YAAY;AACpB,gBAAI,mBAAoB,2BAAY;AAChC,uBAASoG,kBAAiB,IAAI,YAAY9E,OAAM;AAC5C,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,KAAK;AACV,qBAAK,aAAa;AAClB,qBAAK,OAAOA;AAAA,cACf;AACD,qBAAO8E;AAAA,YACV,EAAA;AACD,YAAApG,SAAQ,mBAAmB;AAC3B,gBAAI,kBAAmB,2BAAY;AAC/B,uBAASqG,iBAAgB,IAAI,YAAY/E,OAAM;AAC3C,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,KAAK;AACV,qBAAK,aAAa;AAClB,qBAAK,OAAOA;AAAA,cACf;AACD,qBAAO+E;AAAA,YACV,EAAA;AACD,YAAArG,SAAQ,kBAAkB;AAC1B,gBAAI,2BAA4B,2BAAY;AACxC,uBAASsG,0BAAyB,QAAQ,UAAU;AAChD,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,WAAW;AAChB,qBAAK,SAAS;AACd,qBAAK,WAAW;AAAA,cACnB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAtG,SAAQ,2BAA2B;AACnC,gBAAI,wBAAyB,2BAAY;AACrC,uBAASuG,uBAAsB,MAAM,YAAY,WAAW;AACxD,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAO;AACZ,qBAAK,aAAa;AAClB,qBAAK,YAAY;AAAA,cACpB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAvG,SAAQ,wBAAwB;AAChC,gBAAI,oBAAqB,2BAAY;AACjC,uBAASwG,mBAAkB,OAAO;AAC9B,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAxG,SAAQ,oBAAoB;AAC5B,gBAAI,oBAAqB,2BAAY;AACjC,uBAASyG,qBAAoB;AACzB,qBAAK,OAAO,SAAS,OAAO;AAAA,cAC/B;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAzG,SAAQ,oBAAoB;AAC5B,gBAAI,YAAa,2BAAY;AACzB,uBAAS0G,WAAU,YAAY,WAAW;AACtC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,aAAa;AAClB,qBAAK,YAAY;AAAA,cACpB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA1G,SAAQ,YAAY;AACpB,gBAAI,mBAAoB,2BAAY;AAChC,uBAAS2G,kBAAiBrF,OAAM,MAAM;AAClC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAOA;AACZ,qBAAK,OAAO;AAAA,cACf;AACD,qBAAOqF;AAAA,YACV,EAAA;AACD,YAAA3G,SAAQ,mBAAmB;AAC3B,gBAAI,iBAAkB,2BAAY;AAC9B,uBAAS4G,kBAAiB;AACtB,qBAAK,OAAO,SAAS,OAAO;AAAA,cAC/B;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA5G,SAAQ,iBAAiB;AACzB,gBAAI,uBAAwB,2BAAY;AACpC,uBAAS6G,sBAAqB,QAAQ;AAClC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,SAAS;AAAA,cACjB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA7G,SAAQ,uBAAuB;AAC/B,gBAAI,2BAA4B,2BAAY;AACxC,uBAAS8G,0BAAyB,aAAa;AAC3C,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,cAAc;AAAA,cACtB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA9G,SAAQ,2BAA2B;AACnC,gBAAI,yBAA0B,2BAAY;AACtC,uBAAS+G,wBAAuB,aAAa,YAAY,QAAQ;AAC7D,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,cAAc;AACnB,qBAAK,aAAa;AAClB,qBAAK,SAAS;AAAA,cACjB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA/G,SAAQ,yBAAyB;AACjC,gBAAI,kBAAmB,2BAAY;AAC/B,uBAASgH,iBAAgB,OAAO,UAAU;AACtC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,WAAW;AAChB,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAhH,SAAQ,kBAAkB;AAC1B,gBAAI,sBAAuB,2BAAY;AACnC,uBAASiH,qBAAoB,YAAY;AACrC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,aAAa;AAAA,cACrB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAjH,SAAQ,sBAAsB;AAC9B,gBAAI,iBAAkB,2BAAY;AAC9B,uBAASkH,gBAAe,MAAM,OAAO5F,OAAM;AACvC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAO;AACZ,qBAAK,QAAQ;AACb,qBAAK,OAAOA;AACZ,qBAAK,OAAO;AAAA,cACf;AACD,qBAAO4F;AAAA,YACV,EAAA;AACD,YAAAlH,SAAQ,iBAAiB;AACzB,gBAAI,iBAAkB,2BAAY;AAC9B,uBAASmH,gBAAe,MAAM,OAAO7F,OAAM;AACvC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAO;AACZ,qBAAK,QAAQ;AACb,qBAAK,OAAOA;AAAA,cACf;AACD,qBAAO6F;AAAA,YACV,EAAA;AACD,YAAAnH,SAAQ,iBAAiB;AACzB,gBAAI,eAAgB,2BAAY;AAC5B,uBAASoH,cAAa,MAAM,MAAM,QAAQ9F,OAAM;AAC5C,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAO;AACZ,qBAAK,OAAO;AACZ,qBAAK,SAAS;AACd,qBAAK,OAAOA;AAAA,cACf;AACD,qBAAO8F;AAAA,YACV,EAAA;AACD,YAAApH,SAAQ,eAAe;AACvB,gBAAI,sBAAuB,2BAAY;AACnC,uBAASqH,qBAAoB,IAAI,QAAQ/F,OAAM,WAAW;AACtD,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,KAAK;AACV,qBAAK,SAAS;AACd,qBAAK,OAAOA;AACZ,qBAAK,YAAY;AACjB,qBAAK,aAAa;AAClB,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAO+F;AAAA,YACV,EAAA;AACD,YAAArH,SAAQ,sBAAsB;AAC9B,gBAAI,qBAAsB,2BAAY;AAClC,uBAASsH,oBAAmB,IAAI,QAAQhG,OAAM,WAAW;AACrD,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,KAAK;AACV,qBAAK,SAAS;AACd,qBAAK,OAAOA;AACZ,qBAAK,YAAY;AACjB,qBAAK,aAAa;AAClB,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOgG;AAAA,YACV,EAAA;AACD,YAAAtH,SAAQ,qBAAqB;AAC7B,gBAAI,aAAc,2BAAY;AAC1B,uBAASuH,YAAW,MAAM;AACtB,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAO;AAAA,cACf;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAvH,SAAQ,aAAa;AACrB,gBAAI,cAAe,2BAAY;AAC3B,uBAASwH,aAAY,MAAM,YAAY,WAAW;AAC9C,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAO;AACZ,qBAAK,aAAa;AAClB,qBAAK,YAAY;AAAA,cACpB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAxH,SAAQ,cAAc;AACtB,gBAAI,oBAAqB,2BAAY;AACjC,uBAASyH,mBAAkB,YAAY,QAAQ;AAC3C,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,aAAa;AAClB,qBAAK,SAAS;AAAA,cACjB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAzH,SAAQ,oBAAoB;AAC5B,gBAAI,yBAA0B,2BAAY;AACtC,uBAAS0H,wBAAuB,OAAO;AACnC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA1H,SAAQ,yBAAyB;AACjC,gBAAI,2BAA4B,2BAAY;AACxC,uBAAS2H,0BAAyB,OAAO;AACrC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA3H,SAAQ,2BAA2B;AACnC,gBAAI,kBAAmB,2BAAY;AAC/B,uBAAS4H,iBAAgB,OAAO,UAAU;AACtC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,QAAQ;AACb,qBAAK,WAAW;AAAA,cACnB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA5H,SAAQ,kBAAkB;AAC1B,gBAAI,mBAAoB,2BAAY;AAChC,uBAAS6H,kBAAiB,OAAOvG,OAAM;AACnC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,QAAQ;AACb,qBAAK,OAAOA;AAAA,cACf;AACD,qBAAOuG;AAAA,YACV,EAAA;AACD,YAAA7H,SAAQ,mBAAmB;AAC3B,gBAAI,UAAW,2BAAY;AACvB,uBAAS8H,SAAQ,OAAO,KAAK;AACzB,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,QAAQ;AACb,qBAAK,MAAM;AAAA,cACd;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA9H,SAAQ,UAAU;AAClB,gBAAI,eAAgB,2BAAY;AAC5B,uBAAS+H,cAAa,MAAM,UAAU;AAClC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAO;AACZ,qBAAK,WAAW;AAAA,cACnB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA/H,SAAQ,eAAe;AACvB,gBAAI,mBAAoB,2BAAY;AAChC,uBAASgI,kBAAiB,KAAK,UAAU,OAAO,MAAM,UAAU;AAC5D,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,MAAM;AACX,qBAAK,WAAW;AAChB,qBAAK,QAAQ;AACb,qBAAK,OAAO;AACZ,qBAAK,SAAS;AAAA,cACjB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAhI,SAAQ,mBAAmB;AAC3B,gBAAI,SAAU,2BAAY;AACtB,uBAASiI,QAAO3G,OAAM;AAClB,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAOA;AACZ,qBAAK,aAAa;AAAA,cACrB;AACD,qBAAO2G;AAAA,YACV,EAAA;AACD,YAAAjI,SAAQ,SAAS;AACjB,gBAAI,gBAAiB,2BAAY;AAC7B,uBAASkI,eAAc,QAAQ,MAAM;AACjC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,SAAS;AACd,qBAAK,YAAY;AAAA,cACpB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAlI,SAAQ,gBAAgB;AACxB,gBAAI,mBAAoB,2BAAY;AAChC,uBAASmI,kBAAiB,YAAY;AAClC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,aAAa;AAAA,cACrB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAnI,SAAQ,mBAAmB;AAC3B,gBAAI,gBAAiB,2BAAY;AAC7B,uBAASoI,eAAc,YAAY;AAC/B,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,aAAa;AAAA,cACrB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAApI,SAAQ,gBAAgB;AACxB,gBAAI,WAAY,2BAAY;AACxB,uBAASqI,UAAS,MAAM,KAAK,UAAU,OAAO,QAAQ,WAAW;AAC7D,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,MAAM;AACX,qBAAK,WAAW;AAChB,qBAAK,QAAQ;AACb,qBAAK,OAAO;AACZ,qBAAK,SAAS;AACd,qBAAK,YAAY;AAAA,cACpB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAArI,SAAQ,WAAW;AACnB,gBAAI,eAAgB,2BAAY;AAC5B,uBAASsI,cAAa,OAAO,KAAK,SAAS,OAAO;AAC9C,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,QAAQ;AACb,qBAAK,MAAM;AACX,qBAAK,QAAQ,EAAE,SAAkB;cACpC;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAtI,SAAQ,eAAe;AACvB,gBAAI,cAAe,2BAAY;AAC3B,uBAASuI,aAAY,UAAU;AAC3B,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,WAAW;AAAA,cACnB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAvI,SAAQ,cAAc;AACtB,gBAAI,kBAAmB,2BAAY;AAC/B,uBAASwI,iBAAgB,UAAU;AAC/B,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,WAAW;AAAA,cACnB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAxI,SAAQ,kBAAkB;AAC1B,gBAAI,SAAU,2BAAY;AACtB,uBAASyI,QAAOnH,OAAM;AAClB,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAOA;AACZ,qBAAK,aAAa;AAAA,cACrB;AACD,qBAAOmH;AAAA,YACV,EAAA;AACD,YAAAzI,SAAQ,SAAS;AACjB,gBAAI,qBAAsB,2BAAY;AAClC,uBAAS0I,oBAAmB,aAAa;AACrC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,cAAc;AAAA,cACtB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA1I,SAAQ,qBAAqB;AAC7B,gBAAI,gBAAiB,2BAAY;AAC7B,uBAAS2I,eAAc,UAAU;AAC7B,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,WAAW;AAAA,cACnB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA3I,SAAQ,gBAAgB;AACxB,gBAAI,yBAA0B,2BAAY;AACtC,uBAAS4I,wBAAuB,QAAQ,UAAU;AAC9C,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,WAAW;AAChB,qBAAK,SAAS;AACd,qBAAK,WAAW;AAAA,cACnB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA5I,SAAQ,yBAAyB;AACjC,gBAAI,QAAS,2BAAY;AACrB,uBAAS6I,SAAQ;AACb,qBAAK,OAAO,SAAS,OAAO;AAAA,cAC/B;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA7I,SAAQ,QAAQ;AAChB,gBAAI,aAAc,2BAAY;AAC1B,uBAAS8I,YAAW,MAAM,YAAY;AAClC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAO;AACZ,qBAAK,aAAa;AAAA,cACrB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA9I,SAAQ,aAAa;AACrB,gBAAI,kBAAmB,2BAAY;AAC/B,uBAAS+I,iBAAgB,cAAc,OAAO;AAC1C,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,eAAe;AACpB,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA/I,SAAQ,kBAAkB;AAC1B,gBAAI,2BAA4B,2BAAY;AACxC,uBAASgJ,0BAAyB,KAAK,OAAO;AAC1C,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,MAAM;AACX,qBAAK,QAAQ;AAAA,cAChB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAhJ,SAAQ,2BAA2B;AACnC,gBAAI,kBAAmB,2BAAY;AAC/B,uBAASiJ,iBAAgB,OAAO,MAAM;AAClC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,QAAQ;AACb,qBAAK,OAAO;AAAA,cACf;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAjJ,SAAQ,kBAAkB;AAC1B,gBAAI,kBAAmB,2BAAY;AAC/B,uBAASkJ,iBAAgB,QAAQ,aAAa;AAC1C,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,SAAS;AACd,qBAAK,cAAc;AAAA,cACtB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAlJ,SAAQ,kBAAkB;AAC1B,gBAAI,iBAAkB,2BAAY;AAC9B,uBAASmJ,kBAAiB;AACtB,qBAAK,OAAO,SAAS,OAAO;AAAA,cAC/B;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAnJ,SAAQ,iBAAiB;AACzB,gBAAI,iBAAkB,2BAAY;AAC9B,uBAASoJ,gBAAe,UAAU;AAC9B,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,WAAW;AAAA,cACnB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAApJ,SAAQ,iBAAiB;AACzB,gBAAI,eAAgB,2BAAY;AAC5B,uBAASqJ,cAAaC,QAAO,SAAS,WAAW;AAC7C,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,QAAQA;AACb,qBAAK,UAAU;AACf,qBAAK,YAAY;AAAA,cACpB;AACD,qBAAOD;AAAA,YACV,EAAA;AACD,YAAArJ,SAAQ,eAAe;AACvB,gBAAI,kBAAmB,2BAAY;AAC/B,uBAASuJ,iBAAgB,UAAU,UAAU;AACzC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,WAAW;AAChB,qBAAK,WAAW;AAChB,qBAAK,SAAS;AAAA,cACjB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAvJ,SAAQ,kBAAkB;AAC1B,gBAAI,mBAAoB,2BAAY;AAChC,uBAASwJ,kBAAiB,UAAU,UAAU,QAAQ;AAClD,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,WAAW;AAChB,qBAAK,WAAW;AAChB,qBAAK,SAAS;AAAA,cACjB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAxJ,SAAQ,mBAAmB;AAC3B,gBAAI,sBAAuB,2BAAY;AACnC,uBAASyJ,qBAAoB,cAAc,MAAM;AAC7C,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,eAAe;AACpB,qBAAK,OAAO;AAAA,cACf;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAzJ,SAAQ,sBAAsB;AAC9B,gBAAI,qBAAsB,2BAAY;AAClC,uBAAS0J,oBAAmB,IAAI,MAAM;AAClC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,KAAK;AACV,qBAAK,OAAO;AAAA,cACf;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA1J,SAAQ,qBAAqB;AAC7B,gBAAI,iBAAkB,2BAAY;AAC9B,uBAAS2J,gBAAe,MAAMrI,OAAM;AAChC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,OAAO;AACZ,qBAAK,OAAOA;AAAA,cACf;AACD,qBAAOqI;AAAA,YACV,EAAA;AACD,YAAA3J,SAAQ,iBAAiB;AACzB,gBAAI,gBAAiB,2BAAY;AAC7B,uBAAS4J,eAAc,QAAQtI,OAAM;AACjC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,SAAS;AACd,qBAAK,OAAOA;AAAA,cACf;AACD,qBAAOsI;AAAA,YACV,EAAA;AACD,YAAA5J,SAAQ,gBAAgB;AACxB,gBAAI,kBAAmB,2BAAY;AAC/B,uBAAS6J,iBAAgB,UAAU,UAAU;AACzC,qBAAK,OAAO,SAAS,OAAO;AAC5B,qBAAK,WAAW;AAChB,qBAAK,WAAW;AAAA,cACnB;AACD,qBAAOA;AAAA,YACV,EAAA;AACD,YAAA7J,SAAQ,kBAAkB;AAAA,UAGpB;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS,qBAAqB;AAGpD,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,gBAAI,WAAW,oBAAoB,CAAC;AACpC,gBAAI,kBAAkB,oBAAoB,EAAE;AAC5C,gBAAI,aAAa,oBAAoB,EAAE;AACvC,gBAAI,OAAO,oBAAoB,CAAC;AAChC,gBAAI,YAAY,oBAAoB,EAAE;AACtC,gBAAI,WAAW,oBAAoB,CAAC;AACpC,gBAAI,UAAU,oBAAoB,EAAE;AACpC,gBAAI,4BAA4B;AAChC,gBAAI,SAAU,WAAY;AACtB,uBAAS8J,QAAO9F,OAAMC,UAAS,UAAU;AACrC,oBAAIA,aAAY,QAAQ;AAAE,kBAAAA,WAAU,CAAE;AAAA,gBAAG;AACzC,qBAAK,SAAS;AAAA,kBACV,OAAQ,OAAOA,SAAQ,UAAU,aAAcA,SAAQ;AAAA,kBACvD,KAAM,OAAOA,SAAQ,QAAQ,aAAcA,SAAQ;AAAA,kBACnD,QAAQ;AAAA,kBACR,QAAS,OAAOA,SAAQ,WAAW,aAAcA,SAAQ;AAAA,kBACzD,SAAU,OAAOA,SAAQ,YAAY,aAAcA,SAAQ;AAAA,kBAC3D,UAAW,OAAOA,SAAQ,aAAa,aAAcA,SAAQ;AAAA,gBAC1E;AACS,oBAAI,KAAK,OAAO,OAAOA,SAAQ,UAAUA,SAAQ,WAAW,MAAM;AAC9D,uBAAK,OAAO,SAAS,OAAOA,SAAQ,MAAM;AAAA,gBAC7C;AACD,qBAAK,WAAW;AAChB,qBAAK,eAAe,IAAI,gBAAgB,aAAY;AACpD,qBAAK,aAAa,WAAW,KAAK,OAAO;AACzC,qBAAK,UAAU,IAAI,UAAU,QAAQD,OAAM,KAAK,YAAY;AAC5D,qBAAK,QAAQ,eAAe,KAAK,OAAO;AACxC,qBAAK,qBAAqB;AAAA,kBACtB,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,MAAM;AAAA,kBACN,MAAM;AAAA,kBACN,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,MAAM;AAAA,kBACN,MAAM;AAAA,kBACN,OAAO;AAAA,kBACP,OAAO;AAAA,kBACP,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,MAAM;AAAA,kBACN,MAAM;AAAA,kBACN,MAAM;AAAA,kBACN,MAAM;AAAA,kBACN,OAAO;AAAA,kBACP,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,gBAClB;AACS,qBAAK,YAAY;AAAA,kBACb,MAAM;AAAA,kBACN,OAAO;AAAA,kBACP,YAAY,KAAK,QAAQ;AAAA,kBACzB,WAAW;AAAA,kBACX,OAAO;AAAA,kBACP,KAAK;AAAA,gBAClB;AACS,qBAAK,oBAAoB;AACzB,qBAAK,UAAU;AAAA,kBACX,UAAU;AAAA,kBACV,OAAO;AAAA,kBACP,SAAS;AAAA,kBACT,sBAAsB;AAAA,kBACtB,YAAY;AAAA,kBACZ,gCAAgC;AAAA,kBAChC,oBAAoB;AAAA,kBACpB,kBAAkB;AAAA,kBAClB,gBAAgB;AAAA,kBAChB,aAAa;AAAA,kBACb,UAAU;AAAA,kBACV,UAAU,CAAE;AAAA,kBACZ,QAAQ;AAAA,gBACrB;AACS,qBAAK,SAAS;AACd,qBAAK,cAAc;AAAA,kBACf,OAAO;AAAA,kBACP,MAAM,KAAK,QAAQ;AAAA,kBACnB,QAAQ;AAAA,gBACrB;AACS,qBAAK,aAAa;AAAA,kBACd,OAAO;AAAA,kBACP,MAAM,KAAK,QAAQ;AAAA,kBACnB,QAAQ;AAAA,gBACrB;AACS,qBAAK,UAAS;AACd,qBAAK,aAAa;AAAA,kBACd,OAAO,KAAK,QAAQ;AAAA,kBACpB,MAAM,KAAK,QAAQ;AAAA,kBACnB,QAAQ,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAAA,gBACvD;AAAA,cACM;AACD,cAAA8F,QAAO,UAAU,aAAa,SAAU,eAAe;AAKnD,oBAAI,OAAO,MAAM,UAAU,MAAM,KAAK,WAAW,CAAC;AAClD,oBAAI,MAAM,cAAc,QAAQ,UAAU,SAAU,OAAO,KAAK;AAC5D,2BAAS,OAAO,MAAM,KAAK,QAAQ,oCAAoC;AACvE,yBAAO,KAAK,GAAG;AAAA,gBAC5B,CAAU;AACD,oBAAI,QAAQ,KAAK,WAAW;AAC5B,oBAAI,OAAO,KAAK,WAAW;AAC3B,oBAAI,SAAS,KAAK,WAAW,SAAS;AACtC,sBAAM,KAAK,aAAa,YAAY,OAAO,MAAM,QAAQ,GAAG;AAAA,cACrE;AACK,cAAAA,QAAO,UAAU,gBAAgB,SAAU,eAAe;AAKtD,oBAAI,OAAO,MAAM,UAAU,MAAM,KAAK,WAAW,CAAC;AAClD,oBAAI,MAAM,cAAc,QAAQ,UAAU,SAAU,OAAO,KAAK;AAC5D,2BAAS,OAAO,MAAM,KAAK,QAAQ,oCAAoC;AACvE,yBAAO,KAAK,GAAG;AAAA,gBAC5B,CAAU;AACD,oBAAI,QAAQ,KAAK,WAAW;AAC5B,oBAAI,OAAO,KAAK,QAAQ;AACxB,oBAAI,SAAS,KAAK,WAAW,SAAS;AACtC,qBAAK,aAAa,cAAc,OAAO,MAAM,QAAQ,GAAG;AAAA,cACjE;AAEK,cAAAA,QAAO,UAAU,uBAAuB,SAAU,OAAO,SAAS;AAC9D,oBAAI,MAAM,WAAW,WAAW,SAAS;AACzC,oBAAI;AACJ,oBAAI,OAAO;AACP,sBAAI,CAAC,SAAS;AACV,0BAAO,MAAM,SAAS,IAAe,WAAW,SAAS,gBACpD,MAAM,SAAS,IAAsB,WAAW,SAAS,uBACrD,MAAM,SAAS,IAA0B,WAAW,SAAS,mBACzD,MAAM,SAAS,IAAyB,WAAW,SAAS,mBACxD,MAAM,SAAS,KAAqB,WAAW,SAAS,qBACrD,WAAW,SAAS;AACxC,wBAAI,MAAM,SAAS,GAAiB;AAChC,0BAAI,KAAK,QAAQ,qBAAqB,MAAM,KAAK,GAAG;AAChD,8BAAM,WAAW,SAAS;AAAA,sBAC7B,WACQ,KAAK,QAAQ,UAAU,KAAK,QAAQ,yBAAyB,MAAM,KAAK,GAAG;AAChF,8BAAM,WAAW,SAAS;AAAA,sBAC7B;AAAA,oBACJ;AAAA,kBACJ;AACD,0BAAQ,MAAM;AAAA,gBACjB,OACI;AACD,0BAAQ;AAAA,gBACX;AACD,sBAAM,IAAI,QAAQ,MAAM,KAAK;AAC7B,oBAAI,SAAS,OAAO,MAAM,eAAe,UAAU;AAC/C,sBAAI,QAAQ,MAAM;AAClB,sBAAI,OAAO,MAAM;AACjB,sBAAI,sBAAsB,KAAK,WAAW,QAAQ,KAAK,WAAW;AAClE,sBAAI,SAAS,MAAM,QAAQ,sBAAsB;AACjD,yBAAO,KAAK,aAAa,YAAY,OAAO,MAAM,QAAQ,GAAG;AAAA,gBAChE,OACI;AACD,sBAAI,QAAQ,KAAK,WAAW;AAC5B,sBAAI,OAAO,KAAK,WAAW;AAC3B,sBAAI,SAAS,KAAK,WAAW,SAAS;AACtC,yBAAO,KAAK,aAAa,YAAY,OAAO,MAAM,QAAQ,GAAG;AAAA,gBAChE;AAAA,cACV;AACK,cAAAA,QAAO,UAAU,uBAAuB,SAAU,OAAO,SAAS;AAC9D,sBAAM,KAAK,qBAAqB,OAAO,OAAO;AAAA,cACvD;AACK,cAAAA,QAAO,UAAU,0BAA0B,SAAU,OAAO,SAAS;AACjE,qBAAK,aAAa,SAAS,KAAK,qBAAqB,OAAO,OAAO,CAAC;AAAA,cAC7E;AACK,cAAAA,QAAO,UAAU,kBAAkB,WAAY;AAC3C,oBAAI,CAAC,KAAK,OAAO,SAAS;AACtB,uBAAK,QAAQ;gBAChB,OACI;AACD,sBAAIC,YAAW,KAAK,QAAQ,aAAY;AACxC,sBAAIA,UAAS,SAAS,KAAK,KAAK,UAAU;AACtC,6BAAS,IAAI,GAAG,IAAIA,UAAS,QAAQ,EAAE,GAAG;AACtC,0BAAI,IAAIA,UAAS,CAAC;AAClB,0BAAI,OAAO;AACX,6BAAO;AAAA,wBACH,MAAM,EAAE,YAAY,iBAAiB;AAAA,wBACrC,OAAO,KAAK,QAAQ,OAAO,MAAM,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAAA,sBAChF;AACqB,0BAAI,KAAK,OAAO,OAAO;AACnB,6BAAK,QAAQ,EAAE;AAAA,sBAClB;AACD,0BAAI,KAAK,OAAO,KAAK;AACjB,6BAAK,MAAM,EAAE;AAAA,sBAChB;AACD,0BAAI,WAAW;AAAA,wBACX,OAAO;AAAA,0BACH,MAAM,EAAE,IAAI,MAAM;AAAA,0BAClB,QAAQ,EAAE,IAAI,MAAM;AAAA,0BACpB,QAAQ,EAAE,MAAM,CAAC;AAAA,wBACpB;AAAA,wBACD,KAAK;AAAA,0BACD,MAAM,EAAE,IAAI,IAAI;AAAA,0BAChB,QAAQ,EAAE,IAAI,IAAI;AAAA,0BAClB,QAAQ,EAAE,MAAM,CAAC;AAAA,wBACpB;AAAA,sBAC1B;AACqB,2BAAK,SAAS,MAAM,QAAQ;AAAA,oBAC/B;AAAA,kBACJ;AAAA,gBACJ;AAAA,cACV;AAEK,cAAAD,QAAO,UAAU,cAAc,SAAU,OAAO;AAC5C,uBAAO,KAAK,QAAQ,OAAO,MAAM,MAAM,OAAO,MAAM,GAAG;AAAA,cAChE;AACK,cAAAA,QAAO,UAAU,eAAe,SAAU,OAAO;AAC7C,oBAAI,IAAI;AAAA,kBACJ,MAAM,QAAQ,UAAU,MAAM,IAAI;AAAA,kBAClC,OAAO,KAAK,YAAY,KAAK;AAAA,gBAC1C;AACS,oBAAI,KAAK,OAAO,OAAO;AACnB,oBAAE,QAAQ,CAAC,MAAM,OAAO,MAAM,GAAG;AAAA,gBACpC;AACD,oBAAI,KAAK,OAAO,KAAK;AACjB,oBAAE,MAAM;AAAA,oBACJ,OAAO;AAAA,sBACH,MAAM,KAAK,YAAY;AAAA,sBACvB,QAAQ,KAAK,YAAY;AAAA,oBAC5B;AAAA,oBACD,KAAK;AAAA,sBACD,MAAM,KAAK,QAAQ;AAAA,sBACnB,QAAQ,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAAA,oBAC7C;AAAA,kBAClB;AAAA,gBACU;AACD,oBAAI,MAAM,SAAS,GAA2B;AAC1C,sBAAI,UAAU,MAAM;AACpB,sBAAI,QAAQ,MAAM;AAClB,oBAAE,QAAQ,EAAE,SAAkB;gBACjC;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,YAAY,WAAY;AACrC,oBAAI,QAAQ,KAAK;AACjB,qBAAK,WAAW,QAAQ,KAAK,QAAQ;AACrC,qBAAK,WAAW,OAAO,KAAK,QAAQ;AACpC,qBAAK,WAAW,SAAS,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAC3D,qBAAK,gBAAe;AACpB,oBAAI,KAAK,QAAQ,UAAU,KAAK,YAAY,OAAO;AAC/C,uBAAK,YAAY,QAAQ,KAAK,QAAQ;AACtC,uBAAK,YAAY,OAAO,KAAK,QAAQ;AACrC,uBAAK,YAAY,SAAS,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAAA,gBAC/D;AACD,oBAAI,OAAO,KAAK,QAAQ,IAAG;AAC3B,qBAAK,oBAAqB,MAAM,eAAe,KAAK;AACpD,oBAAI,QAAQ,KAAK,QAAQ,UAAU,KAAK,SAAS,GAAoB;AACjE,sBAAI,KAAK,QAAQ,yBAAyB,KAAK,KAAK,GAAG;AACnD,yBAAK,OAAO;AAAA,kBACf;AAAA,gBACJ;AACD,qBAAK,YAAY;AACjB,oBAAI,KAAK,OAAO,UAAU,KAAK,SAAS,GAAa;AACjD,uBAAK,OAAO,KAAK,KAAK,aAAa,IAAI,CAAC;AAAA,gBAC3C;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,iBAAiB,WAAY;AAC1C,qBAAK,gBAAe;AACpB,oBAAI,QAAQ,KAAK,QAAQ,WAAU;AACnC,oBAAI,KAAK,OAAO,QAAQ;AAGpB,uBAAK,OAAO;AACZ,uBAAK,OAAO,KAAK,KAAK,aAAa,KAAK,CAAC;AAAA,gBAC5C;AAED,qBAAK,YAAY;AACjB,qBAAK,UAAS;AACd,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,aAAa,WAAY;AACtC,uBAAO;AAAA,kBACH,OAAO,KAAK,YAAY;AAAA,kBACxB,MAAM,KAAK,YAAY;AAAA,kBACvB,QAAQ,KAAK,YAAY;AAAA,gBACtC;AAAA,cACA;AACK,cAAAA,QAAO,UAAU,YAAY,SAAU,OAAO,eAAe;AACzD,oBAAI,kBAAkB,QAAQ;AAAE,kCAAgB;AAAA,gBAAI;AACpD,oBAAI,SAAS,MAAM,QAAQ,MAAM;AACjC,oBAAI,OAAO,MAAM;AACjB,oBAAI,SAAS,GAAG;AACZ,4BAAU;AACV;AAAA,gBACH;AACD,uBAAO;AAAA,kBACH,OAAO,MAAM;AAAA,kBACb;AAAA,kBACA;AAAA,gBACb;AAAA,cACA;AACK,cAAAA,QAAO,UAAU,WAAW,SAAU,QAAQ,MAAM;AAChD,oBAAI,KAAK,OAAO,OAAO;AACnB,uBAAK,QAAQ,CAAC,OAAO,OAAO,KAAK,WAAW,KAAK;AAAA,gBACpD;AACD,oBAAI,KAAK,OAAO,KAAK;AACjB,uBAAK,MAAM;AAAA,oBACP,OAAO;AAAA,sBACH,MAAM,OAAO;AAAA,sBACb,QAAQ,OAAO;AAAA,oBAClB;AAAA,oBACD,KAAK;AAAA,sBACD,MAAM,KAAK,WAAW;AAAA,sBACtB,QAAQ,KAAK,WAAW;AAAA,oBAC3B;AAAA,kBAClB;AACa,sBAAI,KAAK,OAAO,QAAQ;AACpB,yBAAK,IAAI,SAAS,KAAK,OAAO;AAAA,kBACjC;AAAA,gBACJ;AACD,oBAAI,KAAK,UAAU;AACf,sBAAI,WAAW;AAAA,oBACX,OAAO;AAAA,sBACH,MAAM,OAAO;AAAA,sBACb,QAAQ,OAAO;AAAA,sBACf,QAAQ,OAAO;AAAA,oBAClB;AAAA,oBACD,KAAK;AAAA,sBACD,MAAM,KAAK,WAAW;AAAA,sBACtB,QAAQ,KAAK,WAAW;AAAA,sBACxB,QAAQ,KAAK,WAAW;AAAA,oBAC3B;AAAA,kBAClB;AACa,uBAAK,SAAS,MAAM,QAAQ;AAAA,gBAC/B;AACD,uBAAO;AAAA,cAChB;AAGK,cAAAA,QAAO,UAAU,SAAS,SAAU,OAAO;AACvC,oBAAI,QAAQ,KAAK;AACjB,oBAAI,MAAM,SAAS,KAAsB,MAAM,UAAU,OAAO;AAC5D,uBAAK,qBAAqB,KAAK;AAAA,gBAClC;AAAA,cACV;AAEK,cAAAA,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI,KAAK,OAAO,UAAU;AACtB,sBAAI,QAAQ,KAAK;AACjB,sBAAI,MAAM,SAAS,KAAsB,MAAM,UAAU,KAAK;AAC1D,yBAAK,UAAS;AAAA,kBACjB,WACQ,MAAM,SAAS,KAAsB,MAAM,UAAU,KAAK;AAC/D,yBAAK,UAAS;AACd,yBAAK,wBAAwB,KAAK;AAAA,kBACrC,OACI;AACD,yBAAK,wBAAwB,OAAO,WAAW,SAAS,eAAe;AAAA,kBAC1E;AAAA,gBACJ,OACI;AACD,uBAAK,OAAO,GAAG;AAAA,gBAClB;AAAA,cACV;AAGK,cAAAA,QAAO,UAAU,gBAAgB,SAAU,SAAS;AAChD,oBAAI,QAAQ,KAAK;AACjB,oBAAI,MAAM,SAAS,KAAmB,MAAM,UAAU,SAAS;AAC3D,uBAAK,qBAAqB,KAAK;AAAA,gBAClC;AAAA,cACV;AAEK,cAAAA,QAAO,UAAU,QAAQ,SAAU,OAAO;AACtC,uBAAO,KAAK,UAAU,SAAS,KAAsB,KAAK,UAAU,UAAU;AAAA,cACvF;AAEK,cAAAA,QAAO,UAAU,eAAe,SAAU,SAAS;AAC/C,uBAAO,KAAK,UAAU,SAAS,KAAmB,KAAK,UAAU,UAAU;AAAA,cACpF;AAGK,cAAAA,QAAO,UAAU,yBAAyB,SAAU,SAAS;AACzD,uBAAO,KAAK,UAAU,SAAS,KAAsB,KAAK,UAAU,UAAU;AAAA,cACvF;AAEK,cAAAA,QAAO,UAAU,cAAc,WAAY;AACvC,oBAAI,KAAK,UAAU,SAAS,GAAoB;AAC5C,yBAAO;AAAA,gBACV;AACD,oBAAI,KAAK,KAAK,UAAU;AACxB,uBAAO,OAAO,OACV,OAAO,QACP,OAAO,SACP,OAAO,QACP,OAAO,QACP,OAAO,QACP,OAAO,QACP,OAAO,SACP,OAAO,SACP,OAAO,UACP,OAAO,QACP,OAAO,QACP,OAAO;AAAA,cACpB;AAgCK,cAAAA,QAAO,UAAU,sBAAsB,SAAU,eAAe;AAC5D,oBAAI,2BAA2B,KAAK,QAAQ;AAC5C,oBAAI,6BAA6B,KAAK,QAAQ;AAC9C,oBAAI,yCAAyC,KAAK,QAAQ;AAC1D,qBAAK,QAAQ,mBAAmB;AAChC,qBAAK,QAAQ,qBAAqB;AAClC,qBAAK,QAAQ,iCAAiC;AAC9C,oBAAI,SAAS,cAAc,KAAK,IAAI;AACpC,oBAAI,KAAK,QAAQ,mCAAmC,MAAM;AACtD,uBAAK,qBAAqB,KAAK,QAAQ,8BAA8B;AAAA,gBACxE;AACD,qBAAK,QAAQ,mBAAmB;AAChC,qBAAK,QAAQ,qBAAqB;AAClC,qBAAK,QAAQ,iCAAiC;AAC9C,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,sBAAsB,SAAU,eAAe;AAC5D,oBAAI,2BAA2B,KAAK,QAAQ;AAC5C,oBAAI,6BAA6B,KAAK,QAAQ;AAC9C,oBAAI,yCAAyC,KAAK,QAAQ;AAC1D,qBAAK,QAAQ,mBAAmB;AAChC,qBAAK,QAAQ,qBAAqB;AAClC,qBAAK,QAAQ,iCAAiC;AAC9C,oBAAI,SAAS,cAAc,KAAK,IAAI;AACpC,qBAAK,QAAQ,mBAAmB,KAAK,QAAQ,oBAAoB;AACjE,qBAAK,QAAQ,qBAAqB,KAAK,QAAQ,sBAAsB;AACrE,qBAAK,QAAQ,iCAAiC,0CAA0C,KAAK,QAAQ;AACrG,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,mBAAmB,WAAY;AAC5C,oBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,uBAAK,UAAS;AAAA,gBACjB,WACQ,CAAC,KAAK,mBAAmB;AAC9B,sBAAI,KAAK,UAAU,SAAS,KAAe,CAAC,KAAK,MAAM,GAAG,GAAG;AACzD,yBAAK,qBAAqB,KAAK,SAAS;AAAA,kBAC3C;AACD,uBAAK,WAAW,QAAQ,KAAK,YAAY;AACzC,uBAAK,WAAW,OAAO,KAAK,YAAY;AACxC,uBAAK,WAAW,SAAS,KAAK,YAAY;AAAA,gBAC7C;AAAA,cACV;AAEK,cAAAA,QAAO,UAAU,yBAAyB,WAAY;AAClD,oBAAI,OAAO,KAAK;AAChB,oBAAI;AACJ,oBAAI,OAAO;AACX,wBAAQ,KAAK,UAAU,MAAI;AAAA,kBACvB,KAAK;AACD,yBAAK,KAAK,QAAQ,YAAY,KAAK,QAAQ,UAAU,KAAK,UAAU,UAAU,SAAS;AACnF,2BAAK,wBAAwB,KAAK,SAAS;AAAA,oBAC9C;AACD,2BAAO,KAAK,mBAAkB,IAAK,KAAK,wBAAyB,IAAG,KAAK,SAAS,MAAM,IAAI,KAAK,WAAW,KAAK,UAAW,EAAC,KAAK,CAAC;AACnI;AAAA,kBACJ,KAAK;AAAA,kBACL,KAAK;AACD,wBAAI,KAAK,QAAQ,UAAU,KAAK,UAAU,OAAO;AAC7C,2BAAK,wBAAwB,KAAK,WAAW,WAAW,SAAS,kBAAkB;AAAA,oBACtF;AACD,yBAAK,QAAQ,qBAAqB;AAClC,yBAAK,QAAQ,mBAAmB;AAChC,4BAAQ,KAAK;AACb,0BAAM,KAAK,YAAY,KAAK;AAC5B,2BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,QAAQ,MAAM,OAAO,GAAG,CAAC;AAC7D;AAAA,kBACJ,KAAK;AACD,yBAAK,QAAQ,qBAAqB;AAClC,yBAAK,QAAQ,mBAAmB;AAChC,4BAAQ,KAAK;AACb,0BAAM,KAAK,YAAY,KAAK;AAC5B,2BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,QAAQ,MAAM,UAAU,QAAQ,GAAG,CAAC;AACxE;AAAA,kBACJ,KAAK;AACD,yBAAK,QAAQ,qBAAqB;AAClC,yBAAK,QAAQ,mBAAmB;AAChC,4BAAQ,KAAK;AACb,0BAAM,KAAK,YAAY,KAAK;AAC5B,2BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,QAAQ,MAAM,GAAG,CAAC;AACtD;AAAA,kBACJ,KAAK;AACD,2BAAO,KAAK;AACZ;AAAA,kBACJ,KAAK;AACD,4BAAQ,KAAK,UAAU,OAAK;AAAA,sBACxB,KAAK;AACD,6BAAK,QAAQ,mBAAmB;AAChC,+BAAO,KAAK,oBAAoB,KAAK,oBAAoB;AACzD;AAAA,sBACJ,KAAK;AACD,+BAAO,KAAK,oBAAoB,KAAK,qBAAqB;AAC1D;AAAA,sBACJ,KAAK;AACD,+BAAO,KAAK,oBAAoB,KAAK,sBAAsB;AAC3D;AAAA,sBACJ,KAAK;AAAA,sBACL,KAAK;AACD,6BAAK,QAAQ,qBAAqB;AAClC,6BAAK,QAAQ,mBAAmB;AAChC,6BAAK,QAAQ,QAAQ,KAAK,YAAY;AACtC,gCAAQ,KAAK;AACb,8BAAM,KAAK,YAAY,KAAK;AAC5B,+BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,aAAa,MAAM,OAAO,KAAK,MAAM,SAAS,MAAM,KAAK,CAAC;AAC9F;AAAA,sBACJ;AACI,+BAAO,KAAK,qBAAqB,KAAK,UAAW,CAAA;AAAA,oBACxD;AACD;AAAA,kBACJ,KAAK;AACD,wBAAI,CAAC,KAAK,QAAQ,UAAU,KAAK,QAAQ,cAAc,KAAK,aAAa,OAAO,GAAG;AAC/E,6BAAO,KAAK;oBACf,WACQ,CAAC,KAAK,QAAQ,UAAU,KAAK,aAAa,KAAK,GAAG;AACvD,6BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,WAAW,KAAK,YAAY,KAAK,CAAC;AAAA,oBACzE,OACI;AACD,2BAAK,QAAQ,qBAAqB;AAClC,2BAAK,QAAQ,mBAAmB;AAChC,0BAAI,KAAK,aAAa,UAAU,GAAG;AAC/B,+BAAO,KAAK;sBACf,WACQ,KAAK,aAAa,MAAM,GAAG;AAChC,6BAAK,UAAS;AACd,+BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,eAAc,CAAE;AAAA,sBACvD,WACQ,KAAK,aAAa,OAAO,GAAG;AACjC,+BAAO,KAAK;sBACf,OACI;AACD,+BAAO,KAAK,qBAAqB,KAAK,UAAW,CAAA;AAAA,sBACpD;AAAA,oBACJ;AACD;AAAA,kBACJ;AACI,2BAAO,KAAK,qBAAqB,KAAK,UAAW,CAAA;AAAA,gBACxD;AACD,uBAAO;AAAA,cAChB;AAEK,cAAAA,QAAO,UAAU,qBAAqB,WAAY;AAC9C,oBAAI,OAAO,KAAK;AAChB,qBAAK,OAAO,KAAK;AACjB,oBAAI,MAAM,KAAK,oBAAoB,KAAK,yBAAyB;AACjE,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,cAAc,GAAG,CAAC;AAAA,cAC/D;AACK,cAAAA,QAAO,UAAU,wBAAwB,WAAY;AACjD,oBAAI,OAAO,KAAK;AAChB,oBAAI,WAAW,CAAA;AACf,qBAAK,OAAO,GAAG;AACf,uBAAO,CAAC,KAAK,MAAM,GAAG,GAAG;AACrB,sBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,yBAAK,UAAS;AACd,6BAAS,KAAK,IAAI;AAAA,kBACrB,WACQ,KAAK,MAAM,KAAK,GAAG;AACxB,wBAAI,UAAU,KAAK;AACnB,wBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,2BAAK,QAAQ,qBAAqB;AAClC,2BAAK,QAAQ,mBAAmB;AAChC,2BAAK,OAAO,GAAG;AAAA,oBAClB;AACD,6BAAS,KAAK,OAAO;AAAA,kBACxB,OACI;AACD,6BAAS,KAAK,KAAK,oBAAoB,KAAK,yBAAyB,CAAC;AACtE,wBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,2BAAK,OAAO,GAAG;AAAA,oBAClB;AAAA,kBACJ;AAAA,gBACJ;AACD,qBAAK,OAAO,GAAG;AACf,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,gBAAgB,QAAQ,CAAC;AAAA,cACtE;AAEK,cAAAA,QAAO,UAAU,sBAAsB,SAAU,QAAQ;AACrD,qBAAK,QAAQ,qBAAqB;AAClC,qBAAK,QAAQ,mBAAmB;AAChC,oBAAI,iBAAiB,KAAK,QAAQ;AAClC,oBAAI,+BAA+B,KAAK,QAAQ;AAChD,qBAAK,QAAQ,uBAAuB,OAAO;AAC3C,oBAAIxI,QAAO,KAAK,oBAAoB,KAAK,2BAA2B;AACpE,oBAAI,KAAK,QAAQ,UAAU,OAAO,iBAAiB;AAC/C,uBAAK,wBAAwB,OAAO,iBAAiB,OAAO,OAAO;AAAA,gBACtE;AACD,oBAAI,KAAK,QAAQ,UAAU,OAAO,UAAU;AACxC,uBAAK,wBAAwB,OAAO,UAAU,OAAO,OAAO;AAAA,gBAC/D;AACD,qBAAK,QAAQ,SAAS;AACtB,qBAAK,QAAQ,uBAAuB;AACpC,uBAAOA;AAAA,cAChB;AACK,cAAAwI,QAAO,UAAU,8BAA8B,WAAY;AACvD,oBAAI,cAAc;AAClB,oBAAI,OAAO,KAAK;AAChB,oBAAI,qBAAqB,KAAK,QAAQ;AACtC,qBAAK,QAAQ,aAAa;AAC1B,oBAAI,SAAS,KAAK;AAClB,oBAAI,SAAS,KAAK,oBAAoB,MAAM;AAC5C,qBAAK,QAAQ,aAAa;AAC1B,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,mBAAmB,MAAM,OAAO,QAAQ,QAAQ,WAAW,CAAC;AAAA,cACzG;AACK,cAAAA,QAAO,UAAU,mCAAmC,WAAY;AAC5D,oBAAI,OAAO,KAAK;AAChB,oBAAI,qBAAqB,KAAK,QAAQ;AACtC,oBAAI,gBAAgB,KAAK,QAAQ;AACjC,qBAAK,QAAQ,aAAa;AAC1B,qBAAK,QAAQ,QAAQ;AACrB,oBAAI,SAAS,KAAK;AAClB,oBAAI,SAAS,KAAK,oBAAoB,MAAM;AAC5C,qBAAK,QAAQ,aAAa;AAC1B,qBAAK,QAAQ,QAAQ;AACrB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,wBAAwB,MAAM,OAAO,QAAQ,MAAM,CAAC;AAAA,cACjG;AACK,cAAAA,QAAO,UAAU,yBAAyB,WAAY;AAClD,oBAAI,OAAO,KAAK;AAChB,oBAAI,QAAQ,KAAK;AACjB,oBAAI;AACJ,wBAAQ,MAAM,MAAI;AAAA,kBACd,KAAK;AAAA,kBACL,KAAK;AACD,wBAAI,KAAK,QAAQ,UAAU,MAAM,OAAO;AACpC,2BAAK,wBAAwB,OAAO,WAAW,SAAS,kBAAkB;AAAA,oBAC7E;AACD,wBAAI,MAAM,KAAK,YAAY,KAAK;AAChC,0BAAM,KAAK,SAAS,MAAM,IAAI,KAAK,QAAQ,MAAM,OAAO,GAAG,CAAC;AAC5D;AAAA,kBACJ,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACD,0BAAM,KAAK,SAAS,MAAM,IAAI,KAAK,WAAW,MAAM,KAAK,CAAC;AAC1D;AAAA,kBACJ,KAAK;AACD,wBAAI,MAAM,UAAU,KAAK;AACrB,4BAAM,KAAK,oBAAoB,KAAK,yBAAyB;AAC7D,2BAAK,OAAO,GAAG;AAAA,oBAClB,OACI;AACD,4BAAM,KAAK,qBAAqB,KAAK;AAAA,oBACxC;AACD;AAAA,kBACJ;AACI,0BAAM,KAAK,qBAAqB,KAAK;AAAA,gBAC5C;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,gBAAgB,SAAU,KAAK,OAAO;AACnD,uBAAQ,IAAI,SAAS,SAAS,OAAO,cAAc,IAAI,SAAS,SAC3D,IAAI,SAAS,SAAS,OAAO,WAAW,IAAI,UAAU;AAAA,cACpE;AACK,cAAAA,QAAO,UAAU,sBAAsB,SAAU,UAAU;AACvD,oBAAI,OAAO,KAAK;AAChB,oBAAI,QAAQ,KAAK;AACjB,oBAAI;AACJ,oBAAI,MAAM;AACV,oBAAI,QAAQ;AACZ,oBAAI,WAAW;AACf,oBAAI,SAAS;AACb,oBAAI,YAAY;AAChB,oBAAI,UAAU;AACd,oBAAI,MAAM,SAAS,GAAoB;AACnC,sBAAI,KAAK,MAAM;AACf,uBAAK,UAAS;AACd,6BAAW,KAAK,MAAM,GAAG;AACzB,4BAAU,CAAC,KAAK,qBAAsB,OAAO,WACzC,CAAC,KAAK,MAAM,GAAG,KAAK,CAAC,KAAK,MAAM,GAAG,KAAK,CAAC,KAAK,MAAM,GAAG,KAAK,CAAC,KAAK,MAAM,GAAG;AAC/E,wBAAM,UAAU,KAAK,uBAAwB,IAAG,KAAK,SAAS,MAAM,IAAI,KAAK,WAAW,EAAE,CAAC;AAAA,gBAC9F,WACQ,KAAK,MAAM,GAAG,GAAG;AACtB,uBAAK,UAAS;AAAA,gBACjB,OACI;AACD,6BAAW,KAAK,MAAM,GAAG;AACzB,wBAAM,KAAK;gBACd;AACD,oBAAI,uBAAuB,KAAK,sBAAsB,KAAK,SAAS;AACpE,oBAAI,MAAM,SAAS,KAAsB,CAAC,WAAW,MAAM,UAAU,SAAS,sBAAsB;AAChG,yBAAO;AACP,6BAAW,KAAK,MAAM,GAAG;AACzB,wBAAM,KAAK;AACX,uBAAK,QAAQ,aAAa;AAC1B,0BAAQ,KAAK;gBAChB,WACQ,MAAM,SAAS,KAAsB,CAAC,WAAW,MAAM,UAAU,SAAS,sBAAsB;AACrG,yBAAO;AACP,6BAAW,KAAK,MAAM,GAAG;AACzB,wBAAM,KAAK;AACX,0BAAQ,KAAK;gBAChB,WACQ,MAAM,SAAS,KAAsB,MAAM,UAAU,OAAO,sBAAsB;AACvF,yBAAO;AACP,6BAAW,KAAK,MAAM,GAAG;AACzB,wBAAM,KAAK;AACX,0BAAQ,KAAK;AACb,2BAAS;AAAA,gBACZ,OACI;AACD,sBAAI,CAAC,KAAK;AACN,yBAAK,qBAAqB,KAAK,SAAS;AAAA,kBAC3C;AACD,yBAAO;AACP,sBAAI,KAAK,MAAM,GAAG,KAAK,CAAC,SAAS;AAC7B,wBAAI,CAAC,YAAY,KAAK,cAAc,KAAK,WAAW,GAAG;AACnD,0BAAI,SAAS,OAAO;AAChB,6BAAK,cAAc,WAAW,SAAS,sBAAsB;AAAA,sBAChE;AACD,+BAAS,QAAQ;AAAA,oBACpB;AACD,yBAAK,UAAS;AACd,4BAAQ,KAAK,oBAAoB,KAAK,yBAAyB;AAAA,kBAClE,WACQ,KAAK,MAAM,GAAG,GAAG;AACtB,4BAAQ,UAAU,KAAK,iCAAgC,IAAK,KAAK;AACjE,6BAAS;AAAA,kBACZ,WACQ,MAAM,SAAS,GAAoB;AACxC,wBAAI,KAAK,KAAK,SAAS,MAAM,IAAI,KAAK,WAAW,MAAM,KAAK,CAAC;AAC7D,wBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,2BAAK,QAAQ,iCAAiC,KAAK;AACnD,2BAAK,UAAS;AACd,kCAAY;AACZ,0BAAI,OAAO,KAAK,oBAAoB,KAAK,yBAAyB;AAClE,8BAAQ,KAAK,SAAS,MAAM,IAAI,KAAK,kBAAkB,IAAI,IAAI,CAAC;AAAA,oBACnE,OACI;AACD,kCAAY;AACZ,8BAAQ;AAAA,oBACX;AAAA,kBACJ,OACI;AACD,yBAAK,qBAAqB,KAAK,UAAW,CAAA;AAAA,kBAC7C;AAAA,gBACJ;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,SAAS,MAAM,KAAK,UAAU,OAAO,QAAQ,SAAS,CAAC;AAAA,cACpG;AACK,cAAAA,QAAO,UAAU,yBAAyB,WAAY;AAClD,oBAAI,OAAO,KAAK;AAChB,qBAAK,OAAO,GAAG;AACf,oBAAI,aAAa,CAAA;AACjB,oBAAI,WAAW,EAAE,OAAO;AACxB,uBAAO,CAAC,KAAK,MAAM,GAAG,GAAG;AACrB,6BAAW,KAAK,KAAK,oBAAoB,QAAQ,CAAC;AAClD,sBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,yBAAK,qBAAoB;AAAA,kBAC5B;AAAA,gBACJ;AACD,qBAAK,OAAO,GAAG;AACf,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,iBAAiB,UAAU,CAAC;AAAA,cACzE;AAEK,cAAAA,QAAO,UAAU,oBAAoB,WAAY;AAC7C,yBAAS,OAAO,KAAK,UAAU,MAAM,kDAAkD;AACvF,oBAAI,OAAO,KAAK;AAChB,oBAAI,QAAQ,KAAK;AACjB,oBAAI,MAAM,MAAM;AAChB,oBAAI,SAAS,MAAM;AACnB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,gBAAgB,EAAE,KAAU,OAAc,GAAI,MAAM,IAAI,CAAC;AAAA,cACtG;AACK,cAAAA,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI,KAAK,UAAU,SAAS,IAAmB;AAC3C,uBAAK,qBAAoB;AAAA,gBAC5B;AACD,oBAAI,OAAO,KAAK;AAChB,oBAAI,QAAQ,KAAK;AACjB,oBAAI,MAAM,MAAM;AAChB,oBAAI,SAAS,MAAM;AACnB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,gBAAgB,EAAE,KAAU,OAAc,GAAI,MAAM,IAAI,CAAC;AAAA,cACtG;AACK,cAAAA,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI,OAAO,KAAK;AAChB,oBAAI,cAAc,CAAA;AAClB,oBAAI,SAAS,CAAA;AACb,oBAAI,QAAQ,KAAK;AACjB,uBAAO,KAAK,KAAK;AACjB,uBAAO,CAAC,MAAM,MAAM;AAChB,8BAAY,KAAK,KAAK,gBAAiB,CAAA;AACvC,0BAAQ,KAAK;AACb,yBAAO,KAAK,KAAK;AAAA,gBACpB;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,gBAAgB,QAAQ,WAAW,CAAC;AAAA,cACjF;AAEK,cAAAA,QAAO,UAAU,iCAAiC,SAAU,MAAM;AAC9D,wBAAQ,KAAK,MAAI;AAAA,kBACb,KAAK,SAAS,OAAO;AAAA,kBACrB,KAAK,SAAS,OAAO;AAAA,kBACrB,KAAK,SAAS,OAAO;AAAA,kBACrB,KAAK,SAAS,OAAO;AACjB;AAAA,kBACJ,KAAK,SAAS,OAAO;AACjB,yBAAK,OAAO,SAAS,OAAO;AAC5B,yBAAK,+BAA+B,KAAK,QAAQ;AACjD;AAAA,kBACJ,KAAK,SAAS,OAAO;AACjB,yBAAK,OAAO,SAAS,OAAO;AAC5B,6BAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,0BAAI,KAAK,SAAS,CAAC,MAAM,MAAM;AAC3B,6BAAK,+BAA+B,KAAK,SAAS,CAAC,CAAC;AAAA,sBACvD;AAAA,oBACJ;AACD;AAAA,kBACJ,KAAK,SAAS,OAAO;AACjB,yBAAK,OAAO,SAAS,OAAO;AAC5B,6BAAS,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAK;AAC7C,2BAAK,+BAA+B,KAAK,WAAW,CAAC,EAAE,KAAK;AAAA,oBAC/D;AACD;AAAA,kBACJ,KAAK,SAAS,OAAO;AACjB,yBAAK,OAAO,SAAS,OAAO;AAC5B,2BAAO,KAAK;AACZ,yBAAK,+BAA+B,KAAK,IAAI;AAC7C;AAAA,gBAIP;AAAA,cACV;AACK,cAAAA,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI;AACJ,qBAAK,OAAO,GAAG;AACf,oBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,uBAAK,UAAS;AACd,sBAAI,CAAC,KAAK,MAAM,IAAI,GAAG;AACnB,yBAAK,OAAO,IAAI;AAAA,kBACnB;AACD,yBAAO;AAAA,oBACH,MAAM;AAAA,oBACN,QAAQ,CAAE;AAAA,oBACV,OAAO;AAAA,kBACxB;AAAA,gBACU,OACI;AACD,sBAAI,aAAa,KAAK;AACtB,sBAAI,SAAS,CAAA;AACb,sBAAI,KAAK,MAAM,KAAK,GAAG;AACnB,2BAAO,KAAK,iBAAiB,MAAM;AACnC,yBAAK,OAAO,GAAG;AACf,wBAAI,CAAC,KAAK,MAAM,IAAI,GAAG;AACnB,2BAAK,OAAO,IAAI;AAAA,oBACnB;AACD,2BAAO;AAAA,sBACH,MAAM;AAAA,sBACN,QAAQ,CAAC,IAAI;AAAA,sBACb,OAAO;AAAA,oBAC5B;AAAA,kBACc,OACI;AACD,wBAAI,QAAQ;AACZ,yBAAK,QAAQ,mBAAmB;AAChC,2BAAO,KAAK,oBAAoB,KAAK,yBAAyB;AAC9D,wBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,0BAAI,cAAc,CAAA;AAClB,2BAAK,QAAQ,qBAAqB;AAClC,kCAAY,KAAK,IAAI;AACrB,6BAAO,KAAK,UAAU,SAAS,GAAa;AACxC,4BAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB;AAAA,wBACH;AACD,6BAAK,UAAS;AACd,4BAAI,KAAK,MAAM,GAAG,GAAG;AACjB,+BAAK,UAAS;AACd,mCAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AACzC,iCAAK,+BAA+B,YAAY,CAAC,CAAC;AAAA,0BACrD;AACD,kCAAQ;AACR,iCAAO;AAAA,4BACH,MAAM;AAAA,4BACN,QAAQ;AAAA,4BACR,OAAO;AAAA,0BACxC;AAAA,wBAC0B,WACQ,KAAK,MAAM,KAAK,GAAG;AACxB,8BAAI,CAAC,KAAK,QAAQ,kBAAkB;AAChC,iCAAK,qBAAqB,KAAK,SAAS;AAAA,0BAC3C;AACD,sCAAY,KAAK,KAAK,iBAAiB,MAAM,CAAC;AAC9C,+BAAK,OAAO,GAAG;AACf,8BAAI,CAAC,KAAK,MAAM,IAAI,GAAG;AACnB,iCAAK,OAAO,IAAI;AAAA,0BACnB;AACD,+BAAK,QAAQ,mBAAmB;AAChC,mCAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AACzC,iCAAK,+BAA+B,YAAY,CAAC,CAAC;AAAA,0BACrD;AACD,kCAAQ;AACR,iCAAO;AAAA,4BACH,MAAM;AAAA,4BACN,QAAQ;AAAA,4BACR,OAAO;AAAA,0BACxC;AAAA,wBAC0B,OACI;AACD,sCAAY,KAAK,KAAK,oBAAoB,KAAK,yBAAyB,CAAC;AAAA,wBAC5E;AACD,4BAAI,OAAO;AACP;AAAA,wBACH;AAAA,sBACJ;AACD,0BAAI,CAAC,OAAO;AACR,+BAAO,KAAK,SAAS,KAAK,UAAU,UAAU,GAAG,IAAI,KAAK,mBAAmB,WAAW,CAAC;AAAA,sBAC5F;AAAA,oBACJ;AACD,wBAAI,CAAC,OAAO;AACR,2BAAK,OAAO,GAAG;AACf,0BAAI,KAAK,MAAM,IAAI,GAAG;AAClB,4BAAI,KAAK,SAAS,SAAS,OAAO,cAAc,KAAK,SAAS,SAAS;AACnE,kCAAQ;AACR,iCAAO;AAAA,4BACH,MAAM;AAAA,4BACN,QAAQ,CAAC,IAAI;AAAA,4BACb,OAAO;AAAA,0BACxC;AAAA,wBAC0B;AACD,4BAAI,CAAC,OAAO;AACR,8BAAI,CAAC,KAAK,QAAQ,kBAAkB;AAChC,iCAAK,qBAAqB,KAAK,SAAS;AAAA,0BAC3C;AACD,8BAAI,KAAK,SAAS,SAAS,OAAO,oBAAoB;AAClD,qCAAS,IAAI,GAAG,IAAI,KAAK,YAAY,QAAQ,KAAK;AAC9C,mCAAK,+BAA+B,KAAK,YAAY,CAAC,CAAC;AAAA,4BAC1D;AAAA,0BACJ,OACI;AACD,iCAAK,+BAA+B,IAAI;AAAA,0BAC3C;AACD,8BAAI,aAAc,KAAK,SAAS,SAAS,OAAO,qBAAqB,KAAK,cAAc,CAAC,IAAI;AAC7F,iCAAO;AAAA,4BACH,MAAM;AAAA,4BACN,QAAQ;AAAA,4BACR,OAAO;AAAA,0BACxC;AAAA,wBAC0B;AAAA,sBACJ;AACD,2BAAK,QAAQ,mBAAmB;AAAA,oBACnC;AAAA,kBACJ;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AAEK,cAAAA,QAAO,UAAU,iBAAiB,WAAY;AAC1C,qBAAK,OAAO,GAAG;AACf,oBAAI,OAAO,CAAA;AACX,oBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,yBAAO,MAAM;AACT,wBAAI,OAAO,KAAK,MAAM,KAAK,IAAI,KAAK,mBAAoB,IACpD,KAAK,oBAAoB,KAAK,yBAAyB;AAC3D,yBAAK,KAAK,IAAI;AACd,wBAAI,KAAK,MAAM,GAAG,GAAG;AACjB;AAAA,oBACH;AACD,yBAAK,qBAAoB;AACzB,wBAAI,KAAK,MAAM,GAAG,GAAG;AACjB;AAAA,oBACH;AAAA,kBACJ;AAAA,gBACJ;AACD,qBAAK,OAAO,GAAG;AACf,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,mBAAmB,SAAU,OAAO;AACjD,uBAAO,MAAM,SAAS,KAClB,MAAM,SAAS,KACf,MAAM,SAAS,KACf,MAAM,SAAS;AAAA,cAC5B;AACK,cAAAA,QAAO,UAAU,sBAAsB,WAAY;AAC/C,oBAAI,OAAO,KAAK;AAChB,oBAAI,QAAQ,KAAK;AACjB,oBAAI,CAAC,KAAK,iBAAiB,KAAK,GAAG;AAC/B,uBAAK,qBAAqB,KAAK;AAAA,gBAClC;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,WAAW,MAAM,KAAK,CAAC;AAAA,cACpE;AACK,cAAAA,QAAO,UAAU,qBAAqB,WAAY;AAC9C,oBAAI,OAAO,KAAK;AAChB,oBAAI,KAAK,KAAK;AACd,yBAAS,OAAO,GAAG,SAAS,OAAO,sCAAsC;AACzE,oBAAI;AACJ,oBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,uBAAK,UAAS;AACd,sBAAI,KAAK,UAAU,SAAS,KAAsB,KAAK,QAAQ,kBAAkB,KAAK,UAAU,UAAU,UAAU;AAChH,wBAAI,WAAW,KAAK;AACpB,2BAAO,IAAI,KAAK,aAAa,IAAI,QAAQ;AAAA,kBAC5C,OACI;AACD,yBAAK,qBAAqB,KAAK,SAAS;AAAA,kBAC3C;AAAA,gBACJ,OACI;AACD,sBAAI,SAAS,KAAK,oBAAoB,KAAK,2BAA2B;AACtE,sBAAI,OAAO,KAAK,MAAM,GAAG,IAAI,KAAK,eAAgB,IAAG;AACrD,yBAAO,IAAI,KAAK,cAAc,QAAQ,IAAI;AAC1C,uBAAK,QAAQ,qBAAqB;AAClC,uBAAK,QAAQ,mBAAmB;AAAA,gBACnC;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI;AAAA,cACxC;AACK,cAAAA,QAAO,UAAU,qBAAqB,WAAY;AAC9C,oBAAI,MAAM,KAAK;AACf,qBAAK,QAAQ,iCAAiC;AAC9C,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,sBAAsB,WAAY;AAC/C,qBAAK,OAAO,GAAG;AACf,oBAAI,OAAO,CAAA;AACX,oBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,yBAAO,MAAM;AACT,wBAAI,OAAO,KAAK,MAAM,KAAK,IAAI,KAAK,mBAAoB,IACpD,KAAK,oBAAoB,KAAK,kBAAkB;AACpD,yBAAK,KAAK,IAAI;AACd,wBAAI,KAAK,MAAM,GAAG,GAAG;AACjB;AAAA,oBACH;AACD,yBAAK,qBAAoB;AACzB,wBAAI,KAAK,MAAM,GAAG,GAAG;AACjB;AAAA,oBACH;AAAA,kBACJ;AAAA,gBACJ;AACD,qBAAK,OAAO,GAAG;AACf,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,uCAAuC,WAAY;AAChE,oBAAI,aAAa,KAAK;AACtB,oBAAI,aAAa,KAAK,uBAAuB,OAAO;AACpD,oBAAI,kBAAkB,KAAK,QAAQ;AACnC,qBAAK,QAAQ,UAAU;AACvB,oBAAI;AACJ,oBAAI,KAAK,aAAa,OAAO,KAAK,KAAK,QAAQ,gBAAgB;AAC3D,yBAAO,KAAK;AACZ,uBAAK,UAAS;AACd,yBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,MAAK,CAAE;AAC3C,sBAAI,CAAC,KAAK,MAAM,GAAG,KAAK,CAAC,KAAK,MAAM,GAAG,KAAK,CAAC,KAAK,MAAM,GAAG,GAAG;AAC1D,yBAAK,qBAAqB,KAAK,SAAS;AAAA,kBAC3C;AAAA,gBACJ,OACI;AACD,yBAAO,KAAK,oBAAoB,KAAK,aAAa,KAAK,IAAI,KAAK,qBAAqB,KAAK,sBAAsB;AAAA,gBACnH;AACD,uBAAO,MAAM;AACT,sBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,yBAAK,QAAQ,mBAAmB;AAChC,yBAAK,QAAQ,qBAAqB;AAClC,yBAAK,OAAO,GAAG;AACf,wBAAI,WAAW,KAAK;AACpB,2BAAO,KAAK,SAAS,KAAK,UAAU,UAAU,GAAG,IAAI,KAAK,uBAAuB,MAAM,QAAQ,CAAC;AAAA,kBACnG,WACQ,KAAK,MAAM,GAAG,GAAG;AACtB,wBAAI,aAAa,cAAe,WAAW,eAAe,KAAK,UAAU;AACzE,yBAAK,QAAQ,mBAAmB;AAChC,yBAAK,QAAQ,qBAAqB;AAClC,wBAAI,OAAO,aAAa,KAAK,oBAAmB,IAAK,KAAK;AAC1D,2BAAO,KAAK,SAAS,KAAK,UAAU,UAAU,GAAG,IAAI,KAAK,eAAe,MAAM,IAAI,CAAC;AACpF,wBAAI,cAAc,KAAK,MAAM,IAAI,GAAG;AAChC,+BAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAClC,6BAAK,+BAA+B,KAAK,CAAC,CAAC;AAAA,sBAC9C;AACD,6BAAO;AAAA,wBACH,MAAM;AAAA,wBACN,QAAQ;AAAA,wBACR,OAAO;AAAA,sBAChC;AAAA,oBACkB;AAAA,kBACJ,WACQ,KAAK,MAAM,GAAG,GAAG;AACtB,yBAAK,QAAQ,mBAAmB;AAChC,yBAAK,QAAQ,qBAAqB;AAClC,yBAAK,OAAO,GAAG;AACf,wBAAI,WAAW,KAAK,oBAAoB,KAAK,eAAe;AAC5D,yBAAK,OAAO,GAAG;AACf,2BAAO,KAAK,SAAS,KAAK,UAAU,UAAU,GAAG,IAAI,KAAK,yBAAyB,MAAM,QAAQ,CAAC;AAAA,kBACrG,WACQ,KAAK,UAAU,SAAS,MAAqB,KAAK,UAAU,MAAM;AACvE,wBAAI,QAAQ,KAAK;AACjB,2BAAO,KAAK,SAAS,KAAK,UAAU,UAAU,GAAG,IAAI,KAAK,yBAAyB,MAAM,KAAK,CAAC;AAAA,kBAClG,OACI;AACD;AAAA,kBACH;AAAA,gBACJ;AACD,qBAAK,QAAQ,UAAU;AACvB,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,aAAa,WAAY;AACtC,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,OAAO;AAC1B,oBAAI,CAAC,KAAK,MAAM,GAAG,KAAK,CAAC,KAAK,MAAM,GAAG,GAAG;AACtC,uBAAK,qBAAqB,KAAK,SAAS;AAAA,gBAC3C;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,MAAK,CAAE;AAAA,cACpD;AACK,cAAAA,QAAO,UAAU,8BAA8B,WAAY;AACvD,yBAAS,OAAO,KAAK,QAAQ,SAAS,mDAAmD;AACzF,oBAAI,OAAO,KAAK,UAAU,KAAK,SAAS;AACxC,oBAAI,OAAQ,KAAK,aAAa,OAAO,KAAK,KAAK,QAAQ,iBAAkB,KAAK,WAAY,IACtF,KAAK,oBAAoB,KAAK,aAAa,KAAK,IAAI,KAAK,qBAAqB,KAAK,sBAAsB;AAC7G,uBAAO,MAAM;AACT,sBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,yBAAK,QAAQ,mBAAmB;AAChC,yBAAK,QAAQ,qBAAqB;AAClC,yBAAK,OAAO,GAAG;AACf,wBAAI,WAAW,KAAK,oBAAoB,KAAK,eAAe;AAC5D,yBAAK,OAAO,GAAG;AACf,2BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,yBAAyB,MAAM,QAAQ,CAAC;AAAA,kBAC/E,WACQ,KAAK,MAAM,GAAG,GAAG;AACtB,yBAAK,QAAQ,mBAAmB;AAChC,yBAAK,QAAQ,qBAAqB;AAClC,yBAAK,OAAO,GAAG;AACf,wBAAI,WAAW,KAAK;AACpB,2BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,uBAAuB,MAAM,QAAQ,CAAC;AAAA,kBAC7E,WACQ,KAAK,UAAU,SAAS,MAAqB,KAAK,UAAU,MAAM;AACvE,wBAAI,QAAQ,KAAK;AACjB,2BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,yBAAyB,MAAM,KAAK,CAAC;AAAA,kBAC5E,OACI;AACD;AAAA,kBACH;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AAEK,cAAAA,QAAO,UAAU,wBAAwB,WAAY;AACjD,oBAAI;AACJ,oBAAI,aAAa,KAAK;AACtB,oBAAI,KAAK,MAAM,IAAI,KAAK,KAAK,MAAM,IAAI,GAAG;AACtC,sBAAI,OAAO,KAAK,UAAU,UAAU;AACpC,sBAAI,QAAQ,KAAK;AACjB,yBAAO,KAAK,oBAAoB,KAAK,oBAAoB;AACzD,sBAAI,KAAK,QAAQ,UAAU,KAAK,SAAS,SAAS,OAAO,cAAc,KAAK,QAAQ,iBAAiB,KAAK,IAAI,GAAG;AAC7G,yBAAK,cAAc,WAAW,SAAS,eAAe;AAAA,kBACzD;AACD,sBAAI,CAAC,KAAK,QAAQ,oBAAoB;AAClC,yBAAK,cAAc,WAAW,SAAS,sBAAsB;AAAA,kBAChE;AACD,sBAAI,SAAS;AACb,yBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,iBAAiB,MAAM,OAAO,MAAM,MAAM,CAAC;AAC/E,uBAAK,QAAQ,qBAAqB;AAClC,uBAAK,QAAQ,mBAAmB;AAAA,gBACnC,OACI;AACD,yBAAO,KAAK,oBAAoB,KAAK,oCAAoC;AACzE,sBAAI,CAAC,KAAK,qBAAqB,KAAK,UAAU,SAAS,GAAoB;AACvE,wBAAI,KAAK,MAAM,IAAI,KAAK,KAAK,MAAM,IAAI,GAAG;AACtC,0BAAI,KAAK,QAAQ,UAAU,KAAK,SAAS,SAAS,OAAO,cAAc,KAAK,QAAQ,iBAAiB,KAAK,IAAI,GAAG;AAC7G,6BAAK,cAAc,WAAW,SAAS,gBAAgB;AAAA,sBAC1D;AACD,0BAAI,CAAC,KAAK,QAAQ,oBAAoB;AAClC,6BAAK,cAAc,WAAW,SAAS,sBAAsB;AAAA,sBAChE;AACD,2BAAK,QAAQ,qBAAqB;AAClC,2BAAK,QAAQ,mBAAmB;AAChC,0BAAI,WAAW,KAAK,UAAS,EAAG;AAChC,0BAAI,SAAS;AACb,6BAAO,KAAK,SAAS,KAAK,UAAU,UAAU,GAAG,IAAI,KAAK,iBAAiB,UAAU,MAAM,MAAM,CAAC;AAAA,oBACrG;AAAA,kBACJ;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AAEK,cAAAA,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI,OAAO,KAAK;AAChB,qBAAK,UAAS;AACd,oBAAI,WAAW,KAAK;AACpB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,gBAAgB,QAAQ,CAAC;AAAA,cACtE;AACK,cAAAA,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI;AACJ,oBAAI,KAAK,MAAM,GAAG,KAAK,KAAK,MAAM,GAAG,KAAK,KAAK,MAAM,GAAG,KAAK,KAAK,MAAM,GAAG,KACvE,KAAK,aAAa,QAAQ,KAAK,KAAK,aAAa,MAAM,KAAK,KAAK,aAAa,QAAQ,GAAG;AACzF,sBAAI,OAAO,KAAK,UAAU,KAAK,SAAS;AACxC,sBAAI,QAAQ,KAAK;AACjB,yBAAO,KAAK,oBAAoB,KAAK,oBAAoB;AACzD,yBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,gBAAgB,MAAM,OAAO,IAAI,CAAC;AACtE,sBAAI,KAAK,QAAQ,UAAU,KAAK,aAAa,YAAY,KAAK,SAAS,SAAS,SAAS,OAAO,YAAY;AACxG,yBAAK,cAAc,WAAW,SAAS,YAAY;AAAA,kBACtD;AACD,uBAAK,QAAQ,qBAAqB;AAClC,uBAAK,QAAQ,mBAAmB;AAAA,gBACnC,WACQ,KAAK,QAAQ,SAAS,KAAK,uBAAuB,OAAO,GAAG;AACjE,yBAAO,KAAK;gBACf,OACI;AACD,yBAAO,KAAK;gBACf;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,gCAAgC,WAAY;AACzD,oBAAI,aAAa,KAAK;AACtB,oBAAI,OAAO,KAAK,oBAAoB,KAAK,oBAAoB;AAC7D,oBAAI,KAAK,SAAS,SAAS,OAAO,mBAAmB,KAAK,MAAM,IAAI,GAAG;AACnE,uBAAK,UAAS;AACd,uBAAK,QAAQ,qBAAqB;AAClC,uBAAK,QAAQ,mBAAmB;AAChC,sBAAI,OAAO;AACX,sBAAI,QAAQ,KAAK,oBAAoB,KAAK,6BAA6B;AACvE,yBAAO,KAAK,SAAS,KAAK,UAAU,UAAU,GAAG,IAAI,KAAK,iBAAiB,MAAM,MAAM,KAAK,CAAC;AAAA,gBAChG;AACD,uBAAO;AAAA,cAChB;AASK,cAAAA,QAAO,UAAU,mBAAmB,SAAU,OAAO;AACjD,oBAAI,KAAK,MAAM;AACf,oBAAI;AACJ,oBAAI,MAAM,SAAS,GAAoB;AACnC,+BAAa,KAAK,mBAAmB,EAAE,KAAK;AAAA,gBAC/C,WACQ,MAAM,SAAS,GAAiB;AACrC,+BAAc,OAAO,gBAAiB,KAAK,QAAQ,WAAW,OAAO,OAAS,IAAI;AAAA,gBACrF,OACI;AACD,+BAAa;AAAA,gBAChB;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,wBAAwB,WAAY;AACjD,oBAAI,aAAa,KAAK;AACtB,oBAAI,OAAO,KAAK,oBAAoB,KAAK,6BAA6B;AACtE,oBAAI,QAAQ,KAAK;AACjB,oBAAI,OAAO,KAAK,iBAAiB,KAAK;AACtC,oBAAI,OAAO,GAAG;AACV,uBAAK,UAAS;AACd,uBAAK,QAAQ,qBAAqB;AAClC,uBAAK,QAAQ,mBAAmB;AAChC,sBAAI,UAAU,CAAC,YAAY,KAAK,SAAS;AACzC,sBAAI,OAAO;AACX,sBAAI,QAAQ,KAAK,oBAAoB,KAAK,6BAA6B;AACvE,sBAAI,QAAQ,CAAC,MAAM,MAAM,OAAO,KAAK;AACrC,sBAAI,cAAc,CAAC,IAAI;AACvB,yBAAO,MAAM;AACT,2BAAO,KAAK,iBAAiB,KAAK,SAAS;AAC3C,wBAAI,QAAQ,GAAG;AACX;AAAA,oBACH;AAED,2BAAQ,MAAM,SAAS,KAAO,QAAQ,YAAY,YAAY,SAAS,CAAC,GAAI;AACxE,8BAAQ,MAAM;AACd,0BAAI,WAAW,MAAM;AACrB,kCAAY,IAAG;AACf,6BAAO,MAAM;AACb,8BAAQ,IAAG;AACX,0BAAI,OAAO,KAAK,UAAU,QAAQ,QAAQ,SAAS,CAAC,CAAC;AACrD,4BAAM,KAAK,KAAK,SAAS,MAAM,IAAI,KAAK,iBAAiB,UAAU,MAAM,KAAK,CAAC,CAAC;AAAA,oBACnF;AAED,0BAAM,KAAK,KAAK,UAAW,EAAC,KAAK;AACjC,gCAAY,KAAK,IAAI;AACrB,4BAAQ,KAAK,KAAK,SAAS;AAC3B,0BAAM,KAAK,KAAK,oBAAoB,KAAK,6BAA6B,CAAC;AAAA,kBAC1E;AAED,sBAAI,IAAI,MAAM,SAAS;AACvB,yBAAO,MAAM,CAAC;AACd,sBAAI,aAAa,QAAQ;AACzB,yBAAO,IAAI,GAAG;AACV,wBAAI,SAAS,QAAQ;AACrB,wBAAI,gBAAgB,cAAc,WAAW;AAC7C,wBAAI,OAAO,KAAK,UAAU,QAAQ,aAAa;AAC/C,wBAAI,WAAW,MAAM,IAAI,CAAC;AAC1B,2BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,iBAAiB,UAAU,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC;AAClF,yBAAK;AACL,iCAAa;AAAA,kBAChB;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AAEK,cAAAA,QAAO,UAAU,6BAA6B,WAAY;AACtD,oBAAI,aAAa,KAAK;AACtB,oBAAI,OAAO,KAAK,oBAAoB,KAAK,qBAAqB;AAC9D,oBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,uBAAK,UAAS;AACd,sBAAI,kBAAkB,KAAK,QAAQ;AACnC,uBAAK,QAAQ,UAAU;AACvB,sBAAI,aAAa,KAAK,oBAAoB,KAAK,yBAAyB;AACxE,uBAAK,QAAQ,UAAU;AACvB,uBAAK,OAAO,GAAG;AACf,sBAAI,YAAY,KAAK,oBAAoB,KAAK,yBAAyB;AACvE,yBAAO,KAAK,SAAS,KAAK,UAAU,UAAU,GAAG,IAAI,KAAK,sBAAsB,MAAM,YAAY,SAAS,CAAC;AAC5G,uBAAK,QAAQ,qBAAqB;AAClC,uBAAK,QAAQ,mBAAmB;AAAA,gBACnC;AACD,uBAAO;AAAA,cAChB;AAEK,cAAAA,QAAO,UAAU,oBAAoB,SAAU7F,UAAS,OAAO;AAC3D,wBAAQ,MAAM,MAAI;AAAA,kBACd,KAAK,SAAS,OAAO;AACjB,yBAAK,cAAcA,UAAS,OAAO,MAAM,IAAI;AAC7C;AAAA,kBACJ,KAAK,SAAS,OAAO;AACjB,yBAAK,kBAAkBA,UAAS,MAAM,QAAQ;AAC9C;AAAA,kBACJ,KAAK,SAAS,OAAO;AACjB,yBAAK,kBAAkBA,UAAS,MAAM,IAAI;AAC1C;AAAA,kBACJ,KAAK,SAAS,OAAO;AACjB,6BAAS,IAAI,GAAG,IAAI,MAAM,SAAS,QAAQ,KAAK;AAC5C,0BAAI,MAAM,SAAS,CAAC,MAAM,MAAM;AAC5B,6BAAK,kBAAkBA,UAAS,MAAM,SAAS,CAAC,CAAC;AAAA,sBACpD;AAAA,oBACJ;AACD;AAAA,kBACJ,KAAK,SAAS,OAAO;AACjB,6BAAS,IAAI,GAAG,IAAI,MAAM,WAAW,QAAQ,KAAK;AAC9C,2BAAK,kBAAkBA,UAAS,MAAM,WAAW,CAAC,EAAE,KAAK;AAAA,oBAC5D;AACD;AAAA,gBAGP;AACD,gBAAAA,SAAQ,SAASA,SAAQ,UAAW,iBAAiB,KAAK;AAAA,cACnE;AACK,cAAA6F,QAAO,UAAU,gCAAgC,SAAU,MAAM;AAC7D,oBAAI,SAAS,CAAC,IAAI;AAClB,oBAAI7F;AACJ,oBAAI,aAAa;AACjB,wBAAQ,KAAK,MAAI;AAAA,kBACb,KAAK,SAAS,OAAO;AACjB;AAAA,kBACJ,KAAK;AACD,6BAAS,KAAK;AACd,iCAAa,KAAK;AAClB;AAAA,kBACJ;AACI,2BAAO;AAAA,gBACd;AACD,gBAAAA,WAAU;AAAA,kBACN,QAAQ;AAAA,kBACR,UAAU,CAAE;AAAA,gBACzB;AACS,yBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACpC,sBAAI,QAAQ,OAAO,CAAC;AACpB,sBAAI,MAAM,SAAS,SAAS,OAAO,mBAAmB;AAClD,wBAAI,MAAM,MAAM,SAAS,SAAS,OAAO,iBAAiB;AACtD,0BAAI,MAAM,MAAM,UAAU;AACtB,6BAAK,qBAAqB,KAAK,SAAS;AAAA,sBAC3C;AACD,4BAAM,MAAM,OAAO,SAAS,OAAO;AACnC,4BAAM,MAAM,OAAO;AACnB,6BAAO,MAAM,MAAM;AACnB,6BAAO,MAAM,MAAM;AAAA,oBACtB;AAAA,kBACJ,WACQ,cAAc,MAAM,SAAS,SAAS,OAAO,cAAc,MAAM,SAAS,SAAS;AACxF,yBAAK,qBAAqB,KAAK,SAAS;AAAA,kBAC3C;AACD,uBAAK,kBAAkBA,UAAS,KAAK;AACrC,yBAAO,CAAC,IAAI;AAAA,gBACf;AACD,oBAAI,KAAK,QAAQ,UAAU,CAAC,KAAK,QAAQ,YAAY;AACjD,2BAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACpC,wBAAI,QAAQ,OAAO,CAAC;AACpB,wBAAI,MAAM,SAAS,SAAS,OAAO,iBAAiB;AAChD,2BAAK,qBAAqB,KAAK,SAAS;AAAA,oBAC3C;AAAA,kBACJ;AAAA,gBACJ;AACD,oBAAIA,SAAQ,YAAY,WAAW,SAAS,iBAAiB;AACzD,sBAAI,QAAQ,KAAK,QAAQ,SAASA,SAAQ,WAAWA,SAAQ;AAC7D,uBAAK,qBAAqB,OAAOA,SAAQ,OAAO;AAAA,gBACnD;AACD,uBAAO;AAAA,kBACH,QAAQA,SAAQ;AAAA,kBAChB;AAAA,kBACA,UAAUA,SAAQ;AAAA,kBAClB,iBAAiBA,SAAQ;AAAA,kBACzB,SAASA,SAAQ;AAAA,gBAC9B;AAAA,cACA;AACK,cAAA6F,QAAO,UAAU,4BAA4B,WAAY;AACrD,oBAAI;AACJ,oBAAI,CAAC,KAAK,QAAQ,cAAc,KAAK,aAAa,OAAO,GAAG;AACxD,yBAAO,KAAK;gBACf,OACI;AACD,sBAAI,aAAa,KAAK;AACtB,sBAAI,QAAQ;AACZ,yBAAO,KAAK;AACZ,sBAAI,MAAM,SAAS,KAAuB,MAAM,eAAe,KAAK,UAAU,cAAe,MAAM,UAAU,SAAS;AAClH,wBAAI,KAAK,UAAU,SAAS,KAAsB,KAAK,aAAa,OAAO,GAAG;AAC1E,0BAAI,MAAM,KAAK;AACf,2BAAK,+BAA+B,GAAG;AACvC,6BAAO;AAAA,wBACH,MAAM;AAAA,wBACN,QAAQ,CAAC,GAAG;AAAA,wBACZ,OAAO;AAAA,sBAChC;AAAA,oBACkB;AAAA,kBACJ;AACD,sBAAI,KAAK,SAAS,6BAA6B,KAAK,MAAM,IAAI,GAAG;AAE7D,yBAAK,QAAQ,qBAAqB;AAClC,yBAAK,QAAQ,mBAAmB;AAChC,wBAAI,UAAU,KAAK;AACnB,wBAAI,OAAO,KAAK,8BAA8B,IAAI;AAClD,wBAAI,MAAM;AACN,0BAAI,KAAK,mBAAmB;AACxB,6BAAK,wBAAwB,KAAK,SAAS;AAAA,sBAC9C;AACD,2BAAK,QAAQ,iCAAiC;AAC9C,0BAAI,iBAAiB,KAAK,QAAQ;AAClC,0BAAI,+BAA+B,KAAK,QAAQ;AAChD,2BAAK,QAAQ,uBAAuB,KAAK;AACzC,0BAAI,qBAAqB,KAAK,QAAQ;AACtC,0BAAI,gBAAgB,KAAK,QAAQ;AACjC,2BAAK,QAAQ,aAAa;AAC1B,2BAAK,QAAQ,QAAQ;AACrB,0BAAI,OAAO,KAAK,UAAU,UAAU;AACpC,2BAAK,OAAO,IAAI;AAChB,0BAAIxI,QAAO;AACX,0BAAI,KAAK,MAAM,GAAG,GAAG;AACjB,4BAAI,kBAAkB,KAAK,QAAQ;AACnC,6BAAK,QAAQ,UAAU;AACvB,wBAAAA,QAAO,KAAK;AACZ,6BAAK,QAAQ,UAAU;AAAA,sBAC1B,OACI;AACD,wBAAAA,QAAO,KAAK,oBAAoB,KAAK,yBAAyB;AAAA,sBACjE;AACD,0BAAI,aAAaA,MAAK,SAAS,SAAS,OAAO;AAC/C,0BAAI,KAAK,QAAQ,UAAU,KAAK,iBAAiB;AAC7C,6BAAK,qBAAqB,KAAK,iBAAiB,KAAK,OAAO;AAAA,sBAC/D;AACD,0BAAI,KAAK,QAAQ,UAAU,KAAK,UAAU;AACtC,6BAAK,wBAAwB,KAAK,UAAU,KAAK,OAAO;AAAA,sBAC3D;AACD,6BAAO,UAAU,KAAK,SAAS,MAAM,IAAI,KAAK,6BAA6B,KAAK,QAAQA,OAAM,UAAU,CAAC,IACrG,KAAK,SAAS,MAAM,IAAI,KAAK,wBAAwB,KAAK,QAAQA,OAAM,UAAU,CAAC;AACvF,2BAAK,QAAQ,SAAS;AACtB,2BAAK,QAAQ,uBAAuB;AACpC,2BAAK,QAAQ,aAAa;AAC1B,2BAAK,QAAQ,QAAQ;AAAA,oBACxB;AAAA,kBACJ,OACI;AACD,wBAAI,KAAK,eAAe;AACpB,0BAAI,CAAC,KAAK,QAAQ,oBAAoB;AAClC,6BAAK,cAAc,WAAW,SAAS,sBAAsB;AAAA,sBAChE;AACD,0BAAI,KAAK,QAAQ,UAAU,KAAK,SAAS,SAAS,OAAO,YAAY;AACjE,4BAAI,KAAK;AACT,4BAAI,KAAK,QAAQ,iBAAiB,GAAG,IAAI,GAAG;AACxC,+BAAK,wBAAwB,OAAO,WAAW,SAAS,mBAAmB;AAAA,wBAC9E;AACD,4BAAI,KAAK,QAAQ,yBAAyB,GAAG,IAAI,GAAG;AAChD,+BAAK,wBAAwB,OAAO,WAAW,SAAS,kBAAkB;AAAA,wBAC7E;AAAA,sBACJ;AACD,0BAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,6BAAK,QAAQ,qBAAqB;AAClC,6BAAK,QAAQ,mBAAmB;AAAA,sBACnC,OACI;AACD,6BAAK,+BAA+B,IAAI;AAAA,sBAC3C;AACD,8BAAQ,KAAK;AACb,0BAAI,WAAW,MAAM;AACrB,0BAAI,QAAQ,KAAK,oBAAoB,KAAK,yBAAyB;AACnE,6BAAO,KAAK,SAAS,KAAK,UAAU,UAAU,GAAG,IAAI,KAAK,qBAAqB,UAAU,MAAM,KAAK,CAAC;AACrG,2BAAK,QAAQ,iCAAiC;AAAA,oBACjD;AAAA,kBACJ;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AAEK,cAAAwI,QAAO,UAAU,kBAAkB,WAAY;AAC3C,oBAAI,aAAa,KAAK;AACtB,oBAAI,OAAO,KAAK,oBAAoB,KAAK,yBAAyB;AAClE,oBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,sBAAI,cAAc,CAAA;AAClB,8BAAY,KAAK,IAAI;AACrB,yBAAO,KAAK,UAAU,SAAS,GAAa;AACxC,wBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB;AAAA,oBACH;AACD,yBAAK,UAAS;AACd,gCAAY,KAAK,KAAK,oBAAoB,KAAK,yBAAyB,CAAC;AAAA,kBAC5E;AACD,yBAAO,KAAK,SAAS,KAAK,UAAU,UAAU,GAAG,IAAI,KAAK,mBAAmB,WAAW,CAAC;AAAA,gBAC5F;AACD,uBAAO;AAAA,cAChB;AAEK,cAAAA,QAAO,UAAU,yBAAyB,WAAY;AAClD,oBAAI;AACJ,qBAAK,QAAQ,qBAAqB;AAClC,qBAAK,QAAQ,mBAAmB;AAChC,oBAAI,KAAK,UAAU,SAAS,GAAiB;AACzC,0BAAQ,KAAK,UAAU,OAAK;AAAA,oBACxB,KAAK;AACD,0BAAI,CAAC,KAAK,QAAQ,UAAU;AACxB,6BAAK,wBAAwB,KAAK,WAAW,WAAW,SAAS,wBAAwB;AAAA,sBAC5F;AACD,kCAAY,KAAK;AACjB;AAAA,oBACJ,KAAK;AACD,0BAAI,CAAC,KAAK,QAAQ,UAAU;AACxB,6BAAK,wBAAwB,KAAK,WAAW,WAAW,SAAS,wBAAwB;AAAA,sBAC5F;AACD,kCAAY,KAAK;AACjB;AAAA,oBACJ,KAAK;AACD,kCAAY,KAAK,wBAAwB,EAAE,OAAO,MAAO,CAAA;AACzD;AAAA,oBACJ,KAAK;AACD,kCAAY,KAAK;AACjB;AAAA,oBACJ,KAAK;AACD,kCAAY,KAAK;AACjB;AAAA,oBACJ,KAAK;AACD,kCAAY,KAAK,qBAAsB,IAAG,KAAK,wBAAwB,EAAE,OAAO,MAAO,CAAA,IAAI,KAAK,eAAc;AAC9G;AAAA,oBACJ;AACI,kCAAY,KAAK;AACjB;AAAA,kBACP;AAAA,gBACJ,OACI;AACD,8BAAY,KAAK;gBACpB;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,aAAa,WAAY;AACtC,oBAAI,OAAO,KAAK;AAChB,qBAAK,OAAO,GAAG;AACf,oBAAIR,SAAQ,CAAA;AACZ,uBAAO,MAAM;AACT,sBAAI,KAAK,MAAM,GAAG,GAAG;AACjB;AAAA,kBACH;AACD,kBAAAA,OAAM,KAAK,KAAK,uBAAwB,CAAA;AAAA,gBAC3C;AACD,qBAAK,OAAO,GAAG;AACf,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,eAAeA,MAAK,CAAC;AAAA,cAClE;AAEK,cAAAQ,QAAO,UAAU,sBAAsB,SAAU,MAAM7F,UAAS;AAC5D,oBAAI,OAAO,KAAK;AAChB,oBAAI,SAAS,CAAA;AACb,oBAAI,KAAK,KAAK,aAAa,QAAQ,IAAI;AACvC,oBAAI,KAAK,QAAQ,UAAU,GAAG,SAAS,SAAS,OAAO,YAAY;AAC/D,sBAAI,KAAK,QAAQ,iBAAiB,GAAG,IAAI,GAAG;AACxC,yBAAK,cAAc,WAAW,SAAS,aAAa;AAAA,kBACvD;AAAA,gBACJ;AACD,oBAAI,OAAO;AACX,oBAAI,SAAS,SAAS;AAClB,sBAAI,CAAC,KAAK,aAAa,IAAI,KAAK,CAAC,KAAK,uBAAuB,IAAI,GAAG;AAChE,wBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,2BAAK,UAAS;AACd,6BAAO,KAAK,oBAAoB,KAAK,yBAAyB;AAAA,oBACjE,OACI;AACD,2BAAK,WAAW,WAAW,SAAS,+BAA+B,OAAO;AAAA,oBAC7E;AAAA,kBACJ;AAAA,gBACJ,WACS,CAACA,SAAQ,SAAS,GAAG,SAAS,SAAS,OAAO,cAAe,KAAK,MAAM,GAAG,GAAG;AACpF,uBAAK,OAAO,GAAG;AACf,yBAAO,KAAK,oBAAoB,KAAK,yBAAyB;AAAA,gBACjE;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,mBAAmB,IAAI,IAAI,CAAC;AAAA,cACzE;AACK,cAAA6F,QAAO,UAAU,mBAAmB,SAAU,MAAM7F,UAAS;AACzD,oBAAI,OAAO,CAAC,KAAK,oBAAoB,MAAMA,QAAO,CAAC;AACnD,uBAAO,KAAK,MAAM,GAAG,GAAG;AACpB,uBAAK,UAAS;AACd,uBAAK,KAAK,KAAK,oBAAoB,MAAMA,QAAO,CAAC;AAAA,gBACpD;AACD,uBAAO;AAAA,cAChB;AACK,cAAA6F,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI,QAAQ,KAAK,QAAQ,UAAS;AAClC,qBAAK,QAAQ;AACb,oBAAI,OAAO,KAAK,QAAQ,IAAG;AAC3B,qBAAK,QAAQ,aAAa,KAAK;AAC/B,uBAAQ,KAAK,SAAS,KACjB,KAAK,SAAS,KAAsB,KAAK,UAAU,OACnD,KAAK,SAAS,KAAsB,KAAK,UAAU,OACnD,KAAK,SAAS,KAAmB,KAAK,UAAU,SAChD,KAAK,SAAS,KAAmB,KAAK,UAAU;AAAA,cAC9D;AACK,cAAAA,QAAO,UAAU,0BAA0B,SAAU7F,UAAS;AAC1D,oBAAI,OAAO,KAAK;AAChB,oBAAI,OAAO,KAAK,UAAS,EAAG;AAC5B,yBAAS,OAAO,SAAS,SAAS,SAAS,SAAS,iDAAiD;AACrG,oBAAI,eAAe,KAAK,iBAAiB,MAAMA,QAAO;AACtD,qBAAK,iBAAgB;AACrB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,oBAAoB,cAAc,IAAI,CAAC;AAAA,cACpF;AAEK,cAAA6F,QAAO,UAAU,0BAA0B,SAAU,QAAQ,MAAM;AAC/D,oBAAI,OAAO,KAAK;AAChB,qBAAK,OAAO,KAAK;AACjB,oBAAI,MAAM,KAAK,aAAa,QAAQ,IAAI;AACxC,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,YAAY,GAAG,CAAC;AAAA,cAC7D;AACK,cAAAA,QAAO,UAAU,oBAAoB,SAAU,QAAQ,MAAM;AACzD,oBAAI,OAAO,KAAK;AAChB,qBAAK,OAAO,GAAG;AACf,oBAAI,WAAW,CAAA;AACf,uBAAO,CAAC,KAAK,MAAM,GAAG,GAAG;AACrB,sBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,yBAAK,UAAS;AACd,6BAAS,KAAK,IAAI;AAAA,kBACrB,OACI;AACD,wBAAI,KAAK,MAAM,KAAK,GAAG;AACnB,+BAAS,KAAK,KAAK,wBAAwB,QAAQ,IAAI,CAAC;AACxD;AAAA,oBACH,OACI;AACD,+BAAS,KAAK,KAAK,wBAAwB,QAAQ,IAAI,CAAC;AAAA,oBAC3D;AACD,wBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,2BAAK,OAAO,GAAG;AAAA,oBAClB;AAAA,kBACJ;AAAA,gBACJ;AACD,qBAAK,OAAO,GAAG;AACf,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,aAAa,QAAQ,CAAC;AAAA,cACnE;AACK,cAAAA,QAAO,UAAU,uBAAuB,SAAU,QAAQ,MAAM;AAC5D,oBAAI,OAAO,KAAK;AAChB,oBAAI,WAAW;AACf,oBAAI,YAAY;AAChB,oBAAI,SAAS;AACb,oBAAI;AACJ,oBAAI;AACJ,oBAAI,KAAK,UAAU,SAAS,GAAoB;AAC5C,sBAAI,WAAW,KAAK;AACpB,wBAAM,KAAK;AACX,sBAAI,OAAO,KAAK,SAAS,MAAM,IAAI,KAAK,WAAW,SAAS,KAAK,CAAC;AAClE,sBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,2BAAO,KAAK,QAAQ;AACpB,gCAAY;AACZ,yBAAK,UAAS;AACd,wBAAI,OAAO,KAAK;AAChB,4BAAQ,KAAK,SAAS,KAAK,UAAU,QAAQ,GAAG,IAAI,KAAK,kBAAkB,MAAM,IAAI,CAAC;AAAA,kBACzF,WACQ,CAAC,KAAK,MAAM,GAAG,GAAG;AACvB,2BAAO,KAAK,QAAQ;AACpB,gCAAY;AACZ,4BAAQ;AAAA,kBACX,OACI;AACD,yBAAK,OAAO,GAAG;AACf,4BAAQ,KAAK,wBAAwB,QAAQ,IAAI;AAAA,kBACpD;AAAA,gBACJ,OACI;AACD,6BAAW,KAAK,MAAM,GAAG;AACzB,wBAAM,KAAK;AACX,uBAAK,OAAO,GAAG;AACf,0BAAQ,KAAK,wBAAwB,QAAQ,IAAI;AAAA,gBACpD;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,SAAS,QAAQ,KAAK,UAAU,OAAO,QAAQ,SAAS,CAAC;AAAA,cACtG;AACK,cAAAA,QAAO,UAAU,qBAAqB,SAAU,QAAQ,MAAM;AAC1D,oBAAI,OAAO,KAAK;AAChB,oBAAI,aAAa,CAAA;AACjB,qBAAK,OAAO,GAAG;AACf,uBAAO,CAAC,KAAK,MAAM,GAAG,GAAG;AACrB,6BAAW,KAAK,KAAK,qBAAqB,QAAQ,IAAI,CAAC;AACvD,sBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,yBAAK,OAAO,GAAG;AAAA,kBAClB;AAAA,gBACJ;AACD,qBAAK,OAAO,GAAG;AACf,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,cAAc,UAAU,CAAC;AAAA,cACtE;AACK,cAAAA,QAAO,UAAU,eAAe,SAAU,QAAQ,MAAM;AACpD,oBAAI;AACJ,oBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,4BAAU,KAAK,kBAAkB,QAAQ,IAAI;AAAA,gBAChD,WACQ,KAAK,MAAM,GAAG,GAAG;AACtB,4BAAU,KAAK,mBAAmB,QAAQ,IAAI;AAAA,gBACjD,OACI;AACD,sBAAI,KAAK,aAAa,KAAK,MAAM,SAAS,WAAW,SAAS,QAAQ;AAClE,yBAAK,wBAAwB,KAAK,WAAW,WAAW,SAAS,mBAAmB;AAAA,kBACvF;AACD,yBAAO,KAAK,KAAK,SAAS;AAC1B,4BAAU,KAAK,wBAAwB,IAAI;AAAA,gBAC9C;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,0BAA0B,SAAU,QAAQ,MAAM;AAC/D,oBAAI,aAAa,KAAK;AACtB,oBAAI,UAAU,KAAK,aAAa,QAAQ,IAAI;AAC5C,oBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,uBAAK,UAAS;AACd,sBAAI,qBAAqB,KAAK,QAAQ;AACtC,uBAAK,QAAQ,aAAa;AAC1B,sBAAI,QAAQ,KAAK,oBAAoB,KAAK,yBAAyB;AACnE,uBAAK,QAAQ,aAAa;AAC1B,4BAAU,KAAK,SAAS,KAAK,UAAU,UAAU,GAAG,IAAI,KAAK,kBAAkB,SAAS,KAAK,CAAC;AAAA,gBACjG;AACD,uBAAO;AAAA,cAChB;AAEK,cAAAA,QAAO,UAAU,0BAA0B,SAAU,MAAM;AACvD,oBAAI,OAAO,KAAK;AAChB,oBAAI,QAAQ,KAAK;AACjB,oBAAI,MAAM,SAAS,KAAmB,MAAM,UAAU,SAAS;AAC3D,sBAAI,KAAK,QAAQ,QAAQ;AACrB,yBAAK,wBAAwB,OAAO,WAAW,SAAS,kBAAkB;AAAA,kBAC7E,WACQ,CAAC,KAAK,QAAQ,YAAY;AAC/B,yBAAK,qBAAqB,KAAK;AAAA,kBAClC;AAAA,gBACJ,WACQ,MAAM,SAAS,GAAoB;AACxC,sBAAI,KAAK,QAAQ,UAAU,MAAM,SAAS,KAAmB,KAAK,QAAQ,yBAAyB,MAAM,KAAK,GAAG;AAC7G,yBAAK,wBAAwB,OAAO,WAAW,SAAS,kBAAkB;AAAA,kBAC7E,OACI;AACD,wBAAI,KAAK,QAAQ,UAAU,MAAM,UAAU,SAAS,SAAS,OAAO;AAChE,2BAAK,qBAAqB,KAAK;AAAA,oBAClC;AAAA,kBACJ;AAAA,gBACJ,YACS,KAAK,QAAQ,YAAY,KAAK,QAAQ,UAAU,MAAM,SAAS,KAAsB,MAAM,UAAU,SAAS;AACpH,uBAAK,wBAAwB,KAAK;AAAA,gBACrC;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,WAAW,MAAM,KAAK,CAAC;AAAA,cACpE;AACK,cAAAA,QAAO,UAAU,2BAA2B,SAAU7F,UAAS;AAC3D,oBAAI,OAAO,KAAK;AAChB,oBAAI,SAAS,CAAA;AACb,oBAAI,KAAK,KAAK,aAAa,QAAQ,KAAK;AACxC,oBAAI,KAAK,QAAQ,UAAU,GAAG,SAAS,SAAS,OAAO,YAAY;AAC/D,sBAAI,KAAK,QAAQ,iBAAiB,GAAG,IAAI,GAAG;AACxC,yBAAK,cAAc,WAAW,SAAS,aAAa;AAAA,kBACvD;AAAA,gBACJ;AACD,oBAAI,OAAO;AACX,oBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,uBAAK,UAAS;AACd,yBAAO,KAAK,oBAAoB,KAAK,yBAAyB;AAAA,gBACjE,WACQ,GAAG,SAAS,SAAS,OAAO,cAAc,CAACA,SAAQ,OAAO;AAC/D,uBAAK,OAAO,GAAG;AAAA,gBAClB;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,mBAAmB,IAAI,IAAI,CAAC;AAAA,cACzE;AACK,cAAA6F,QAAO,UAAU,+BAA+B,SAAU7F,UAAS;AAC/D,oBAAI,MAAM,EAAE,OAAOA,SAAQ,MAAK;AAChC,oBAAI,OAAO,CAAA;AACX,qBAAK,KAAK,KAAK,yBAAyB,GAAG,CAAC;AAC5C,uBAAO,KAAK,MAAM,GAAG,GAAG;AACpB,uBAAK,UAAS;AACd,uBAAK,KAAK,KAAK,yBAAyB,GAAG,CAAC;AAAA,gBAC/C;AACD,uBAAO;AAAA,cAChB;AACK,cAAA6F,QAAO,UAAU,yBAAyB,WAAY;AAClD,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,KAAK;AACxB,oBAAI,eAAe,KAAK,6BAA6B,EAAE,OAAO,MAAK,CAAE;AACrE,qBAAK,iBAAgB;AACrB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,oBAAoB,cAAc,KAAK,CAAC;AAAA,cACrF;AAEK,cAAAA,QAAO,UAAU,sBAAsB,WAAY;AAC/C,oBAAI,OAAO,KAAK;AAChB,qBAAK,OAAO,GAAG;AACf,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,eAAc,CAAE;AAAA,cAC7D;AAEK,cAAAA,QAAO,UAAU,2BAA2B,WAAY;AACpD,oBAAI,OAAO,KAAK;AAChB,oBAAI,OAAO,KAAK;AAChB,qBAAK,iBAAgB;AACrB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,oBAAoB,IAAI,CAAC;AAAA,cACtE;AAEK,cAAAA,QAAO,UAAU,gBAAgB,WAAY;AACzC,oBAAI,KAAK,QAAQ,UAAU,KAAK,aAAa,UAAU,GAAG;AACtD,uBAAK,cAAc,WAAW,SAAS,cAAc;AAAA,gBACxD;AACD,uBAAO,KAAK;cACrB;AACK,cAAAA,QAAO,UAAU,mBAAmB,WAAY;AAC5C,oBAAI,OAAO,KAAK;AAChB,oBAAI;AACJ,oBAAI,YAAY;AAChB,qBAAK,cAAc,IAAI;AACvB,qBAAK,OAAO,GAAG;AACf,oBAAI,OAAO,KAAK;AAChB,oBAAI,CAAC,KAAK,MAAM,GAAG,KAAK,KAAK,OAAO,UAAU;AAC1C,uBAAK,wBAAwB,KAAK,UAAW,CAAA;AAC7C,+BAAa,KAAK,SAAS,KAAK,WAAU,GAAI,IAAI,KAAK,eAAc,CAAE;AAAA,gBAC1E,OACI;AACD,uBAAK,OAAO,GAAG;AACf,+BAAa,KAAK;AAClB,sBAAI,KAAK,aAAa,MAAM,GAAG;AAC3B,yBAAK,UAAS;AACd,gCAAY,KAAK;kBACpB;AAAA,gBACJ;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,YAAY,MAAM,YAAY,SAAS,CAAC;AAAA,cACrF;AAEK,cAAAA,QAAO,UAAU,wBAAwB,WAAY;AACjD,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,IAAI;AACvB,oBAAI,sBAAsB,KAAK,QAAQ;AACvC,qBAAK,QAAQ,cAAc;AAC3B,oBAAIxI,QAAO,KAAK;AAChB,qBAAK,QAAQ,cAAc;AAC3B,qBAAK,cAAc,OAAO;AAC1B,qBAAK,OAAO,GAAG;AACf,oBAAI,OAAO,KAAK;AAChB,oBAAI,CAAC,KAAK,MAAM,GAAG,KAAK,KAAK,OAAO,UAAU;AAC1C,uBAAK,wBAAwB,KAAK,UAAW,CAAA;AAAA,gBAChD,OACI;AACD,uBAAK,OAAO,GAAG;AACf,sBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,yBAAK,UAAS;AAAA,kBACjB;AAAA,gBACJ;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,iBAAiBA,OAAM,IAAI,CAAC;AAAA,cACzE;AAEK,cAAAwI,QAAO,UAAU,sBAAsB,WAAY;AAC/C,oBAAI,OAAO,KAAK;AAChB,oBAAIxI;AACJ,qBAAK,cAAc,OAAO;AAC1B,qBAAK,OAAO,GAAG;AACf,oBAAI,OAAO,KAAK;AAChB,oBAAI,CAAC,KAAK,MAAM,GAAG,KAAK,KAAK,OAAO,UAAU;AAC1C,uBAAK,wBAAwB,KAAK,UAAW,CAAA;AAC7C,kBAAAA,QAAO,KAAK,SAAS,KAAK,WAAU,GAAI,IAAI,KAAK,eAAc,CAAE;AAAA,gBACpE,OACI;AACD,uBAAK,OAAO,GAAG;AACf,sBAAI,sBAAsB,KAAK,QAAQ;AACvC,uBAAK,QAAQ,cAAc;AAC3B,kBAAAA,QAAO,KAAK;AACZ,uBAAK,QAAQ,cAAc;AAAA,gBAC9B;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,eAAe,MAAMA,KAAI,CAAC;AAAA,cACvE;AAGK,cAAAwI,QAAO,UAAU,oBAAoB,WAAY;AAC7C,oBAAI,OAAO;AACX,oBAAI,OAAO;AACX,oBAAI,SAAS;AACb,oBAAI,QAAQ;AACZ,oBAAI,MAAM;AACV,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,KAAK;AACxB,qBAAK,OAAO,GAAG;AACf,oBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,uBAAK,UAAS;AAAA,gBACjB,OACI;AACD,sBAAI,KAAK,aAAa,KAAK,GAAG;AAC1B,2BAAO,KAAK;AACZ,yBAAK,UAAS;AACd,wBAAI,kBAAkB,KAAK,QAAQ;AACnC,yBAAK,QAAQ,UAAU;AACvB,wBAAI,eAAe,KAAK,6BAA6B,EAAE,OAAO,KAAI,CAAE;AACpE,yBAAK,QAAQ,UAAU;AACvB,wBAAI,aAAa,WAAW,KAAK,KAAK,aAAa,IAAI,GAAG;AACtD,0BAAI,OAAO,aAAa,CAAC;AACzB,0BAAI,KAAK,SAAS,KAAK,GAAG,SAAS,SAAS,OAAO,gBAAgB,KAAK,GAAG,SAAS,SAAS,OAAO,iBAAiB,KAAK,QAAQ,SAAS;AACvI,6BAAK,cAAc,WAAW,SAAS,wBAAwB,QAAQ;AAAA,sBAC1E;AACD,6BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,oBAAoB,cAAc,KAAK,CAAC;AAC5E,2BAAK,UAAS;AACd,6BAAO;AACP,8BAAQ,KAAK;AACb,6BAAO;AAAA,oBACV,WACQ,aAAa,WAAW,KAAK,aAAa,CAAC,EAAE,SAAS,QAAQ,KAAK,uBAAuB,IAAI,GAAG;AACtG,6BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,oBAAoB,cAAc,KAAK,CAAC;AAC5E,2BAAK,UAAS;AACd,6BAAO;AACP,8BAAQ,KAAK;AACb,6BAAO;AACP,8BAAQ;AAAA,oBACX,OACI;AACD,6BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,oBAAoB,cAAc,KAAK,CAAC;AAC5E,2BAAK,OAAO,GAAG;AAAA,oBAClB;AAAA,kBACJ,WACQ,KAAK,aAAa,OAAO,KAAK,KAAK,aAAa,KAAK,GAAG;AAC7D,2BAAO,KAAK;AACZ,wBAAI,OAAO,KAAK,UAAS,EAAG;AAC5B,wBAAI,CAAC,KAAK,QAAQ,UAAU,KAAK,UAAU,UAAU,MAAM;AACvD,6BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,WAAW,IAAI,CAAC;AACpD,2BAAK,UAAS;AACd,6BAAO;AACP,8BAAQ,KAAK;AACb,6BAAO;AAAA,oBACV,OACI;AACD,0BAAI,kBAAkB,KAAK,QAAQ;AACnC,2BAAK,QAAQ,UAAU;AACvB,0BAAI,eAAe,KAAK,iBAAiB,MAAM,EAAE,OAAO,KAAI,CAAE;AAC9D,2BAAK,QAAQ,UAAU;AACvB,0BAAI,aAAa,WAAW,KAAK,aAAa,CAAC,EAAE,SAAS,QAAQ,KAAK,aAAa,IAAI,GAAG;AACvF,+BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,oBAAoB,cAAc,IAAI,CAAC;AAC3E,6BAAK,UAAS;AACd,+BAAO;AACP,gCAAQ,KAAK;AACb,+BAAO;AAAA,sBACV,WACQ,aAAa,WAAW,KAAK,aAAa,CAAC,EAAE,SAAS,QAAQ,KAAK,uBAAuB,IAAI,GAAG;AACtG,+BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,oBAAoB,cAAc,IAAI,CAAC;AAC3E,6BAAK,UAAS;AACd,+BAAO;AACP,gCAAQ,KAAK;AACb,+BAAO;AACP,gCAAQ;AAAA,sBACX,OACI;AACD,6BAAK,iBAAgB;AACrB,+BAAO,KAAK,SAAS,MAAM,IAAI,KAAK,oBAAoB,cAAc,IAAI,CAAC;AAAA,sBAC9E;AAAA,oBACJ;AAAA,kBACJ,OACI;AACD,wBAAI,iBAAiB,KAAK;AAC1B,wBAAI,kBAAkB,KAAK,QAAQ;AACnC,yBAAK,QAAQ,UAAU;AACvB,2BAAO,KAAK,oBAAoB,KAAK,yBAAyB;AAC9D,yBAAK,QAAQ,UAAU;AACvB,wBAAI,KAAK,aAAa,IAAI,GAAG;AACzB,0BAAI,CAAC,KAAK,QAAQ,sBAAsB,KAAK,SAAS,SAAS,OAAO,sBAAsB;AACxF,6BAAK,cAAc,WAAW,SAAS,iBAAiB;AAAA,sBAC3D;AACD,2BAAK,UAAS;AACd,2BAAK,+BAA+B,IAAI;AACxC,6BAAO;AACP,8BAAQ,KAAK;AACb,6BAAO;AAAA,oBACV,WACQ,KAAK,uBAAuB,IAAI,GAAG;AACxC,0BAAI,CAAC,KAAK,QAAQ,sBAAsB,KAAK,SAAS,SAAS,OAAO,sBAAsB;AACxF,6BAAK,cAAc,WAAW,SAAS,mBAAmB;AAAA,sBAC7D;AACD,2BAAK,UAAS;AACd,2BAAK,+BAA+B,IAAI;AACxC,6BAAO;AACP,8BAAQ,KAAK;AACb,6BAAO;AACP,8BAAQ;AAAA,oBACX,OACI;AACD,0BAAI,KAAK,MAAM,GAAG,GAAG;AACjB,4BAAI,UAAU,CAAC,IAAI;AACnB,+BAAO,KAAK,MAAM,GAAG,GAAG;AACpB,+BAAK,UAAS;AACd,kCAAQ,KAAK,KAAK,oBAAoB,KAAK,yBAAyB,CAAC;AAAA,wBACxE;AACD,+BAAO,KAAK,SAAS,KAAK,UAAU,cAAc,GAAG,IAAI,KAAK,mBAAmB,OAAO,CAAC;AAAA,sBAC5F;AACD,2BAAK,OAAO,GAAG;AAAA,oBAClB;AAAA,kBACJ;AAAA,gBACJ;AACD,oBAAI,OAAO,SAAS,aAAa;AAC7B,sBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,2BAAO,KAAK;kBACf;AACD,uBAAK,OAAO,GAAG;AACf,sBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,6BAAS,KAAK;kBACjB;AAAA,gBACJ;AACD,oBAAIxI;AACJ,oBAAI,CAAC,KAAK,MAAM,GAAG,KAAK,KAAK,OAAO,UAAU;AAC1C,uBAAK,wBAAwB,KAAK,UAAW,CAAA;AAC7C,kBAAAA,QAAO,KAAK,SAAS,KAAK,WAAU,GAAI,IAAI,KAAK,eAAc,CAAE;AAAA,gBACpE,OACI;AACD,uBAAK,OAAO,GAAG;AACf,sBAAI,sBAAsB,KAAK,QAAQ;AACvC,uBAAK,QAAQ,cAAc;AAC3B,kBAAAA,QAAO,KAAK,oBAAoB,KAAK,cAAc;AACnD,uBAAK,QAAQ,cAAc;AAAA,gBAC9B;AACD,uBAAQ,OAAO,SAAS,cACpB,KAAK,SAAS,MAAM,IAAI,KAAK,aAAa,MAAM,MAAM,QAAQA,KAAI,CAAC,IACnE,QAAQ,KAAK,SAAS,MAAM,IAAI,KAAK,eAAe,MAAM,OAAOA,KAAI,CAAC,IAClE,KAAK,SAAS,MAAM,IAAI,KAAK,eAAe,MAAM,OAAOA,KAAI,CAAC;AAAA,cAC/E;AAEK,cAAAwI,QAAO,UAAU,yBAAyB,WAAY;AAClD,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,UAAU;AAC7B,oBAAI,QAAQ;AACZ,oBAAI,KAAK,UAAU,SAAS,KAAsB,CAAC,KAAK,mBAAmB;AACvE,sBAAI,KAAK,KAAK;AACd,0BAAQ;AACR,sBAAI,MAAM,MAAM,GAAG;AACnB,sBAAI,CAAC,OAAO,UAAU,eAAe,KAAK,KAAK,QAAQ,UAAU,GAAG,GAAG;AACnE,yBAAK,WAAW,WAAW,SAAS,cAAc,GAAG,IAAI;AAAA,kBAC5D;AAAA,gBACJ;AACD,qBAAK,iBAAgB;AACrB,oBAAI,UAAU,QAAQ,CAAC,KAAK,QAAQ,aAAa;AAC7C,uBAAK,WAAW,WAAW,SAAS,eAAe;AAAA,gBACtD;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,kBAAkB,KAAK,CAAC;AAAA,cACrE;AAEK,cAAAA,QAAO,UAAU,sBAAsB,WAAY;AAC/C,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,OAAO;AAC1B,oBAAI,QAAQ;AACZ,oBAAI,KAAK,UAAU,SAAS,KAAsB,CAAC,KAAK,mBAAmB;AACvE,sBAAI,KAAK,KAAK;AACd,sBAAI,MAAM,MAAM,GAAG;AACnB,sBAAI,CAAC,OAAO,UAAU,eAAe,KAAK,KAAK,QAAQ,UAAU,GAAG,GAAG;AACnE,yBAAK,WAAW,WAAW,SAAS,cAAc,GAAG,IAAI;AAAA,kBAC5D;AACD,0BAAQ;AAAA,gBACX;AACD,qBAAK,iBAAgB;AACrB,oBAAI,UAAU,QAAQ,CAAC,KAAK,QAAQ,eAAe,CAAC,KAAK,QAAQ,UAAU;AACvE,uBAAK,WAAW,WAAW,SAAS,YAAY;AAAA,gBACnD;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,eAAe,KAAK,CAAC;AAAA,cAClE;AAEK,cAAAA,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI,CAAC,KAAK,QAAQ,gBAAgB;AAC9B,uBAAK,cAAc,WAAW,SAAS,aAAa;AAAA,gBACvD;AACD,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,QAAQ;AAC3B,oBAAI,cAAe,CAAC,KAAK,MAAM,GAAG,KAAK,CAAC,KAAK,MAAM,GAAG,KAClD,CAAC,KAAK,qBAAqB,KAAK,UAAU,SAAS,KACnD,KAAK,UAAU,SAAS,KACxB,KAAK,UAAU,SAAS;AAC5B,oBAAI,WAAW,cAAc,KAAK,gBAAe,IAAK;AACtD,qBAAK,iBAAgB;AACrB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,gBAAgB,QAAQ,CAAC;AAAA,cACtE;AAEK,cAAAA,QAAO,UAAU,qBAAqB,WAAY;AAC9C,oBAAI,KAAK,QAAQ,QAAQ;AACrB,uBAAK,cAAc,WAAW,SAAS,cAAc;AAAA,gBACxD;AACD,oBAAI,OAAO,KAAK;AAChB,oBAAIxI;AACJ,qBAAK,cAAc,MAAM;AACzB,qBAAK,OAAO,GAAG;AACf,oBAAI,SAAS,KAAK;AAClB,oBAAI,CAAC,KAAK,MAAM,GAAG,KAAK,KAAK,OAAO,UAAU;AAC1C,uBAAK,wBAAwB,KAAK,UAAW,CAAA;AAC7C,kBAAAA,QAAO,KAAK,SAAS,KAAK,WAAU,GAAI,IAAI,KAAK,eAAc,CAAE;AAAA,gBACpE,OACI;AACD,uBAAK,OAAO,GAAG;AACf,kBAAAA,QAAO,KAAK;gBACf;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,cAAc,QAAQA,KAAI,CAAC;AAAA,cACxE;AAEK,cAAAwI,QAAO,UAAU,kBAAkB,WAAY;AAC3C,oBAAI,OAAO,KAAK;AAChB,oBAAI;AACJ,oBAAI,KAAK,aAAa,SAAS,GAAG;AAC9B,uBAAK,UAAS;AACd,yBAAO;AAAA,gBACV,OACI;AACD,uBAAK,cAAc,MAAM;AACzB,yBAAO,KAAK;gBACf;AACD,qBAAK,OAAO,GAAG;AACf,oBAAI,aAAa,CAAA;AACjB,uBAAO,MAAM;AACT,sBAAI,KAAK,MAAM,GAAG,KAAK,KAAK,aAAa,SAAS,KAAK,KAAK,aAAa,MAAM,GAAG;AAC9E;AAAA,kBACH;AACD,6BAAW,KAAK,KAAK,uBAAwB,CAAA;AAAA,gBAChD;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,WAAW,MAAM,UAAU,CAAC;AAAA,cACzE;AACK,cAAAA,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,QAAQ;AAC3B,qBAAK,OAAO,GAAG;AACf,oBAAI,eAAe,KAAK;AACxB,qBAAK,OAAO,GAAG;AACf,oBAAI,mBAAmB,KAAK,QAAQ;AACpC,qBAAK,QAAQ,WAAW;AACxB,oBAAI,QAAQ,CAAA;AACZ,oBAAI,eAAe;AACnB,qBAAK,OAAO,GAAG;AACf,uBAAO,MAAM;AACT,sBAAI,KAAK,MAAM,GAAG,GAAG;AACjB;AAAA,kBACH;AACD,sBAAI,SAAS,KAAK;AAClB,sBAAI,OAAO,SAAS,MAAM;AACtB,wBAAI,cAAc;AACd,2BAAK,WAAW,WAAW,SAAS,wBAAwB;AAAA,oBAC/D;AACD,mCAAe;AAAA,kBAClB;AACD,wBAAM,KAAK,MAAM;AAAA,gBACpB;AACD,qBAAK,OAAO,GAAG;AACf,qBAAK,QAAQ,WAAW;AACxB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,gBAAgB,cAAc,KAAK,CAAC;AAAA,cACjF;AAEK,cAAAA,QAAO,UAAU,yBAAyB,WAAY;AAClD,oBAAI,OAAO,KAAK;AAChB,oBAAI,OAAO,KAAK;AAChB,oBAAI;AACJ,oBAAK,KAAK,SAAS,SAAS,OAAO,cAAe,KAAK,MAAM,GAAG,GAAG;AAC/D,uBAAK,UAAS;AACd,sBAAI,KAAK;AACT,sBAAI,MAAM,MAAM,GAAG;AACnB,sBAAI,OAAO,UAAU,eAAe,KAAK,KAAK,QAAQ,UAAU,GAAG,GAAG;AAClE,yBAAK,WAAW,WAAW,SAAS,eAAe,SAAS,GAAG,IAAI;AAAA,kBACtE;AACD,uBAAK,QAAQ,SAAS,GAAG,IAAI;AAC7B,sBAAIxI,QAAO;AACX,sBAAI,KAAK,aAAa,OAAO,GAAG;AAC5B,yBAAK,wBAAwB,KAAK,SAAS;AAC3C,oBAAAA,QAAO,KAAK;kBACf,WACQ,KAAK,aAAa,UAAU,GAAG;AACpC,wBAAI,QAAQ,KAAK;AACjB,wBAAI,cAAc,KAAK;AACvB,wBAAI,KAAK,QAAQ,QAAQ;AACrB,2BAAK,wBAAwB,OAAO,WAAW,SAAS,cAAc;AAAA,oBACzE,WACQ,YAAY,WAAW;AAC5B,2BAAK,wBAAwB,OAAO,WAAW,SAAS,wBAAwB;AAAA,oBACnF;AACD,oBAAAA,QAAO;AAAA,kBACV,OACI;AACD,oBAAAA,QAAO,KAAK;kBACf;AACD,yBAAO,KAAK,QAAQ,SAAS,GAAG;AAChC,8BAAY,IAAI,KAAK,iBAAiB,IAAIA,KAAI;AAAA,gBACjD,OACI;AACD,uBAAK,iBAAgB;AACrB,8BAAY,IAAI,KAAK,oBAAoB,IAAI;AAAA,gBAChD;AACD,uBAAO,KAAK,SAAS,MAAM,SAAS;AAAA,cAC7C;AAEK,cAAAwI,QAAO,UAAU,sBAAsB,WAAY;AAC/C,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,OAAO;AAC1B,oBAAI,KAAK,mBAAmB;AACxB,uBAAK,WAAW,WAAW,SAAS,iBAAiB;AAAA,gBACxD;AACD,oBAAI,WAAW,KAAK;AACpB,qBAAK,iBAAgB;AACrB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,eAAe,QAAQ,CAAC;AAAA,cACrE;AAEK,cAAAA,QAAO,UAAU,mBAAmB,WAAY;AAC5C,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,OAAO;AAC1B,qBAAK,OAAO,GAAG;AACf,oBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,uBAAK,qBAAqB,KAAK,SAAS;AAAA,gBAC3C;AACD,oBAAI,SAAS,CAAA;AACb,oBAAI,QAAQ,KAAK,aAAa,MAAM;AACpC,oBAAI,WAAW,CAAA;AACf,yBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,sBAAI,MAAM,MAAM,OAAO,CAAC,EAAE;AAC1B,sBAAI,OAAO,UAAU,eAAe,KAAK,UAAU,GAAG,GAAG;AACrD,yBAAK,cAAc,WAAW,SAAS,kBAAkB,OAAO,CAAC,EAAE,KAAK;AAAA,kBAC3E;AACD,2BAAS,GAAG,IAAI;AAAA,gBACnB;AACD,oBAAI,KAAK,QAAQ,UAAU,MAAM,SAAS,SAAS,OAAO,YAAY;AAClE,sBAAI,KAAK,QAAQ,iBAAiB,MAAM,IAAI,GAAG;AAC3C,yBAAK,cAAc,WAAW,SAAS,mBAAmB;AAAA,kBAC7D;AAAA,gBACJ;AACD,qBAAK,OAAO,GAAG;AACf,oBAAIxI,QAAO,KAAK;AAChB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,YAAY,OAAOA,KAAI,CAAC;AAAA,cACrE;AACK,cAAAwI,QAAO,UAAU,qBAAqB,WAAY;AAC9C,qBAAK,cAAc,SAAS;AAC5B,uBAAO,KAAK;cACrB;AACK,cAAAA,QAAO,UAAU,oBAAoB,WAAY;AAC7C,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,KAAK;AACxB,oBAAIR,SAAQ,KAAK;AACjB,oBAAI,UAAU,KAAK,aAAa,OAAO,IAAI,KAAK,iBAAkB,IAAG;AACrE,oBAAI,YAAY,KAAK,aAAa,SAAS,IAAI,KAAK,mBAAoB,IAAG;AAC3E,oBAAI,CAAC,WAAW,CAAC,WAAW;AACxB,uBAAK,WAAW,WAAW,SAAS,gBAAgB;AAAA,gBACvD;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,aAAaA,QAAO,SAAS,SAAS,CAAC;AAAA,cACpF;AAEK,cAAAQ,QAAO,UAAU,yBAAyB,WAAY;AAClD,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,UAAU;AAC7B,qBAAK,iBAAgB;AACrB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,kBAAiB,CAAE;AAAA,cAChE;AAEK,cAAAA,QAAO,UAAU,iBAAiB,WAAY;AAC1C,oBAAI;AACJ,wBAAQ,KAAK,UAAU,MAAI;AAAA,kBACvB,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACD,gCAAY,KAAK;AACjB;AAAA,kBACJ,KAAK;AACD,wBAAI,QAAQ,KAAK,UAAU;AAC3B,wBAAI,UAAU,KAAK;AACf,kCAAY,KAAK;oBACpB,WACQ,UAAU,KAAK;AACpB,kCAAY,KAAK;oBACpB,WACQ,UAAU,KAAK;AACpB,kCAAY,KAAK;oBACpB,OACI;AACD,kCAAY,KAAK;oBACpB;AACD;AAAA,kBACJ,KAAK;AACD,gCAAY,KAAK,uBAAuB,KAAK,6BAA6B,KAAK;AAC/E;AAAA,kBACJ,KAAK;AACD,4BAAQ,KAAK,UAAU,OAAK;AAAA,sBACxB,KAAK;AACD,oCAAY,KAAK;AACjB;AAAA,sBACJ,KAAK;AACD,oCAAY,KAAK;AACjB;AAAA,sBACJ,KAAK;AACD,oCAAY,KAAK;AACjB;AAAA,sBACJ,KAAK;AACD,oCAAY,KAAK;AACjB;AAAA,sBACJ,KAAK;AACD,oCAAY,KAAK;AACjB;AAAA,sBACJ,KAAK;AACD,oCAAY,KAAK;AACjB;AAAA,sBACJ,KAAK;AACD,oCAAY,KAAK;AACjB;AAAA,sBACJ,KAAK;AACD,oCAAY,KAAK;AACjB;AAAA,sBACJ,KAAK;AACD,oCAAY,KAAK;AACjB;AAAA,sBACJ,KAAK;AACD,oCAAY,KAAK;AACjB;AAAA,sBACJ,KAAK;AACD,oCAAY,KAAK;AACjB;AAAA,sBACJ,KAAK;AACD,oCAAY,KAAK;AACjB;AAAA,sBACJ,KAAK;AACD,oCAAY,KAAK;AACjB;AAAA,sBACJ,KAAK;AACD,oCAAY,KAAK;AACjB;AAAA,sBACJ;AACI,oCAAY,KAAK;AACjB;AAAA,oBACP;AACD;AAAA,kBACJ;AACI,gCAAY,KAAK,qBAAqB,KAAK,SAAS;AAAA,gBAC3D;AACD,uBAAO;AAAA,cAChB;AAEK,cAAAA,QAAO,UAAU,8BAA8B,WAAY;AACvD,oBAAI,OAAO,KAAK;AAChB,qBAAK,OAAO,GAAG;AACf,oBAAIxI,QAAO,KAAK;AAChB,oBAAI,mBAAmB,KAAK,QAAQ;AACpC,oBAAI,sBAAsB,KAAK,QAAQ;AACvC,oBAAI,mBAAmB,KAAK,QAAQ;AACpC,oBAAI,yBAAyB,KAAK,QAAQ;AAC1C,qBAAK,QAAQ,WAAW;AACxB,qBAAK,QAAQ,cAAc;AAC3B,qBAAK,QAAQ,WAAW;AACxB,qBAAK,QAAQ,iBAAiB;AAC9B,uBAAO,KAAK,UAAU,SAAS,GAAa;AACxC,sBAAI,KAAK,MAAM,GAAG,GAAG;AACjB;AAAA,kBACH;AACD,kBAAAA,MAAK,KAAK,KAAK,uBAAwB,CAAA;AAAA,gBAC1C;AACD,qBAAK,OAAO,GAAG;AACf,qBAAK,QAAQ,WAAW;AACxB,qBAAK,QAAQ,cAAc;AAC3B,qBAAK,QAAQ,WAAW;AACxB,qBAAK,QAAQ,iBAAiB;AAC9B,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,eAAeA,KAAI,CAAC;AAAA,cACjE;AACK,cAAAwI,QAAO,UAAU,gBAAgB,SAAU7F,UAAS,OAAO,MAAM;AAC7D,oBAAI,MAAM,MAAM;AAChB,oBAAI,KAAK,QAAQ,QAAQ;AACrB,sBAAI,KAAK,QAAQ,iBAAiB,IAAI,GAAG;AACrC,oBAAAA,SAAQ,WAAW;AACnB,oBAAAA,SAAQ,UAAU,WAAW,SAAS;AAAA,kBACzC;AACD,sBAAI,OAAO,UAAU,eAAe,KAAKA,SAAQ,UAAU,GAAG,GAAG;AAC7D,oBAAAA,SAAQ,WAAW;AACnB,oBAAAA,SAAQ,UAAU,WAAW,SAAS;AAAA,kBACzC;AAAA,gBACJ,WACQ,CAACA,SAAQ,iBAAiB;AAC/B,sBAAI,KAAK,QAAQ,iBAAiB,IAAI,GAAG;AACrC,oBAAAA,SAAQ,kBAAkB;AAC1B,oBAAAA,SAAQ,UAAU,WAAW,SAAS;AAAA,kBACzC,WACQ,KAAK,QAAQ,yBAAyB,IAAI,GAAG;AAClD,oBAAAA,SAAQ,kBAAkB;AAC1B,oBAAAA,SAAQ,UAAU,WAAW,SAAS;AAAA,kBACzC,WACQ,OAAO,UAAU,eAAe,KAAKA,SAAQ,UAAU,GAAG,GAAG;AAClE,oBAAAA,SAAQ,WAAW;AACnB,oBAAAA,SAAQ,UAAU,WAAW,SAAS;AAAA,kBACzC;AAAA,gBACJ;AAED,oBAAI,OAAO,OAAO,mBAAmB,YAAY;AAC7C,yBAAO,eAAeA,SAAQ,UAAU,KAAK,EAAE,OAAO,MAAM,YAAY,MAAM,UAAU,MAAM,cAAc,KAAM,CAAA;AAAA,gBACrH,OACI;AACD,kBAAAA,SAAQ,SAAS,GAAG,IAAI;AAAA,gBAC3B;AAAA,cACV;AACK,cAAA6F,QAAO,UAAU,mBAAmB,SAAU,QAAQ;AAClD,oBAAI,OAAO,KAAK;AAChB,qBAAK,OAAO,KAAK;AACjB,oBAAI,MAAM,KAAK,aAAa,MAAM;AAClC,oBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,uBAAK,WAAW,WAAW,SAAS,oBAAoB;AAAA,gBAC3D;AACD,oBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,uBAAK,WAAW,WAAW,SAAS,2BAA2B;AAAA,gBAClE;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,YAAY,GAAG,CAAC;AAAA,cAC7D;AACK,cAAAA,QAAO,UAAU,uBAAuB,SAAU7F,UAAS;AACvD,oBAAI,SAAS,CAAA;AACb,oBAAI,QAAQ,KAAK,MAAM,KAAK,IAAI,KAAK,iBAAiB,MAAM,IAAI,KAAK,wBAAwB,MAAM;AACnG,yBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,uBAAK,cAAcA,UAAS,OAAO,CAAC,GAAG,OAAO,CAAC,EAAE,KAAK;AAAA,gBACzD;AACD,gBAAAA,SAAQ,SAASA,SAAQ,UAAW,iBAAiB,KAAK;AAC1D,gBAAAA,SAAQ,OAAO,KAAK,KAAK;AAAA,cAClC;AACK,cAAA6F,QAAO,UAAU,wBAAwB,SAAU,iBAAiB;AAChE,oBAAI7F;AACJ,gBAAAA,WAAU;AAAA,kBACN,QAAQ;AAAA,kBACR,QAAQ,CAAE;AAAA,kBACV;AAAA,gBACb;AACS,qBAAK,OAAO,GAAG;AACf,oBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,kBAAAA,SAAQ,WAAW;AACnB,yBAAO,KAAK,UAAU,SAAS,GAAa;AACxC,yBAAK,qBAAqBA,QAAO;AACjC,wBAAI,KAAK,MAAM,GAAG,GAAG;AACjB;AAAA,oBACH;AACD,yBAAK,OAAO,GAAG;AACf,wBAAI,KAAK,MAAM,GAAG,GAAG;AACjB;AAAA,oBACH;AAAA,kBACJ;AAAA,gBACJ;AACD,qBAAK,OAAO,GAAG;AACf,uBAAO;AAAA,kBACH,QAAQA,SAAQ;AAAA,kBAChB,QAAQA,SAAQ;AAAA,kBAChB,UAAUA,SAAQ;AAAA,kBAClB,iBAAiBA,SAAQ;AAAA,kBACzB,SAASA,SAAQ;AAAA,gBAC9B;AAAA,cACA;AACK,cAAA6F,QAAO,UAAU,qBAAqB,WAAY;AAC9C,oBAAI,QAAQ,KAAK,uBAAuB,OAAO;AAC/C,oBAAI,OAAO;AACP,sBAAI,QAAQ,KAAK,QAAQ,UAAS;AAClC,uBAAK,QAAQ;AACb,sBAAI,OAAO,KAAK,QAAQ,IAAG;AAC3B,uBAAK,QAAQ,aAAa,KAAK;AAC/B,0BAAS,MAAM,eAAe,KAAK,cAAgB,KAAK,SAAS,KAAqB,KAAK,UAAU;AAAA,gBACxG;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,2BAA2B,SAAU,sBAAsB;AACxE,oBAAI,OAAO,KAAK;AAChB,oBAAI,UAAU,KAAK,uBAAuB,OAAO;AACjD,oBAAI,SAAS;AACT,uBAAK,UAAS;AAAA,gBACjB;AACD,qBAAK,cAAc,UAAU;AAC7B,oBAAI,cAAc,UAAU,QAAQ,KAAK,MAAM,GAAG;AAClD,oBAAI,aAAa;AACb,uBAAK,UAAS;AAAA,gBACjB;AACD,oBAAI;AACJ,oBAAI,KAAK;AACT,oBAAI,kBAAkB;AACtB,oBAAI,CAAC,wBAAwB,CAAC,KAAK,MAAM,GAAG,GAAG;AAC3C,sBAAI,QAAQ,KAAK;AACjB,uBAAK,KAAK;AACV,sBAAI,KAAK,QAAQ,QAAQ;AACrB,wBAAI,KAAK,QAAQ,iBAAiB,MAAM,KAAK,GAAG;AAC5C,2BAAK,wBAAwB,OAAO,WAAW,SAAS,kBAAkB;AAAA,oBAC7E;AAAA,kBACJ,OACI;AACD,wBAAI,KAAK,QAAQ,iBAAiB,MAAM,KAAK,GAAG;AAC5C,wCAAkB;AAClB,gCAAU,WAAW,SAAS;AAAA,oBACjC,WACQ,KAAK,QAAQ,yBAAyB,MAAM,KAAK,GAAG;AACzD,wCAAkB;AAClB,gCAAU,WAAW,SAAS;AAAA,oBACjC;AAAA,kBACJ;AAAA,gBACJ;AACD,oBAAI,qBAAqB,KAAK,QAAQ;AACtC,oBAAI,qBAAqB,KAAK,QAAQ;AACtC,qBAAK,QAAQ,QAAQ;AACrB,qBAAK,QAAQ,aAAa,CAAC;AAC3B,oBAAI,mBAAmB,KAAK,sBAAsB,eAAe;AACjE,oBAAI,SAAS,iBAAiB;AAC9B,oBAAI,WAAW,iBAAiB;AAChC,kCAAkB,iBAAiB;AACnC,oBAAI,iBAAiB,SAAS;AAC1B,4BAAU,iBAAiB;AAAA,gBAC9B;AACD,oBAAI,iBAAiB,KAAK,QAAQ;AAClC,oBAAI,+BAA+B,KAAK,QAAQ;AAChD,qBAAK,QAAQ,uBAAuB,iBAAiB;AACrD,oBAAIxI,QAAO,KAAK;AAChB,oBAAI,KAAK,QAAQ,UAAU,iBAAiB;AACxC,uBAAK,qBAAqB,iBAAiB,OAAO;AAAA,gBACrD;AACD,oBAAI,KAAK,QAAQ,UAAU,UAAU;AACjC,uBAAK,wBAAwB,UAAU,OAAO;AAAA,gBACjD;AACD,qBAAK,QAAQ,SAAS;AACtB,qBAAK,QAAQ,uBAAuB;AACpC,qBAAK,QAAQ,QAAQ;AACrB,qBAAK,QAAQ,aAAa;AAC1B,uBAAO,UAAU,KAAK,SAAS,MAAM,IAAI,KAAK,yBAAyB,IAAI,QAAQA,KAAI,CAAC,IACpF,KAAK,SAAS,MAAM,IAAI,KAAK,oBAAoB,IAAI,QAAQA,OAAM,WAAW,CAAC;AAAA,cAC5F;AACK,cAAAwI,QAAO,UAAU,0BAA0B,WAAY;AACnD,oBAAI,OAAO,KAAK;AAChB,oBAAI,UAAU,KAAK,uBAAuB,OAAO;AACjD,oBAAI,SAAS;AACT,uBAAK,UAAS;AAAA,gBACjB;AACD,qBAAK,cAAc,UAAU;AAC7B,oBAAI,cAAc,UAAU,QAAQ,KAAK,MAAM,GAAG;AAClD,oBAAI,aAAa;AACb,uBAAK,UAAS;AAAA,gBACjB;AACD,oBAAI;AACJ,oBAAI,KAAK;AACT,oBAAI;AACJ,oBAAI,qBAAqB,KAAK,QAAQ;AACtC,oBAAI,qBAAqB,KAAK,QAAQ;AACtC,qBAAK,QAAQ,QAAQ;AACrB,qBAAK,QAAQ,aAAa,CAAC;AAC3B,oBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,sBAAI,QAAQ,KAAK;AACjB,uBAAM,CAAC,KAAK,QAAQ,UAAU,CAAC,eAAe,KAAK,aAAa,OAAO,IAAK,KAAK,oBAAmB,IAAK,KAAK;AAC9G,sBAAI,KAAK,QAAQ,QAAQ;AACrB,wBAAI,KAAK,QAAQ,iBAAiB,MAAM,KAAK,GAAG;AAC5C,2BAAK,wBAAwB,OAAO,WAAW,SAAS,kBAAkB;AAAA,oBAC7E;AAAA,kBACJ,OACI;AACD,wBAAI,KAAK,QAAQ,iBAAiB,MAAM,KAAK,GAAG;AAC5C,wCAAkB;AAClB,gCAAU,WAAW,SAAS;AAAA,oBACjC,WACQ,KAAK,QAAQ,yBAAyB,MAAM,KAAK,GAAG;AACzD,wCAAkB;AAClB,gCAAU,WAAW,SAAS;AAAA,oBACjC;AAAA,kBACJ;AAAA,gBACJ;AACD,oBAAI,mBAAmB,KAAK,sBAAsB,eAAe;AACjE,oBAAI,SAAS,iBAAiB;AAC9B,oBAAI,WAAW,iBAAiB;AAChC,kCAAkB,iBAAiB;AACnC,oBAAI,iBAAiB,SAAS;AAC1B,4BAAU,iBAAiB;AAAA,gBAC9B;AACD,oBAAI,iBAAiB,KAAK,QAAQ;AAClC,oBAAI,+BAA+B,KAAK,QAAQ;AAChD,qBAAK,QAAQ,uBAAuB,iBAAiB;AACrD,oBAAIxI,QAAO,KAAK;AAChB,oBAAI,KAAK,QAAQ,UAAU,iBAAiB;AACxC,uBAAK,qBAAqB,iBAAiB,OAAO;AAAA,gBACrD;AACD,oBAAI,KAAK,QAAQ,UAAU,UAAU;AACjC,uBAAK,wBAAwB,UAAU,OAAO;AAAA,gBACjD;AACD,qBAAK,QAAQ,SAAS;AACtB,qBAAK,QAAQ,uBAAuB;AACpC,qBAAK,QAAQ,QAAQ;AACrB,qBAAK,QAAQ,aAAa;AAC1B,uBAAO,UAAU,KAAK,SAAS,MAAM,IAAI,KAAK,wBAAwB,IAAI,QAAQA,KAAI,CAAC,IACnF,KAAK,SAAS,MAAM,IAAI,KAAK,mBAAmB,IAAI,QAAQA,OAAM,WAAW,CAAC;AAAA,cAC3F;AAEK,cAAAwI,QAAO,UAAU,iBAAiB,WAAY;AAC1C,oBAAI,QAAQ,KAAK;AACjB,oBAAI,OAAO,KAAK;AAChB,oBAAI,OAAO,KAAK;AAChB,oBAAI,YAAa,KAAK,SAAS,SAAS,OAAO,UAAW,KAAK,YAAY,KAAK,EAAE,MAAM,GAAG,EAAE,IAAI;AACjG,qBAAK,iBAAgB;AACrB,uBAAO,KAAK,SAAS,MAAM,YAAY,IAAI,KAAK,UAAU,MAAM,SAAS,IAAI,IAAI,KAAK,oBAAoB,IAAI,CAAC;AAAA,cACxH;AACK,cAAAA,QAAO,UAAU,0BAA0B,WAAY;AACnD,oBAAI,kBAAkB;AACtB,oBAAIxI,QAAO,CAAA;AACX,uBAAO,MAAM;AACT,sBAAI,QAAQ,KAAK;AACjB,sBAAI,MAAM,SAAS,GAAuB;AACtC;AAAA,kBACH;AACD,sBAAI,YAAY,KAAK;AACrB,kBAAAA,MAAK,KAAK,SAAS;AACnB,sBAAI,YAAY,UAAU;AAC1B,sBAAI,OAAO,cAAc,UAAU;AAC/B;AAAA,kBACH;AACD,sBAAI,cAAc,cAAc;AAC5B,yBAAK,QAAQ,SAAS;AACtB,wBAAI,iBAAiB;AACjB,2BAAK,wBAAwB,iBAAiB,WAAW,SAAS,kBAAkB;AAAA,oBACvF;AACD,wBAAI,CAAC,KAAK,QAAQ,sBAAsB;AACpC,2BAAK,wBAAwB,OAAO,WAAW,SAAS,4BAA4B;AAAA,oBACvF;AAAA,kBACJ,OACI;AACD,wBAAI,CAAC,mBAAmB,MAAM,OAAO;AACjC,wCAAkB;AAAA,oBACrB;AAAA,kBACJ;AAAA,gBACJ;AACD,uBAAOA;AAAA,cAChB;AAEK,cAAAwI,QAAO,UAAU,wBAAwB,SAAU,OAAO;AACtD,wBAAQ,MAAM,MAAI;AAAA,kBACd,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACD,2BAAO;AAAA,kBACX,KAAK;AACD,2BAAO,MAAM,UAAU;AAAA,gBAG9B;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,oBAAoB,WAAY;AAC7C,oBAAI,OAAO,KAAK;AAChB,oBAAI,cAAc;AAClB,oBAAI,qBAAqB,KAAK,QAAQ;AACtC,qBAAK,QAAQ,aAAa,CAAC;AAC3B,oBAAI,mBAAmB,KAAK;AAC5B,oBAAI,iBAAiB,OAAO,SAAS,GAAG;AACpC,uBAAK,cAAc,WAAW,SAAS,cAAc;AAAA,gBACxD;AACD,oBAAI,SAAS,KAAK,oBAAoB,gBAAgB;AACtD,qBAAK,QAAQ,aAAa;AAC1B,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,mBAAmB,MAAM,iBAAiB,QAAQ,QAAQ,WAAW,CAAC;AAAA,cACnH;AACK,cAAAA,QAAO,UAAU,oBAAoB,WAAY;AAC7C,oBAAI,OAAO,KAAK;AAChB,oBAAI,cAAc;AAClB,oBAAI,qBAAqB,KAAK,QAAQ;AACtC,qBAAK,QAAQ,aAAa,CAAC;AAC3B,oBAAI,mBAAmB,KAAK;AAC5B,oBAAI,iBAAiB,OAAO,WAAW,GAAG;AACtC,uBAAK,cAAc,WAAW,SAAS,cAAc;AAAA,gBACxD,WACQ,iBAAiB,OAAO,CAAC,aAAa,KAAK,aAAa;AAC7D,uBAAK,cAAc,WAAW,SAAS,sBAAsB;AAAA,gBAChE;AACD,oBAAI,SAAS,KAAK,oBAAoB,gBAAgB;AACtD,qBAAK,QAAQ,aAAa;AAC1B,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,mBAAmB,MAAM,iBAAiB,QAAQ,QAAQ,WAAW,CAAC;AAAA,cACnH;AACK,cAAAA,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI,OAAO,KAAK;AAChB,oBAAI,cAAc;AAClB,oBAAI,qBAAqB,KAAK,QAAQ;AACtC,qBAAK,QAAQ,aAAa;AAC1B,oBAAI,SAAS,KAAK;AAClB,qBAAK,QAAQ,aAAa;AAC1B,oBAAI,SAAS,KAAK,oBAAoB,MAAM;AAC5C,qBAAK,QAAQ,aAAa;AAC1B,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,mBAAmB,MAAM,OAAO,QAAQ,QAAQ,WAAW,CAAC;AAAA,cACzG;AAEK,cAAAA,QAAO,UAAU,sBAAsB,WAAY;AAC/C,oBAAI,QAAQ;AACZ,oBAAI,QAAQ,KAAK,UAAU;AAC3B,wBAAQ,KAAK,UAAU,MAAI;AAAA,kBACvB,KAAK;AACD,4BAAS,UAAU,OAAS,UAAU,OAAS,UAAU,OACpD,UAAU,OAAS,UAAU,OAC7B,UAAU,OAAS,UAAU,OAC7B,UAAU,QAAU,UAAU,QAC9B,UAAU,OAAS,UAAU;AAClC;AAAA,kBACJ,KAAK;AACD,4BAAS,UAAU,WAAa,UAAU,YACrC,UAAU,cAAgB,UAAU,SAAW,UAAU,SACzD,UAAU,WAAa,UAAU,UAAY,UAAU,YACvD,UAAU,UAAY,UAAU;AACrC;AAAA,gBAGP;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,OAAO;AAC1B,oBAAI,WAAW;AACf,oBAAI,WAAW;AACf,oBAAI,CAAC,KAAK,mBAAmB;AACzB,sBAAI,qBAAqB,KAAK,QAAQ;AACtC,uBAAK,QAAQ,aAAa;AAC1B,6BAAW,KAAK,MAAM,GAAG;AACzB,sBAAI,UAAU;AACV,yBAAK,UAAS;AACd,+BAAW,KAAK;kBACnB,WACQ,KAAK,uBAAuB;AACjC,+BAAW,KAAK;kBACnB;AACD,uBAAK,QAAQ,aAAa;AAAA,gBAC7B;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,gBAAgB,UAAU,QAAQ,CAAC;AAAA,cAChF;AAEK,cAAAA,QAAO,UAAU,oBAAoB,SAAU,gBAAgB;AAC3D,oBAAI,QAAQ,KAAK;AACjB,oBAAI,OAAO,KAAK;AAChB,oBAAI,OAAO;AACX,oBAAI,MAAM;AACV,oBAAI,QAAQ;AACZ,oBAAI,WAAW;AACf,oBAAI,SAAS;AACb,oBAAI,WAAW;AACf,oBAAI,UAAU;AACd,oBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,uBAAK,UAAS;AAAA,gBACjB,OACI;AACD,6BAAW,KAAK,MAAM,GAAG;AACzB,wBAAM,KAAK;AACX,sBAAI,KAAK;AACT,sBAAI,GAAG,SAAS,aAAa,KAAK,sBAAsB,KAAK,SAAS,KAAK,KAAK,MAAM,GAAG,IAAI;AACzF,4BAAQ,KAAK;AACb,+BAAW;AACX,+BAAW,KAAK,MAAM,GAAG;AACzB,wBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,2BAAK,UAAS;AAAA,oBACjB,OACI;AACD,4BAAM,KAAK;oBACd;AAAA,kBACJ;AACD,sBAAK,MAAM,SAAS,KAAuB,CAAC,KAAK,qBAAsB,MAAM,UAAU,SAAU;AAC7F,wBAAI,aAAa,KAAK,UAAU;AAChC,wBAAI,eAAe,OAAO,eAAe,OAAO,eAAe,KAAK;AAChE,gCAAU;AACV,8BAAQ,KAAK;AACb,4BAAM,KAAK;AACX,0BAAI,MAAM,SAAS,KAAsB,MAAM,UAAU,eAAe;AACpE,6BAAK,wBAAwB,OAAO,WAAW,SAAS,kBAAkB;AAAA,sBAC7E;AAAA,oBACJ;AAAA,kBACJ;AAAA,gBACJ;AACD,oBAAI,uBAAuB,KAAK,sBAAsB,KAAK,SAAS;AACpE,oBAAI,MAAM,SAAS,GAAoB;AACnC,sBAAI,MAAM,UAAU,SAAS,sBAAsB;AAC/C,2BAAO;AACP,+BAAW,KAAK,MAAM,GAAG;AACzB,0BAAM,KAAK;AACX,yBAAK,QAAQ,aAAa;AAC1B,4BAAQ,KAAK;kBAChB,WACQ,MAAM,UAAU,SAAS,sBAAsB;AACpD,2BAAO;AACP,+BAAW,KAAK,MAAM,GAAG;AACzB,0BAAM,KAAK;AACX,4BAAQ,KAAK;kBAChB;AAAA,gBACJ,WACQ,MAAM,SAAS,KAAsB,MAAM,UAAU,OAAO,sBAAsB;AACvF,yBAAO;AACP,6BAAW,KAAK,MAAM,GAAG;AACzB,wBAAM,KAAK;AACX,0BAAQ,KAAK;AACb,2BAAS;AAAA,gBACZ;AACD,oBAAI,CAAC,QAAQ,OAAO,KAAK,MAAM,GAAG,GAAG;AACjC,yBAAO;AACP,0BAAQ,UAAU,KAAK,iCAAgC,IAAK,KAAK;AACjE,2BAAS;AAAA,gBACZ;AACD,oBAAI,CAAC,MAAM;AACP,uBAAK,qBAAqB,KAAK,SAAS;AAAA,gBAC3C;AACD,oBAAI,SAAS,QAAQ;AACjB,yBAAO;AAAA,gBACV;AACD,oBAAI,CAAC,UAAU;AACX,sBAAI,YAAY,KAAK,cAAc,KAAK,WAAW,GAAG;AAClD,yBAAK,qBAAqB,OAAO,WAAW,SAAS,eAAe;AAAA,kBACvE;AACD,sBAAI,CAAC,YAAY,KAAK,cAAc,KAAK,aAAa,GAAG;AACrD,wBAAI,SAAS,YAAY,CAAC,UAAW,SAAS,MAAM,WAAY;AAC5D,2BAAK,qBAAqB,OAAO,WAAW,SAAS,wBAAwB;AAAA,oBAChF;AACD,wBAAI,eAAe,OAAO;AACtB,2BAAK,qBAAqB,OAAO,WAAW,SAAS,oBAAoB;AAAA,oBAC5E,OACI;AACD,qCAAe,QAAQ;AAAA,oBAC1B;AACD,2BAAO;AAAA,kBACV;AAAA,gBACJ;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,iBAAiB,KAAK,UAAU,OAAO,MAAM,QAAQ,CAAC;AAAA,cACnG;AACK,cAAAA,QAAO,UAAU,wBAAwB,WAAY;AACjD,oBAAIxI,QAAO,CAAA;AACX,oBAAI,iBAAiB,EAAE,OAAO;AAC9B,qBAAK,OAAO,GAAG;AACf,uBAAO,CAAC,KAAK,MAAM,GAAG,GAAG;AACrB,sBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,yBAAK,UAAS;AAAA,kBACjB,OACI;AACD,oBAAAA,MAAK,KAAK,KAAK,kBAAkB,cAAc,CAAC;AAAA,kBACnD;AAAA,gBACJ;AACD,qBAAK,OAAO,GAAG;AACf,uBAAOA;AAAA,cAChB;AACK,cAAAwI,QAAO,UAAU,iBAAiB,WAAY;AAC1C,oBAAI,OAAO,KAAK;AAChB,oBAAI,cAAc,KAAK;AACvB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,UAAU,WAAW,CAAC;AAAA,cACnE;AACK,cAAAA,QAAO,UAAU,wBAAwB,SAAU,sBAAsB;AACrE,oBAAI,OAAO,KAAK;AAChB,oBAAI,iBAAiB,KAAK,QAAQ;AAClC,qBAAK,QAAQ,SAAS;AACtB,qBAAK,cAAc,OAAO;AAC1B,oBAAI,KAAM,wBAAyB,KAAK,UAAU,SAAS,IAAuB,OAAO,KAAK,wBAAuB;AACrH,oBAAI,aAAa;AACjB,oBAAI,KAAK,aAAa,SAAS,GAAG;AAC9B,uBAAK,UAAS;AACd,+BAAa,KAAK,oBAAoB,KAAK,oCAAoC;AAAA,gBAClF;AACD,oBAAI,YAAY,KAAK;AACrB,qBAAK,QAAQ,SAAS;AACtB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,iBAAiB,IAAI,YAAY,SAAS,CAAC;AAAA,cACxF;AACK,cAAAA,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI,OAAO,KAAK;AAChB,oBAAI,iBAAiB,KAAK,QAAQ;AAClC,qBAAK,QAAQ,SAAS;AACtB,qBAAK,cAAc,OAAO;AAC1B,oBAAI,KAAM,KAAK,UAAU,SAAS,IAAsB,KAAK,wBAAyB,IAAG;AACzF,oBAAI,aAAa;AACjB,oBAAI,KAAK,aAAa,SAAS,GAAG;AAC9B,uBAAK,UAAS;AACd,+BAAa,KAAK,oBAAoB,KAAK,oCAAoC;AAAA,gBAClF;AACD,oBAAI,YAAY,KAAK;AACrB,qBAAK,QAAQ,SAAS;AACtB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,gBAAgB,IAAI,YAAY,SAAS,CAAC;AAAA,cACvF;AAGK,cAAAA,QAAO,UAAU,cAAc,WAAY;AACvC,qBAAK,QAAQ,SAAS;AACtB,qBAAK,QAAQ,WAAW;AACxB,qBAAK,QAAQ,WAAW;AACxB,oBAAI,OAAO,KAAK;AAChB,oBAAIxI,QAAO,KAAK;AAChB,uBAAO,KAAK,UAAU,SAAS,GAAa;AACxC,kBAAAA,MAAK,KAAK,KAAK,uBAAwB,CAAA;AAAA,gBAC1C;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,OAAOA,KAAI,CAAC;AAAA,cACzD;AACK,cAAAwI,QAAO,UAAU,cAAc,WAAY;AACvC,oBAAI,OAAO,KAAK;AAChB,oBAAIxI,QAAO,KAAK;AAChB,uBAAO,KAAK,UAAU,SAAS,GAAa;AACxC,kBAAAA,MAAK,KAAK,KAAK,uBAAwB,CAAA;AAAA,gBAC1C;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,OAAOA,KAAI,CAAC;AAAA,cACzD;AAEK,cAAAwI,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI,OAAO,KAAK;AAChB,oBAAI,KAAK,UAAU,SAAS,GAAuB;AAC/C,uBAAK,WAAW,WAAW,SAAS,sBAAsB;AAAA,gBAC7D;AACD,oBAAI,QAAQ,KAAK;AACjB,oBAAI,MAAM,KAAK,YAAY,KAAK;AAChC,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,QAAQ,MAAM,OAAO,GAAG,CAAC;AAAA,cACtE;AAEK,cAAAA,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI,OAAO,KAAK;AAChB,oBAAI;AACJ,oBAAI;AACJ,oBAAI,KAAK,UAAU,SAAS,GAAoB;AAC5C,6BAAW,KAAK;AAChB,0BAAQ;AACR,sBAAI,KAAK,uBAAuB,IAAI,GAAG;AACnC,yBAAK,UAAS;AACd,4BAAQ,KAAK;kBAChB;AAAA,gBACJ,OACI;AACD,6BAAW,KAAK;AAChB,0BAAQ;AACR,sBAAI,KAAK,uBAAuB,IAAI,GAAG;AACnC,yBAAK,UAAS;AACd,4BAAQ,KAAK;kBAChB,OACI;AACD,yBAAK,qBAAqB,KAAK,UAAW,CAAA;AAAA,kBAC7C;AAAA,gBACJ;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,gBAAgB,OAAO,QAAQ,CAAC;AAAA,cAC7E;AAEK,cAAAA,QAAO,UAAU,oBAAoB,WAAY;AAC7C,qBAAK,OAAO,GAAG;AACf,oBAAI,aAAa,CAAA;AACjB,uBAAO,CAAC,KAAK,MAAM,GAAG,GAAG;AACrB,6BAAW,KAAK,KAAK,qBAAsB,CAAA;AAC3C,sBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,yBAAK,OAAO,GAAG;AAAA,kBAClB;AAAA,gBACJ;AACD,qBAAK,OAAO,GAAG;AACf,uBAAO;AAAA,cAChB;AAEK,cAAAA,QAAO,UAAU,8BAA8B,WAAY;AACvD,oBAAI,OAAO,KAAK;AAChB,oBAAI,QAAQ,KAAK;AACjB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,uBAAuB,KAAK,CAAC;AAAA,cAC1E;AAEK,cAAAA,QAAO,UAAU,gCAAgC,WAAY;AACzD,oBAAI,OAAO,KAAK;AAChB,qBAAK,OAAO,GAAG;AACf,oBAAI,CAAC,KAAK,uBAAuB,IAAI,GAAG;AACpC,uBAAK,WAAW,WAAW,SAAS,wBAAwB;AAAA,gBAC/D;AACD,qBAAK,UAAS;AACd,oBAAI,QAAQ,KAAK;AACjB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,yBAAyB,KAAK,CAAC;AAAA,cAC5E;AACK,cAAAA,QAAO,UAAU,yBAAyB,WAAY;AAClD,oBAAI,KAAK,QAAQ,gBAAgB;AAC7B,uBAAK,WAAW,WAAW,SAAS,wBAAwB;AAAA,gBAC/D;AACD,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,QAAQ;AAC3B,oBAAIE;AACJ,oBAAI,aAAa,CAAA;AACjB,oBAAI,KAAK,UAAU,SAAS,GAAuB;AAE/C,kBAAAA,OAAM,KAAK;gBACd,OACI;AACD,sBAAI,KAAK,MAAM,GAAG,GAAG;AAEjB,iCAAa,WAAW,OAAO,KAAK,kBAAmB,CAAA;AAAA,kBAC1D,WACQ,KAAK,MAAM,GAAG,GAAG;AAEtB,+BAAW,KAAK,KAAK,8BAA+B,CAAA;AAAA,kBACvD,WACQ,KAAK,iBAAiB,KAAK,SAAS,KAAK,CAAC,KAAK,aAAa,SAAS,GAAG;AAE7E,+BAAW,KAAK,KAAK,4BAA6B,CAAA;AAClD,wBAAI,KAAK,MAAM,GAAG,GAAG;AACjB,2BAAK,UAAS;AACd,0BAAI,KAAK,MAAM,GAAG,GAAG;AAEjB,mCAAW,KAAK,KAAK,8BAA+B,CAAA;AAAA,sBACvD,WACQ,KAAK,MAAM,GAAG,GAAG;AAEtB,qCAAa,WAAW,OAAO,KAAK,kBAAmB,CAAA;AAAA,sBAC1D,OACI;AACD,6BAAK,qBAAqB,KAAK,SAAS;AAAA,sBAC3C;AAAA,oBACJ;AAAA,kBACJ,OACI;AACD,yBAAK,qBAAqB,KAAK,UAAW,CAAA;AAAA,kBAC7C;AACD,sBAAI,CAAC,KAAK,uBAAuB,MAAM,GAAG;AACtC,wBAAI,UAAU,KAAK,UAAU,QAAQ,WAAW,SAAS,kBAAkB,WAAW,SAAS;AAC/F,yBAAK,WAAW,SAAS,KAAK,UAAU,KAAK;AAAA,kBAChD;AACD,uBAAK,UAAS;AACd,kBAAAA,OAAM,KAAK;gBACd;AACD,qBAAK,iBAAgB;AACrB,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,kBAAkB,YAAYA,IAAG,CAAC;AAAA,cAC/E;AAEK,cAAAF,QAAO,UAAU,uBAAuB,WAAY;AAChD,oBAAI,OAAO,KAAK;AAChB,oBAAI,QAAQ,KAAK;AACjB,oBAAI,WAAW;AACf,oBAAI,KAAK,uBAAuB,IAAI,GAAG;AACnC,uBAAK,UAAS;AACd,6BAAW,KAAK;gBACnB;AACD,uBAAO,KAAK,SAAS,MAAM,IAAI,KAAK,gBAAgB,OAAO,QAAQ,CAAC;AAAA,cAC7E;AACK,cAAAA,QAAO,UAAU,yBAAyB,WAAY;AAClD,oBAAI,KAAK,QAAQ,gBAAgB;AAC7B,uBAAK,WAAW,WAAW,SAAS,wBAAwB;AAAA,gBAC/D;AACD,oBAAI,OAAO,KAAK;AAChB,qBAAK,cAAc,QAAQ;AAC3B,oBAAI;AACJ,oBAAI,KAAK,aAAa,SAAS,GAAG;AAE9B,uBAAK,UAAS;AACd,sBAAI,KAAK,aAAa,UAAU,GAAG;AAG/B,wBAAI,cAAc,KAAK,yBAAyB,IAAI;AACpD,wCAAoB,KAAK,SAAS,MAAM,IAAI,KAAK,yBAAyB,WAAW,CAAC;AAAA,kBACzF,WACQ,KAAK,aAAa,OAAO,GAAG;AAEjC,wBAAI,cAAc,KAAK,sBAAsB,IAAI;AACjD,wCAAoB,KAAK,SAAS,MAAM,IAAI,KAAK,yBAAyB,WAAW,CAAC;AAAA,kBACzF,WACQ,KAAK,uBAAuB,OAAO,GAAG;AAI3C,wBAAI,cAAc,KAAK,uBAAuB,KAAK,yBAAyB,IAAI,IAAI,KAAK;AACzF,wCAAoB,KAAK,SAAS,MAAM,IAAI,KAAK,yBAAyB,WAAW,CAAC;AAAA,kBACzF,OACI;AACD,wBAAI,KAAK,uBAAuB,MAAM,GAAG;AACrC,2BAAK,WAAW,WAAW,SAAS,iBAAiB,KAAK,UAAU,KAAK;AAAA,oBAC5E;AAID,wBAAI,cAAc,KAAK,MAAM,GAAG,IAAI,KAAK,uBAAwB,IAC7D,KAAK,MAAM,GAAG,IAAI,KAAK,0BAA0B,KAAK;AAC1D,yBAAK,iBAAgB;AACrB,wCAAoB,KAAK,SAAS,MAAM,IAAI,KAAK,yBAAyB,WAAW,CAAC;AAAA,kBACzF;AAAA,gBACJ,WACQ,KAAK,MAAM,GAAG,GAAG;AAEtB,uBAAK,UAAS;AACd,sBAAI,CAAC,KAAK,uBAAuB,MAAM,GAAG;AACtC,wBAAI,UAAU,KAAK,UAAU,QAAQ,WAAW,SAAS,kBAAkB,WAAW,SAAS;AAC/F,yBAAK,WAAW,SAAS,KAAK,UAAU,KAAK;AAAA,kBAChD;AACD,uBAAK,UAAS;AACd,sBAAIE,OAAM,KAAK;AACf,uBAAK,iBAAgB;AACrB,sCAAoB,KAAK,SAAS,MAAM,IAAI,KAAK,qBAAqBA,IAAG,CAAC;AAAA,gBAC7E,WACQ,KAAK,UAAU,SAAS,GAAiB;AAE9C,sBAAI,cAAc;AAClB,0BAAQ,KAAK,UAAU,OAAK;AAAA,oBACxB,KAAK;AAAA,oBACL,KAAK;AACD,oCAAc,KAAK,wBAAwB,EAAE,OAAO,MAAO,CAAA;AAC3D;AAAA,oBACJ,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AACD,oCAAc,KAAK;AACnB;AAAA,oBACJ;AACI,2BAAK,qBAAqB,KAAK,SAAS;AAAA,kBAC/C;AACD,sCAAoB,KAAK,SAAS,MAAM,IAAI,KAAK,uBAAuB,aAAa,CAAA,GAAI,IAAI,CAAC;AAAA,gBACjG,WACQ,KAAK,sBAAsB;AAChC,sBAAI,cAAc,KAAK;AACvB,sCAAoB,KAAK,SAAS,MAAM,IAAI,KAAK,uBAAuB,aAAa,CAAA,GAAI,IAAI,CAAC;AAAA,gBACjG,OACI;AACD,sBAAI,aAAa,CAAA;AACjB,sBAAI,SAAS;AACb,sBAAI,yBAAyB;AAC7B,uBAAK,OAAO,GAAG;AACf,yBAAO,CAAC,KAAK,MAAM,GAAG,GAAG;AACrB,6CAAyB,0BAA0B,KAAK,aAAa,SAAS;AAC9E,+BAAW,KAAK,KAAK,qBAAsB,CAAA;AAC3C,wBAAI,CAAC,KAAK,MAAM,GAAG,GAAG;AAClB,2BAAK,OAAO,GAAG;AAAA,oBAClB;AAAA,kBACJ;AACD,uBAAK,OAAO,GAAG;AACf,sBAAI,KAAK,uBAAuB,MAAM,GAAG;AAGrC,yBAAK,UAAS;AACd,6BAAS,KAAK;AACd,yBAAK,iBAAgB;AAAA,kBACxB,WACQ,wBAAwB;AAE7B,wBAAI,UAAU,KAAK,UAAU,QAAQ,WAAW,SAAS,kBAAkB,WAAW,SAAS;AAC/F,yBAAK,WAAW,SAAS,KAAK,UAAU,KAAK;AAAA,kBAChD,OACI;AAED,yBAAK,iBAAgB;AAAA,kBACxB;AACD,sCAAoB,KAAK,SAAS,MAAM,IAAI,KAAK,uBAAuB,MAAM,YAAY,MAAM,CAAC;AAAA,gBACpG;AACD,uBAAO;AAAA,cAChB;AACK,qBAAOF;AAAA,YACV,EAAA;AACD,YAAA9J,SAAQ,SAAS;AAAA,UAGX;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS;AAO/B,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,qBAAS,OAAO,WAAW,SAAS;AAEhC,kBAAI,CAAC,WAAW;AACZ,sBAAM,IAAI,MAAM,aAAa,OAAO;AAAA,cACvC;AAAA,YACJ;AACD,YAAAA,SAAQ,SAAS;AAAA,UAGX;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS;AAI/B,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,gBAAI,eAAgB,WAAY;AAC5B,uBAASiK,gBAAe;AACpB,qBAAK,SAAS;AACd,qBAAK,WAAW;AAAA,cACnB;AACD,cAAAA,cAAa,UAAU,cAAc,SAAU,OAAO;AAClD,qBAAK,OAAO,KAAK,KAAK;AAAA,cAC/B;AACK,cAAAA,cAAa,UAAU,WAAW,SAAU,OAAO;AAC/C,oBAAI,KAAK,UAAU;AACf,uBAAK,YAAY,KAAK;AAAA,gBACzB,OACI;AACD,wBAAM;AAAA,gBACT;AAAA,cACV;AACK,cAAAA,cAAa,UAAU,iBAAiB,SAAU,KAAK,QAAQ;AAC3D,oBAAI,QAAQ,IAAI,MAAM,GAAG;AACzB,oBAAI;AACA,wBAAM;AAAA,gBACT,SACM,MAAM;AAET,sBAAI,OAAO,UAAU,OAAO,gBAAgB;AACxC,4BAAQ,OAAO,OAAO,IAAI;AAC1B,2BAAO,eAAe,OAAO,UAAU,EAAE,OAAO,OAAM,CAAE;AAAA,kBAC3D;AAAA,gBACJ;AAED,uBAAO;AAAA,cAChB;AACK,cAAAA,cAAa,UAAU,cAAc,SAAU,OAAO,MAAM,KAAK,aAAa;AAC1E,oBAAI,MAAM,UAAU,OAAO,OAAO;AAClC,oBAAI,QAAQ,KAAK,eAAe,KAAK,GAAG;AACxC,sBAAM,QAAQ;AACd,sBAAM,aAAa;AACnB,sBAAM,cAAc;AACpB,uBAAO;AAAA,cAChB;AACK,cAAAA,cAAa,UAAU,aAAa,SAAU,OAAO,MAAM,KAAK,aAAa;AACzE,sBAAM,KAAK,YAAY,OAAO,MAAM,KAAK,WAAW;AAAA,cAC7D;AACK,cAAAA,cAAa,UAAU,gBAAgB,SAAU,OAAO,MAAM,KAAK,aAAa;AAC5E,oBAAI,QAAQ,KAAK,YAAY,OAAO,MAAM,KAAK,WAAW;AAC1D,oBAAI,KAAK,UAAU;AACf,uBAAK,YAAY,KAAK;AAAA,gBACzB,OACI;AACD,wBAAM;AAAA,gBACT;AAAA,cACV;AACK,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAjK,SAAQ,eAAe;AAAA,UAGjB;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS;AAG/B,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAE5D,YAAAA,SAAQ,WAAW;AAAA,cACf,gBAAgB;AAAA,cAChB,gBAAgB;AAAA,cAChB,wBAAwB;AAAA,cACxB,oBAAoB;AAAA,cACpB,0BAA0B;AAAA,cAC1B,+BAA+B;AAAA,cAC/B,sBAAsB;AAAA,cACtB,kBAAkB;AAAA,cAClB,sBAAsB;AAAA,cACtB,wBAAwB;AAAA,cACxB,wBAAwB;AAAA,cACxB,0BAA0B;AAAA,cAC1B,cAAc;AAAA,cACd,iBAAiB;AAAA,cACjB,0BAA0B;AAAA,cAC1B,0BAA0B;AAAA,cAC1B,8BAA8B;AAAA,cAC9B,eAAe;AAAA,cACf,4BAA4B;AAAA,cAC5B,0BAA0B;AAAA,cAC1B,wBAAwB;AAAA,cACxB,mBAAmB;AAAA,cACnB,qBAAqB;AAAA,cACrB,wBAAwB;AAAA,cACxB,eAAe;AAAA,cACf,qBAAqB;AAAA,cACrB,mBAAmB;AAAA,cACnB,0BAA0B;AAAA,cAC1B,mBAAmB;AAAA,cACnB,0BAA0B;AAAA,cAC1B,kBAAkB;AAAA,cAClB,6BAA6B;AAAA,cAC7B,eAAe;AAAA,cACf,iBAAiB;AAAA,cACjB,qBAAqB;AAAA,cACrB,cAAc;AAAA,cACd,gBAAgB;AAAA,cAChB,oBAAoB;AAAA,cACpB,qBAAqB;AAAA,cACrB,kBAAkB;AAAA,cAClB,iBAAiB;AAAA,cACjB,gBAAgB;AAAA,cAChB,oBAAoB;AAAA,cACpB,iBAAiB;AAAA,cACjB,iBAAiB;AAAA,cACjB,oBAAoB;AAAA,cACpB,eAAe;AAAA,cACf,sBAAsB;AAAA,cACtB,eAAe;AAAA,cACf,sBAAsB;AAAA,cACtB,kBAAkB;AAAA,cAClB,oBAAoB;AAAA,cACpB,kBAAkB;AAAA,cAClB,oBAAoB;AAAA,cACpB,iBAAiB;AAAA,cACjB,wBAAwB;AAAA,cACxB,cAAc;AAAA,cACd,oBAAoB;AAAA,YACzB;AAAA,UAGO;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS,qBAAqB;AAGpD,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,gBAAI,WAAW,oBAAoB,CAAC;AACpC,gBAAI,cAAc,oBAAoB,CAAC;AACvC,gBAAI,aAAa,oBAAoB,EAAE;AACvC,qBAAS,SAAS,IAAI;AAClB,qBAAO,mBAAmB,QAAQ,GAAG,YAAa,CAAA;AAAA,YACrD;AACD,qBAAS,WAAW,IAAI;AACpB,qBAAO,WAAW,QAAQ,EAAE;AAAA,YAC/B;AACD,gBAAI,UAAW,WAAY;AACvB,uBAASkK,SAAQlG,OAAM,SAAS;AAC5B,qBAAK,SAASA;AACd,qBAAK,eAAe;AACpB,qBAAK,eAAe;AACpB,qBAAK,WAAW;AAChB,qBAAK,SAASA,MAAK;AACnB,qBAAK,QAAQ;AACb,qBAAK,aAAcA,MAAK,SAAS,IAAK,IAAI;AAC1C,qBAAK,YAAY;AACjB,qBAAK,aAAa;cACrB;AACD,cAAAkG,SAAQ,UAAU,YAAY,WAAY;AACtC,uBAAO;AAAA,kBACH,OAAO,KAAK;AAAA,kBACZ,YAAY,KAAK;AAAA,kBACjB,WAAW,KAAK;AAAA,gBAC7B;AAAA,cACA;AACK,cAAAA,SAAQ,UAAU,eAAe,SAAU,OAAO;AAC9C,qBAAK,QAAQ,MAAM;AACnB,qBAAK,aAAa,MAAM;AACxB,qBAAK,YAAY,MAAM;AAAA,cAChC;AACK,cAAAA,SAAQ,UAAU,MAAM,WAAY;AAChC,uBAAO,KAAK,SAAS,KAAK;AAAA,cACnC;AACK,cAAAA,SAAQ,UAAU,uBAAuB,SAAU,SAAS;AACxD,oBAAI,YAAY,QAAQ;AAAE,4BAAU,WAAW,SAAS;AAAA,gBAAyB;AACjF,uBAAO,KAAK,aAAa,WAAW,KAAK,OAAO,KAAK,YAAY,KAAK,QAAQ,KAAK,YAAY,GAAG,OAAO;AAAA,cAClH;AACK,cAAAA,SAAQ,UAAU,0BAA0B,SAAU,SAAS;AAC3D,oBAAI,YAAY,QAAQ;AAAE,4BAAU,WAAW,SAAS;AAAA,gBAAyB;AACjF,qBAAK,aAAa,cAAc,KAAK,OAAO,KAAK,YAAY,KAAK,QAAQ,KAAK,YAAY,GAAG,OAAO;AAAA,cAC9G;AAEK,cAAAA,SAAQ,UAAU,wBAAwB,SAAU,QAAQ;AACxD,oBAAIH,YAAW,CAAA;AACf,oBAAI,OAAO;AACX,oBAAI,KAAK,cAAc;AACnB,kBAAAA,YAAW,CAAA;AACX,0BAAQ,KAAK,QAAQ;AACrB,wBAAM;AAAA,oBACF,OAAO;AAAA,sBACH,MAAM,KAAK;AAAA,sBACX,QAAQ,KAAK,QAAQ,KAAK,YAAY;AAAA,oBACzC;AAAA,oBACD,KAAK,CAAE;AAAA,kBACxB;AAAA,gBACU;AACD,uBAAO,CAAC,KAAK,OAAO;AAChB,sBAAI,KAAK,KAAK,OAAO,WAAW,KAAK,KAAK;AAC1C,oBAAE,KAAK;AACP,sBAAI,YAAY,UAAU,iBAAiB,EAAE,GAAG;AAC5C,wBAAI,KAAK,cAAc;AACnB,0BAAI,MAAM;AAAA,wBACN,MAAM,KAAK;AAAA,wBACX,QAAQ,KAAK,QAAQ,KAAK,YAAY;AAAA,sBAC/D;AACqB,0BAAI,QAAQ;AAAA,wBACR,WAAW;AAAA,wBACX,OAAO,CAAC,QAAQ,QAAQ,KAAK,QAAQ,CAAC;AAAA,wBACtC,OAAO,CAAC,OAAO,KAAK,QAAQ,CAAC;AAAA,wBAC7B;AAAA,sBACzB;AACqB,sBAAAA,UAAS,KAAK,KAAK;AAAA,oBACtB;AACD,wBAAI,OAAO,MAAM,KAAK,OAAO,WAAW,KAAK,KAAK,MAAM,IAAI;AACxD,wBAAE,KAAK;AAAA,oBACV;AACD,sBAAE,KAAK;AACP,yBAAK,YAAY,KAAK;AACtB,2BAAOA;AAAA,kBACV;AAAA,gBACJ;AACD,oBAAI,KAAK,cAAc;AACnB,sBAAI,MAAM;AAAA,oBACN,MAAM,KAAK;AAAA,oBACX,QAAQ,KAAK,QAAQ,KAAK;AAAA,kBAC3C;AACa,sBAAI,QAAQ;AAAA,oBACR,WAAW;AAAA,oBACX,OAAO,CAAC,QAAQ,QAAQ,KAAK,KAAK;AAAA,oBAClC,OAAO,CAAC,OAAO,KAAK,KAAK;AAAA,oBACzB;AAAA,kBACjB;AACa,kBAAAA,UAAS,KAAK,KAAK;AAAA,gBACtB;AACD,uBAAOA;AAAA,cAChB;AACK,cAAAG,SAAQ,UAAU,uBAAuB,WAAY;AACjD,oBAAIH,YAAW,CAAA;AACf,oBAAI,OAAO;AACX,oBAAI,KAAK,cAAc;AACnB,kBAAAA,YAAW,CAAA;AACX,0BAAQ,KAAK,QAAQ;AACrB,wBAAM;AAAA,oBACF,OAAO;AAAA,sBACH,MAAM,KAAK;AAAA,sBACX,QAAQ,KAAK,QAAQ,KAAK,YAAY;AAAA,oBACzC;AAAA,oBACD,KAAK,CAAE;AAAA,kBACxB;AAAA,gBACU;AACD,uBAAO,CAAC,KAAK,OAAO;AAChB,sBAAI,KAAK,KAAK,OAAO,WAAW,KAAK,KAAK;AAC1C,sBAAI,YAAY,UAAU,iBAAiB,EAAE,GAAG;AAC5C,wBAAI,OAAO,MAAQ,KAAK,OAAO,WAAW,KAAK,QAAQ,CAAC,MAAM,IAAM;AAChE,wBAAE,KAAK;AAAA,oBACV;AACD,sBAAE,KAAK;AACP,sBAAE,KAAK;AACP,yBAAK,YAAY,KAAK;AAAA,kBACzB,WACQ,OAAO,IAAM;AAElB,wBAAI,KAAK,OAAO,WAAW,KAAK,QAAQ,CAAC,MAAM,IAAM;AACjD,2BAAK,SAAS;AACd,0BAAI,KAAK,cAAc;AACnB,4BAAI,MAAM;AAAA,0BACN,MAAM,KAAK;AAAA,0BACX,QAAQ,KAAK,QAAQ,KAAK;AAAA,wBACvD;AACyB,4BAAI,QAAQ;AAAA,0BACR,WAAW;AAAA,0BACX,OAAO,CAAC,QAAQ,GAAG,KAAK,QAAQ,CAAC;AAAA,0BACjC,OAAO,CAAC,OAAO,KAAK,KAAK;AAAA,0BACzB;AAAA,wBAC7B;AACyB,wBAAAA,UAAS,KAAK,KAAK;AAAA,sBACtB;AACD,6BAAOA;AAAA,oBACV;AACD,sBAAE,KAAK;AAAA,kBACV,OACI;AACD,sBAAE,KAAK;AAAA,kBACV;AAAA,gBACJ;AAED,oBAAI,KAAK,cAAc;AACnB,sBAAI,MAAM;AAAA,oBACN,MAAM,KAAK;AAAA,oBACX,QAAQ,KAAK,QAAQ,KAAK;AAAA,kBAC3C;AACa,sBAAI,QAAQ;AAAA,oBACR,WAAW;AAAA,oBACX,OAAO,CAAC,QAAQ,GAAG,KAAK,KAAK;AAAA,oBAC7B,OAAO,CAAC,OAAO,KAAK,KAAK;AAAA,oBACzB;AAAA,kBACjB;AACa,kBAAAA,UAAS,KAAK,KAAK;AAAA,gBACtB;AACD,qBAAK,wBAAuB;AAC5B,uBAAOA;AAAA,cAChB;AACK,cAAAG,SAAQ,UAAU,eAAe,WAAY;AACzC,oBAAIH;AACJ,oBAAI,KAAK,cAAc;AACnB,kBAAAA,YAAW,CAAA;AAAA,gBACd;AACD,oBAAI,QAAS,KAAK,UAAU;AAC5B,uBAAO,CAAC,KAAK,OAAO;AAChB,sBAAI,KAAK,KAAK,OAAO,WAAW,KAAK,KAAK;AAC1C,sBAAI,YAAY,UAAU,aAAa,EAAE,GAAG;AACxC,sBAAE,KAAK;AAAA,kBACV,WACQ,YAAY,UAAU,iBAAiB,EAAE,GAAG;AACjD,sBAAE,KAAK;AACP,wBAAI,OAAO,MAAQ,KAAK,OAAO,WAAW,KAAK,KAAK,MAAM,IAAM;AAC5D,wBAAE,KAAK;AAAA,oBACV;AACD,sBAAE,KAAK;AACP,yBAAK,YAAY,KAAK;AACtB,4BAAQ;AAAA,kBACX,WACQ,OAAO,IAAM;AAClB,yBAAK,KAAK,OAAO,WAAW,KAAK,QAAQ,CAAC;AAC1C,wBAAI,OAAO,IAAM;AACb,2BAAK,SAAS;AACd,0BAAI,UAAU,KAAK,sBAAsB,CAAC;AAC1C,0BAAI,KAAK,cAAc;AACnB,wBAAAA,YAAWA,UAAS,OAAO,OAAO;AAAA,sBACrC;AACD,8BAAQ;AAAA,oBACX,WACQ,OAAO,IAAM;AAClB,2BAAK,SAAS;AACd,0BAAI,UAAU,KAAK;AACnB,0BAAI,KAAK,cAAc;AACnB,wBAAAA,YAAWA,UAAS,OAAO,OAAO;AAAA,sBACrC;AAAA,oBACJ,OACI;AACD;AAAA,oBACH;AAAA,kBACJ,WACQ,SAAS,OAAO,IAAM;AAE3B,wBAAK,KAAK,OAAO,WAAW,KAAK,QAAQ,CAAC,MAAM,MAAU,KAAK,OAAO,WAAW,KAAK,QAAQ,CAAC,MAAM,IAAO;AAExG,2BAAK,SAAS;AACd,0BAAI,UAAU,KAAK,sBAAsB,CAAC;AAC1C,0BAAI,KAAK,cAAc;AACnB,wBAAAA,YAAWA,UAAS,OAAO,OAAO;AAAA,sBACrC;AAAA,oBACJ,OACI;AACD;AAAA,oBACH;AAAA,kBACJ,WACQ,OAAO,MAAQ,CAAC,KAAK,UAAU;AACpC,wBAAI,KAAK,OAAO,MAAM,KAAK,QAAQ,GAAG,KAAK,QAAQ,CAAC,MAAM,OAAO;AAC7D,2BAAK,SAAS;AACd,0BAAI,UAAU,KAAK,sBAAsB,CAAC;AAC1C,0BAAI,KAAK,cAAc;AACnB,wBAAAA,YAAWA,UAAS,OAAO,OAAO;AAAA,sBACrC;AAAA,oBACJ,OACI;AACD;AAAA,oBACH;AAAA,kBACJ,OACI;AACD;AAAA,kBACH;AAAA,gBACJ;AACD,uBAAOA;AAAA,cAChB;AAEK,cAAAG,SAAQ,UAAU,uBAAuB,SAAU,IAAI;AACnD,wBAAQ,IAAE;AAAA,kBACN,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACD,2BAAO;AAAA,kBACX;AACI,2BAAO;AAAA,gBACd;AAAA,cACV;AACK,cAAAA,SAAQ,UAAU,2BAA2B,SAAU,IAAI;AACvD,wBAAQ,IAAE;AAAA,kBACN,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACD,2BAAO;AAAA,kBACX;AACI,2BAAO;AAAA,gBACd;AAAA,cACV;AACK,cAAAA,SAAQ,UAAU,mBAAmB,SAAU,IAAI;AAC/C,uBAAO,OAAO,UAAU,OAAO;AAAA,cACxC;AAEK,cAAAA,SAAQ,UAAU,YAAY,SAAU,IAAI;AACxC,wBAAQ,GAAG,QAAM;AAAA,kBACb,KAAK;AACD,2BAAQ,OAAO,QAAU,OAAO,QAAU,OAAO;AAAA,kBACrD,KAAK;AACD,2BAAQ,OAAO,SAAW,OAAO,SAAW,OAAO,SAC9C,OAAO,SAAW,OAAO;AAAA,kBAClC,KAAK;AACD,2BAAQ,OAAO,UAAY,OAAO,UAAY,OAAO,UAChD,OAAO,UAAY,OAAO,UAAY,OAAO;AAAA,kBACtD,KAAK;AACD,2BAAQ,OAAO,WAAa,OAAO,WAAa,OAAO,WAClD,OAAO,WAAa,OAAO,WAAa,OAAO,WAC/C,OAAO,WAAa,OAAO;AAAA,kBACpC,KAAK;AACD,2BAAQ,OAAO,YAAc,OAAO,YAAc,OAAO,YACpD,OAAO,YAAc,OAAO,YAAc,OAAO;AAAA,kBAC1D,KAAK;AACD,2BAAQ,OAAO,aAAe,OAAO,aAAe,OAAO;AAAA,kBAC/D,KAAK;AACD,2BAAQ,OAAO,cAAgB,OAAO,cAAgB,OAAO;AAAA,kBACjE,KAAK;AACD,2BAAQ,OAAO;AAAA,kBACnB;AACI,2BAAO;AAAA,gBACd;AAAA,cACV;AACK,cAAAA,SAAQ,UAAU,cAAc,SAAU,GAAG;AACzC,oBAAI,KAAK,KAAK,OAAO,WAAW,CAAC;AACjC,oBAAI,MAAM,SAAU,MAAM,OAAQ;AAC9B,sBAAI,SAAS,KAAK,OAAO,WAAW,IAAI,CAAC;AACzC,sBAAI,UAAU,SAAU,UAAU,OAAQ;AACtC,wBAAI,QAAQ;AACZ,0BAAM,QAAQ,SAAU,OAAQ,SAAS,QAAS;AAAA,kBACrD;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,SAAQ,UAAU,gBAAgB,SAAU,QAAQ;AAChD,oBAAI,MAAO,WAAW,MAAO,IAAI;AACjC,oBAAIlG,QAAO;AACX,yBAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC1B,sBAAI,CAAC,KAAK,SAAS,YAAY,UAAU,WAAW,KAAK,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG;AACrF,oBAAAA,QAAOA,QAAO,KAAK,SAAS,KAAK,OAAO,KAAK,OAAO,CAAC;AAAA,kBACxD,OACI;AACD,2BAAO;AAAA,kBACV;AAAA,gBACJ;AACD,uBAAO,OAAO,aAAaA,KAAI;AAAA,cACxC;AACK,cAAAkG,SAAQ,UAAU,6BAA6B,WAAY;AACvD,oBAAI,KAAK,KAAK,OAAO,KAAK,KAAK;AAC/B,oBAAIlG,QAAO;AAEX,oBAAI,OAAO,KAAK;AACZ,uBAAK,qBAAoB;AAAA,gBAC5B;AACD,uBAAO,CAAC,KAAK,OAAO;AAChB,uBAAK,KAAK,OAAO,KAAK,OAAO;AAC7B,sBAAI,CAAC,YAAY,UAAU,WAAW,GAAG,WAAW,CAAC,CAAC,GAAG;AACrD;AAAA,kBACH;AACD,kBAAAA,QAAOA,QAAO,KAAK,SAAS,EAAE;AAAA,gBACjC;AACD,oBAAIA,QAAO,WAAY,OAAO,KAAK;AAC/B,uBAAK,qBAAoB;AAAA,gBAC5B;AACD,uBAAO,YAAY,UAAU,cAAcA,KAAI;AAAA,cACxD;AACK,cAAAkG,SAAQ,UAAU,gBAAgB,WAAY;AAC1C,oBAAI,QAAQ,KAAK;AACjB,uBAAO,CAAC,KAAK,OAAO;AAChB,sBAAI,KAAK,KAAK,OAAO,WAAW,KAAK,KAAK;AAC1C,sBAAI,OAAO,IAAM;AAEb,yBAAK,QAAQ;AACb,2BAAO,KAAK;kBACf,WACQ,MAAM,SAAU,KAAK,OAAQ;AAElC,yBAAK,QAAQ;AACb,2BAAO,KAAK;kBACf;AACD,sBAAI,YAAY,UAAU,iBAAiB,EAAE,GAAG;AAC5C,sBAAE,KAAK;AAAA,kBACV,OACI;AACD;AAAA,kBACH;AAAA,gBACJ;AACD,uBAAO,KAAK,OAAO,MAAM,OAAO,KAAK,KAAK;AAAA,cACnD;AACK,cAAAA,SAAQ,UAAU,uBAAuB,WAAY;AACjD,oBAAI,KAAK,KAAK,YAAY,KAAK,KAAK;AACpC,oBAAI,KAAK,YAAY,UAAU,cAAc,EAAE;AAC/C,qBAAK,SAAS,GAAG;AAEjB,oBAAI;AACJ,oBAAI,OAAO,IAAM;AACb,sBAAI,KAAK,OAAO,WAAW,KAAK,KAAK,MAAM,KAAM;AAC7C,yBAAK,qBAAoB;AAAA,kBAC5B;AACD,oBAAE,KAAK;AACP,sBAAI,KAAK,OAAO,KAAK,KAAK,MAAM,KAAK;AACjC,sBAAE,KAAK;AACP,yBAAK,KAAK;kBACb,OACI;AACD,yBAAK,KAAK,cAAc,GAAG;AAC3B,wBAAI,OAAO,QAAQ,OAAO,QAAQ,CAAC,YAAY,UAAU,kBAAkB,GAAG,WAAW,CAAC,CAAC,GAAG;AAC1F,2BAAK,qBAAoB;AAAA,oBAC5B;AAAA,kBACJ;AACD,uBAAK;AAAA,gBACR;AACD,uBAAO,CAAC,KAAK,OAAO;AAChB,uBAAK,KAAK,YAAY,KAAK,KAAK;AAChC,sBAAI,CAAC,YAAY,UAAU,iBAAiB,EAAE,GAAG;AAC7C;AAAA,kBACH;AACD,uBAAK,YAAY,UAAU,cAAc,EAAE;AAC3C,wBAAM;AACN,uBAAK,SAAS,GAAG;AAEjB,sBAAI,OAAO,IAAM;AACb,yBAAK,GAAG,OAAO,GAAG,GAAG,SAAS,CAAC;AAC/B,wBAAI,KAAK,OAAO,WAAW,KAAK,KAAK,MAAM,KAAM;AAC7C,2BAAK,qBAAoB;AAAA,oBAC5B;AACD,sBAAE,KAAK;AACP,wBAAI,KAAK,OAAO,KAAK,KAAK,MAAM,KAAK;AACjC,wBAAE,KAAK;AACP,2BAAK,KAAK;oBACb,OACI;AACD,2BAAK,KAAK,cAAc,GAAG;AAC3B,0BAAI,OAAO,QAAQ,OAAO,QAAQ,CAAC,YAAY,UAAU,iBAAiB,GAAG,WAAW,CAAC,CAAC,GAAG;AACzF,6BAAK,qBAAoB;AAAA,sBAC5B;AAAA,oBACJ;AACD,0BAAM;AAAA,kBACT;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,SAAQ,UAAU,iBAAiB,SAAU,IAAI;AAE7C,oBAAI,QAAS,OAAO;AACpB,oBAAIlG,QAAO,WAAW,EAAE;AACxB,oBAAI,CAAC,KAAK,SAAS,YAAY,UAAU,aAAa,KAAK,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG;AACvF,0BAAQ;AACR,kBAAAA,QAAOA,QAAO,IAAI,WAAW,KAAK,OAAO,KAAK,OAAO,CAAC;AAGtD,sBAAI,OAAO,QAAQ,EAAE,KAAK,KAAK,CAAC,KAAK,IAAK,KAAI,YAAY,UAAU,aAAa,KAAK,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG;AAClH,oBAAAA,QAAOA,QAAO,IAAI,WAAW,KAAK,OAAO,KAAK,OAAO,CAAC;AAAA,kBACzD;AAAA,gBACJ;AACD,uBAAO;AAAA,kBACH,MAAMA;AAAA,kBACN;AAAA,gBACb;AAAA,cACA;AAEK,cAAAkG,SAAQ,UAAU,iBAAiB,WAAY;AAC3C,oBAAI;AACJ,oBAAI,QAAQ,KAAK;AAEjB,oBAAI,KAAM,KAAK,OAAO,WAAW,KAAK,MAAM,KAAQ,KAAK,qBAAoB,IAAK,KAAK,cAAa;AAGpG,oBAAI,GAAG,WAAW,GAAG;AACjB,yBAAO;AAAA,gBACV,WACQ,KAAK,UAAU,EAAE,GAAG;AACzB,yBAAO;AAAA,gBACV,WACQ,OAAO,QAAQ;AACpB,yBAAO;AAAA,gBACV,WACQ,OAAO,UAAU,OAAO,SAAS;AACtC,yBAAO;AAAA,gBACV,OACI;AACD,yBAAO;AAAA,gBACV;AACD,oBAAI,SAAS,KAAuB,QAAQ,GAAG,WAAW,KAAK,OAAQ;AACnE,sBAAI,UAAU,KAAK;AACnB,uBAAK,QAAQ;AACb,uBAAK,wBAAwB,WAAW,SAAS,0BAA0B;AAC3E,uBAAK,QAAQ;AAAA,gBAChB;AACD,uBAAO;AAAA,kBACH;AAAA,kBACA,OAAO;AAAA,kBACP,YAAY,KAAK;AAAA,kBACjB,WAAW,KAAK;AAAA,kBAChB;AAAA,kBACA,KAAK,KAAK;AAAA,gBACvB;AAAA,cACA;AAEK,cAAAA,SAAQ,UAAU,iBAAiB,WAAY;AAC3C,oBAAI,QAAQ,KAAK;AAEjB,oBAAI,MAAM,KAAK,OAAO,KAAK,KAAK;AAChC,wBAAQ,KAAG;AAAA,kBACP,KAAK;AAAA,kBACL,KAAK;AACD,wBAAI,QAAQ,KAAK;AACb,2BAAK,WAAW,KAAK,GAAG;AAAA,oBAC3B;AACD,sBAAE,KAAK;AACP;AAAA,kBACJ,KAAK;AACD,sBAAE,KAAK;AACP,wBAAI,KAAK,OAAO,KAAK,KAAK,MAAM,OAAO,KAAK,OAAO,KAAK,QAAQ,CAAC,MAAM,KAAK;AAExE,2BAAK,SAAS;AACd,4BAAM;AAAA,oBACT;AACD;AAAA,kBACJ,KAAK;AACD,sBAAE,KAAK;AACP,yBAAK,WAAW;AAChB;AAAA,kBACJ,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AACD,sBAAE,KAAK;AACP;AAAA,kBACJ;AAEI,0BAAM,KAAK,OAAO,OAAO,KAAK,OAAO,CAAC;AACtC,wBAAI,QAAQ,QAAQ;AAChB,2BAAK,SAAS;AAAA,oBACjB,OACI;AAED,4BAAM,IAAI,OAAO,GAAG,CAAC;AACrB,0BAAI,QAAQ,SAAS,QAAQ,SAAS,QAAQ,SAC1C,QAAQ,SAAS,QAAQ,SAAS,QAAQ,OAAO;AACjD,6BAAK,SAAS;AAAA,sBACjB,OACI;AAED,8BAAM,IAAI,OAAO,GAAG,CAAC;AACrB,4BAAI,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QACxD,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QACxD,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QACxD,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QACxD,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,MAAM;AAC9D,+BAAK,SAAS;AAAA,wBACjB,OACI;AAED,gCAAM,KAAK,OAAO,KAAK,KAAK;AAC5B,8BAAI,eAAe,QAAQ,GAAG,KAAK,GAAG;AAClC,8BAAE,KAAK;AAAA,0BACV;AAAA,wBACJ;AAAA,sBACJ;AAAA,oBACJ;AAAA,gBACR;AACD,oBAAI,KAAK,UAAU,OAAO;AACtB,uBAAK,qBAAoB;AAAA,gBAC5B;AACD,uBAAO;AAAA,kBACH,MAAM;AAAA,kBACN,OAAO;AAAA,kBACP,YAAY,KAAK;AAAA,kBACjB,WAAW,KAAK;AAAA,kBAChB;AAAA,kBACA,KAAK,KAAK;AAAA,gBACvB;AAAA,cACA;AAEK,cAAAA,SAAQ,UAAU,iBAAiB,SAAU,OAAO;AAChD,oBAAI,MAAM;AACV,uBAAO,CAAC,KAAK,OAAO;AAChB,sBAAI,CAAC,YAAY,UAAU,WAAW,KAAK,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG;AACvE;AAAA,kBACH;AACD,yBAAO,KAAK,OAAO,KAAK,OAAO;AAAA,gBAClC;AACD,oBAAI,IAAI,WAAW,GAAG;AAClB,uBAAK,qBAAoB;AAAA,gBAC5B;AACD,oBAAI,YAAY,UAAU,kBAAkB,KAAK,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG;AAC7E,uBAAK,qBAAoB;AAAA,gBAC5B;AACD,uBAAO;AAAA,kBACH,MAAM;AAAA,kBACN,OAAO,SAAS,OAAO,KAAK,EAAE;AAAA,kBAC9B,YAAY,KAAK;AAAA,kBACjB,WAAW,KAAK;AAAA,kBAChB;AAAA,kBACA,KAAK,KAAK;AAAA,gBACvB;AAAA,cACA;AACK,cAAAA,SAAQ,UAAU,oBAAoB,SAAU,OAAO;AACnD,oBAAI,MAAM;AACV,oBAAI;AACJ,uBAAO,CAAC,KAAK,OAAO;AAChB,uBAAK,KAAK,OAAO,KAAK,KAAK;AAC3B,sBAAI,OAAO,OAAO,OAAO,KAAK;AAC1B;AAAA,kBACH;AACD,yBAAO,KAAK,OAAO,KAAK,OAAO;AAAA,gBAClC;AACD,oBAAI,IAAI,WAAW,GAAG;AAElB,uBAAK,qBAAoB;AAAA,gBAC5B;AACD,oBAAI,CAAC,KAAK,OAAO;AACb,uBAAK,KAAK,OAAO,WAAW,KAAK,KAAK;AAEtC,sBAAI,YAAY,UAAU,kBAAkB,EAAE,KAAK,YAAY,UAAU,eAAe,EAAE,GAAG;AACzF,yBAAK,qBAAoB;AAAA,kBAC5B;AAAA,gBACJ;AACD,uBAAO;AAAA,kBACH,MAAM;AAAA,kBACN,OAAO,SAAS,KAAK,CAAC;AAAA,kBACtB,YAAY,KAAK;AAAA,kBACjB,WAAW,KAAK;AAAA,kBAChB;AAAA,kBACA,KAAK,KAAK;AAAA,gBACvB;AAAA,cACA;AACK,cAAAA,SAAQ,UAAU,mBAAmB,SAAU,QAAQ,OAAO;AAC1D,oBAAI,MAAM;AACV,oBAAI,QAAQ;AACZ,oBAAI,YAAY,UAAU,aAAa,OAAO,WAAW,CAAC,CAAC,GAAG;AAC1D,0BAAQ;AACR,wBAAM,MAAM,KAAK,OAAO,KAAK,OAAO;AAAA,gBACvC,OACI;AACD,oBAAE,KAAK;AAAA,gBACV;AACD,uBAAO,CAAC,KAAK,OAAO;AAChB,sBAAI,CAAC,YAAY,UAAU,aAAa,KAAK,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG;AACzE;AAAA,kBACH;AACD,yBAAO,KAAK,OAAO,KAAK,OAAO;AAAA,gBAClC;AACD,oBAAI,CAAC,SAAS,IAAI,WAAW,GAAG;AAE5B,uBAAK,qBAAoB;AAAA,gBAC5B;AACD,oBAAI,YAAY,UAAU,kBAAkB,KAAK,OAAO,WAAW,KAAK,KAAK,CAAC,KAAK,YAAY,UAAU,eAAe,KAAK,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG;AACzJ,uBAAK,qBAAoB;AAAA,gBAC5B;AACD,uBAAO;AAAA,kBACH,MAAM;AAAA,kBACN,OAAO,SAAS,KAAK,CAAC;AAAA,kBACtB;AAAA,kBACA,YAAY,KAAK;AAAA,kBACjB,WAAW,KAAK;AAAA,kBAChB;AAAA,kBACA,KAAK,KAAK;AAAA,gBACvB;AAAA,cACA;AACK,cAAAA,SAAQ,UAAU,yBAAyB,WAAY;AAGnD,yBAAS,IAAI,KAAK,QAAQ,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAC/C,sBAAI,KAAK,KAAK,OAAO,CAAC;AACtB,sBAAI,OAAO,OAAO,OAAO,KAAK;AAC1B,2BAAO;AAAA,kBACV;AACD,sBAAI,CAAC,YAAY,UAAU,aAAa,GAAG,WAAW,CAAC,CAAC,GAAG;AACvD,2BAAO;AAAA,kBACV;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,SAAQ,UAAU,qBAAqB,WAAY;AAC/C,oBAAI,QAAQ,KAAK;AACjB,oBAAI,KAAK,KAAK,OAAO,KAAK;AAC1B,yBAAS,OAAO,YAAY,UAAU,eAAe,GAAG,WAAW,CAAC,CAAC,KAAM,OAAO,KAAM,oEAAoE;AAC5J,oBAAI,MAAM;AACV,oBAAI,OAAO,KAAK;AACZ,wBAAM,KAAK,OAAO,KAAK,OAAO;AAC9B,uBAAK,KAAK,OAAO,KAAK,KAAK;AAK3B,sBAAI,QAAQ,KAAK;AACb,wBAAI,OAAO,OAAO,OAAO,KAAK;AAC1B,wBAAE,KAAK;AACP,6BAAO,KAAK,eAAe,KAAK;AAAA,oBACnC;AACD,wBAAI,OAAO,OAAO,OAAO,KAAK;AAC1B,wBAAE,KAAK;AACP,6BAAO,KAAK,kBAAkB,KAAK;AAAA,oBACtC;AACD,wBAAI,OAAO,OAAO,OAAO,KAAK;AAC1B,6BAAO,KAAK,iBAAiB,IAAI,KAAK;AAAA,oBACzC;AACD,wBAAI,MAAM,YAAY,UAAU,aAAa,GAAG,WAAW,CAAC,CAAC,GAAG;AAC5D,0BAAI,KAAK,0BAA0B;AAC/B,+BAAO,KAAK,iBAAiB,IAAI,KAAK;AAAA,sBACzC;AAAA,oBACJ;AAAA,kBACJ;AACD,yBAAO,YAAY,UAAU,eAAe,KAAK,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG;AAC7E,2BAAO,KAAK,OAAO,KAAK,OAAO;AAAA,kBAClC;AACD,uBAAK,KAAK,OAAO,KAAK,KAAK;AAAA,gBAC9B;AACD,oBAAI,OAAO,KAAK;AACZ,yBAAO,KAAK,OAAO,KAAK,OAAO;AAC/B,yBAAO,YAAY,UAAU,eAAe,KAAK,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG;AAC7E,2BAAO,KAAK,OAAO,KAAK,OAAO;AAAA,kBAClC;AACD,uBAAK,KAAK,OAAO,KAAK,KAAK;AAAA,gBAC9B;AACD,oBAAI,OAAO,OAAO,OAAO,KAAK;AAC1B,yBAAO,KAAK,OAAO,KAAK,OAAO;AAC/B,uBAAK,KAAK,OAAO,KAAK,KAAK;AAC3B,sBAAI,OAAO,OAAO,OAAO,KAAK;AAC1B,2BAAO,KAAK,OAAO,KAAK,OAAO;AAAA,kBAClC;AACD,sBAAI,YAAY,UAAU,eAAe,KAAK,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG;AAC1E,2BAAO,YAAY,UAAU,eAAe,KAAK,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG;AAC7E,6BAAO,KAAK,OAAO,KAAK,OAAO;AAAA,oBAClC;AAAA,kBACJ,OACI;AACD,yBAAK,qBAAoB;AAAA,kBAC5B;AAAA,gBACJ;AACD,oBAAI,YAAY,UAAU,kBAAkB,KAAK,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG;AAC7E,uBAAK,qBAAoB;AAAA,gBAC5B;AACD,uBAAO;AAAA,kBACH,MAAM;AAAA,kBACN,OAAO,WAAW,GAAG;AAAA,kBACrB,YAAY,KAAK;AAAA,kBACjB,WAAW,KAAK;AAAA,kBAChB;AAAA,kBACA,KAAK,KAAK;AAAA,gBACvB;AAAA,cACA;AAEK,cAAAA,SAAQ,UAAU,oBAAoB,WAAY;AAC9C,oBAAI,QAAQ,KAAK;AACjB,oBAAI,QAAQ,KAAK,OAAO,KAAK;AAC7B,yBAAS,OAAQ,UAAU,OAAQ,UAAU,KAAM,yCAAyC;AAC5F,kBAAE,KAAK;AACP,oBAAI,QAAQ;AACZ,oBAAI,MAAM;AACV,uBAAO,CAAC,KAAK,OAAO;AAChB,sBAAI,KAAK,KAAK,OAAO,KAAK,OAAO;AACjC,sBAAI,OAAO,OAAO;AACd,4BAAQ;AACR;AAAA,kBACH,WACQ,OAAO,MAAM;AAClB,yBAAK,KAAK,OAAO,KAAK,OAAO;AAC7B,wBAAI,CAAC,MAAM,CAAC,YAAY,UAAU,iBAAiB,GAAG,WAAW,CAAC,CAAC,GAAG;AAClE,8BAAQ,IAAE;AAAA,wBACN,KAAK;AACD,8BAAI,KAAK,OAAO,KAAK,KAAK,MAAM,KAAK;AACjC,8BAAE,KAAK;AACP,mCAAO,KAAK;0BACf,OACI;AACD,gCAAI,cAAc,KAAK,cAAc,EAAE;AACvC,gCAAI,gBAAgB,MAAM;AACtB,mCAAK,qBAAoB;AAAA,4BAC5B;AACD,mCAAO;AAAA,0BACV;AACD;AAAA,wBACJ,KAAK;AACD,8BAAI,YAAY,KAAK,cAAc,EAAE;AACrC,8BAAI,cAAc,MAAM;AACpB,iCAAK,qBAAqB,WAAW,SAAS,wBAAwB;AAAA,0BACzE;AACD,iCAAO;AACP;AAAA,wBACJ,KAAK;AACD,iCAAO;AACP;AAAA,wBACJ,KAAK;AACD,iCAAO;AACP;AAAA,wBACJ,KAAK;AACD,iCAAO;AACP;AAAA,wBACJ,KAAK;AACD,iCAAO;AACP;AAAA,wBACJ,KAAK;AACD,iCAAO;AACP;AAAA,wBACJ,KAAK;AACD,iCAAO;AACP;AAAA,wBACJ,KAAK;AAAA,wBACL,KAAK;AACD,iCAAO;AACP,+BAAK,wBAAuB;AAC5B;AAAA,wBACJ;AACI,8BAAI,MAAM,YAAY,UAAU,aAAa,GAAG,WAAW,CAAC,CAAC,GAAG;AAC5D,gCAAI,WAAW,KAAK,eAAe,EAAE;AACrC,oCAAQ,SAAS,SAAS;AAC1B,mCAAO,OAAO,aAAa,SAAS,IAAI;AAAA,0BAC3C,OACI;AACD,mCAAO;AAAA,0BACV;AACD;AAAA,sBACP;AAAA,oBACJ,OACI;AACD,wBAAE,KAAK;AACP,0BAAI,OAAO,QAAQ,KAAK,OAAO,KAAK,KAAK,MAAM,MAAM;AACjD,0BAAE,KAAK;AAAA,sBACV;AACD,2BAAK,YAAY,KAAK;AAAA,oBACzB;AAAA,kBACJ,WACQ,YAAY,UAAU,iBAAiB,GAAG,WAAW,CAAC,CAAC,GAAG;AAC/D;AAAA,kBACH,OACI;AACD,2BAAO;AAAA,kBACV;AAAA,gBACJ;AACD,oBAAI,UAAU,IAAI;AACd,uBAAK,QAAQ;AACb,uBAAK,qBAAoB;AAAA,gBAC5B;AACD,uBAAO;AAAA,kBACH,MAAM;AAAA,kBACN,OAAO;AAAA,kBACP;AAAA,kBACA,YAAY,KAAK;AAAA,kBACjB,WAAW,KAAK;AAAA,kBAChB;AAAA,kBACA,KAAK,KAAK;AAAA,gBACvB;AAAA,cACA;AAEK,cAAAA,SAAQ,UAAU,eAAe,WAAY;AACzC,oBAAI,SAAS;AACb,oBAAI,aAAa;AACjB,oBAAI,QAAQ,KAAK;AACjB,oBAAI,OAAQ,KAAK,OAAO,KAAK,MAAM;AACnC,oBAAI,OAAO;AACX,oBAAI,YAAY;AAChB,kBAAE,KAAK;AACP,uBAAO,CAAC,KAAK,OAAO;AAChB,sBAAI,KAAK,KAAK,OAAO,KAAK,OAAO;AACjC,sBAAI,OAAO,KAAK;AACZ,gCAAY;AACZ,2BAAO;AACP,iCAAa;AACb;AAAA,kBACH,WACQ,OAAO,KAAK;AACjB,wBAAI,KAAK,OAAO,KAAK,KAAK,MAAM,KAAK;AACjC,2BAAK,WAAW,KAAK,IAAI;AACzB,wBAAE,KAAK;AACP,mCAAa;AACb;AAAA,oBACH;AACD,8BAAU;AAAA,kBACb,WACQ,OAAO,MAAM;AAClB,yBAAK,KAAK,OAAO,KAAK,OAAO;AAC7B,wBAAI,CAAC,YAAY,UAAU,iBAAiB,GAAG,WAAW,CAAC,CAAC,GAAG;AAC3D,8BAAQ,IAAE;AAAA,wBACN,KAAK;AACD,oCAAU;AACV;AAAA,wBACJ,KAAK;AACD,oCAAU;AACV;AAAA,wBACJ,KAAK;AACD,oCAAU;AACV;AAAA,wBACJ,KAAK;AACD,8BAAI,KAAK,OAAO,KAAK,KAAK,MAAM,KAAK;AACjC,8BAAE,KAAK;AACP,sCAAU,KAAK;0BAClB,OACI;AACD,gCAAI,UAAU,KAAK;AACnB,gCAAI,cAAc,KAAK,cAAc,EAAE;AACvC,gCAAI,gBAAgB,MAAM;AACtB,wCAAU;AAAA,4BACb,OACI;AACD,mCAAK,QAAQ;AACb,wCAAU;AAAA,4BACb;AAAA,0BACJ;AACD;AAAA,wBACJ,KAAK;AACD,8BAAI,YAAY,KAAK,cAAc,EAAE;AACrC,8BAAI,cAAc,MAAM;AACpB,iCAAK,qBAAqB,WAAW,SAAS,wBAAwB;AAAA,0BACzE;AACD,oCAAU;AACV;AAAA,wBACJ,KAAK;AACD,oCAAU;AACV;AAAA,wBACJ,KAAK;AACD,oCAAU;AACV;AAAA,wBACJ,KAAK;AACD,oCAAU;AACV;AAAA,wBACJ;AACI,8BAAI,OAAO,KAAK;AACZ,gCAAI,YAAY,UAAU,eAAe,KAAK,OAAO,WAAW,KAAK,KAAK,CAAC,GAAG;AAE1E,mCAAK,qBAAqB,WAAW,SAAS,oBAAoB;AAAA,4BACrE;AACD,sCAAU;AAAA,0BACb,WACQ,YAAY,UAAU,aAAa,GAAG,WAAW,CAAC,CAAC,GAAG;AAE3D,iCAAK,qBAAqB,WAAW,SAAS,oBAAoB;AAAA,0BACrE,OACI;AACD,sCAAU;AAAA,0BACb;AACD;AAAA,sBACP;AAAA,oBACJ,OACI;AACD,wBAAE,KAAK;AACP,0BAAI,OAAO,QAAQ,KAAK,OAAO,KAAK,KAAK,MAAM,MAAM;AACjD,0BAAE,KAAK;AAAA,sBACV;AACD,2BAAK,YAAY,KAAK;AAAA,oBACzB;AAAA,kBACJ,WACQ,YAAY,UAAU,iBAAiB,GAAG,WAAW,CAAC,CAAC,GAAG;AAC/D,sBAAE,KAAK;AACP,wBAAI,OAAO,QAAQ,KAAK,OAAO,KAAK,KAAK,MAAM,MAAM;AACjD,wBAAE,KAAK;AAAA,oBACV;AACD,yBAAK,YAAY,KAAK;AACtB,8BAAU;AAAA,kBACb,OACI;AACD,8BAAU;AAAA,kBACb;AAAA,gBACJ;AACD,oBAAI,CAAC,YAAY;AACb,uBAAK,qBAAoB;AAAA,gBAC5B;AACD,oBAAI,CAAC,MAAM;AACP,uBAAK,WAAW;gBACnB;AACD,uBAAO;AAAA,kBACH,MAAM;AAAA,kBACN,OAAO,KAAK,OAAO,MAAM,QAAQ,GAAG,KAAK,QAAQ,SAAS;AAAA,kBAC1D;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA,YAAY,KAAK;AAAA,kBACjB,WAAW,KAAK;AAAA,kBAChB;AAAA,kBACA,KAAK,KAAK;AAAA,gBACvB;AAAA,cACA;AAEK,cAAAA,SAAQ,UAAU,aAAa,SAAU,SAAS,OAAO;AAOrD,oBAAI,mBAAmB;AACvB,oBAAI,MAAM;AACV,oBAAIC,QAAO;AACX,oBAAI,MAAM,QAAQ,GAAG,KAAK,GAAG;AACzB,wBAAM,IACD,QAAQ,8CAA8C,SAAU,IAAI,IAAI,IAAI;AAC7E,wBAAI,YAAY,SAAS,MAAM,IAAI,EAAE;AACrC,wBAAI,YAAY,SAAU;AACtB,sBAAAA,MAAK,qBAAqB,WAAW,SAAS,aAAa;AAAA,oBAC9D;AACD,wBAAI,aAAa,OAAQ;AACrB,6BAAO,OAAO,aAAa,SAAS;AAAA,oBACvC;AACD,2BAAO;AAAA,kBACxB,CAAc,EACI,QAAQ,mCAAmC,gBAAgB;AAAA,gBACnE;AAED,oBAAI;AACA,yBAAO,GAAG;AAAA,gBACb,SACM,GAAG;AACN,uBAAK,qBAAqB,WAAW,SAAS,aAAa;AAAA,gBAC9D;AAID,oBAAI;AACA,yBAAO,IAAI,OAAO,SAAS,KAAK;AAAA,gBACnC,SACM,WAAW;AAEd,yBAAO;AAAA,gBACV;AAAA,cACV;AACK,cAAAD,SAAQ,UAAU,iBAAiB,WAAY;AAC3C,oBAAI,KAAK,KAAK,OAAO,KAAK,KAAK;AAC/B,yBAAS,OAAO,OAAO,KAAK,oDAAoD;AAChF,oBAAI,MAAM,KAAK,OAAO,KAAK,OAAO;AAClC,oBAAI,cAAc;AAClB,oBAAI,aAAa;AACjB,uBAAO,CAAC,KAAK,OAAO;AAChB,uBAAK,KAAK,OAAO,KAAK,OAAO;AAC7B,yBAAO;AACP,sBAAI,OAAO,MAAM;AACb,yBAAK,KAAK,OAAO,KAAK,OAAO;AAE7B,wBAAI,YAAY,UAAU,iBAAiB,GAAG,WAAW,CAAC,CAAC,GAAG;AAC1D,2BAAK,qBAAqB,WAAW,SAAS,kBAAkB;AAAA,oBACnE;AACD,2BAAO;AAAA,kBACV,WACQ,YAAY,UAAU,iBAAiB,GAAG,WAAW,CAAC,CAAC,GAAG;AAC/D,yBAAK,qBAAqB,WAAW,SAAS,kBAAkB;AAAA,kBACnE,WACQ,aAAa;AAClB,wBAAI,OAAO,KAAK;AACZ,oCAAc;AAAA,oBACjB;AAAA,kBACJ,OACI;AACD,wBAAI,OAAO,KAAK;AACZ,mCAAa;AACb;AAAA,oBACH,WACQ,OAAO,KAAK;AACjB,oCAAc;AAAA,oBACjB;AAAA,kBACJ;AAAA,gBACJ;AACD,oBAAI,CAAC,YAAY;AACb,uBAAK,qBAAqB,WAAW,SAAS,kBAAkB;AAAA,gBACnE;AAED,uBAAO,IAAI,OAAO,GAAG,IAAI,SAAS,CAAC;AAAA,cAC5C;AACK,cAAAA,SAAQ,UAAU,kBAAkB,WAAY;AAC5C,oBAAI,MAAM;AACV,oBAAI,QAAQ;AACZ,uBAAO,CAAC,KAAK,OAAO;AAChB,sBAAI,KAAK,KAAK,OAAO,KAAK,KAAK;AAC/B,sBAAI,CAAC,YAAY,UAAU,iBAAiB,GAAG,WAAW,CAAC,CAAC,GAAG;AAC3D;AAAA,kBACH;AACD,oBAAE,KAAK;AACP,sBAAI,OAAO,QAAQ,CAAC,KAAK,IAAG,GAAI;AAC5B,yBAAK,KAAK,OAAO,KAAK,KAAK;AAC3B,wBAAI,OAAO,KAAK;AACZ,wBAAE,KAAK;AACP,0BAAI,UAAU,KAAK;AACnB,0BAAI,OAAO,KAAK,cAAc,GAAG;AACjC,0BAAI,SAAS,MAAM;AACf,iCAAS;AACT,6BAAK,OAAO,OAAO,UAAU,KAAK,OAAO,EAAE,SAAS;AAChD,iCAAO,KAAK,OAAO,OAAO;AAAA,wBAC7B;AAAA,sBACJ,OACI;AACD,6BAAK,QAAQ;AACb,iCAAS;AACT,+BAAO;AAAA,sBACV;AACD,2BAAK,wBAAuB;AAAA,oBAC/B,OACI;AACD,6BAAO;AACP,2BAAK,wBAAuB;AAAA,oBAC/B;AAAA,kBACJ,OACI;AACD,6BAAS;AACT,2BAAO;AAAA,kBACV;AAAA,gBACJ;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,SAAQ,UAAU,aAAa,WAAY;AACvC,oBAAI,QAAQ,KAAK;AACjB,oBAAI,UAAU,KAAK;AACnB,oBAAI,QAAQ,KAAK;AACjB,oBAAI,QAAQ,KAAK,WAAW,SAAS,KAAK;AAC1C,uBAAO;AAAA,kBACH,MAAM;AAAA,kBACN,OAAO;AAAA,kBACP;AAAA,kBACA;AAAA,kBACA,OAAO;AAAA,kBACP,YAAY,KAAK;AAAA,kBACjB,WAAW,KAAK;AAAA,kBAChB;AAAA,kBACA,KAAK,KAAK;AAAA,gBACvB;AAAA,cACA;AACK,cAAAA,SAAQ,UAAU,MAAM,WAAY;AAChC,oBAAI,KAAK,OAAO;AACZ,yBAAO;AAAA,oBACH,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,YAAY,KAAK;AAAA,oBACjB,WAAW,KAAK;AAAA,oBAChB,OAAO,KAAK;AAAA,oBACZ,KAAK,KAAK;AAAA,kBAC3B;AAAA,gBACU;AACD,oBAAI,KAAK,KAAK,OAAO,WAAW,KAAK,KAAK;AAC1C,oBAAI,YAAY,UAAU,kBAAkB,EAAE,GAAG;AAC7C,yBAAO,KAAK;gBACf;AAED,oBAAI,OAAO,MAAQ,OAAO,MAAQ,OAAO,IAAM;AAC3C,yBAAO,KAAK;gBACf;AAED,oBAAI,OAAO,MAAQ,OAAO,IAAM;AAC5B,yBAAO,KAAK;gBACf;AAGD,oBAAI,OAAO,IAAM;AACb,sBAAI,YAAY,UAAU,eAAe,KAAK,OAAO,WAAW,KAAK,QAAQ,CAAC,CAAC,GAAG;AAC9E,2BAAO,KAAK;kBACf;AACD,yBAAO,KAAK;gBACf;AACD,oBAAI,YAAY,UAAU,eAAe,EAAE,GAAG;AAC1C,yBAAO,KAAK;gBACf;AAGD,oBAAI,OAAO,MAAS,OAAO,OAAQ,KAAK,WAAW,KAAK,WAAW,SAAS,CAAC,MAAM,MAAO;AACtF,yBAAO,KAAK;gBACf;AAED,oBAAI,MAAM,SAAU,KAAK,OAAQ;AAC7B,sBAAI,YAAY,UAAU,kBAAkB,KAAK,YAAY,KAAK,KAAK,CAAC,GAAG;AACvE,2BAAO,KAAK;kBACf;AAAA,gBACJ;AACD,uBAAO,KAAK;cACrB;AACK,qBAAOA;AAAA,YACV,EAAA;AACD,YAAAlK,SAAQ,UAAU;AAAA,UAGZ;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS;AAG/B,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,YAAAA,SAAQ,YAAY;AACpB,YAAAA,SAAQ;AAAA,cAAU;AAAA;AAAA,YAAuB,IAAG;AAC5C,YAAAA,SAAQ;AAAA,cAAU;AAAA;AAAA,YAAY,IAAG;AACjC,YAAAA,SAAQ;AAAA,cAAU;AAAA;AAAA,YAAmB,IAAG;AACxC,YAAAA,SAAQ;AAAA,cAAU;AAAA;AAAA,YAAgB,IAAG;AACrC,YAAAA,SAAQ;AAAA,cAAU;AAAA;AAAA,YAAoB,IAAG;AACzC,YAAAA,SAAQ;AAAA,cAAU;AAAA;AAAA,YAAuB,IAAG;AAC5C,YAAAA,SAAQ;AAAA,cAAU;AAAA;AAAA,YAAmB,IAAG;AACxC,YAAAA,SAAQ;AAAA,cAAU;AAAA;AAAA,YAAsB,IAAG;AAC3C,YAAAA,SAAQ;AAAA,cAAU;AAAA;AAAA,YAA0B,IAAG;AAC/C,YAAAA,SAAQ;AAAA,cAAU;AAAA;AAAA,YAAkB,IAAG;AAAA,UAGjC;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS;AAI/B,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,YAAAA,SAAQ,gBAAgB;AAAA,cACpB,MAAM;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,cACN,IAAI;AAAA,cACJ,MAAM;AAAA,cACN,OAAO;AAAA,cACP,MAAM;AAAA,cACN,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,KAAK;AAAA,cACL,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,KAAK;AAAA,cACL,MAAM;AAAA,cACN,MAAM;AAAA,cACN,OAAO;AAAA,cACP,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,MAAM;AAAA,cACN,KAAK;AAAA,cACL,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,MAAM;AAAA,cACN,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,MAAM;AAAA,cACN,MAAM;AAAA,cACN,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,OAAO;AAAA,cACP,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,MAAM;AAAA,cACN,KAAK;AAAA,cACL,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,OAAO;AAAA,cACP,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,MAAM;AAAA,cACN,KAAK;AAAA,cACL,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,MAAM;AAAA,cACN,OAAO;AAAA,cACP,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM;AAAA,cACN,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,cACN,OAAO;AAAA,cACP,OAAO;AAAA,cACP,SAAS;AAAA,cACT,MAAM;AAAA,cACN,KAAK;AAAA,cACL,OAAO;AAAA,cACP,MAAM;AAAA,cACN,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,IAAI;AAAA,cACJ,IAAI;AAAA,cACJ,IAAI;AAAA,cACJ,SAAS;AAAA,cACT,IAAI;AAAA,cACJ,KAAK;AAAA,cACL,OAAO;AAAA,cACP,KAAK;AAAA,cACL,SAAS;AAAA,cACT,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,cACN,OAAO;AAAA,cACP,OAAO;AAAA,cACP,SAAS;AAAA,cACT,MAAM;AAAA,cACN,KAAK;AAAA,cACL,OAAO;AAAA,cACP,MAAM;AAAA,cACN,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,IAAI;AAAA,cACJ,IAAI;AAAA,cACJ,IAAI;AAAA,cACJ,SAAS;AAAA,cACT,IAAI;AAAA,cACJ,KAAK;AAAA,cACL,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,KAAK;AAAA,cACL,SAAS;AAAA,cACT,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,OAAO;AAAA,cACP,UAAU;AAAA,cACV,OAAO;AAAA,cACP,KAAK;AAAA,cACL,MAAM;AAAA,cACN,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,OAAO;AAAA,cACP,OAAO;AAAA,cACP,OAAO;AAAA,cACP,OAAO;AAAA,cACP,OAAO;AAAA,cACP,OAAO;AAAA,cACP,OAAO;AAAA,cACP,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,cACN,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,OAAO;AAAA,cACP,SAAS;AAAA,cACT,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM;AAAA,cACN,OAAO;AAAA,cACP,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,OAAO;AAAA,cACP,OAAO;AAAA,cACP,OAAO;AAAA,cACP,MAAM;AAAA,cACN,OAAO;AAAA,cACP,IAAI;AAAA,cACJ,MAAM;AAAA,cACN,KAAK;AAAA,cACL,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,MAAM;AAAA,cACN,OAAO;AAAA,cACP,KAAK;AAAA,cACL,KAAK;AAAA,cACL,IAAI;AAAA,cACJ,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,QAAQ;AAAA,cACR,KAAK;AAAA,cACL,MAAM;AAAA,cACN,OAAO;AAAA,cACP,IAAI;AAAA,cACJ,OAAO;AAAA,cACP,IAAI;AAAA,cACJ,IAAI;AAAA,cACJ,KAAK;AAAA,cACL,KAAK;AAAA,cACL,MAAM;AAAA,cACN,MAAM;AAAA,cACN,MAAM;AAAA,cACN,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,MAAM;AAAA,cACN,MAAM;AAAA,cACN,OAAO;AAAA,cACP,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,KAAK;AAAA,cACL,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,MAAM;AAAA,cACN,MAAM;AAAA,YACX;AAAA,UAGO;AAAA;AAAA;AAAA,UAED,SAASsC,SAAQtC,UAAS,qBAAqB;AAGpD,mBAAO,eAAeA,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,gBAAI,kBAAkB,oBAAoB,EAAE;AAC5C,gBAAI,YAAY,oBAAoB,EAAE;AACtC,gBAAI,UAAU,oBAAoB,EAAE;AACpC,gBAAI,SAAU,WAAY;AACtB,uBAASoK,UAAS;AACd,qBAAK,SAAS;AACd,qBAAK,QAAQ,KAAK,QAAQ;AAAA,cAC7B;AAED,cAAAA,QAAO,UAAU,2BAA2B,SAAU,GAAG;AACrD,uBAAO;AAAA,kBAAC;AAAA,kBAAK;AAAA,kBAAK;AAAA,kBAAK;AAAA,kBAAM;AAAA,kBAAU;AAAA,kBAAc;AAAA,kBACjD;AAAA,kBAAU;AAAA,kBAAQ;AAAA,kBAAU;AAAA,kBAAS;AAAA;AAAA,kBAErC;AAAA,kBAAK;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAO;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAO;AAAA,kBAAO;AAAA,kBACxD;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA;AAAA,kBAElB;AAAA,kBAAK;AAAA,kBAAK;AAAA,kBAAK;AAAA,kBAAM;AAAA,kBAAK;AAAA,kBAAK;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAO;AAAA,kBAC9D;AAAA,kBAAK;AAAA,kBAAK;AAAA,kBAAK;AAAA,kBAAK;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAK;AAAA,kBAAK;AAAA,kBAAO;AAAA,kBAAM;AAAA,kBACvD;AAAA,kBAAM;AAAA,kBAAK;AAAA,kBAAK;AAAA,kBAAM;AAAA,gBAAK,EAAE,QAAQ,CAAC,KAAK;AAAA,cACxD;AAGK,cAAAA,QAAO,UAAU,eAAe,WAAY;AACxC,oBAAI,WAAW,KAAK,OAAO,KAAK,OAAO,SAAS,CAAC;AACjD,oBAAI,QAAS,aAAa;AAC1B,wBAAQ,UAAQ;AAAA,kBACZ,KAAK;AAAA,kBACL,KAAK;AACD,4BAAQ;AACR;AAAA,kBACJ,KAAK;AACD,wBAAI,UAAU,KAAK,OAAO,KAAK,QAAQ,CAAC;AACxC,4BAAS,YAAY,QAAQ,YAAY,WAAW,YAAY,SAAS,YAAY;AACrF;AAAA,kBACJ,KAAK;AAGD,4BAAQ;AACR,wBAAI,KAAK,OAAO,KAAK,QAAQ,CAAC,MAAM,YAAY;AAE5C,0BAAI,QAAQ,KAAK,OAAO,KAAK,QAAQ,CAAC;AACtC,8BAAQ,QAAQ,CAAC,KAAK,yBAAyB,KAAK,IAAI;AAAA,oBAC3D,WACQ,KAAK,OAAO,KAAK,QAAQ,CAAC,MAAM,YAAY;AAEjD,0BAAI,QAAQ,KAAK,OAAO,KAAK,QAAQ,CAAC;AACtC,8BAAQ,QAAQ,CAAC,KAAK,yBAAyB,KAAK,IAAI;AAAA,oBAC3D;AACD;AAAA,gBAGP;AACD,uBAAO;AAAA,cAChB;AACK,cAAAA,QAAO,UAAU,OAAO,SAAU,OAAO;AACrC,oBAAI,MAAM,SAAS,KAAsB,MAAM,SAAS,GAAiB;AACrE,sBAAI,MAAM,UAAU,KAAK;AACrB,yBAAK,QAAQ,KAAK,OAAO;AAAA,kBAC5B,WACQ,MAAM,UAAU,KAAK;AAC1B,yBAAK,QAAQ,KAAK,OAAO;AAAA,kBAC5B;AACD,uBAAK,OAAO,KAAK,MAAM,KAAK;AAAA,gBAC/B,OACI;AACD,uBAAK,OAAO,KAAK,IAAI;AAAA,gBACxB;AAAA,cACV;AACK,qBAAOA;AAAA,YACV,EAAA;AACD,gBAAI,YAAa,WAAY;AACzB,uBAASC,WAAUrG,OAAM,QAAQ;AAC7B,qBAAK,eAAe,IAAI,gBAAgB,aAAY;AACpD,qBAAK,aAAa,WAAW,SAAU,OAAO,OAAO,aAAa,aAAa,OAAO,WAAY;AAClG,qBAAK,UAAU,IAAI,UAAU,QAAQA,OAAM,KAAK,YAAY;AAC5D,qBAAK,QAAQ,eAAe,SAAU,OAAO,OAAO,YAAY,aAAa,OAAO,UAAW;AAC/F,qBAAK,aAAa,SAAU,OAAO,OAAO,UAAU,aAAa,OAAO,QAAS;AACjF,qBAAK,WAAW,SAAU,OAAO,OAAO,QAAQ,aAAa,OAAO,MAAO;AAC3E,qBAAK,SAAS;AACd,qBAAK,SAAS,IAAI;cACrB;AACD,cAAAqG,WAAU,UAAU,SAAS,WAAY;AACrC,uBAAO,KAAK,aAAa;AAAA,cAClC;AACK,cAAAA,WAAU,UAAU,eAAe,WAAY;AAC3C,oBAAI,KAAK,OAAO,WAAW,GAAG;AAC1B,sBAAIN,YAAW,KAAK,QAAQ,aAAY;AACxC,sBAAI,KAAK,QAAQ,cAAc;AAC3B,6BAAS,IAAI,GAAG,IAAIA,UAAS,QAAQ,EAAE,GAAG;AACtC,0BAAI,IAAIA,UAAS,CAAC;AAClB,0BAAI,QAAQ,KAAK,QAAQ,OAAO,MAAM,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAC5D,0BAAI,UAAU;AAAA,wBACV,MAAM,EAAE,YAAY,iBAAiB;AAAA,wBACrC;AAAA,sBACzB;AACqB,0BAAI,KAAK,YAAY;AACjB,gCAAQ,QAAQ,EAAE;AAAA,sBACrB;AACD,0BAAI,KAAK,UAAU;AACf,gCAAQ,MAAM,EAAE;AAAA,sBACnB;AACD,2BAAK,OAAO,KAAK,OAAO;AAAA,oBAC3B;AAAA,kBACJ;AACD,sBAAI,CAAC,KAAK,QAAQ,OAAO;AACrB,wBAAI,MAAM;AACV,wBAAI,KAAK,UAAU;AACf,4BAAM;AAAA,wBACF,OAAO;AAAA,0BACH,MAAM,KAAK,QAAQ;AAAA,0BACnB,QAAQ,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAAA,wBAC7C;AAAA,wBACD,KAAK,CAAE;AAAA,sBAChC;AAAA,oBACkB;AACD,wBAAI,aAAc,KAAK,QAAQ,OAAO,KAAK,QAAQ,KAAK,MAAM,OAAQ,KAAK,OAAO,aAAY;AAC9F,wBAAI,QAAQ,aAAa,KAAK,QAAQ,WAAU,IAAK,KAAK,QAAQ;AAClE,yBAAK,OAAO,KAAK,KAAK;AACtB,wBAAI,QAAQ;AAAA,sBACR,MAAM,QAAQ,UAAU,MAAM,IAAI;AAAA,sBAClC,OAAO,KAAK,QAAQ,OAAO,MAAM,MAAM,OAAO,MAAM,GAAG;AAAA,oBAC5E;AACiB,wBAAI,KAAK,YAAY;AACjB,4BAAM,QAAQ,CAAC,MAAM,OAAO,MAAM,GAAG;AAAA,oBACxC;AACD,wBAAI,KAAK,UAAU;AACf,0BAAI,MAAM;AAAA,wBACN,MAAM,KAAK,QAAQ;AAAA,wBACnB,QAAQ,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAAA,sBACnE;AACqB,4BAAM,MAAM;AAAA,oBACf;AACD,wBAAI,MAAM,SAAS,GAA2B;AAC1C,0BAAI,UAAU,MAAM;AACpB,0BAAI,QAAQ,MAAM;AAClB,4BAAM,QAAQ,EAAE,SAAkB;oBACrC;AACD,yBAAK,OAAO,KAAK,KAAK;AAAA,kBACzB;AAAA,gBACJ;AACD,uBAAO,KAAK,OAAO;cAC5B;AACK,qBAAOM;AAAA,YACV,EAAA;AACD,YAAArK,SAAQ,YAAY;AAAA,UAGd;AAAA;AAAA,QACP,CAAU;AAAA;AAAA,IACV,CAAC;AAAA;;;;;;;ACljND,SAAO,eAAesK,WAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC/CA,YAAA,QAAG;AAQhB,MAAI,SAASrK;AACb,WAAS,MAAM,QAAQgE,UAAS;AAC5B,QAAI8F,YAAW,CAAA;AACf,QAAI1F,OAAMzD,mBAAmB,MAAM,QAAQ;AAAA,MACvC,KAAK;AAAA,MACL,WAAW;AAAA,MACX,SAAS;AAAA,MACT,WAAWmJ;AAAA,MACX,QAAW,GAAA,OAAO,WAAW9F,UAAS,SAAS,KAAK;AAAA,MACpD,WAAc,GAAA,OAAO,WAAWA,UAAS,YAAY,IAAI;AAAA,MACzD,QAAQ;AAAA,MACR,MAAS,GAAA,OAAO,WAAWA,UAAS,OAAO,KAAK;AAAA,MAChD,aAAgB,GAAA,OAAO,WAAWA,UAAS,cAAc,QAAQ;AAAA,IACzE,CAAK;AACD,QAAI,CAAC,MAAM,QAAQI,KAAI,QAAQ,GAAG;AAC9B,MAAAA,KAAI,WAAW0F;AAAA,IAClB;AACD,WAAO1F;AAAA,EACV;AACDiG,YAAA,QAAgB;;;;;;;AC5BhB,SAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC3C,UAAA,YAAG;AACpB,MAAI,SAASrK;AACb,MAAI,WAAW;AAAA,IACX,QAAQW,eAA6B;AAAA,IACrC,UAAU;AAAA,IACV,SAAS;AAAA,IACT,iBAAiB;AAAA,IACjB,iBAAgB,GAAI,OAAO,mBAAoB;AAAA,IAC/C,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,UAAU;AAAA,IACV,OAAO;AAAA,IACP,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,oBAAoB;AAAA,IACpB,mBAAmB;AAAA,IACnB,kBAAkB;AAAA,IAClB,QAAQ;AAAA,EACZ;AACA,MAAI,SAAS,SAAS;AAEtB,WAAS,UAAU,MAAM;AACrB,QAAIqD,WAAU,QAAQ;AACtB,aAAS,IAAI,KAAK;AACd,aAAO,OAAO,KAAKA,UAAS,GAAG,IAAIA,SAAQ,GAAG,IAAI,SAAS,GAAG;AAAA,IACjE;AACD,WAAO;AAAA,MACH,UAAU,CAAC,IAAI,UAAU;AAAA,MACzB,SAAS,CAAC,CAAC,IAAI,SAAS;AAAA,MACxB,iBAAiB,CAAC,CAAC,IAAI,iBAAiB;AAAA,MACxC,gBAAgB,IAAI,gBAAgB;AAAA,MACpC,YAAY,KAAK,IAAI,IAAI,YAAY,GAAG,CAAC;AAAA,MACzC,gBAAgB,IAAI,gBAAgB;AAAA,MACpC,eAAe,IAAI,eAAe;AAAA,MAClC,YAAY,IAAI,YAAY;AAAA,MAC5B,gBAAgB,IAAI,gBAAgB;AAAA,MACpC,QAAQ,IAAI,SAAS,KAAK,IAAI,QAAQ;AAAA,MACtC,OAAO,IAAI,OAAO;AAAA,MAClB,UAAU,IAAI,UAAU;AAAA,MACxB,OAAO,IAAI,OAAO;AAAA,MAClB,eAAe,IAAI,eAAe;AAAA,MAClC,qBAAqB,IAAI,qBAAqB;AAAA,MAC9C,oBAAoB,IAAI,oBAAoB;AAAA,MAC5C,mBAAmB,IAAI,mBAAmB;AAAA,MAC1C,kBAAkB,IAAI,kBAAkB;AAAA,MACxC,QAAQ,CAAC,CAAC,IAAI,QAAQ;AAAA,IAC9B;AAAA,EACC;AACD,UAAA,YAAoB;;;;;;;;;ACrDpB,SAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,MAAI,UAAU;AACd,MAAI,mBAAmB,QAAQ,gBAAgBrD,yBAAyB,CAAA;AACxE,MAAI,SAASC;AACb,MAAI;AAAA;AAAA,IAAyB,WAAY;AACrC,eAAS0J,SAAQ,aAAa,WAAW,WAAW;AAChD,YAAI,cAAc,QAAQ;AAAE,sBAAY;AAAA,QAAY;AACpD,aAAK,cAAc;AACnB,aAAK,YAAY;AACjB,aAAK,YAAY;AAAA,MACpB;AACD,MAAAA,SAAQ,UAAU,QAAQ,SAAUrG,QAAO,OAAO,KAAK;AACnD,YAAI,QAAQ,QAAQ;AAAE,gBAAMA,OAAM,QAAO;AAAA,QAAK;AAC9C,YAAI,cAAc,KAAK;AACvB,YAAI,YAAY,KAAK;AACrB,YAAI,YAAY,KAAK;AACrB,iBAAS,KAAK,MAAM;AAChB,cAAI,gBAAgB,UAAU,IAAI;AAClC,cAAI,gBAAgB,UAAU,IAAI;AAClC,cAAI,cAAc;AAClB,cAAI,SAAS,OAAO;AAChB,0BAAc;AAAA,UACjB,OACI;AACD,aAAA,GAAI,iBAAiB,SAAS,SAAS,OAAO;AAAA,UACjD;AACD,iBAAO,UAAU,aAAa,eAAeA,QAAO,eAAe,WAAW;AAAA,QACjF;AACD,aAAI,GAAI,OAAO,YAAY,OAAO,UAAU,KAAK,KAAK,GAAG;AACrD,eAAI,GAAI,OAAO,YAAY,UAAU,KAAK,GAAG,KAAK,GAAG;AACjD,wBAAY;AAAA,cACR,OAAO,YAAY,UAAU,OAAO,MAAM,MAAM,MAAM,MAAM;AAAA,cAC5D,KAAK,YAAY,UAAU,KAAK,MAAM,MAAM,MAAM,MAAM;AAAA,YAC5E;AAAA,UAGa,YACQ,GAAI,OAAO,YAAY,KAAK,UAAU,KAAK,KAAK,GAAG;AACxD,mBAAO;AAAA,UACV,OACI;AACD,wBAAY;AAAA,cACR,OAAO,UAAU;AAAA,cACjB,KAAK,KAAK,KAAK;AAAA,YACnC;AACgB,wBAAY;AAAA,cACR,OAAO,YAAY,UAAU,OAAO,MAAM,MAAM,MAAM,MAAM;AAAA,cAC5D,KAAK,YAAY,KAAK,MAAM,MAAM,MAAM,MAAM;AAAA,YAClE;AAAA,UACa;AAAA,QACJ,OACI;AACD,eAAI,GAAI,OAAO,YAAY,UAAU,KAAK,KAAK,KAAK,GAAG;AACnD,mBAAO;AAAA,UACV;AACD,eAAI,GAAI,OAAO,YAAY,UAAU,KAAK,GAAG,KAAK,GAAG;AACjD,wBAAY;AAAA,cACR,OAAO,KAAK,OAAO;AAAA,cACnB,KAAK,UAAU;AAAA,YACnC;AACgB,wBAAY;AAAA;AAAA,cAER,OAAO,EAAE,MAAM,GAAG,QAAQ,EAAG;AAAA,cAC7B,KAAK,YAAY,UAAU,KAAK,MAAM,MAAM,MAAM,MAAM;AAAA,YAC5E;AAAA,UACa,OACI;AACD,wBAAY;AAAA,cACR,OAAO,KAAK,OAAO;AAAA,cACnB,KAAK,KAAK,KAAK;AAAA,YACnC;AACgB,wBAAY;AAAA;AAAA,cAER,OAAO,EAAE,MAAM,GAAG,QAAQ,EAAG;AAAA,cAC7B,KAAK,YAAY,KAAK,MAAM,MAAM,MAAM,MAAM;AAAA,YAClE;AAAA,UACa;AAAA,QACJ;AACD,eAAO,IAAIqG,SAAQ,KAAK,aAAa,WAAW,SAAS;AAAA,MACjE;AACI,MAAAA,SAAQ,UAAU,MAAM,SAAU,MAAM,QAAQ;AAC5C,eAAO,IAAIA,SAAQ,KAAK,aAAa,KAAK,WAAW;AAAA,UACjD,OAAO,OAAO,KAAK,UAAU,OAAO,MAAM,MAAM;AAAA,UAChD,KAAK,OAAO,KAAK,UAAU,KAAK,MAAM,MAAM;AAAA,QACxD,CAAS;AAAA,MACT;AACI,MAAAA,SAAQ,UAAU,WAAW,SAAU,MAAM,QAAQ;AACjD,eAAO,IAAIA,SAAQ,KAAK,aAAa,KAAK,WAAW;AAAA,UACjD,OAAO,YAAY,KAAK,UAAU,OAAO,MAAM,MAAM;AAAA,UACrD,KAAK,YAAY,KAAK,UAAU,KAAK,MAAM,MAAM;AAAA,QAC7D,CAAS;AAAA,MACT;AACI,MAAAA,SAAQ,UAAU,SAAS,SAAU,IAAI,eAAe,mBAAmB;AACvE,YAAI,kBAAkB,QAAQ;AAAE,0BAAgB;AAAA,QAAQ;AACxD,YAAI,sBAAsB,QAAQ;AAAE,8BAAoB;AAAA,QAAQ;AAChE,YAAI,OAAO,GAAG;AACV,iBAAO;AAAA,QACV;AACD,YAAI,YAAY,KAAK;AACrB,YAAI,YAAY,UAAU,MAAM;AAChC,YAAI,UAAU,UAAU,IAAI;AAC5B,YAAI,iBAAiB,cAAc,KAAK,YAAY,GAAG;AACnD,iBAAO;AAAA,QACV;AACD,oBAAY;AAAA,UACR,OAAO,UAAU;AAAA,UACjB,KAAK,UAAU;AAAA,QAC3B;AACQ,YAAI,CAAC,iBAAiB,YAAY,GAAG;AACjC,cAAI,cAAc,UAAU,MAAM,SAAS;AAC3C,oBAAU,QAAQ;AAAA,YACd,MAAM;AAAA,YACN,QAAQ,oBAAoB,KAAK,IAAI,GAAG,WAAW,IAAI;AAAA,UACvE;AAAA,QACS;AACD,YAAI,CAAC,iBAAiB,UAAU,GAAG;AAC/B,cAAI,YAAY,UAAU,IAAI,SAAS;AACvC,oBAAU,MAAM;AAAA,YACZ,MAAM;AAAA,YACN,QAAQ,oBAAoB,KAAK,IAAI,GAAG,SAAS,IAAI;AAAA,UACrE;AAAA,QACS;AACD,eAAO,IAAIA,SAAQ,KAAK,aAAa,KAAK,WAAW,SAAS;AAAA,MACtE;AACI,aAAOA;AAAA,IACV,EAAA;AAAA;AACc,UAAA,UAAG;AAClB,WAAS,OAAO,OAAO,MAAM,QAAQ;AACjC,WAAO;AAAA,MACH,MAAM,MAAM,OAAO,OAAO;AAAA,MAC1B,QAAQ,MAAM,SAAS,IAAI,MAAM,SAAS,SAAS,MAAM;AAAA,IACjE;AAAA,EACC;AACD,WAAS,YAAY,SAAS,MAAM,QAAQ;AACxC,WAAO;AAAA,MACH,MAAM,QAAQ,OAAO,OAAO;AAAA,MAC5B,QAAQ,QAAQ,SAAS,OAAO,QAAQ,SAAS,SAAS,QAAQ;AAAA,IAC1E;AAAA,EACC;AACD,WAAS,UAAU,aAAa,eAAe,aAAa,eAAe,aAAa;AACpF,QAAI,oBAAmB,GAAI,OAAO,YAAY,eAAe,WAAW;AACxE,QAAI,qBAAqB,GAAG;AAExB,aAAO;AAAA,IACV;AACD,QAAI,cAAc;AAClB,QAAI,mBAAmB,GAAG;AAEtB,qBACI,YAAY,WAAW,aAAa,KAAK,YAAY,QAAO;AAChE,qBACI,YAAY,WAAW,aAAa,KAAK,YAAY,QAAO;AAChE,UAAI,WAAW,YAAY,OAAO,aAAa;AAC/C,mBAAa,QAAQ;AACrB,mBAAa,QAAQ;AACrB,UAAI,WAAW,GAAG;AAGd,qBAAa,SAAS;AACtB,qBAAa,SAAS;AAAA,MACzB,OACI;AACD,SAAA,GAAI,iBAAiB,SAAS,aAAa,CAAC;AAAA,MAC/C;AACD,cAAW,GAAA,OAAO,YAAY,cAAc,WAAW,IAAI,KACvD,YAAY,QAAQ,cAAc,IAAI,GAAG;AACzC,SAAI,GAAA,iBAAiB,SAAS,YAAY,QAAQ,cAAc,IAAI,CAAC;AACrE,YAAI,iBAAiB,SAAS,YAAY,OAAO,YAAY,MAAM,YAAY,OAAO,YAAY,CAAC;AAAA,MACtG;AAAA,IACJ,OACI;AAED,qBACI,YAAY,WAAW,eAAe,IAAI,KAAK,YAAY;AAC/D,qBACI,YAAY,WAAW,eAAe,IAAI,KAAK,YAAY;AAC/D,UAAI,WAAW,YAAY,OAAO,aAAa;AAC/C,mBAAa,QAAQ;AACrB,mBAAa,QAAQ;AACrB,UAAI,WAAW,GAAG;AAGd,qBAAa,SAAS,YAAY,cAAc,aAAa,IAAI;AACjE,qBAAa,SAAS,YAAY,cAAc,aAAa,IAAI;AAAA,MACpE,OACI;AACD,SAAA,GAAI,iBAAiB,SAAS,aAAa,CAAC;AAAA,MAC/C;AACD,cAAW,GAAA,OAAO,YAAY,aAAa,YAAY,IAAI,KACvD,YAAY,QAAQ,cAAc,IAAI,GAAG;AACzC,SAAI,GAAA,iBAAiB,SAAS,YAAY,QAAQ,cAAc,IAAI,CAAC;AACrE,YAAI,iBAAiB,SAAS,YAAY,OAAO,YAAY,MAAM,YAAY,OAAO,YAAY,CAAC;AAAA,MACtG;AAAA,IACJ;AACD,WAAO;AAAA,EACX;;;;;;;ACnMA,SAAO,eAAe,OAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC9C,QAAA,SAAG,mBAAqB,MAAA,cAAsB,MAAa,QAAG;AAC5E,MAAI,UAAU;AACd,MAAI,mBAAmB,QAAQ,gBAAgB3J,yBAAyB,CAAA;AACxE,MAAI,eAAe,QAAQ,gBAAgBC,iBAAqB,CAAA;AAChE,MAAI,YAAYC;AAChB,MAAI,SAASE;AACb,MAAI,YAAY,QAAQ,gBAAgBkC,eAAoB,CAAA;AAC5D,MAAI;AAAA;AAAA,IAAuB,WAAY;AACnC,eAASsH,OAAM,OAAO,gBAAgB;AAClC,YAAI,mBAAmB,QAAQ;AAAE,2BAAiB;AAAA,QAAO;AACzD,aAAK,QAAQ;AACb,aAAK,WAAW;AAChB,aAAK,kBAAkB;AACvB,aAAK,iBAAiB;AACtB,SAAA,GAAI,iBAAiB,SAAS,MAAM,SAAS,CAAC;AAC9C,aAAK,SAAS,MAAM;AACpB,aAAK,OAAO,kBAAkB;AAC9B,YAAI,KAAK,MAAM;AACX,eAAK,SAAS,KAAK,IAAI,UAAU,QAAQ,MAAM;AAAA,YAC3C,OAAO,KAAK,SAAU;AAAA,YACtB,KAAK,KAAK,QAAS;AAAA,UACtB,CAAA,CAAC;AAAA,QACL;AAAA,MACJ;AACD,MAAAA,OAAM,UAAU,WAAW,SAAUvG,UAAS;AAC1C,eAAO,KAAK,YAAY,KAAK,SAAU,GAAE,KAAK,WAAWA,QAAO;AAAA,MACxE;AACI,MAAAuG,OAAM,UAAU,eAAe,SAAU,eAAe,YAAY;AAChE,YAAI,CAAC,eAAe;AAIhB,iBAAO;AAAA,QACV;AACD,YAAI,cAAc;AAClB,iBAAS,WAAW,MAAM;AACtB,iBAAO,QAAQ;AACf,eAAK,OAAO;AACZ,cAAI,YAAY;AACZ,iBAAK,aAAa;AAAA,UACrB;AACD,iBAAO;AAAA,QACV;AACD,YAAI,YAAY,iBAAiB;AAK7B,iBAAO,WAAW,YAAY,gBAAgB,OAAQ,CAAA;AAAA,QACzD;AACD,YAAI,MAAM,IAAI,aAAa,QAAQ,mBAAmB,WAAU,CAAE;AAClE,YAAI,oBAAoB,CAAA;AACxB,oBAAY,SAAS,QAAQ,SAAU/G,UAAS;AAC5C,cAAI,eAAeA,SAAQ,YAAY,WAAWA,SAAQ,UAAU,KAAK,KACrEA,SAAQ,YAAY;AACxB,cAAI,eAAe,YAAY,WAAWA,SAAQ,UAAU,KAAK,KAC7D,YAAY,QAAO;AACvB,kBAAO,GAAI,OAAO,YAAY,cAAcA,SAAQ,UAAU,GAAG,IAAI,MAC7D,GAAA,OAAO,YAAY,cAAcA,SAAQ,UAAU,GAAG,IAAI,GAAG;AACjE,gBAAI,aAAaA,SAAQ,YAAY,OAAO,YAAY;AACxD,gBAAI,aAAa,YAAY,OAAO,YAAY;AAChD,aAAA,GAAI,iBAAiB,SAAS,eAAe,UAAU;AACvD,gBAAI,aAAaA,SAAQ,YAAY;AAErC,gBAAI,WAAW;AAAA,cACX,QAAQ;AAAA,cACR,UAAU,EAAE,MAAM,aAAa,MAAM,QAAQ,aAAa,OAAQ;AAAA,cAClE,WAAW,EAAE,MAAM,aAAa,MAAM,QAAQ,aAAa,OAAQ;AAAA,YACvF,CAAiB;AACD,gBAAI,CAAC,OAAO,KAAK,mBAAmB,UAAU,GAAG;AAC7C,kBAAI,gBAAgBA,SAAQ,YAAY,SAAQ;AAChD,kBAAI,iBAAiB,YAAY,aAAa;AAC9C,gCAAkB,UAAU,IAAI;AAAA,YACnC;AACD,wBAAY,QAAQ,cAAc,IAAI;AACtC,YAAAA,SAAQ,YAAY,QAAQ,cAAc,IAAI;AAAA,UACjD;AAAA,QACb,CAAS;AACD,oBAAY,kBAAkB;AAC9B,eAAO,IAAI;MACnB;AACI,MAAA+G,OAAM,UAAU,kBAAkB,SAAU,KAAK;AAC7C,SAAA,GAAI,iBAAiB,SAAS,OAAO,QAAQ,QAAQ;AACrD,SAAI,GAAA,iBAAiB,SAAS,OAAO,IAAI,SAAS,QAAQ;AAC1D,SAAI,GAAA,iBAAiB,SAAS,OAAO,IAAI,WAAW,QAAQ;AAC5D,YAAI,OAAO,IAAI,MAAM,SAAS,IAAI,QAAQ,UAAU,KAAK,SAAU,EAAC,MAAM,oBAAoB,GAAGC,UAAS,QAAQ,OAAO,CAAC;AAC1H,YAAI,OAAOA,YAAW;AAClB,iBAAO;AACX,YAAI,WAAWA,QAAO,UAAU,OAAO,QAAQ;AAC3C,iBAAO;AACX,YAAI,UAAUA,QAAO;AACjB,iBAAO;AACX,eAAOA,QAAO,OAAO,MAAM;AAAA,MACnC;AACI,MAAAD,OAAM,UAAU,SAAS,SAAU,KAAK;AACpC,SAAA,GAAI,iBAAiB,SAAS,OAAO,QAAQ,QAAQ;AACrD,SAAI,GAAA,iBAAiB,SAAS,OAAO,IAAI,SAAS,QAAQ;AAC1D,SAAI,GAAA,iBAAiB,SAAS,OAAO,IAAI,WAAW,QAAQ;AAC5D,YAAI,OAAO,IAAI,MAAM,SAAS,IAAI,QAAQ,SAAS,MAAM,QAAQ,OAAO,OAAO,OAAO,MAAM,OAAO,CAAC,GAAG,IAAI;AAC3G,YAAI,OAAO,SAAS,eAAe,IAAI;AACnC,iBAAO;AACX,YAAI,SAAS,KAAK,YAAY,IAAI;AAClC,YAAI,IAAI;AACJ,iBAAO;AACX,aAAK,KAAK,aAAa;AACvB,YAAI,MAAM,KAAK,YAAY,OAAO,KAAK;AACnC,iBAAO;AACX,YAAI,KAAK,KAAK;AACV,iBAAO;AACX,eAAO,KAAK,KAAK,OAAO,CAAC;AAAA,MACjC;AACI,MAAAA,OAAM,UAAU,cAAc,SAAU,OAAO,eAAe;AAC1D,YAAI,UAAU;AACV,iBAAO;AACX,SAAI,GAAA,iBAAiB,SAAS,QAAQ,GAAG,sBAAsB,KAAK;AACpE,YAAI,iBAAiB,KAAK,WAAW;AACjC,iBAAO;AACX,YAAItG,SAAQ,IAAIsG,OAAM,KAAK,MAAM,IAAI,SAAU,MAAM,GAAG;AACpD,cAAI,KAAK,SAAS,IAAI,KAAK,CAAC,gBAAgB;AACxC,mBAAO,QAAQ,SAAS,QAAQ,SAAS,CAAA,GAAI,IAAI,GAAG,EAAE,QAAQ,KAAK,IAAI,GAAG,KAAK,SAAS,KAAK,EAAC,CAAE;AAAA,UACnG;AACD,iBAAO;AAAA,QACV,CAAA,CAAC;AACF,YAAI,KAAK,SAAS,SAAS,GAAG;AAC1B,cAAI,gBAAgBtG,OAAM;AAC1B,WAAA,GAAI,iBAAiB,SAAS,cAAc,WAAW,CAAC;AACxD,eAAK,SAAS,QAAQ,SAAUT,UAAS;AACrC,0BAAc,KAAKA,SAAQ,OAAO,OAAO,eAAe,IAAI,CAAC;AAAA,UAC7E,CAAa;AAAA,QACJ;AACD,eAAOS;AAAA,MACf;AACI,MAAAsG,OAAM,UAAU,SAAS,SAAU,IAAI;AACnC,YAAI,OAAO,GAAG;AACV,iBAAO;AAAA,QACV;AACD,YAAItG,SAAQ,IAAIsG,OAAM,KAAK,MAAM,IAAI,SAAU,MAAM;AACjD,cAAI,KAAK,QAAQ,CAAC,KAAK,QAAQ;AAC3B,mBAAO,QAAQ,SAAS,QAAQ,SAAS,CAAE,GAAE,IAAI,GAAG,EAAE,QAAQ,KAAK,SAAS,GAAI,CAAA;AAAA,UACnF;AACD,iBAAO;AAAA,QACV,CAAA,CAAC;AACF,YAAI,KAAK,SAAS,SAAS,GAAG;AAC1B,cAAI,gBAAgBtG,OAAM;AAC1B,WAAA,GAAI,iBAAiB,SAAS,cAAc,WAAW,CAAC;AACxD,eAAK,SAAS,QAAQ,SAAUT,UAAS;AACrC,0BAAc,KAAKA,SAAQ,OAAO,EAAE,CAAC;AAAA,UACrD,CAAa;AAAA,QACJ;AACD,eAAOS;AAAA,MACf;AACI,MAAAsG,OAAM,UAAU,aAAa,SAAU,IAAI;AACvC,YAAI,OAAO,GAAG;AACV,iBAAO;AAAA,QACV;AACD,YAAI,KAAK,SAAS,GAAG;AACjB,iBAAO;AAAA,QACV;AACD,YAAItG,SAAQ,IAAIsG,OAAM,KAAK,MAAM,IAAI,SAAU,MAAM,GAAG;AACpD,cAAI,IAAI,KAAK,KAAK,QAAQ,CAAC,KAAK,QAAQ;AACpC,mBAAO,QAAQ,SAAS,QAAQ,SAAS,CAAE,GAAE,IAAI,GAAG,EAAE,QAAQ,KAAK,SAAS,GAAI,CAAA;AAAA,UACnF;AACD,iBAAO;AAAA,QACV,CAAA,CAAC;AACF,YAAI,KAAK,SAAS,SAAS,GAAG;AAC1B,cAAI,gBAAgBtG,OAAM;AAC1B,WAAA,GAAI,iBAAiB,SAAS,cAAc,WAAW,CAAC;AACxD,eAAK,SAAS,QAAQ,SAAUT,UAAS;AACrC,0BAAc,KAAKA,SAAQ,OAAO,IAAI,IAAI,CAAC;AAAA,UAC3D,CAAa;AAAA,QACJ;AACD,eAAOS;AAAA,MACf;AACI,MAAAsG,OAAM,UAAU,iBAAiB,WAAY;AACzC,YAAI,KAAK,SAAS,GAAG;AACjB,iBAAO;AAAA,QACV;AACD,eAAO,IAAIA,OAAM,KAAK,MAAM,IAAI,SAAU,MAAM,GAAG;AAAE,iBAAQ,QAAQ,SAAS,QAAQ,SAAS,CAAA,GAAI,IAAI,GAAG,EAAE,QAAQ,IAAI,EAAG,CAAA;AAAA,QAAK,CAAA,CAAC;AAAA,MACzI;AACI,MAAAA,OAAM,UAAU,cAAc,SAAU,MAAM;AAC1C,SAAI,GAAA,iBAAiB,SAAS,QAAQ,GAAG,aAAa,OAAO,8BAA8B;AAC3F,eAAO,KAAK,IAAI,KAAK,MAAM,OAAO,CAAC,EAAE,QAAQ,CAAC;AAAA,MACtD;AACI,MAAAA,OAAM,UAAU,gBAAgB,WAAY;AACxC,YAAI,OAAO,KAAK,mBAAmB,UAAU;AACzC,iBAAO,KAAK;AAAA,QACf;AACD,YAAI,SAAS,CAAA;AACb,YAAI,aAAa;AACjB,iBAAS,OAAO,GAAG,OAAO,KAAK,QAAQ,QAAQ,MAAM,EAAE,MAAM;AACzD,cAAI,OAAO,KAAK,MAAM,OAAO,CAAC;AAC9B,cAAI,SAAS,KAAK,KAAK,MAAM,KAAK,YAAY,KAAK,QAAQ;AAG3D,cAAI,iBAAiB,MAAM,GAAG;AAC1B;AAAA,UACH;AACD,cAAI,OAAO,KAAK,IAAI,KAAK,SAAS,UAAU;AAC5C,iBAAO,IAAI,IAAI,CAAC,CAAC,OAAO,IAAI,IAAI;AAChC,uBAAa,KAAK;AAAA,QACrB;AACD,YAAI,WAAW;AACf,YAAI,SAAS;AACb,iBAAS,WAAW,GAAG,WAAW,OAAO,QAAQ,YAAY,GAAG;AAC5D,cAAI,OAAO,KAAK,QAAQ,QAAQ,KAAK,OAAO,QAAQ,IAAI,UAAU;AAC9D,uBAAW,OAAO,QAAQ;AAC1B,qBAAS;AAAA,UACZ;AAAA,QACJ;AACD,eAAQ,KAAK,iBAAiB;AAAA,MACtC;AAII,MAAAA,OAAM,UAAU,oBAAoB,WAAY;AAC5C,YAAI,KAAK,MAAM,WAAW,GAAG;AACzB,iBAAO;AAAA,QACV;AACD,YAAI,gBAAgB,KAAK,MAAM,CAAC,GAAG,aAAa,cAAc,YAAY,WAAW,cAAc,UAAU,YAAY,cAAc,KAAK,MAAM,YAAY,QAAQ,EAAE;AACxK,eAAQ,UAAU,WAAW,KACzB,UAAU,MAAM,GAAG,CAAC,MAAM,QAC1B,UAAU,MAAM,GAAG,CAAC,MAAM;AAAA,MACtC;AACI,MAAAA,OAAM,UAAU,mBAAmB,WAAY;AAC3C,eAAO,iBAAiB,KAAK,SAAQ,CAAE;AAAA,MAC/C;AACI,MAAAA,OAAM,UAAU,6BAA6B,SAAU,KAAK;AACxD,YAAI,OAAO,KAAK,MAAM,IAAI,OAAO,CAAC;AAClC,YAAI,SAAS,KAAK,IAAI,KAAK,QAAQ,CAAC;AACpC,YAAI,OAAO,IAAI,SAAS;AACxB,YAAI,QAAQ,GAAG;AAGX,iBAAO;AAAA,QACV;AACD,YAAI,QAAQ,KAAK;AACjB,YAAI,MAAM,KAAK,IAAI,QAAQ,MAAM,KAAK,QAAQ;AAC9C,YAAI,SAAS,KAAK,KAAK,MAAM,OAAO,GAAG;AACvC,eAAO,iBAAiB,MAAM;AAAA,MACtC;AACI,MAAAA,OAAM,UAAU,gBAAgB,SAAU,MAAM;AAC5C,YAAI,OAAO,KAAK,MAAM,OAAO,CAAC;AAC9B,eAAO,KAAK,YAAY,IAAI,IAAI,KAAK,WAAW,KAAK;AAAA,MAC7D;AACI,MAAAA,OAAM,UAAU,UAAU,SAAU,KAAK,YAAY;AACjD,YAAI,eAAe,QAAQ;AAAE,uBAAa;AAAA,QAAQ;AAClD,YAAI,IAAI,KAAK,IAAI,IAAI,MAAM,CAAC,GAAG,IAAI,KAAK,IAAI,IAAI,QAAQ,CAAC;AACzD,YAAI,IAAI,KAAK,cAAc,CAAC,GAAG;AAC3B,cAAI,UAAU;AACd,iBAAO,aAAa,CAAC,CAAC,KAAK,WAAW,KAAK,OAAO,IAAI,IAAI;AAAA,QAC7D;AACD,YAAI,IAAI,KAAK,QAAQ;AACjB,cAAI,QAAQ;AACZ,cAAI,SAAS;AACb,iBAAO,aAAa,CAAC,CAAC,KAAK,WAAW,KAAK,OAAO,IAAI,IAAI;AAAA,QAC7D;AACD,eAAO;AAAA,MACf;AACI,MAAAA,OAAM,UAAU,UAAU,SAAU,KAAK,YAAY;AACjD,YAAI,eAAe,QAAQ;AAAE,uBAAa;AAAA,QAAQ;AAClD,YAAI,IAAI,IAAI,MAAM,IAAI,IAAI;AAC1B,YAAI,IAAI,GAAG;AACP,eAAK;AACL,cAAI,IAAI;AACJ,mBAAO;AACX,cAAI,KAAK,cAAc,CAAC;AAAA,QAC3B,OACI;AACD,cAAI,KAAK,IAAI,IAAI,GAAG,KAAK,cAAc,CAAC,CAAC;AAAA,QAC5C;AACD,YAAI,OAAO;AACX,YAAI,SAAS;AACb,eAAO,aAAa,CAAC,CAAC,KAAK,WAAW,KAAK,MAAM,IAAI,IAAI;AAAA,MACjE;AACI,MAAAA,OAAM,UAAU,WAAW,WAAY;AAEnC,eAAO,EAAE,MAAM,GAAG,QAAQ,EAAC;AAAA,MACnC;AACI,MAAAA,OAAM,UAAU,UAAU,WAAY;AAClC,eAAO;AAAA,UACH,MAAM,KAAK;AAAA,UACX,QAAQ,KAAK,cAAc,KAAK,MAAM;AAAA,QAClD;AAAA,MACA;AACI,MAAAA,OAAM,UAAU,aAAa,SAAU,KAAK,UAAU,eAAe;AACjE,YAAI,aAAa,QAAQ;AAAE,qBAAW;AAAA,QAAQ;AAC9C,YAAI,kBAAkB,QAAQ;AAAE,0BAAgB;AAAA,QAAQ;AACxD,YAAI,KAAK;AACL,gBAAM,gBACA,MACA;AAAA,YACE,MAAM,IAAI;AAAA,YACV,QAAQ,IAAI;AAAA,UAChC;AAAA,QACS,WACQ,UAAU;AACf,gBAAM,KAAK;QACd,OACI;AACD,gBAAM,KAAK;QACd;AACD,YAAI,UAAU;AACV,iBAAO,KAAK,QAAQ,GAAG,GAAG;AACtB,gBAAI,CAAC,iBAAiB,KAAK,OAAO,GAAG,CAAC,KAAK,KAAK,QAAQ,GAAG,GAAG;AAC1D,qBAAO;AAAA,YACV;AAAA,UACJ;AACD,iBAAO;AAAA,QACV,OACI;AACD,iBAAO,iBAAiB,KAAK,OAAO,GAAG,CAAC,GAAG;AACvC,gBAAI,CAAC,KAAK,QAAQ,GAAG,GAAG;AACpB,qBAAO;AAAA,YACV;AAAA,UACJ;AACD,iBAAO;AAAA,QACV;AAAA,MACT;AACI,MAAAA,OAAM,UAAU,WAAW,WAAY;AACnC,YAAI,MAAM,KAAK,WAAW,KAAK,YAAY,OAAO,IAAI;AACtD,eAAO,MAAM,KAAK,MAAM,GAAG,IAAI;AAAA,MACvC;AACI,MAAAA,OAAM,UAAU,YAAY,WAAY;AACpC,YAAI,MAAM,KAAK,WAAW,KAAK,WAAW,MAAM,IAAI;AACpD,eAAO,MAAM,KAAK,MAAM,KAAK,YAAY,GAAG,IAAI;AAAA,MACxD;AACI,MAAAA,OAAM,UAAU,OAAO,WAAY;AAC/B,YAAI,QAAQ,KAAK,WAAW,KAAK,YAAY,OAAO,IAAI;AACxD,YAAI,UAAU,MAAM;AAChB,iBAAO;AAAA,QACV;AACD,YAAI,MAAM,KAAK,WAAW,KAAK,WAAW,MAAM,IAAI;AACpD,YAAI,QAAQ,MAAM;AACd,iBAAO;AAAA,QACV;AACD,eAAO,KAAK,MAAM,OAAO,GAAG;AAAA,MACpC;AACI,MAAAA,OAAM,UAAU,UAAU,SAAU,UAAU,UAAU,YAAY;AAChE,YAAI,aAAa,QAAQ;AAAE,qBAAW,KAAK,SAAQ;AAAA,QAAK;AACxD,YAAI,eAAe,QAAQ;AAAE,uBAAa;AAAA,QAAQ;AAClD,YAAI,MAAM,KAAK;AACf,YAAI,UAAU;AACV,UAAC,IAAI,OAAO,SAAS,MAAQ,IAAI,SAAS,SAAS;AAAA,QACtD;AACD,YAAI,cAAc,CAAC,KAAK,WAAW,KAAK,OAAO,IAAI,GAAG;AAClD;AAAA,QACH;AACD;AACI,mBAAS,KAAK,MAAM,GAAG;AAAA,eACpB,KAAK,QAAQ,KAAK,UAAU;AAAA,MAC3C;AACI,MAAAA,OAAM,UAAU,iBAAiB,SAAU,OAAO,KAAK;AACnD,YAAI,UAAU,KAAK,SAAU,EACxB,MAAM,oBAAoB,EAC1B,MAAM,MAAM,OAAO,GAAG,IAAI,IAAI;AACnC,YAAI,QAAQ,SAAS,GAAG;AACpB,kBAAQ,KAAK,QAAQ,IAAK,EAAC,MAAM,GAAG,IAAI,MAAM,CAAC;AAC/C,kBAAQ,CAAC,IAAI,QAAQ,CAAC,EAAE,MAAM,MAAM,MAAM;AAAA,QAC7C;AACD,eAAO,WAAW,QAAQ,KAAK,IAAI,CAAC;AAAA,MAC5C;AACI,MAAAA,OAAM,UAAU,QAAQ,SAAU,OAAO,KAAK;AAC1C,YAAI,CAAC,KAAK;AACN,cAAI,CAAC,OAAO;AAIR,mBAAO;AAAA,UACV;AAED,gBAAM,KAAK;QACd;AACD,YAAI,CAAC,OAAO;AACR,gBAAM,IAAI,MAAM,qCAAqC;AAAA,QACxD;AACD,YAAI,SAAS,KAAK,MAAM,MAAM,MAAM,OAAO,GAAG,IAAI,IAAI;AACtD,YAAI,MAAM,SAAS,IAAI,MAAM;AACzB,iBAAO,CAAC,IAAI,UAAU,OAAO,CAAC,GAAG,MAAM,QAAQ,IAAI,MAAM;AAAA,QAC5D,OACI;AACD,WAAI,GAAA,iBAAiB,SAAS,MAAM,OAAO,IAAI,IAAI;AACnD,iBAAO,CAAC,IAAI,UAAU,OAAO,CAAC,GAAG,MAAM,MAAM;AAC7C,iBAAO,KAAK,UAAU,OAAO,IAAK,GAAE,GAAG,IAAI,MAAM,CAAC;AAAA,QACrD;AACD,YAAItG,SAAQ,IAAIsG,OAAM,MAAM;AAC5B,YAAI,KAAK,SAAS,SAAS,GAAG;AAC1B,cAAI,gBAAgBtG,OAAM;AAC1B,WAAA,GAAI,iBAAiB,SAAS,cAAc,WAAW,CAAC;AACxD,eAAK,SAAS,QAAQ,SAAUT,UAAS;AACrC,gBAAIiH,UAASjH,SAAQ,MAAM,MAAM,OAAO,GAAG;AAC3C,gBAAIiH,SAAQ;AACR,4BAAc,KAAKA,OAAM;AAAA,YAC5B;AAAA,UACJ,GAAE,IAAI;AAAA,QACV;AACD,eAAOxG;AAAA,MACf;AACI,MAAAsG,OAAM,UAAU,uBAAuB,SAAU,OAAO,KAAKvG,UAAS;AAClE,eAAO,KAAK,MAAM,OAAO,GAAG,EAAE,SAASA,QAAO;AAAA,MACtD;AACI,MAAAuG,OAAM,UAAU,cAAc,SAAU,OAAO,KAAKvG,UAAS;AACzD,YAAI,UAAU,QAAQ;AAAE,kBAAQ,KAAK,SAAQ;AAAA,QAAK;AAClD,YAAI,QAAQ,QAAQ;AAAE,gBAAM,KAAK,QAAO;AAAA,QAAK;AAC7C,YAAI,MAAK,GAAI,UAAU,WAAWA,QAAO,GAAG,WAAW,GAAG,UAAU,UAAU,GAAG,SAAS,kBAAkB,GAAG,iBAAiB,iBAAiB,GAAG;AACpJ,YAAI,QAAQ,CAAA;AACZ,iBAAS,OAAO,MAAM,MAAM,QAAQ,IAAI,MAAM,EAAE,MAAM;AAClD,cAAI,OAAO,KAAK,MAAM,OAAO,CAAC;AAC9B,cAAI,SAAS,MAAM,MAAM;AACrB,gBAAI,SAAS,IAAI,MAAM;AACnB,qBAAO,UAAU,MAAM,MAAM,QAAQ,IAAI,MAAM;AAAA,YAClD,OACI;AACD,qBAAO,UAAU,MAAM,MAAM,MAAM;AAAA,YACtC;AAAA,UACJ,WACQ,SAAS,IAAI,MAAM;AACxB,mBAAO,UAAU,MAAM,GAAG,IAAI,MAAM;AAAA,UACvC;AACD,cAAI,SAAS,KAAK,IAAI,KAAK,QAAQ,CAAC;AACpC,cAAI,WAAW,KAAK,KAAK,MAAM,GAAG,KAAK,UAAU;AACjD,cAAI,mBACA,iBAAiB,QAAQ,KACzB,YAAY,UAAU,QAAQ,MAAM,QAAQ;AAE5C,kBAAM,KAAK,KAAK,KAAK,MAAM,GAAG,KAAK,QAAQ,CAAC;AAC5C;AAAA,UACH;AACD,cAAI,OAAO;AACX,cAAI,SAAS;AACb,cAAI,SAAS;AACT,mBAAO,KAAK,MAAM,SAAS,QAAQ;AACnC,sBAAU,OAAO;AAAA,UACpB;AACD,cAAI,SAAS;AACb,cAAI,OAAO,GAAG;AACV,sBAAU,IAAI,MAAM,OAAO,CAAC,EAAE,KAAK,GAAI;AAAA,UAC1C;AACD,cAAI,SAAS,GAAG;AACZ,sBAAU,IAAI,MAAM,SAAS,CAAC,EAAE,KAAK,GAAG;AAAA,UAC3C;AACD,oBAAU,KAAK,KAAK,MAAM,KAAK,YAAY,KAAK,QAAQ;AACxD,gBAAM,KAAK,MAAM;AAAA,QACpB;AACD,eAAO,MAAM,KAAK,cAAc;AAAA,MACxC;AACI,MAAAuG,OAAM,UAAU,UAAU,WAAY;AAClC,eAAO,KAAK,SAAS,KAAK,KAAK,cAAc,CAAC,IAAI;AAAA,MAC1D;AACI,MAAAA,OAAM,UAAU,OAAO,SAAU,UAAU;AACvC,YAAI,YAAY;AAChB,YAAI,QAAQ,CAAA;AACZ,YAAI,WAAW,CAAA;AACf,YAAI;AACJ,iBAAS,YAAY,aAAa;AAC9B,cAAI,gBAAgB,MAAM;AACtB;AAAA,UACH;AACD,cAAI,UAAU;AACV,gBAAI,OAAO,YAAY,MAAM,CAAC;AAC9B,gBAAI,SAAS,IAAI,MAAM,KAAK,SAAS,CAAC,EAAE,KAAK,GAAG;AAChD,gBAAI,aAAa,MAAM;AACvB,gBAAI,eAAe,KAAK,IAAI,SAAS,QAAQ,CAAC,IAC1C,SAAS,WACT,SAAS;AACb,qBAAS,OACL,SAAS,KAAK,MAAM,GAAG,SAAS,QAAQ,IACpC,SACA,KAAK,KAAK,MAAM,KAAK,YAAY,KAAK,QAAQ;AAGtD,qBAAS,SAAS,SAAS,UAAU,KAAK;AAC1C,qBAAS,WAAW,SAAS,KAAK;AAClC,gBAAI,YAAY,SAAS,SAAS,GAAG;AACjC,0BAAY,SAAS,QAAQ,SAAU/G,UAAS;AAC5C,yBAAS,KAAKA,SAAQ,IAAI,YAAY,YAAY,CAAC;AAAA,cAC3E,CAAqB;AAAA,YACJ;AAAA,UACJ,WACQ,YAAY,SAAS,SAAS,GAAG;AACtC,qBAAS,KAAK,MAAM,UAAU,YAAY,QAAQ;AAAA,UACrD;AACD,sBAAY,MAAM,QAAQ,SAAUkH,OAAM,GAAG;AACzC,gBAAI,CAAC,YAAY,IAAI,GAAG;AACpB,yBAAW,QAAQ,SAAS,CAAE,GAAEA,KAAI;AACpC,oBAAM,KAAK,QAAQ;AAAA,YACtB;AAAA,UACjB,CAAa;AAAA,QACJ;AACD,iBAAS,oBAAoB,aAAa,GAAG;AACzC,cAAI,IAAI;AACJ,wBAAY,SAAS;AACzB,sBAAY,WAAW;AAAA,QAC1B;AACD,iBACK,IAAI,SAAU,MAAM;AACrB,cAAIzG,SAAQ,WAAW,IAAI;AAC3B,cAAIA,OAAM,QAAS;AACf,mBAAO;AACX,iBAAOA;AAAA,QACnB,CAAS,EACI,QAAQ,SAAU,aAAa,GAAG;AACnC,cAAI,UAAU,WAAW;AACrB,wBAAY,WAAW;AAAA,UAC1B,OACI;AACD,gCAAoB,aAAa,CAAC;AAAA,UACrC;AAAA,QACb,CAAS;AACD,YAAI,MAAM,SAAS;AACf,iBAAO;AACX,YAAIA,SAAQ,IAAIsG,OAAM,KAAK;AAC3B,QAAAtG,OAAM,WAAW;AACjB,eAAOA;AAAA,MACf;AACI,MAAAsG,OAAM,UAAU,SAAS,WAAY;AACjC,YAAI,OAAO,CAAA;AACX,iBAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,eAAK,EAAE,IAAI,UAAU,EAAE;AAAA,QAC1B;AACD,YAAI,OAAO,CAAC,IAAI;AAChB,aAAK,KAAK,MAAM,MAAM,IAAI;AAC1B,SAAI,GAAA,iBAAiB,SAAS,KAAK,WAAW,KAAK,SAAS,CAAC;AAC7D,eAAO,WAAW,KAAK,IAAI;AAAA,MACnC;AACI,aAAOA;AAAA,IACV,EAAA;AAAA;AACY,QAAA,QAAG;AAChB,MAAI,kBAAkB,CAAA;AACtB,MAAI,SAAS,gBAAgB;AAC7B,MAAI,iBAAiB;AACrB,WAAS,YAAY,QAAQ,UAAU;AACnC,QAAI,QAAQ;AACZ,QAAI,MAAM,OAAO;AACjB,aAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC1B,cAAQ,OAAO,WAAW,CAAC,GAAC;AAAA,QACxB,KAAK,GAAG;AAEJ,WAAA,GAAI,iBAAiB,SAAS,OAAO,aAAa,QAAQ;AAC1D,WAAA,GAAI,iBAAiB,SAAS,WAAW,CAAC;AAC1C,cAAI,OAAO,KAAK,KAAK,QAAQ,QAAQ,IAAI;AACzC,cAAI,SAAS,OAAO;AAChB,qBAAS;AAAA,UACZ,OACI;AACD,oBAAQ;AAAA,UACX;AACD;AAAA,QACH;AAAA,QACD,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAED;AAAA,QACJ,KAAK;AAAA,QACL;AAEI,mBAAS;AACT;AAAA,MACP;AAAA,IACJ;AACD,WAAO;AAAA,EACV;AACkB,QAAA,cAAG;AACtB,MAAI,kBAAkB;AAEtB,MAAI,uBAAuB;AAI3B,WAAS,WAAWC,SAAQxG,UAAS;AACjC,QAAIwG,mBAAkB;AAClB,aAAOA;AACX,IAAAA,WAAU;AACV,QAAI,WAAWxG,YAAWA,SAAQ;AAClC,QAAI,UAAUwG,QAAO,QAAQ,GAAI,IAAI;AACrC,QAAI,YAAY,CAACxG,YAAW,WAAWwG,QAAO,UAAU;AACxD,KAAI,GAAA,iBAAiB,SAAS,YAAY,SAAS,4DAA4DA,OAAM;AACrH,QAAI,aAAa,OAAO,KAAK,iBAAiBA,OAAM;AAChD,aAAO,gBAAgBA,OAAM;AACjC,QAAIvG,SAAQ,IAAI,MAAMuG,QAAO,MAAM,oBAAoB,EAAE,IAAI,SAAU,MAAM;AAEzE,UAAI,SAAS,gBAAgB,KAAK,IAAI,EAAE,CAAC;AACzC,aAAO;AAAA,QACH;AAAA,QACA,QAAQ,YAAY,QAAQ,QAAQ;AAAA;AAAA,QAEpC,QAAQ;AAAA,QACR,YAAY,OAAO;AAAA,QACnB,UAAU,KAAK;AAAA,MAC3B;AAAA,IACA,CAAK,IAAO,GAAA,UAAU,WAAWxG,QAAO,EAAE,cAAc;AACpD,QAAI;AACA,sBAAgBwG,OAAM,IAAIvG;AAC9B,WAAOA;AAAA,EACV;AACiB,QAAA,aAAG;AACrB,WAAS,iBAAiBuG,SAAQ;AAC9B,WAAO,CAAC,KAAK,KAAKA,OAAM;AAAA,EAC3B;AACD,WAAS,UAAU,MAAM,UAAU,QAAQ;AACvC,QAAI,aAAa,KAAK;AACtB,QAAI,WAAW,KAAK;AACpB,QAAI,SAAS,KAAK,IAAI,KAAK,QAAQ,CAAC;AACpC,QAAI,aAAa,SAAS,WAAW;AACrC,QAAI,OAAO,WAAW,aAAa;AAC/B,eAAS;AAAA,IACZ;AACD,eAAW,KAAK,IAAI,UAAU,CAAC;AAC/B,aAAS,KAAK,IAAI,QAAQ,UAAU;AACpC,aAAS,KAAK,IAAI,QAAQ,QAAQ;AAClC,QAAI,SAAS,QAAQ;AACjB,eAAS;AACT,iBAAW;AAAA,IACd,OACI;AACD,kBAAY,aAAa;AAAA,IAC5B;AACD,iBAAa;AACb,kBAAc;AACd,QAAI,WAAW,QAAQ;AACnB,gBAAU;AAAA,IACb,OACI;AACD,kBAAY;AACZ,eAAS;AACT,oBAAc;AAAA,IACjB;AACD,KAAA,GAAI,iBAAiB,SAAS,UAAU,CAAC;AACzC,KAAA,GAAI,iBAAiB,SAAS,cAAc,QAAQ;AACpD,KAAI,GAAA,iBAAiB,SAAS,eAAe,SAAS,WAAW,UAAU;AAC3E,QAAI,KAAK,WAAW,UAChB,KAAK,eAAe,cACpB,KAAK,aAAa,UAAU;AAC5B,aAAO;AAAA,IACV;AACD,WAAO;AAAA,MACH,MAAM,KAAK;AAAA,MACX;AAAA;AAAA,MAEA,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,IACR;AAAA,EACC;AACD,WAAS,OAAO,UAAU;AACtB,WAAO,WAAW,KAAK,QAAQ;AAAA,EAClC;AACa,QAAA,SAAG;AAGjB,MAAI,aAAa,WAAW,EAAE;;;;;;;;AC5oB9B,SAAO,eAAe,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,WAAA,gBAAwB,SAAA,SAAiB;AACzC,MAAI,UAAU;AACd,MAAI,mBAAmB,QAAQ,gBAAgB7J,yBAAyB,CAAA;AACxE,MAAIa,SAAQ,QAAQ,aAAaZ,YAAoB,CAAA;AACrD,MAAI,IAAIY,OAAM;AACd,MAAI,UAAUA,OAAM,aAAa;AACjC,MAAI,WAAWA,OAAM,aAAa;AAClC,MAAI,UAAUX;AACd,MAAI,SAASE;AACb,MAAI,kBAAkB,oBAAI;AAG1B,WAAS,oBAAoB,MAAMkD,QAAO,aAAa;AACnD,QAAI,CAAC,MAAM;AACP,aAAO;AAAA,IACV;AAKD,KAAA,GAAI,OAAO,oBAAoB,MAAMA,MAAK;AAC1C,QAAI,aAAa;AACb,UAAI,EAAE,KAAK,MAAM,IAAI,KAAK,EAAE,eAAe,MAAM,KAAK,GAAG,GAAG;AAIxD,YAAI,IAAI,YAAY,SAAS;AAC7B,eAAO,KAAK,GAAG,EAAE,GAAG;AAChB,cAAI,QAAQ,YAAY,CAAC;AACzB,cAAI,SACA,MAAM,WACF,OAAO,YAAY,MAAM,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,GAAG;AAC5D;AAAA,UACH;AAAA,QACJ;AACD,oBAAY,OAAO,IAAI,GAAG,GAAG,IAAI;AACjC,eAAO;AAAA,MACV;AAAA,IACJ,OACI;AACD,UAAI,aAAa,gBAAgB,IAAI,IAAI;AACzC,UAAI,YAAY;AACZ,eAAO;AAAA,MACV;AAAA,IACJ;AACD,QAAI;AACJ,QAAI,QAAQ,MAAM,IAAI,GAAG;AACrB,cAAQ,OAAO,KAAK,IAAI;AAAA,IAC3B,WACQ,SAAS,MAAM,IAAI,GAAG;AAC3B,cAAQzC,OAAM,cAAc,IAAI;AAAA,IACnC,OACI;AACD,aAAO;AAAA,IACV;AACD,QAAI,CAAC,aAAa;AACd,sBAAgB,IAAI,MAAO,cAAc,CAAE,CAAA;AAAA,IAC9C;AACD,aAAS,IAAI,GAAG,YAAY,MAAM,QAAQ,IAAI,WAAW,EAAE,GAAG;AAC1D,0BAAoB,KAAK,MAAM,CAAC,CAAC,GAAGyC,QAAO,WAAW;AAAA,IACzD;AACD,WAAO;AAAA,EACV;AAID,WAAS,gBAAgB,MAAM,SAASA,QAAO;AAC3C,QAAI,aAAa,oBAAoB,MAAMA,MAAK;AAEhD,QAAI,OAAO;AACX,QAAI,QAAQ,cAAc,WAAW;AACrC,QAAI;AACJ,QAAI;AACJ,WAAO,OAAO,UAAU,YAAY,OAAO,OAAO;AAC9C,UAAI,SAAU,OAAO,SAAU;AAC/B,UAAI,QAAQ,WAAW,MAAM;AAC7B,WAAQ,GAAA,OAAO,YAAY,MAAM,IAAI,OAAO,QAAQ,IAAI,KAAK,KAAK,SAC1D,OAAO,YAAY,QAAQ,IAAI,KAAK,MAAM,IAAI,GAAG,KAAK,GAAG;AAE7D,wBAAiB,QAAQ,gBAAgB,OAAQ,SAASA,MAAK;AAC/D;AAAA,MACH;AACD,cAAQ,OAAO,YAAY,MAAM,IAAI,KAAK,QAAQ,IAAI,KAAK,KAAK,GAAG;AAK/D,wBAAgB;AAChB,eAAO,SAAS;AAChB;AAAA,MACH;AACD,cAAQ,OAAO,YAAY,QAAQ,IAAI,KAAK,MAAM,IAAI,KAAK,KAAK,GAAG;AAK/D,wBAAgB;AAChB,gBAAQ;AACR;AAAA,MACH;AACD,YAAM,IAAI,MAAM,8CAA8C;AAAA,IACjE;AACD,QAAI,eAAe;AACf,cAAQ,gBAAgB;AAAA,IAC3B;AACD,QAAI,eAAe;AACf,cAAQ,gBAAgB;AAAA,IAC3B;AAAA,EACJ;AACD,WAAS,OAAO6F,WAAU1F,MAAKH,QAAO;AAClC,QAAI,CAAC,QAAQ,MAAM6F,SAAQ,GAAG;AAC1B;AAAA,IACH;AACD,QAAI,cAAc,CAAA;AAClB,IAAAA,UAAS,QAAQ,SAAU,SAAS;AAChC,cAAQ,IAAI,QAAQ7F;AACpB,sBAAgBG,MAAK,SAASH,MAAK;AACnC,UAAI,KAAK,QAAQ;AACjB,UAAI,KAAK,QAAQ;AACjB,UAAI,KAAK,QAAQ;AACjB,UAAI,MAAM,IAAI;AACV,YAAI,WAAW,YAAY;AAC3B,YAAI,WAAW,GAAG;AACd,cAAI,UAAU,YAAY,WAAW,CAAC;AACtC,WAAI,GAAA,iBAAiB,SAAU,QAAQ,kBAAkB,QAAQ,mBAC5D,QAAQ,kBAAkB,QAAQ,cAAc;AACrD,cAAI,QAAQ,kBAAkB,QAAQ,eAAe;AACjD,sBAAU,aAAaA,MAAK;AAAA,UAC/B;AAAA,QACJ;AACD,oBAAY,KAAK,OAAO;AAAA,MAC3B,WACQ,IAAI;AAET,kBAAU,aAAaA,MAAK;AAC5B,2BAAmB,IAAI,OAAO;AAAA,MACjC,WACQ,IAAI;AAET,kBAAU,aAAaA,MAAK;AAC5B,0BAAkB,IAAI,OAAO;AAAA,MAChC,WACQ,IAAI;AAGT,kBAAU,aAAaA,MAAK;AAC5B,2BAAmB,IAAI,OAAO;AAAA,MACjC,OACI;AACD,cAAM,IAAI,MAAM,+BAA+B;AAAA,MAClD;AAAA,IACT,CAAK;AACD,cAAU,aAAaA,MAAK;AAC5B,IAAA6F,UAAS,QAAQ,SAAU,SAAS;AAIhC,aAAO,QAAQ;AACf,aAAO,QAAQ;AACf,aAAO,QAAQ;AAAA,IACvB,CAAK;AAAA,EACJ;AACa,WAAA,SAAG;AACjB,WAAS,UAAU,aAAa7F,QAAO;AACnC,QAAI,WAAW,YAAY;AAC3B,QAAI,aAAa,GAAG;AAChB;AAAA,IACH;AACD,QAAI,KAAK,YAAY,CAAC,EAAE;AACxB,QAAI,KAAK,YAAY,CAAC,EAAE;AACxB,QAAI,YAAY,GAAG,IAAI;AAKvB,QAAI,6BAA6B;AACjC,QAAI;AACJ,WAAO,6BAA6B,GAAG,EAAE,4BAA4B;AACjE,gBAAU,YAAY,6BAA6B,CAAC;AACpD,OAAA,GAAI,iBAAiB,SAAS,QAAQ,kBAAkB,EAAE;AAC1D,OAAA,GAAI,iBAAiB,SAAS,QAAQ,kBAAkB,EAAE;AAC1D,UAAI,MAAMA,OAAM,YAAY,QAAQ,IAAI,KAAK,SAAS;AACtD,UAAI,KAAK,KAAK,GAAG,GAAG;AAEhB;AAAA,MACH;AACD,kBAAY,QAAQ,IAAI;AAAA,IAC3B;AACD,WAAO,8BAA8B,aAChC,UAAU,YAAY,0BAA0B;AAAA;AAAA,KAGhD,QAAQ,SAAS,UAAU,QAAQ,SAAS,kBAC7C,QAAQ,IAAI,MAAM,SAAS,GAAG,IAAI,MAAM,QAAQ;AAChD,QAAE;AAAA,IACL;AACD,QAAI,4BAA4B;AAC5B,UAAI,gBAAgB,YAAY,6BAA6B,CAAC,EAAE;AAChE,WAAK,kBAAkB,QAAQ,kBAAkB,SAAS,SAAS,cAAc,UAAU,kBAAkB;AACzG,UAAE;AAAA,MACL;AAAA,IACJ;AACD,gBAAY,QAAQ,SAAU0G,UAAS,GAAG;AACtC,UAAI,IAAI,4BAA4B;AAChC,2BAAmB,IAAIA,QAAO;AAAA,MACjC,OACI;AACD,0BAAkB,IAAIA,QAAO;AAAA,MAChC;AAAA,IACT,CAAK;AACD,gBAAY,SAAS;AAAA,EACxB;AACD,WAAS,iBAAiB,MAAM,SAAS;AACrC,QAAIb,YAAW,KAAK,aAAa,KAAK,WAAW,CAAA;AACjD,IAAAA,UAAS,KAAK,OAAO;AAAA,EACxB;AACD,WAAS,kBAAkB,MAAM,SAAS;AACtC,YAAQ,UAAU;AAClB,YAAQ,WAAW;AACnB,qBAAiB,MAAM,OAAO;AAAA,EACjC;AACD,WAAS,mBAAmB,MAAM,SAAS;AACvC,YAAQ,UAAU;AAClB,YAAQ,WAAW;AACnB,qBAAiB,MAAM,OAAO;AAAA,EACjC;AACD,WAAS,mBAAmB,MAAM,SAAS;AACvC,YAAQ,UAAU;AAClB,YAAQ,WAAW;AACnB,qBAAiB,MAAM,OAAO;AAAA,EACjC;AACD,WAAS,oBAAoB,aAAa,OAAO;AAC7C,QAAI,UAAU,YAAY;AAC1B,MAAE,QAAQ,OAAO,OAAO;AACxB,QAAI,MAAM,QAAQ;AAClB,QAAI7F,SAAQ,OAAO,IAAI;AACvB,QAAI,QAAQ,CAAC,MAAM,WAAW,CAAC;AAC/B,QAAI,QAAQ,UAAU;AAGlB,YAAM,KAAK,IAAI;AAAA,IAClB,WACQA,kBAAiB,QAAQ,OAAO;AACrC,UAAI,gBAAgBA,OAAM,MAAM,IAAI,KAAKA,OAAM,WAAW,IAAI,GAAG,KAAKA,OAAM,QAAS,CAAA;AACrF,UAAI,cAAc,WAAW,GAAG;AAG5B,cAAM,KAAK,aAAa;AAAA,MAC3B,OACI;AAGD,cAAM,KAAK,IAAI,MAAM,cAAc,MAAM,EAAE,KAAK,IAAI,CAAC;AAAA,MACxD;AAAA,IACJ,OACI;AACD,YAAM,KAAK,IAAI;AAAA,IAClB;AACD,eAAW,QAAQ,QAAQ,KAAK;AAAA,EACnC;AACD,WAAS,qBAAqB,aAAa,OAAO;AAC9C,QAAI,UAAU,YAAY,SAAS,WAAW;AAC9C,MAAE,QAAQ,OAAO,OAAO;AACxB,QAAI,MAAM,QAAQ;AAClB,QAAIA,SAAQ,OAAO,IAAI;AACvB,QAAI,QAAQ,CAAA;AACZ,QAAIA,kBAAiB,QAAQ,OAAO;AAChC,UAAI,UAAUA,OAAM,WAAW,IAAI,OAAO,IAAI,KAAKA,OAAM;AACzD,UAAI,eAAeA,OAAM,MAAM,SAAS,IAAI,KAAK;AACjD,UAAI,aAAa,WAAW,GAAG;AAG3B,cAAM,KAAK,YAAY;AAAA,MAC1B,OACI;AAGD,cAAM,KAAK,IAAI,MAAM,aAAa,MAAM,EAAE,KAAK,IAAI,CAAC;AAAA,MACvD;AAAA,IACJ;AACD,UAAM,KAAK,MAAM,WAAW,CAAC;AAC7B,eAAW,QAAQ,QAAQ,KAAK;AAAA,EACnC;AACD,WAAS,cAAc1B,OAAM,OAAO;AAChC,QAAI,QAAQA,MAAK;AACjB,QAAI,aAAa,MAAMA,KAAI;AAC3B,QAAIuH,YAAW,EAAE,KAAK,MAAM,KAAK,KAAKtI,OAAM,cAAc,OAAO,UAAU;AAC3E,QAAI,CAACsI,aAAYA,UAAS,WAAW,GAAG;AACpC,aAAO;AAAA,IACV;AACD,QAAI,eAAe,CAAA;AACnB,QAAI,gBAAgB,CAAC,UAAU;AAC/B,IAAAvH,MAAK,KAAK,SAAU,aAAa;AAC7B,UAAI,UAAU,YAAY;AAC1B,UAAI,UAAUf,OAAM,cAAc,SAAS,SAAS;AACpD,UAAI,WAAWA,OAAM,cAAc,SAAS,UAAU;AACtD,UAAI,WACC,YACG,EAAE,EAAE,UAAU,MAAM,KAAK,KACrB,QAAQ,SAAS,WACjB,QAAQ,SAAS,iBAAkB;AAC3C,qBAAa,KAAK,oBAAoB,aAAa,KAAK,CAAC;AAAA,MAC5D,WACQ,UAAU;AACf,sBAAc,KAAK,qBAAqB,aAAa,KAAK,CAAC;AAAA,MAC9D;AAAA,IACJ,GAAE,UAAU;AACb,iBAAa,KAAK,MAAM,cAAc,aAAa;AACnD,eAAW,QAAQ,QAAQ,YAAY;AAAA,EAC1C;AACD,WAAA,gBAAwB;;;;;;;ACvTxB,SAAO,eAAe,QAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC/C,SAAA,QAAG;AAChB,MAAI,UAAU;AACd,MAAI,mBAAmB,QAAQ,gBAAgBb,yBAAyB,CAAA;AACxE,MAAIa,SAAQ,QAAQ,aAAaZ,YAAoB,CAAA;AACrD,MAAIM,KAAIM,OAAM;AACd,MAAI,WAAWA,OAAM,aAAa;AAClC,MAAI,UAAUA,OAAM,aAAa;AACjC,MAAI,YAAYX;AAChB,MAAI,UAAUE;AACd,MAAI,aAAakC;AACjB,MAAIM,QAAO,QAAQ,aAAaL,YAAiB,CAAA;AACjD,WAAS,MAAM,QAAQc,UAAS;AAC5B,IAAAA,YAAc,GAAA,UAAU,WAAWA,QAAO;AAC1C,QAAIC,UAAQ,GAAI,QAAQ,YAAY,QAAQD,QAAO;AACnD,QAAI,oBAAoBC,OAAM,SAAS;AAAA,MACnC,UAAUD,SAAQ;AAAA,MAClB,iBAAiB;AAAA,MACjB,SAAS;AAAA,IACjB,CAAK;AACD,QAAI8F,YAAW,CAAA;AACf,QAAI1F,OAAMJ,SAAQ,OAAO,MAAM,mBAAmB;AAAA,MAC9C,KAAK;AAAA,MACL,KAAK;AAAA,MACL,WAAW;AAAA,MACX,OAAOA,SAAQ;AAAA,MACf,SAAS;AAAA,MACT,WAAW8F;AAAA,MACX,UAAUvG,MAAK,UAAUS,UAAS,YAAY,IAAI;AAAA,MAClD,aAAa;AAAA,MACb,YAAYT,MAAK,UAAUS,UAAS,cAAc,QAAQ;AAAA,IAClE,CAAK;AAKD,QAAI,SAAS,MAAM,QAAQI,KAAI,MAAM,IAC/BA,KAAI,SACJhB,iBAAkB,EAAC,SAAS,mBAAmB;AAAA,MAC7C,KAAK;AAAA,IACjB,CAAS;AAEL,WAAOgB,KAAI;AAEX,WAAO,QAAQ,SAAU,OAAO;AAC5B,UAAI,OAAO,MAAM,UAAU,UAAU;AACjC,cAAM,QAAQH,OAAM,YAAY,MAAM,IAAI,OAAO,MAAM,IAAI,GAAG;AAAA,MACjE;AAAA,IACT,CAAK;AACD,QAAI,MAAM,QAAQG,KAAI,QAAQ,GAAG;AAC7B,MAAA0F,YAAW1F,KAAI;AACf,aAAOA,KAAI;AAAA,IACd;AACD,QAAIA,KAAI,KAAK;AAGT,MAAAb,MAAK,mBAAmBa,MAAKH,MAAK;AAAA,IACrC,OACI;AACD,MAAAG,KAAI,MAAM;AAAA,QACN,OAAOH,OAAM,SAAU;AAAA,QACvB,KAAKA,OAAM,QAAS;AAAA,MAChC;AAAA,IACK;AACD,IAAAG,KAAI,IAAI,QAAQH;AAChB,IAAAG,KAAI,IAAI,SAAS;AACjB,QAAI;AACJ,QAAI;AACJ,QAAIA,KAAI,SAAS,WAAW;AACxB,gBAAUA;AAKV,aAAOlD,GAAE,KAAKkD,MAAKJ,SAAQ,kBAAkB,IAAI;AACjD,WAAK,MAAM;AAAA,QACP,OAAOC,OAAM,SAAU;AAAA,QACvB,KAAKA,OAAM,QAAS;AAAA,QACpB,OAAOA;AAAA,QACP,QAAQ;AAAA,MACpB;AAAA,IACK,WACQG,KAAI,SAAS,QAAQ;AAC1B,aAAOA;AACP,gBAAU,KAAK;AAAA,IAClB;AAED,QAAIJ,SAAQ,QAAQ;AAChB,WAAK,SAAS;AAAA,IACjB;AAMD,QAAI,iBAAiBT,MAAK,WAAW;AAAA,MACjC,MAAM,QAAQ;AAAA,MACd,KAAK,QAAQ;AAAA,MACb,MAAM,CAAE;AAAA,MACR,UAAUuG;AAAA,IACb,GAAE7F,MAAK;AACR,YAAQ,IAAI,QAAQ,eAAe;AACnC,YAAQ,IAAI,MAAM,eAAe;AAGjC,KAAA,GAAI,WAAW,QAAQ6F,WAAU,QAAQ,KAAK,SAAS,KAAK,UAAU,MAAM7F,MAAK;AAGjF,WAAO,IAAI,WAAWA,QAAO,MAAM,EAAE,KAAK,IAAI;AAAA,EACjD;AACY,SAAA,QAAG;AAChB,MAAI,aAAa,SAAS2G,YAAW3G,QAAO,QAAQ;AAChD,KAAA,GAAI,iBAAiB,SAAS,gBAAgB2G,WAAU;AACxD,SAAK,QAAQ3G;AACb,SAAK,SAAS;AACd,SAAK,kBAAkB;AACvB,SAAK,gBAAgB,OAAO;AAC5B,SAAK,SAAS;AACd,SAAK,OAAO,oBAAI;EACpB;AACA,MAAI,MAAM,WAAW;AACrB,MAAI,OAAO,SAAU,MAAM;AACvB,QAAI,KAAK,KAAK,IAAI,IAAI,GAAG;AACrB,aAAO,KAAK,KAAK,IAAI,IAAI;AAAA,IAC5B;AACD,QAAI,QAAQ,MAAM,IAAI,GAAG;AACrB,UAAI,SAAS,IAAI,MAAM,KAAK,MAAM;AAClC,WAAK,KAAK,IAAI,MAAM,MAAM;AAC1B,WAAK,QAAQ,SAAU,MAAM4G,IAAG;AAC5B,eAAOA,EAAC,IAAI,KAAK,KAAK,IAAI;AAAA,MAC7B,GAAE,IAAI;AACP,aAAO;AAAA,IACV;AACD,QAAI,CAAC,SAAS,MAAM,IAAI,GAAG;AACvB,aAAO;AAAA,IACV;AACD,IAAAtH,MAAK,mBAAmB,MAAM,KAAK,KAAK;AACxC,QAAI,OAAO,OAAO,OAAO,OAAO,eAAe,IAAI,GAAG;AAAA,MAClD,UAAU;AAAA;AAAA,QAEN,OAAO;AAAA,QACP,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,UAAU;AAAA,MACb;AAAA,IACT,CAAK;AACD,SAAK,KAAK,IAAI,MAAM,IAAI;AACxB,QAAI,MAAM,KAAK;AACf,QAAI,YAAY,KAAK;AACrB,QAAI,YAAY;AAChB,QAAI,qBAAqB,KAAK;AAC9B,QAAI,mBAAmB,KAAK;AAC5B,QAAI,KAAK;AAML,UAAI,KAAK,SAAS,WACd,KAAK,SAAS,UACd,KAAK,SAAS,kBACd,KAAK,SAAS,iBACd,KAAK,MAAM,2BAA2B,IAAI,KAAK,GAAG;AAClD,oBAAY,KAAK,SAAS,IAAI,MAAM;AAAA,MACvC;AAGD,UAAI,QAAQ,KAAK;AACjB,UAAI,SAAS,KAAK;AAClB,UAAI,SAAS;AAIb,WAAK,eAAe,GAAG;AAAA,IAC1B;AACD,QAAI,OAAO,OAAO,KAAK,IAAI;AAC3B,QAAI,WAAW,KAAK;AACpB,aAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AAC/B,UAAI,MAAM,KAAK,CAAC;AAChB,UAAI,QAAQ,OAAO;AACf,aAAK,GAAG,IAAI,KAAK,GAAG;AAAA,MACvB,WACQ,QAAQ,YAAY,KAAK,SAAS,QAAQ;AAG/C,aAAK,GAAG,IAAI,KAAK,GAAG;AAAA,MACvB,OACI;AACD,aAAK,GAAG,IAAI,KAAK,KAAK,KAAK,GAAG,CAAC;AAAA,MAClC;AAAA,IACJ;AACD,SAAK,SAAS;AACd,SAAK,kBAAkB;AACvB,SAAK,gBAAgB;AACrB,WAAO;AAAA,EACX;AAMA,MAAI,iBAAiB,SAAU,KAAK;AAGhC,WAAO,KAAK,kBAAkB,GAAG;AAC7B,UAAI,QAAQ,IAAI,OAAO,KAAK,eAAe;AAC3C,UAAIA,MAAK,WAAW,IAAI,OAAO,MAAM,IAAI,KAAK,IAAI,GAAG;AACjD,UAAE,KAAK;AAAA,MACV;AAEG;AAAA,IACP;AAGD,WAAO,KAAK,gBAAgB,IAAI,OAAO,QAAQ;AAC3C,UAAI,QAAQ,IAAI,OAAO,KAAK,aAAa;AACzC,UAAIA,MAAK,WAAW,MAAM,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG;AAC7C,UAAE,KAAK;AAAA,MACV;AAEG;AAAA,IACP;AAGD,WAAO,KAAK,kBAAkB,KAAK,eAAe;AAC9C,UAAI,QAAQ,IAAI,OAAO,KAAK,eAAe;AAC3C,UAAIA,MAAK,WAAW,MAAM,IAAI,OAAO,IAAI,KAAK,IAAI,GAAG;AACjD,UAAE,KAAK;AAAA,MACV;AAEG;AAAA,IACP;AAED,QAAI,MAAM,QAAQ,KAAK;AAGvB,WAAO,KAAK,gBAAgB,KAAK,iBAAiB;AAC9C,UAAI,QAAQ,IAAI,OAAO,KAAK,gBAAgB,CAAC;AAC7C,UAAIA,MAAK,WAAW,IAAI,KAAK,MAAM,IAAI,GAAG,IAAI,GAAG;AAC7C,UAAE,KAAK;AAAA,MACV;AAEG;AAAA,IACP;AAID,QAAI,IAAI,QAAQ,KAAK;AAAA;;;;;;;;;ACvPzB,SAAO,eAAe,UAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,MAAI,UAAU;AACd,MAAI,mBAAmB,QAAQ,gBAAgB5C,yBAAyB,CAAA;AACxE,MAAIa,SAAQ,QAAQ,aAAaZ,YAAoB,CAAA;AACrD,MAAI2C,QAAO,QAAQ,aAAa1C,YAAiB,CAAA;AACjD,MAAI,IAAIW,OAAM;AACd,MAAI,UAAUA,OAAM,aAAa;AACjC,MAAI,WAAWA,OAAM,aAAa;AAClC,MAAI,aAAa,CAAA;AACjB;AAAA,IACI,CAAC,IAAI;AAAA,IACL,CAAC,IAAI;AAAA,IACL,CAAC,IAAI;AAAA,IACL,CAAC,GAAG;AAAA,IACJ,CAAC,GAAG;AAAA,IACJ,CAAC,GAAG;AAAA,IACJ,CAAC,MAAM,OAAO,MAAM,KAAK;AAAA,IACzB,CAAC,KAAK,KAAK,MAAM,MAAM,MAAM,YAAY;AAAA,IACzC,CAAC,MAAM,MAAM,KAAK;AAAA,IAClB,CAAC,KAAK,GAAG;AAAA,IACT,CAAC,KAAK,KAAK,GAAG;AAAA,IACd,CAAC,IAAI;AAAA,EACT,EAAE,QAAQ,SAAU,MAAM,GAAG;AACzB,SAAK,QAAQ,SAAU,IAAI;AACvB,iBAAW,EAAE,IAAI;AAAA,IACzB,CAAK;AAAA,EACL,CAAC;AACD,MAAI,WAAW,SAASsJ,UAAS,OAAO;AACpC,KAAA,GAAI,iBAAiB,SAAS,gBAAgBA,SAAQ;AACtD,SAAK,QAAQ,CAAC,KAAK;AAAA,EACvB;AACA,MAAI,MAAM,SAAS;AAEnB,WAAS,OAAO,SAAU,KAAK;AAC3B,QAAI,eAAe,UAAU;AAEzB,aAAO,IAAI;IACd;AACD,QAAI,eAAetJ,OAAM,UAAU;AAG/B,UAAI,OAAO,OAAO,OAAO,SAAS,SAAS;AAC3C,UAAI,QAAQ,CAAC,IAAI,KAAK;AACtB,eAAS,KAAK,QAAS,KAAK,IAAI,YAAa,MAAM;AAC/C,cAAM,KAAK,IAAI,MAAM,GAAG,KAAK;AACjC,WAAK,QAAQ,MAAM;AACnB,aAAO;AAAA,IACV;AAED,WAAO,IAAI,SAAS,GAAG;AAAA,EAC3B;AACA,MAAI,OAAO,SAAS,OAAO;AACvB,QAAIuJ,QAAO,OAAO,OAAO,SAAS,SAAS;AAC3C,IAAAA,MAAK,QAAQ,KAAK,MAAM,MAAM,CAAC;AAC/B,WAAOA;AAAA,EACX;AAGA,MAAI,UAAU,SAAS,UAAU;AAC7B,QAAI,IAAI,KAAK;AACb,QAAI,MAAM,EAAE;AACZ,QAAI,MAAM,GAAG;AACT,aAAO,EAAE,MAAM,CAAC;AAAA,IACnB;AAGD,WAAO;AAAA,EACX;AAGA,MAAI,WAAW,SAAS,WAAW;AAC/B,QAAI,IAAI,KAAK;AACb,WAAO,EAAE,EAAE,SAAS,CAAC;AAAA,EACzB;AACA,MAAI,mBAAmB,WAAY;AAC/B,QAAI,IAAI,KAAK;AACb,QAAI,aAAa,EAAE,SAAS;AAC5B,WAAO,EAAE,YAAY,EAAE,UAAU,GAAG,aAAa,CAAC,KAAK;AAAA,EAC3D;AACA,WAAS,cAAcxI,OAAM,OAAO;AAChC,QAAI,IAAIA,MAAK;AACb,aAAS,IAAI,EAAE,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG;AACvC,UAAI,QAAQ,EAAE,CAAC;AACf,UAAI,EAAE,KAAK,MAAM,KAAK,KAAK,EAAE,QAAQ,GAAG;AACpC,eAAO;AAAA,MACV;AAAA,IACJ;AACD,WAAO;AAAA,EACV;AACD,MAAI,UAAU,SAAS,QAAQ,OAAO;AAClC,QAAI,UAAU,QAAQ;AAAE,cAAQ;AAAA,IAAI;AACpC,WAAO,cAAc,MAAM,CAAC,CAAC,KAAK;AAAA,EACtC;AACA,MAAI,gBAAgB,SAAS,cAAc,OAAO;AAC9C,QAAI,UAAU,QAAQ;AAAE,cAAQ;AAAA,IAAI;AACpC,WAAO,cAAc,MAAM,CAAC,CAAC,QAAQ,CAAC;AAAA,EAC1C;AAMA,MAAI,eAAe,SAAS,eAAe;AACvC,QAAI,IAAI,KAAK;AACb,QAAI,EAAE,SAAS,MAAM,GAAG;AACpB,aAAO,EAAE,CAAC;AAAA,IACb;AACD,WAAO,EAAE,CAAC;AAAA,EACd;AAMA,MAAI,OAAO,SAAS,KAAK,UAAmC;AACxD,QAAI,IAAI,KAAK;AACb,QAAI,UAAU,EAAE;AAChB,QAAI,QAAQ,EAAE,UAAU,CAAC;AACzB,QAAI,OAAO,UAAU;AACrB,aAAS,IAAI,GAAG,IAAI,MAAM,EAAE,GAAG;AAC3B,UAAI,OAAO,UAAU,CAAC;AACtB,cAAQ,MAAM,IAAI;AAClB,QAAE,KAAK,MAAM,KAAK;AAAA,IACrB;AACD,QAAI,SAAS,SAAS,IAAI;AAC1B,MAAE,SAAS;AACX,WAAO;AAAA,EACX;AAKA,MAAI,OAAO,SAAS,KAAK,UAAmC;AACxD,QAAI,IAAI,KAAK;AACb,QAAI,UAAU,EAAE;AAChB,QAAI,QAAQ,EAAE,UAAU,CAAC;AACzB,QAAI,OAAO,UAAU;AACrB,aAAS,IAAI,GAAG,IAAI,MAAM,EAAE,GAAG;AAC3B,UAAI,OAAO,UAAU,CAAC;AACtB,cAAQ,MAAM,IAAI;AAClB,QAAE,KAAK,MAAM,KAAK;AAAA,IACrB;AACD,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACnC,UAAI,KAAK,OAAO;AACZ,UAAE,KAAK,GAAG,MAAM,CAAC,CAAC;AAGlB,iBAAS,IAAI;AACb,UAAE,UAAU;AAAA,MACf;AAAA,IACJ;AACD,MAAE,SAAS;AAAA,EACf;AAIA,MAAI,MAAM,SAAS,IAAI,UAAmC;AACtD,QAAI,IAAI,KAAK;AACb,QAAI,UAAU,EAAE;AAChB,QAAI,QAAQ,EAAE,UAAU,CAAC;AACzB,QAAI,OAAO,UAAU;AACrB,aAAS,IAAI,GAAG,IAAI,MAAM,EAAE,GAAG;AAC3B,UAAI,OAAO,UAAU,CAAC;AACtB,cAAQ,MAAM,IAAI;AAClB,QAAE,KAAK,MAAM,KAAK;AAAA,IACrB;AACD,QAAI,SAAS,IAAI,MAAM,MAAM,MAAM;AACnC,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACnC,UAAI,KAAK,OAAO;AACZ,UAAE,KAAK,GAAG,MAAM,CAAC,CAAC;AAClB,eAAO,CAAC,IAAI,SAAS,MAAM,CAAC;AAC5B,UAAE,UAAU;AAAA,MACf;AAAA,IACJ;AACD,MAAE,SAAS;AACX,WAAO;AAAA,EACX;AAWA,MAAI,YAAY,WAAY;AACxB,QAAI,OAAO,KAAK;AAChB,QAAI,YAAY,KAAK,aAAa,IAAI;AACtC,QAAI,CAAC,WAAW;AACZ,aAAO;AAAA,IACV;AACD,QAAI,YAAY,KAAK,aAAa,IAAI;AACtC,QAAI,CAAC,WAAW;AACZ,aAAO;AAAA,IACV;AACD,QAAI,UAAU,UAAU,KAAK;AACzB,UAAI,UAAU,UAAU,KAAK;AAGzB,eAAO;AAAA,MACV;AAQD,UAAI,wBAAwB,CAAC,KAAK,sBAAuB,KACrD,KAAK,iBAAkB,KACvB,CAAC,KAAK,YAAY,IAAI;AAC1B,UAAI,uBAAuB;AACvB,eAAO;AAAA,MACV;AAAA,IACJ;AACD,WAAO;AAAA,EACX;AACA,MAAI,eAAe,SAAU,MAAM;AAC/B,WAAO,QAAQ,KAAK;AACpB,QAAI,MAAM,QAAQ,KAAK;AACvB,QAAI,SAAS,OAAO,IAAI;AACxB,QAAI,UAAU,IAAI,MAAM,QAAQ,GAAG;AAC/B,UAAI,QAAQ,OAAO,IAAI,MAAM,QAAQ,CAAC;AACtC,UAAI,OAAO;AAEP,YAAI,UAAU,KAAK,aAAY,EAAG;AAClC,YAAIgB,MAAK,WAAW,QAAQ,OAAO,MAAM,IAAI,KAAK,KAAK,GAAG;AACtD,iBAAO;AAAA,QACV;AAAA,MACJ;AAAA,IACJ;AACD,WAAO;AAAA,EACX;AACA,MAAI,eAAe,SAAU,MAAM;AAC/B,WAAO,QAAQ,KAAK;AACpB,QAAI,MAAM,QAAQ,KAAK;AACvB,QAAI,SAAS,OAAO,IAAI;AACxB,QAAI,UAAU,IAAI,IAAI,QAAQ,OAAO,QAAQ;AACzC,UAAI,QAAQ,OAAO,IAAI,IAAI,KAAK;AAChC,UAAI,OAAO;AAEP,YAAI,UAAU,KAAK,aAAY,EAAG;AAClC,YAAIA,MAAK,WAAW,MAAM,IAAI,KAAK,QAAQ,GAAG,KAAK,GAAG;AAClD,iBAAO;AAAA,QACV;AAAA,MACJ;AAAA,IACJ;AACD,WAAO;AAAA,EACX;AAGA,MAAI,cAAc,SAAU,yBAAyB;AACjD,QAAI,OAAO,KAAK;AAIhB,QAAI,KAAK,SAAS,0BACd,KAAK,KAAK,SAAS,iBAAiB;AACpC,aAAO;AAAA,IACV;AACD,QAAI,SAAS,KAAK;AAClB,QAAI,OAAO,KAAK;AAIhB,QAAI,KAAK,SAAU,MAAK,MAAM;AAC1B,aAAO;AAAA,IACV;AAED,QAAI,EAAE,UAAU,MAAM,IAAI,GAAG;AACzB,aAAO;AAAA,IACV;AAED,QAAI,KAAK,SAAS,cAAc;AAC5B,aAAO;AAAA,IACV;AACD,QAAI,UAAU,OAAO,SAAS,2BAA2B;AACrD,aAAO;AAAA,IACV;AACD,QAAI,KAAK,SAAS,KAAK,MAAM,eAAe;AACxC,aAAO;AAAA,IACV;AACD,QAAI,CAAC;AACD,aAAO;AAEX,QAAI,KAAK,SAAS,qBACd,OAAO,SAAS,sBAChB,SAAS,UACT,OAAO,SAAS,QAChB,OAAO,aAAa,MAAM;AAC1B,aAAO;AAAA,IACV;AACD,YAAQ,KAAK,MAAI;AAAA,MACb,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAQ,OAAO,SAAS,sBACpB,SAAS,YACT,OAAO,WAAW;AAAA,MAC1B,KAAK;AAAA,MACL,KAAK;AACD,gBAAQ,OAAO,MAAI;AAAA,UACf,KAAK;AACD,mBAAO,SAAS,YAAY,OAAO,WAAW;AAAA,UAClD,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACD,mBAAO;AAAA,UACX,KAAK;AACD,mBAAO,SAAS,YAAY,OAAO,WAAW;AAAA,UAClD,KAAK;AAAA,UACL,KAAK,qBAAqB;AACtB,gBAAI,KAAK,OAAO;AAChB,gBAAI,KAAK,WAAW,EAAE;AACtB,gBAAI,KAAK,KAAK;AACd,gBAAI,KAAK,WAAW,EAAE;AACtB,gBAAI,KAAK,IAAI;AACT,qBAAO;AAAA,YACV;AACD,gBAAI,OAAO,MAAM,SAAS,SAAS;AAC/B,eAAA,GAAI,iBAAiB,SAAS,OAAO,UAAU,IAAI;AACnD,qBAAO;AAAA,YACV;AACD;AAAA,UACH;AAAA,UACD;AACI,mBAAO;AAAA,QACd;AACD;AAAA,MACJ,KAAK;AACD,gBAAQ,OAAO,MAAI;AAAA,UACf,KAAK;AACD,mBAAO;AAAA,UACX,KAAK;AAID,mBAAO;AAAA,UACX,KAAK;AACD,mBAAO,SAAS;AAAA,UACpB;AAGI,mBAAO;AAAA,QACd;AAAA,MACL,KAAK;AACD,eAAO,KAAK,YAAY,OAAO,SAAS;AAAA,MAC5C,KAAK;AAAA,MACL,KAAK;AACD,eAAO,OAAO,SAAS;AAAA,MAC3B,KAAK;AACD,eAAQ,OAAO,SAAS,sBACpB,SAAS,MAAM,KAAK,KAAK,KACzB,SAAS,YACT,OAAO,WAAW;AAAA,MAE1B,KAAK;AACD,eAAQ,OAAO,SAAS,sBACpB,SAAS,YACT,OAAO,WAAW;AAAA,MAC1B,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,gBAAQ,OAAO,MAAI;AAAA,UACf,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACD,mBAAO;AAAA,UACX,KAAK;AAAA,UACL,KAAK;AACD,mBAAO,SAAS,YAAY,OAAO,WAAW;AAAA,UAClD,KAAK;AACD,mBAAO,SAAS,UAAU,OAAO,SAAS;AAAA,UAC9C,KAAK;AACD,mBAAO,SAAS,YAAY,OAAO,WAAW;AAAA,UAClD;AACI,mBAAO;AAAA,QACd;AAAA,MACL,KAAK;AACD,YAAI,EAAE,eAAe,MAAM,MAAM,KAC7B,SAAS,YACT,OAAO,WAAW,MAAM;AACxB,iBAAO;AAAA,QACV;AACD,YAAI,EAAE,iBAAiB,MAAM,MAAM,KAC/B,SAAS,YACT,OAAO,WAAW,MAAM;AACxB,iBAAO;AAAA,QACV;AACD,YAAI,EAAE,kBACF,EAAE,eAAe,MAAM,MAAM,KAC7B,SAAS,gBACT,OAAO,eAAe,MAAM;AAC5B,iBAAO;AAAA,QACV;AACD,eAAO,SAAS,MAAM;AAAA,MAC1B,KAAK;AACD,YAAI,OAAO,SAAS,6BAChB,SAAS,UACT,OAAO,SAAS,MAAM;AACtB,iBAAO;AAAA,QACV;AACD;AAAA,MACJ,KAAK;AACD,YAAI,OAAO,SAAS,6BAChB,SAAS,UACT,OAAO,SAAS,QAChB,KAAK,WAAW,SAAS,oBAAoB;AAC7C,iBAAO;AAAA,QACV;AACD;AAAA,MACJ,KAAK;AACD,YAAI,SAAS,iBACT,EAAE,yBAAyB,MAAM,MAAM,KACvC,EAAE,mBAAmB,MAAM,KAAK,MAAM,GAAG;AACzC,iBAAO;AAAA,QACV;AAAA,IACR;AACD,QAAI,OAAO,SAAS,mBAChB,SAAS,YACT,OAAO,WAAW,MAAM;AACxB,aAAO,uBAAuB,IAAI;AAAA,IACrC;AACD,QAAI,4BAA4B,QAC5B,CAAC,KAAK,sBAAuB,KAC7B,KAAK,iBAAgB,GAAI;AACzB,aAAO;AAAA,IACV;AACD,WAAO;AAAA,EACX;AACA,WAAS,SAAS,MAAM;AACpB,WAAO,EAAE,iBAAiB,MAAM,IAAI,KAAK,EAAE,kBAAkB,MAAM,IAAI;AAAA,EAC1E;AASD,WAAS,uBAAuB,MAAM;AAClC,QAAI,EAAE,eAAe,MAAM,IAAI,GAAG;AAC9B,aAAO;AAAA,IACV;AACD,QAAI,QAAQ,MAAM,IAAI,GAAG;AACrB,aAAO,KAAK,KAAK,sBAAsB;AAAA,IAC1C;AACD,QAAI,EAAE,KAAK,MAAM,IAAI,GAAG;AACpB,aAAO/B,OAAM,UAAU,MAAM,SAAU,OAAO,OAAO;AACjD,eAAO,uBAAuB,KAAK;AAAA,MAC/C,CAAS;AAAA,IACJ;AACD,WAAO;AAAA,EACV;AACD,MAAI,wBAAwB,WAAY;AACpC,QAAI,OAAO,KAAK;AAChB,QAAI,EAAE,mBAAmB,MAAM,IAAI,GAAG;AAClC,aAAO;AAAA,IACV;AACD,QAAI,EAAE,iBAAiB,MAAM,IAAI,GAAG;AAChC,aAAO;AAAA,IACV;AACD,QAAI,EAAE,gBAAgB,MAAM,IAAI,GAAG;AAC/B,aAAO;AAAA,IACV;AACD,WAAO;AAAA,EACX;AACA,MAAI,mBAAmB,WAAY;AAC/B,QAAI,IAAI,KAAK;AACb,QAAI,YAAY;AAChB,QAAI,WAAW;AACf,aAAS,IAAI,EAAE,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG;AACvC,UAAI,EAAE,KAAK,MAAM,EAAE,CAAC,CAAC,GAAG;AACpB,oBAAY;AACZ,gBAAQ;AACR,qBAAa,EAAE,IAAI,CAAC;AACpB,iBAAS,EAAE,CAAC;AAAA,MACf;AACD,UAAI,CAAC,UAAU,CAAC,OAAO;AACnB;AAAA,MACH;AACD,UAAI,EAAE,eAAe,MAAM,MAAM,KAC7B,eAAe,UACf,cAAc,GAAG;AACjB,SAAI,GAAA,iBAAiB,SAAS,OAAO,KAAK,CAAC,MAAM,KAAK;AACtD,eAAO;AAAA,MACV;AACD,UAAI,EAAE,oBAAoB,MAAM,MAAM,KAAK,cAAc,cAAc;AACnE,SAAA,GAAI,iBAAiB,SAAS,OAAO,eAAe,KAAK;AACzD,eAAO;AAAA,MACV;AACD,UAAI,EAAE,qBAAqB,MAAM,MAAM,KAAK,cAAc,QAAQ;AAC9D,SAAA,GAAI,iBAAiB,SAAS,OAAO,SAAS,KAAK;AACnD,eAAO;AAAA,MACV;AACD,UAAI,EAAE,wBAAwB,MAAM,MAAM,KAAK,cAAc,QAAQ;AACjE,SAAA,GAAI,iBAAiB,SAAS,OAAO,SAAS,KAAK;AACnD,eAAO;AAAA,MACV;AAGD,UAAI,EAAE,mBAAmB,MAAM,MAAM,KACjC,EAAE,IAAI,CAAC,MAAM,iBACb,cAAc,GAAG;AACjB,SAAI,GAAA,iBAAiB,SAAS,OAAO,YAAY,CAAC,MAAM,KAAK;AAC7D;AAAA,MACH;AACD,UAAI,EAAE,eAAe,MAAM,MAAM,KAAK,cAAc,UAAU;AAC1D,SAAA,GAAI,iBAAiB,SAAS,OAAO,WAAW,KAAK;AACrD;AAAA,MACH;AACD,UAAI,EAAE,iBAAiB,MAAM,MAAM,KAAK,cAAc,UAAU;AAC5D,SAAA,GAAI,iBAAiB,SAAS,OAAO,WAAW,KAAK;AACrD;AAAA,MACH;AACD,UAAI,EAAE,sBAAsB,MAAM,MAAM,KAAK,cAAc,QAAQ;AAC/D,SAAA,GAAI,iBAAiB,SAAS,OAAO,SAAS,KAAK;AACnD;AAAA,MACH;AACD,UAAI,SAAS,MAAM,KAAK,cAAc,QAAQ;AAC1C,SAAA,GAAI,iBAAiB,SAAS,OAAO,SAAS,KAAK;AACnD;AAAA,MACH;AACD,UAAI,EAAE,gBAAgB,MAAM,MAAM,KAC9B,CAAC,OAAO,UACR,cAAc,YAAY;AAC1B,SAAA,GAAI,iBAAiB,SAAS,OAAO,aAAa,KAAK;AACvD;AAAA,MACH;AACD,aAAO;AAAA,IACV;AACD,WAAO;AAAA,EACX;AACA,WAAA,UAAkB;;;;;;;;AC3hBlB,SAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,UAAA,eAAuB,QAAA,UAAkB;AACzC,MAAI,UAAU;AACd,MAAI,mBAAmB,QAAQ,gBAAgBb,yBAAyB,CAAA;AACxE,MAAI,cAAc,QAAQ,aAAaC,aAAkB,CAAA;AACzD,MAAIY,SAAQ,QAAQ,aAAaX,YAAoB,CAAA;AACrD,MAAI,YAAYW,OAAM,WAAW;AACjC,MAAI,aAAaA,OAAM,WAAW;AAClC,MAAI,kBAAkBA,OAAM,WAAW;AACvC,MAAI,iBAAiBA,OAAM,WAAW;AACtC,MAAI,SAAST;AACb,MAAI,cAAc,QAAQ,gBAAgBkC,gBAAsB,CAAA;AAChE,MAAI,WAAWzB,OAAM,aAAa;AAClC,MAAI,UAAUA,OAAM,aAAa;AACjC,MAAI,WAAWA,OAAM,aAAa;AAClC,MAAI,wBAAwB;AAC5B,MAAI,UAAU,SAASwJ,SAAQ/G,QAAO;AAClC,KAAA,GAAI,iBAAiB,SAAS,gBAAgB+G,QAAO;AACrD,KAAA,GAAI,iBAAiB,SAAS/G,kBAAiB,YAAY,KAAK;AAChE,QAAIiG,QAAO,MAAM,eAAe;AAChC,IAAAA,MAAK,UAAU,SAAU,KAAKjG,QAAO;AACjC,UAAI,SAAS,MAAMA,MAAK;AACpB,QAAAA,SAAQ,YAAY,WAAWA,MAAK;AACxC,mBAAa,KAAK;AAAA,QACd,OAAOA;AAAA,QACP,OAAO,IAAI;AAAA,QACX,KAAK,IAAI;AAAA,MACrB,CAAS;AAAA,IACT;AACI,IAAAiG,MAAK,MAAM,SAAU,KAAK;AAEtB,YAAM,OAAO;AAAA,QACT,OAAO,EAAE,MAAM,GAAG,QAAQ,EAAG;AAAA,QAC7B,KAAK,EAAE,MAAMjG,OAAM,QAAQ,QAAQA,OAAM,cAAcA,OAAM,MAAM,EAAG;AAAA,MAClF;AACQ,UAAI,YAAY,IAAI,OAAO,WAAW,CAAA;AACtC,eAAS,UAAU,MAAM,IAAI;AACzB,YAAI,iBAAiB,aAAa,OAAO,YAAY,MAAM,EAAE,KAAK,CAAC;AACnE,iBAAS,KAAKA,OAAM,MAAM,MAAM,EAAE,CAAC;AAAA,MACtC;AACD,mBACK,KAAK,SAAU,GAAG/C,IAAG;AAAE,gBAAO,GAAI,OAAO,YAAY,EAAE,OAAOA,GAAE,KAAK;AAAA,MAAE,CAAE,EACzE,QAAQ,SAAU,KAAK;AACxB,aAAI,GAAI,OAAO,YAAY,WAAW,IAAI,KAAK,IAAI,EAAG;AAAA,aAGjD;AACD,oBAAU,WAAW,IAAI,KAAK;AAC9B,mBAAS,KAAK,IAAI,KAAK;AACvB,sBAAY,IAAI;AAAA,QACnB;AAAA,MACb,CAAS;AACD,gBAAU,WAAW,IAAI,GAAG;AAC5B,aAAO,YAAY,OAAO,QAAQ;AAAA,IAC1C;AAAA,EACA;AACe,UAAA,UAAG;AAClB,MAAI,KAAK,QAAQ;AACjB,KAAG,uBAAuB,SAAU,SAAS,SAAS,OAAO;AACzD,QAAI+J,WAAU;AACd,QAAI,CAAC,QAAQ,YAAY,CAAC,QAAQ,UAAU;AAExC,aAAO;AAAA,IACV;AACD,QAAI,UAAU,YAAY,QAAQ,KAAK,OAAO;AAC9C,QAAI,UAAU,YAAY,QAAQ,KAAK,OAAO;AAC9C,YAAQ,MAAM,KAAK,YAAY,uBAAuB,OAAO,CAAC;AAC9D,YAAQ,MAAM,KAAK,YAAY,uBAAuB,OAAO,CAAC;AAC9D,QAAI,WAAW,CAAA;AACf,QAAI,wBAAwB,kBAAkB,SAAS,SAAS,QAAQ;AAGxE,QAAI,yBAAyB,SAAS,SAAS,GAAG;AAC9C,eAAS,QAAQ,SAAU,SAAS;AAChC,YAAI,aAAa,QAAQ,QAAQ,SAAQ;AACzC,SAAI,GAAA,iBAAiB,SAAS,WAAW,WAAW,WAAW,QAAQ;AACvE,QAAAA,SAAQ;AAAA,UAAQ,WAAW;AAAA;AAAA;AAAA,UAG3B,MAAM,QAAQ,OAAO,EAAE,WAAW,WAAW,IAAI,MAAM;AAAA,QAAC;AAAA,MACpE,CAAS;AAAA,IACJ;AACD,WAAO;AAAA,EACX;AAIA,WAAS,uBAAuB,MAAM;AAClC,QAAI,SAAS,CAAA;AACb,QAAI,KAAK,YAAY,KAAK,SAAS,SAAS,GAAG;AAC3C,WAAK,SAAS,QAAQ,SAAU,SAAS;AACrC,YAAI,QAAQ,WAAW,QAAQ,UAAU;AACrC,iBAAO,KAAK,OAAO;AAAA,QACtB;AAAA,MACb,CAAS;AAAA,IACJ;AACD,WAAO;AAAA,EACV;AACD,KAAG,iBAAiB,SAAU,MAAM;AAChC,QAAI,CAAC,KAAK,UAAU;AAChB;AAAA,IACH;AACD,QAAIA,WAAU;AACd,SAAK,SAAS,QAAQ,SAAU,SAAS;AACrC,UAAI,QAAQ,SAAS;AAGjB,QAAAA,SAAQ,QAAQ;AAAA,UACZ,OAAO,QAAQ,IAAI;AAAA,UACnB,KAAK,KAAK,IAAI,MAAM,WAAW,QAAQ,IAAI,KAAK,OAAO,KAAK;AAAA,QAC/D,GAAE,EAAE;AAAA,MACR,WACQ,QAAQ,UAAU;AAGvB,QAAAA,SAAQ,QAAQ;AAAA,UACZ,OAAO,KAAK,IAAI,MAAM,WAAW,QAAQ,IAAI,OAAO,MAAM,KAAK;AAAA,UAC/D,KAAK,QAAQ,IAAI;AAAA,QACpB,GAAE,EAAE;AAAA,MACR;AAAA,IACT,CAAK;AAAA,EACL;AACA,WAAS,aAAa1I,OAAM;AACxB,KAAA,GAAI,iBAAiB,SAASA,iBAAgB,YAAY,OAAO;AAGjE,QAAI,OAAOA,MAAK;AAChB,QAAI,CAAC,UAAU,MAAM,IAAI;AACrB;AACJ,QAAI,OAAO,KAAK;AAChB,QAAI,UAAU,QAAQ,KAAK;AAC3B,QAAI0B,SAAQ,WAAW,QAAQ;AAC/B,QAAI,WAAW,CAAA;AACf,QAAI,CAACA,UAAS,CAAC,aAAa1B,OAAM,QAAQ;AACtC;AACJ,WAAO,SAAU,OAAO;AACpB,UAAI0I,WAAU,IAAI,QAAQhH,MAAK;AAC/B,eAAS,QAAQ,SAAU,SAAS;AAChC,YAAI,UAAU,QAAQ,QAAQ,SAAQ;AACtC,YAAI,UAAU,QAAQ,QAAQ,SAAQ;AACtC,uBAAe,OAAO,QAAQ,KAAK,IAAI;AACvC,YAAI,iCAAiC,CAACgH,SAAQ,qBAAqB,SAAS,SAAS,KAAK;AAC1F,YAAI,gCAAgC;AAKhC,UAAAA,SAAQ,eAAe,OAAO;AAAA,QACjC;AACD,YAAI,WAAW,MAAM,QAAQ,SAAS;AAAA,UAClC,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMjB,iBAAiB,QAAQ,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,UAAW;AAAA,QAChF,CAAA,EAAE,WAAW,QAAQ,IAAI,MAAM;AAChC,YAAI,MAAM,kBAAkBhH,QAAO,QAAQ,KAAK,QAAQ;AACxD,YAAI,MAAM,mBAAmBA,QAAO,QAAQ,KAAK,QAAQ;AAMzD,YAAI,OAAO,KAAK;AACZ,cAAI,WAAW,CAAA;AACf,iBAAO,SAAS,KAAK,GAAG;AACxB,mBAAS,KAAK,QAAQ;AACtB,iBAAO,SAAS,KAAK,GAAG;AACxB,qBAAW,YAAY,OAAO,QAAQ;AAAA,QACzC;AACD,QAAAgH,SAAQ,QAAQ,QAAQ,KAAK,QAAQ;AAAA,MACjD,CAAS;AAGD,UAAI,eAAeA,SAAQ,IAAI,OAAO,EAAE,WAAW,CAAC,KAAK,IAAI,MAAM;AACnE,UAAI1I,MAAK,eAAe;AACpB,eAAO,YAAY,OAAO,CAAC,KAAK,cAAc,GAAG,CAAC;AAAA,MACrD;AACD,aAAO;AAAA,IACf;AAAA,EACC;AACmB,UAAA,eAAG;AAIvB,WAAS,kBAAkB,UAAU,QAAQ,UAAU;AACnD,QAAI,mBAAkB,GAAI,OAAO,SAAS,OAAO,KAAK;AAEtD,QAAI,mBAAmB,SAAS,QAAQ,eAAe,KAAK,SAAS,OAAO,eAAe;AAE3F,QAAI,eAAe,SAAS,OAAO,SAAS,SAAU,CAAA;AACtD,WAAQ,oBACJ,sBAAsB,KAAK,gBAAgB,KAC3C,gBACA,sBAAsB,KAAK,YAAY;AAAA,EAC9C;AAID,WAAS,mBAAmB,UAAU,QAAQ,UAAU;AAEpD,QAAI,kBAAkB,SAAS,OAAO,OAAO,GAAG;AAChD,QAAI,aAAa,SAAS;AAE1B,QAAI,cAAc,SAAS,QAAQ,UAAU,KAAK,SAAS,OAAO,UAAU;AAC5E,WAAQ,eACJ,sBAAsB,KAAK,WAAW,KACtC,mBACA,sBAAsB,KAAK,eAAe;AAAA,EACjD;AACD,WAAS,aAAa,SAAS,UAAU;AACrC,QAAI,UAAU,QAAQ;AACtB,cAAU,OAAO,OAAO;AACxB,QAAI,UAAU,QAAQ;AACtB,cAAU,OAAO,OAAO;AACxB,KAAA,GAAI,iBAAiB,SAAS,SAAS,WAAW,CAAC;AACnD,QAAI,QAAQ,SAAS,QAAQ,MAAM;AAC/B,aAAO;AAAA,IACV;AACD,QAAI,UAAU,IAAI,YAAY,QAAQ,OAAO;AAC7C,QAAI,aAAa,kBAAkB,SAAS,SAAS,QAAQ;AAC7D,QAAI,CAAC,YAAY;AAGb,eAAS,SAAS;AAAA,IACrB;AACD,WAAO;AAAA,EACV;AACD,WAAS,gBAAgB,SAAS,SAAS,UAAU;AACjD,QAAI,UAAU,QAAQ;AACtB,QAAI,UAAU,QAAQ;AACtB,QAAI,YAAY;AACZ,aAAO;AACX,QAAI,QAAQ,MAAM,OAAO;AACrB,aAAO,kBAAkB,SAAS,SAAS,QAAQ;AACvD,QAAI,SAAS,MAAM,OAAO;AACtB,aAAO,mBAAmB,SAAS,SAAS,QAAQ;AACxD,WAAO;AAAA,EACV;AACD,WAAS,kBAAkB,SAAS,SAAS,UAAU;AACnD,QAAI,UAAU,QAAQ;AACtB,QAAI,UAAU,QAAQ;AACtB,QAAI,YAAY,WACZ,QAAQ,iBAAkB,KAC1B,QAAQ,iBAAgB,GAAI;AAC5B,aAAO;AAAA,IACV;AACD,YAAQ,OAAO,OAAO;AACtB,QAAI,MAAM,QAAQ;AAClB,QAAI,EAAE,QAAQ,MAAM,OAAO,KAAK,QAAQ,WAAW;AAC/C,aAAO;AACX,aAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC1B,cAAQ,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC;AAChC,cAAQ,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC;AAChC,UAAI,aAAa,gBAAgB,SAAS,SAAS,QAAQ;AAC3D,cAAQ,MAAM,UAAU;AACxB,cAAQ,MAAM,UAAU;AACxB,UAAI,CAAC,YAAY;AACb,eAAO;AAAA,MACV;AAAA,IACJ;AACD,WAAO;AAAA,EACV;AACD,WAAS,mBAAmB,SAAS,SAAS,UAAU;AACpD,QAAI,UAAU,QAAQ;AACtB,aAAS,OAAO,OAAO;AACvB,QAAI,QAAQ,aAAa,MAAM;AAE3B,aAAO;AAAA,IACV;AACD,QAAI,UAAU,QAAQ;AACtB,QAAI,CAAC,SAAS,MAAM,OAAO;AACvB,aAAO;AACX,QAAI,YAAY,WACZ,QAAQ,iBAAkB,KAC1B,QAAQ,iBAAgB,GAAI;AAC5B,aAAO;AAAA,IACV;AACD,QAAI,UAAU,MAAM,OAAO,GAAG;AAC1B,UAAI,CAAC,UAAU,MAAM,OAAO,GAAG;AAC3B,eAAO;AAAA,MACV;AACD,UAAI,gBAAgB,QAAQ;AAC5B,UAAI,gBAAgB,QAAQ;AAC5B,UAAI,kBAAkB,QAClB,cAAc,SAAS,4BACvB,kBAAkB,QAClB,cAAc,SAAS,0BAA0B;AACjD,YAAI,iBAAiB,cAAc,OAAO,WAAW,KAAK,CAAC,CAAC,cAAc,OAAO,CAAC,EAAE;AACpF,YAAI,gBAAgB,cAAc,OAAO,WAAW,KAAK,CAAC,CAAC,cAAc,OAAO,CAAC,EAAE;AACnF,YAAI,CAAC,kBAAkB,eAAe;AAClC,iBAAO;AAAA,QACV;AAAA,MACJ;AAGD,UAAI,QAAQ,SAAS,QAAQ,MAAM;AAC/B,YAAI,gBAAgB,CAAA;AACpB,YAAI,kBAAkB,SAAS,SAAS,aAAa,GAAG;AACpD,mBAAS,KAAK,MAAM,UAAU,aAAa;AAAA,QAC9C,WACQ,QAAQ,KAAK;AAGlB,mBAAS,KAAK;AAAA,YACV,SAAS,QAAQ,KAAM;AAAA,YACvB,SAAS,QAAQ,KAAM;AAAA,UAC3C,CAAiB;AAAA,QACJ,OACI;AACD,iBAAO;AAAA,QACV;AACD,eAAO;AAAA,MACV;AACD,UAAI,WAAW,MAAM,OAAO,KACxB,WAAW,MAAM,OAAO;AAAA;AAAA,MAGxB,QAAQ,KAAK;AAIb,iBAAS,KAAK;AAAA,UACV,SAAS,QAAQ,KAAM;AAAA,UACvB,SAAS,QAAQ,KAAM;AAAA,QACvC,CAAa;AACD,eAAO;AAAA,MACV;AAID,aAAO;AAAA,IACV;AACD,WAAO,kBAAkB,SAAS,SAAS,QAAQ;AAAA,EACtD;AACD,WAAS,kBAAkB,SAAS,SAAS,UAAU;AACnD,QAAI,UAAU,QAAQ;AACtB,QAAI,UAAU,QAAQ;AACtB,aAAS,OAAO,OAAO;AACvB,aAAS,OAAO,OAAO;AACvB,QAAI,QAAQ,aAAa,MAAM;AAE3B,aAAO;AAAA,IACV;AAID,QAAI,QAAQ,YAAW,KAAM,CAAC,QAAQ,UAAS,GAAI;AAC/C,aAAO;AAAA,IACV;AACD,QAAI,QAAO,GAAI,OAAO,gBAAgB,SAAS,OAAO;AACtD,QAAI,QAAQ,SAAS,UAAU,QAAQ,SAAS,QAAQ;AAGpD,aAAO,KAAK;AAAA,IACf;AAED,WAAO,KAAK;AACZ,QAAI,uBAAuB,SAAS;AACpC,aAAS,KAAK,MAAM;AAChB,UAAI,EAAE,OAAO,CAAC,MAAM,KAAK;AAGrB;AAAA,MACH;AACD,cAAQ,MAAM,KAAK,GAAGf,OAAM,cAAc,SAAS,CAAC,CAAC;AACrD,cAAQ,MAAM,KAAK,GAAGA,OAAM,cAAc,SAAS,CAAC,CAAC;AACrD,UAAI,aAAa,gBAAgB,SAAS,SAAS,QAAQ;AAC3D,cAAQ,MAAM,UAAU;AACxB,cAAQ,MAAM,UAAU;AACxB,UAAI,CAAC,YAAY;AACb,eAAO;AAAA,MACV;AAAA,IACJ;AAID,QAAI,gBAAgB,MAAM,QAAQ,QAAO,CAAE,KACvC,SAAS,SAAS,sBAAsB;AACxC,aAAO;AAAA,IACV;AACD,WAAO;AAAA,EACX;;;;;;;AChYA,SAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAI,CAAE;AAC7C,UAAA,UAAG;AAClB,MAAI,UAAU;AACd,MAAI,mBAAmB,QAAQ,gBAAgBb,yBAAyB,CAAA;AACxE,MAAIa,SAAQ,QAAQ,aAAaZ,YAAoB,CAAA;AACrD,MAAI,aAAaC;AACjB,MAAI,cAAc,QAAQ,gBAAgBE,gBAAsB,CAAA;AAChE,MAAI,UAAUkC;AACd,MAAI,YAAYC;AAChB,MAAI,YAAYE;AAChB,MAAIG,QAAO,QAAQ,aAAaF,YAAiB,CAAA;AACjD,MAAIjB,cAAaZ,OAAM;AACvB,MAAI,WAAWA,OAAM,aAAa;AAClC,MAAI,WAAWA,OAAM,aAAa;AAClC,MAAI,cAAc,SAAS0J,aAAYnH,OAAMH,YAAW;AACpD,KAAA,GAAI,iBAAiB,SAAS,gBAAgBsH,YAAW;AACzD,aAAS,OAAOnH,KAAI;AACpB,SAAK,OAAOA;AACZ,QAAIH,YAAW;AACX,eAAS,OAAOA,UAAS;AACzB,WAAK,MAAMA;AAAA,IACd;AAAA,EACL;AACA,MAAI,MAAM,YAAY;AACtB,MAAI,sBAAsB;AAC1B,MAAI,WAAW,WAAY;AACvB,QAAI,CAAC,qBAAqB;AACtB,cAAQ,KAAK,sLAEoD;AACjE,4BAAsB;AAAA,IACzB;AACD,WAAO,KAAK;AAAA,EAChB;AACA,MAAI,mBAAmB,IAAI,YAAY,EAAE;AACzC,MAAI,UAAU,SAASuH,SAAQ,QAAQ;AACnC,KAAA,GAAI,iBAAiB,SAAS,gBAAgBA,QAAO;AACrD,QAAI,mBAAmB,UAAU,OAAO;AACxC,cAAa,GAAA,UAAU,WAAW,MAAM;AAIxC,WAAO,iBAAiB;AAGxB,aAAS,sBAAsBnH,UAAS,WAAW;AAC/C,MAAAA,WAAU,OAAO,OAAO,CAAE,GAAEA,UAAS,SAAS;AAC9C,aAAO,SAAUzB,OAAM;AAAE,eAAO,MAAMA,OAAMyB,QAAO;AAAA;IACtD;AACD,aAAS,MAAMzB,OAAMyB,UAAS;AAC1B,OAAA,GAAI,iBAAiB,SAASzB,iBAAgB,YAAY,OAAO;AACjE,MAAAyB,WAAUA,YAAW;AACrB,UAAIA,SAAQ,iBAAiB;AACzB,gBAAW,GAAA,WAAW,eAAezB,OAAM,sBAAsByB,UAAS;AAAA,UACtE,iBAAiB;AAAA,QACpB,CAAA,CAAC;AAAA,MACL;AACD,UAAI,cAAc,OAAO;AACzB,UAAI,CAAC,kBAAkB;AACnB,YAAI,MAAMzB,MAAK,QAAO,EAAG;AACzB,YAAI,OAAO,IAAI,SAAS,IAAI,MAAM,eAAe;AAC7C,iBAAO,WAAW,IAAI,MAAM,cAAa;AAAA,QAC5C;AAAA,MACJ;AACD,UAAI,aAAgB,GAAA,UAAU,cAAcA,KAAI;AAChD,UAAI0B,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASJ,UAAU,KAAK;AAAA,UACjB,aAAa1B,OAAM,QAAQyB,UAAS,sBAAsBA,UAAS;AAAA,QACjE,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,MACpB,CAAA,CAAC;AACN,aAAO,WAAW;AAClB,aAAOC;AAAA,IACV;AACD,SAAK,QAAQ,SAAUG,MAAK;AACxB,UAAI,CAACA,MAAK;AACN,eAAO;AAAA,MACV;AACD,UAAIH,SAAQ,MAAM,YAAY,QAAQ,KAAKG,IAAG,GAAG;AAAA,QAC7C,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,MAC7B,CAAS;AACD,aAAO,IAAI,YAAYH,OAAM,SAAS,MAAM,GAAGV,MAAK,kBAAkB,OAAO,gBAAgBU,OAAM,aAAa,OAAO,eAAe,OAAO,UAAU,CAAC,CAAC;AAAA,IACjK;AACI,SAAK,mBAAmB,SAAUG,MAAK;AACnC,UAAI,CAACA,MAAK;AACN,eAAO;AAAA,MACV;AAED,eAAS,iBAAiB7B,OAAM;AAC5B,gBAAW,GAAA,WAAW,eAAeA,OAAM,SAAUA,OAAM;AACvD,iBAAO,aAAaA,OAAM,QAAQ;AAAA,YAC9B,iBAAiB;AAAA,YACjB,iBAAiB;AAAA,UACpB,GAAE,gBAAgB;AAAA,QACnC,CAAa;AAAA,MACJ;AACD,UAAIA,QAAO,YAAY,QAAQ,KAAK6B,IAAG;AACvC,UAAI,qBAAqB,OAAO;AAGhC,aAAO,kBAAkB;AAEzB,UAAI,KAAK,IAAI,YAAY,iBAAiB7B,KAAI,EAAE,SAAS,MAAM,CAAC;AAChE,aAAO,kBAAkB;AACzB,aAAO;AAAA,IACf;AAAA,EACA;AACe,UAAA,UAAG;AAClB,WAAS,aAAaA,OAAM,QAAQyB,UAAS,WAAW;AACpD,KAAA,GAAI,iBAAiB,SAASzB,iBAAgB,YAAY,OAAO;AACjE,QAAI,OAAOA,MAAK;AAChB,QAAI,QAAQ,CAAA;AACZ,QAAI,qBAAqB,qBAAqBA,OAAM,QAAQ,SAAS;AACrE,QAAI,CAAC,QAAQ,mBAAmB,WAAW;AACvC,aAAO;AAAA,IACV;AACD,QAAI,kBAAkB;AACtB,QAAI,kBAAkB,gBAAgBA,OAAM,SAAS;AACrD,QAAI,gBAAgB,WAAW;AAG3B,UAAI,CAACyB,SAAQ,iBAAiB;AAC1B,0BAAkBzB,MAAK;MAC1B;AAAA,IACJ,OACI;AACD,YAAM,KAAK,eAAe;AAAA,IAC7B;AACD,QAAI,iBAAiB;AACjB,YAAM,QAAQ,GAAG;AAAA,IACpB;AACD,UAAM,KAAK,kBAAkB;AAC7B,QAAI,iBAAiB;AACjB,YAAM,KAAK,GAAG;AAAA,IACjB;AACD,eAAW,QAAQ,QAAQ,KAAK;AAAA,EACnC;AAKD,WAAS,qBAAqBA,OAAMyB,UAAS,OAAO;AAChD,QAAI,IAAIzB,MAAK;AACb,QAAI,CAAC,GAAG;AACJ,iBAAW,QAAQ,YAAY,EAAE;AAAA,IACpC;AACD,QAAI,OAAO,MAAM,UAAU;AACvB,cAAW,GAAA,QAAQ,YAAY,GAAGyB,QAAO;AAAA,IAC5C;AACD,IAAA5B,YAAW,UAAU,OAAO,CAAC;AAC7B,QAAI,QAAQ,CAAA;AACZ,YAAQ,EAAE,MAAI;AAAA,MACV,KAAK;AACD,eAAOG,MAAK,KAAK,OAAO,SAAS;AAAA,MACrC,KAAK;AAED,YAAI,EAAE,YAAY;AACd,UAAAA,MAAK,KAAK,SAAU,WAAW;AAC3B,kBAAM,KAAK,MAAM,SAAS,GAAG,KAAK;AAAA,UACrC,GAAE,YAAY;AAAA,QAClB;AACD,YAAI,EAAE,aAAa;AACf,gBAAM,KAAKA,MAAK,KAAK,OAAO,aAAa,CAAC;AAAA,QAC7C;AACD,cAAM,KAAKA,MAAK,KAAK,SAAU,UAAU;AAAE,iBAAO,uBAAuB,UAAUyB,UAAS,KAAK;AAAA,QAAE,GAAI,MAAM,CAAC;AAC9G,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AAAA,MACL,KAAK;AACD,mBAAW,QAAQ,YAAY,EAAE;AAAA,MACrC,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAACzB,MAAK,KAAK,OAAO,YAAY,GAAG,GAAG,CAAC;AAAA,MACpE,KAAK;AACD,mBAAW,QAAQ,QAAQ,CAAC,KAAKA,MAAK,KAAK,OAAO,YAAY,GAAG,GAAG,CAAC;AAAA,MACzE,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,GAAG,EAAE,KAAK;AAAA,UACrCA,MAAK,KAAK,OAAO,MAAM;AAAA,UACvB,EAAE;AAAA,UACFA,MAAK,KAAK,OAAO,OAAO;AAAA,QACxC,CAAa;AAAA,MACL,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,MAAM;AAAA,UACvB;AAAA,UACAA,MAAK,KAAK,OAAO,OAAO;AAAA,QACxC,CAAa;AAAA,MACL,KAAK;AAAA,MACL,KAAK,4BAA4B;AAC7B,cAAM,KAAKA,MAAK,KAAK,OAAO,QAAQ,CAAC;AACrC,YAAI,WAAWA,MAAK,KAAK,OAAO,UAAU;AAG1C,YAAI,WAAWf,OAAM,cAAc,GAAG,UAAU;AAChD,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,WAAW,QAAQ,KAAK,UAAU,GAAG;AAAA,QACnD,OACI;AACD,gBAAM,KAAK,WAAW,OAAO,KAAK,QAAQ;AAAA,QAC7C;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AACD,eAAOe,MAAK,KAAK,OAAO,YAAY;AAAA,MACxC,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,MAAM;AAAA,UACvB;AAAA,UACAA,MAAK,KAAK,OAAO,UAAU;AAAA,QAC3C,CAAa;AAAA,MACL,KAAK;AACD,YAAI,EAAE,QAAQ;AACV,gBAAM,KAAKA,MAAK,KAAK,OAAO,QAAQ,CAAC;AAAA,QACxC;AACD,cAAM,KAAK,MAAMA,MAAK,KAAK,OAAO,QAAQ,CAAC;AAC3C,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,gBAAO,GAAI,QAAQ,YAAY,GAAG,EAAE,KAAK,EAAE,IAAI;AAAA,MACnD,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,WACvB,GAAI,QAAQ,YAAY,EAAE,MAAMyB,QAAO;AAAA,UACvC,EAAE,WAAW,MAAM;AAAA,UACnBzB,MAAK,KAAK,OAAO,gBAAgB;AAAA,QACjD,CAAa;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB;AAAA,UACAA,MAAK,KAAK,OAAO,UAAU;AAAA,UAC3BA,MAAK,KAAK,OAAO,gBAAgB;AAAA,QACjD,CAAa;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,YAAI,EAAE,SAAS;AACX,gBAAM,KAAK,UAAU;AAAA,QACxB;AACD,YAAI,EAAE,OAAO;AACT,gBAAM,KAAK,QAAQ;AAAA,QACtB;AACD,cAAM,KAAK,UAAU;AACrB,YAAI,EAAE;AACF,gBAAM,KAAK,GAAG;AAClB,YAAI,EAAE,IAAI;AACN,gBAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,IAAI,GAAGA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAAA,QAC7E,OACI;AACD,cAAI,EAAE,gBAAgB;AAClB,kBAAM,KAAKA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAAA,UAChD;AAAA,QACJ;AACD,cAAM,KAAK,KAAK,oBAAoBA,OAAMyB,UAAS,KAAK,GAAG,KAAKzB,MAAK,KAAK,OAAO,YAAY,CAAC;AAC9F,YAAI,EAAE,MAAM;AACR,gBAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,MAAM,CAAC;AAAA,QAC3C;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,YAAI,EAAE,OAAO;AACT,gBAAM,KAAK,QAAQ;AAAA,QACtB;AACD,YAAI,EAAE,gBAAgB;AAClB,gBAAM,KAAKA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAAA,QAChD;AACD,YAAI,CAACyB,SAAQ,qBACT,EAAE,OAAO,WAAW,KACpB,CAAC,EAAE,QACH,EAAE,OAAO,CAAC,EAAE,SAAS,gBACrB,CAAC,EAAE,OAAO,CAAC,EAAE,kBACb,CAAC,EAAE,YAAY;AACf,gBAAM,KAAKzB,MAAK,KAAK,OAAO,UAAU,CAAC,CAAC;AAAA,QAC3C,OACI;AACD,gBAAM,KAAK,KAAK,oBAAoBA,OAAMyB,UAAS,KAAK,GAAG,KAAKzB,MAAK,KAAK,OAAO,YAAY,CAAC;AAAA,QACjG;AACD,cAAM,KAAK,QAAQA,MAAK,KAAK,OAAO,MAAM,CAAC;AAC3C,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,eAAO,YAAYA,OAAMyB,UAAS,KAAK;AAAA,MAC3C,KAAK;AACD,cAAM,KAAK,OAAO;AAClB,YAAI,EAAE;AACF,gBAAM,KAAK,GAAG;AAClB,YAAI,EAAE;AACF,gBAAM,KAAK,KAAKzB,MAAK,KAAK,OAAO,UAAU,CAAC;AAChD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,cAAM,KAAK,OAAO;AAClB,YAAI,EAAE;AACF,gBAAM,KAAK,GAAG;AAClB,YAAI,EAAE;AACF,gBAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,UAAU,CAAC;AAChD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB;AAAA,UACAA,MAAK,KAAK,OAAO,MAAM,EAAE,OAAOyB,SAAQ,QAAQ;AAAA,UAChD;AAAA,QAChB,CAAa;AAAA,MACL,KAAK;AACD,cAAM,KAAK,UAAUzB,MAAK,KAAK,OAAO,IAAI,CAAC;AAC3C,YAAI,EAAE,QAAQ;AACV,WAAA,GAAI,iBAAiB,SAAS,CAAC,EAAE,IAAI;AACrC,gBAAM,KAAK,QAAQA,MAAK,KAAK,OAAO,QAAQ,CAAC;AAAA,QAChD,OACI;AACD,gBAAM,KAAKA,MAAK,KAAK,OAAO,MAAM,CAAC;AAAA,QACtC;AACD,gBAAO,GAAI,QAAQ,YAAY,GAAG,EAAE,KAAK,KAAK;AAAA,MAClD,KAAK;AACD,YAAI,EAAE,cAAc,EAAE,eAAe,SAAS;AAC1C,gBAAM,KAAK,EAAE,aAAa,GAAG;AAAA,QAChC;AACD,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAKA,MAAK,KAAK,OAAO,UAAU,CAAC;AACvC,cAAI,EAAE,SAAS,EAAE,MAAM,SAAS,EAAE,SAAS,MAAM;AAC7C,kBAAM,KAAK,QAAQA,MAAK,KAAK,OAAO,OAAO,CAAC;AAAA,UAC/C;AAAA,QACJ,WACQ,EAAE,IAAI;AACX,gBAAM,KAAKA,MAAK,KAAK,OAAO,IAAI,CAAC;AACjC,cAAI,EAAE,MAAM;AACR,kBAAM,KAAK,QAAQA,MAAK,KAAK,OAAO,MAAM,CAAC;AAAA,UAC9C;AAAA,QACJ;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,YAAI,EAAE,cAAc,EAAE,eAAe,SAAS;AAC1C,gBAAM,KAAK,EAAE,aAAa,GAAG;AAAA,QAChC;AACD,YAAI,EAAE,OAAO;AACT,gBAAM,KAAKA,MAAK,KAAK,OAAO,OAAO,CAAC;AACpC,cAAI,EAAE,YAAY,EAAE,SAAS,SAAS,EAAE,MAAM,MAAM;AAChD,kBAAM,KAAK,QAAQA,MAAK,KAAK,OAAO,UAAU,CAAC;AAAA,UAClD;AAAA,QACJ,WACQ,EAAE,IAAI;AACX,gBAAM,KAAKA,MAAK,KAAK,OAAO,IAAI,CAAC;AACjC,cAAI,EAAE,MAAM;AACR,kBAAM,KAAK,QAAQA,MAAK,KAAK,OAAO,MAAM,CAAC;AAAA,UAC9C;AAAA,QACJ;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,mBAAW,QAAQ,YAAY,GAAG;AAAA,MACtC,KAAK;AACD,cAAM,KAAK,OAAO;AAClB,YAAI,EAAE,OAAO;AACT,gBAAM,KAAKA,MAAK,KAAK,OAAO,OAAO,CAAC;AAAA,QACvC,WACQ,EAAE,IAAI;AACX,gBAAM,KAAKA,MAAK,KAAK,OAAO,IAAI,CAAC;AAAA,QACpC;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,YAAI,EAAE,OAAO;AACT,iBAAOA,MAAK,KAAK,OAAO,OAAO;AAAA,QAClC;AACD,eAAOA,MAAK,KAAK,OAAO,IAAI;AAAA,MAChC,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAAC,aAAaA,MAAK,KAAK,OAAO,YAAY,CAAC,CAAC;AAAA,MAC5E,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAO,uBAAuBA,OAAMyB,UAAS,KAAK;AAAA,MACtD,KAAK;AACD,cAAM,KAAK,UAAU;AACrB,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,QAAQzB,MAAK,KAAK,OAAO,UAAU,CAAC;AAAA,QAClD;AACD,cAAM,KAAK,UAAUA,MAAK,KAAK,OAAO,QAAQ,GAAG,GAAG;AACpD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,cAAM,KAAK,wBAAwBA,MAAK,KAAK,OAAO,IAAI,CAAC;AACzD,eAAO,mBAAsB,GAAA,QAAQ,QAAQ,KAAK,CAAC;AAAA,MACvD,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAAC,SAASA,MAAK,KAAK,OAAO,UAAU,CAAC,CAAC;AAAA,MACtE,KAAK;AACD,eAAOA,MAAK,KAAK,OAAO,UAAU;AAAA,MACtC,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,UAAUyB,QAAO;AAAA,MAKpD,KAAK;AACD,mBAAW,QAAQ,QAAQ,CAAC,WAAWzB,MAAK,KAAK,OAAO,QAAQ,GAAG,GAAG,CAAC;AAAA,MAC3E,KAAK,qBAAqB;AACtB,cAAM,KAAK,SAAS;AACpB,YAAI,EAAE,cAAc,EAAE,eAAe,SAAS;AAC1C,gBAAM,KAAK,EAAE,aAAa,GAAG;AAAA,QAChC;AACD,YAAI,EAAE,cAAc,EAAE,WAAW,SAAS,GAAG;AACzC,cAAI,uBAAuB,CAAA;AAC3B,cAAI,qBAAqB,CAAA;AACzB,UAAAA,MAAK,KAAK,SAAU,eAAe;AAC/B,gBAAI,OAAO,cAAc;AACzB,gBAAI,KAAK,SAAS,mBAAmB;AACjC,iCAAmB,KAAK,MAAM,aAAa,CAAC;AAAA,YAC/C,WACQ,KAAK,SAAS,4BACnB,KAAK,SAAS,4BAA4B;AAC1C,mCAAqB,KAAK,MAAM,aAAa,CAAC;AAAA,YACjD;AAAA,UACJ,GAAE,YAAY;AACf,+BAAqB,QAAQ,SAAU0B,QAAO,GAAG;AAC7C,gBAAI,IAAI,GAAG;AACP,oBAAM,KAAK,IAAI;AAAA,YAClB;AACD,kBAAM,KAAKA,MAAK;AAAA,UACpC,CAAiB;AACD,cAAI,mBAAmB,SAAS,GAAG;AAC/B,gBAAIA,UAAQ,GAAI,QAAQ,YAAY,IAAI,EAAE,KAAK,kBAAkB;AACjE,gBAAIA,OAAM,cAAc,CAAC,IAAID,SAAQ,YAAY;AAC7C,cAAAC,UAAQ,GAAI,QAAQ,QAAQ;AAAA,oBACpB,QAAQ,YAAY,KAAK,EAAE,KAAK,kBAAkB,EAAE,OAAOD,SAAQ,QAAQ;AAAA,gBAC/E;AAAA,cAC5B,CAAyB;AAAA,YACJ;AACD,gBAAI,qBAAqB,SAAS,GAAG;AACjC,oBAAM,KAAK,IAAI;AAAA,YAClB;AACD,gBAAIC,OAAM,SAAS,GAAG;AAClB,oBAAM,KAAK,OAAOA,QAAO,KAAK;AAAA,YACjC,WACQD,SAAQ,oBAAoB;AACjC,oBAAM,KAAK,MAAMC,QAAO,IAAI;AAAA,YAC/B,OACI;AACD,oBAAM,KAAK,KAAKA,QAAO,GAAG;AAAA,YAC7B;AAAA,UACJ;AACD,gBAAM,KAAK,QAAQ;AAAA,QACtB;AACD,cAAM,KAAK1B,MAAK,KAAK,OAAO,QAAQ,GAAG,2BAA2BA,OAAMyB,UAAS,KAAK,GAAG,GAAG;AAC5F,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ,CAACzB,MAAK,KAAK,OAAO,KAAK,GAAG,MAAMA,MAAK,KAAK,OAAO,OAAO,CAAC,CAAC;AAAA,MACzF,KAAK;AACD,cAAM,KAAK,SAAS;AAAA,MAExB,KAAK,kBAAkB;AACnB,YAAI,UAAUA,MAAK,KAAK,SAAU,UAAU;AAAE,iBAAO,uBAAuB,UAAUyB,UAAS,KAAK;AAAA,QAAI,GAAE,MAAM;AAChH,YAAI,QAAQ,WAAW;AACnB,cAAI,CAAC,EAAE,cAAc,EAAE,WAAW,WAAW,GAAG;AAC5C,kBAAM,KAAK,IAAI;AACf,uBAAW,QAAQ,QAAQ,KAAK;AAAA,UACnC;AAAA,QACJ;AACD,cAAM,KAAK,KAAK;AAEhB,YAAI,EAAE,YAAY;AACd,UAAAzB,MAAK,KAAK,SAAU,WAAW;AAC3B,kBAAM,KAAK,kBAAkB,MAAM,SAAS,EAAE,OAAOyB,SAAQ,QAAQ,CAAC,GAAG,EAAE,WAAW,SAAS,KAAK,CAAC,QAAQ,QAAS,IAAG,OAAO,EAAE;AAAA,UACrI,GAAE,YAAY;AAAA,QAClB;AACD,cAAM,KAAK,QAAQ,OAAOA,SAAQ,QAAQ,CAAC;AAC3C,cAAM,KAAK,KAAK;AAChB,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK,mBAAmB;AACpB,cAAM,KAAK,QAAQ;AACnB,YAAI,EAAE,UAAU;AACZ,cAAI,WAAWzB,MAAK,KAAK,OAAO,UAAU;AAC1C,cAAI,SAAS,kBAAmB,KAC3B,SAAS,SAAS,KACfH,YAAW,cACXA,YAAW,WAAW,MAAM,EAAE,QAAQ,GAAI;AAC9C,kBAAM,KAAK,QAAQ,SAAS,OAAO4B,SAAQ,QAAQ,GAAG,KAAK;AAAA,UAC9D,OACI;AACD,kBAAM,KAAK,KAAK,QAAQ;AAAA,UAC3B;AAAA,QACJ;AACD,cAAM,KAAK,GAAG;AACd,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AACD,cAAM,KAAKzB,MAAK,KAAK,OAAO,QAAQ,CAAC;AACrC,YAAI,EAAE,gBAAgB;AAClB,gBAAM,KAAKA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAAA,QAChD;AACD,YAAI,EAAE,eAAe;AACjB,gBAAM,KAAKA,MAAK,KAAK,OAAO,eAAe,CAAC;AAAA,QAC/C;AAID,YAAIf,OAAM,cAAc,GAAG,UAAU,GAAG;AACpC,gBAAM,KAAK,IAAI;AAAA,QAClB;AACD,cAAM,KAAK,mBAAmBe,OAAMyB,UAAS,KAAK,CAAC;AACnD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,cAAM,KAAK,GAAG;AAAA,MAElB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,wBAAwB;AACzB,YAAI,qBAAqB,EAAE,SAAS;AACpC,YAAI,cAAcA,SAAQ,mBACpB,MACA,qBACI,MACA;AACV,YAAI,SAAS,CAAA;AACb,YAAI,eAAe;AACnB,YAAI,oBAAoB;AACpB,iBAAO,KAAK,YAAY,gBAAgB;AACxC,cAAI,EAAE,iBAAiB,MAAM;AACzB,mBAAO,KAAK,eAAe;AAAA,UAC9B;AAAA,QACJ;AACD,eAAO,KAAK,YAAY;AACxB,YAAI,QAAQ;AACZ,eAAO,QAAQ,SAAU,OAAO;AAC5B,mBAAS,EAAE,KAAK,EAAE;AAAA,QAClC,CAAa;AACD,YAAI,YAAa,sBAAsB,UAAU,KAAM,UAAU;AACjE,YAAI,YAAY,EAAE,QAAQ,OAAO;AACjC,YAAI,aAAa,EAAE,QAAQ,OAAO;AAClC,cAAM,KAAK,YAAY,YAAY,YAAY,IAAI;AACnD,YAAI,iBAAiB,MAAM,SAAS;AACpC,YAAI,MAAM;AACV,eAAO,QAAQ,SAAU,OAAO;AAC5B,UAAAzB,MAAK,KAAK,SAAU,WAAW;AAC3B,gBAAI0B,SAAQ,MAAM,SAAS;AAC3B,gBAAI,CAAC,WAAW;AACZ,cAAAA,SAAQA,OAAM,OAAOD,SAAQ,QAAQ;AAAA,YACxC;AACD,gBAAI,YAAY,CAAC,sBAAsBC,OAAM,SAAS;AACtD,gBAAI,aAAa,cAAc;AAE3B,oBAAM,KAAK,IAAI;AAAA,YAClB;AACD,kBAAM,KAAKA,MAAK;AAChB,gBAAI,MAAM,QAAQ,GAAG;AAGjB,oBAAM,KAAK,eAAe,YAAY,SAAS,KAAK;AACpD,6BAAe,CAAC;AAAA,YACnB,WACQ,UAAU,KAAK,oBAAoB;AACxC,oBAAM,KAAK,WAAW;AAAA,YACzB,WACQ,CAAC,aACNV,MAAK,uBAAuBS,UAAS,SAAS,KAC9C,UAAU,SAAQ,EAAG,SAAS,eAAe;AAC7C,oBAAM,KAAK,WAAW;AAAA,YACzB;AACD;AAAA,UACH,GAAE,KAAK;AAAA,QACxB,CAAa;AACD,YAAI,EAAE,SAAS;AACX,cAAI,QAAO,GAAI,QAAQ,YAAY,OAAOA,QAAO;AACjD,cAAI,WAAW;AACX,gBAAI,QAAQ,GAAG;AACX,oBAAM,KAAK,aAAa,GAAG;AAAA,YAC9B;AACD,kBAAM,KAAK,IAAI;AAAA,UAClB,OACI;AAED,kBAAM,KAAK,MAAM,KAAK,OAAOA,SAAQ,QAAQ,CAAC;AAAA,UACjD;AAAA,QACJ;AACD,cAAM,KAAK,YAAY,aAAa,OAAO,UAAU;AACrD,YAAI,QAAQ,KAAK,aAAaA,SAAQ,oBAAoB;AACtD,gBAAM,cAAc,IAAI,YAAY;AACpC,gBAAM,MAAM,SAAS,CAAC,IAAI,MAAM;AAAA,QACnC;AACD,YAAI,EAAE,gBAAgB;AAClB,gBAAM,KAAKzB,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAAA,QAChD;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,KAAK;AAAA,UACtB;AAAA,UACAA,MAAK,KAAK,OAAO,SAAS;AAAA,QAC1C,CAAa;AAAA,MACL,KAAK;AAAA,MACL,KAAK,YAAY;AAEb,YAAI,EAAE,UAAU,EAAE,SAAS,SAAS,EAAE,SAAS,OAAO;AAClD,iBAAO,YAAYA,OAAMyB,UAAS,KAAK;AAAA,QAC1C;AACD,YAAI,EAAE,aAAa,EAAE,MAAM,SAAS,qBAAqB;AACrD,iBAAOzB,MAAK,KAAK,OAAO,OAAO;AAAA,QAClC;AACD,YAAI,MAAMA,MAAK,KAAK,OAAO,KAAK;AAChC,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,KAAK,KAAK,GAAG;AAAA,QAC3B,OACI;AACD,gBAAM,KAAK,GAAG;AAAA,QACjB;AACD,YAAI,CAAC,EAAE,aAAa,EAAE,IAAI,SAAS,EAAE,MAAM,MAAM;AAC7C,gBAAM,KAAK,MAAMA,MAAK,KAAK,OAAO,OAAO,CAAC;AAAA,QAC7C;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAO,YAAYA,OAAMyB,UAAS,KAAK;AAAA,MAC3C,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAAC,KAAKzB,MAAK,KAAK,OAAO,IAAI,CAAC,CAAC;AAAA,MAC5D,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAAC,KAAKA,MAAK,KAAK,OAAO,YAAY,CAAC,CAAC;AAAA,MACpE,KAAK;AACD,cAAM,KAAK,GAAG;AAAA,MAElB,KAAK;AAAA,MACL,KAAK,gBAAgB;AACjB,YAAI,QAAQ,EAAE;AACd,YAAI,QAAQ,MAAM;AAClB,YAAI,YAAYA,MAAK,IAAI,OAAO,UAAU;AAC1C,YAAI,UAAS,GAAI,QAAQ,YAAY,IAAI,EAAE,KAAK,SAAS;AACzD,YAAI,YAAY,OAAO,cAAc,CAAC,KAAKyB,SAAQ;AACnD,YAAI,WAAW;AACX,cAAIA,SAAQ,qBAAqB;AAC7B,kBAAM,KAAK,IAAI;AAAA,UAClB,OACI;AACD,kBAAM,KAAK,GAAG;AAAA,UACjB;AAAA,QACJ,OACI;AACD,gBAAM,KAAK,KAAK;AAAA,QACnB;AACD,QAAAzB,MAAK,KAAK,SAAU,UAAU;AAC1B,cAAI,IAAI,SAAS;AACjB,cAAI,OAAO,SAAS;AACpB,cAAI,CAAC,MAAM;AAMP,kBAAM,KAAK,GAAG;AAAA,UACjB,OACI;AACD,gBAAI0B,SAAQ,UAAU,CAAC;AACvB,gBAAI,WAAW;AACX,kBAAI,IAAI;AACJ,sBAAM,KAAK,GAAG;AAAA,YACrB,OACI;AACD,cAAAA,SAAQA,OAAM,OAAOD,SAAQ,QAAQ;AAAA,YACxC;AACD,kBAAM,KAAKC,MAAK;AAChB,gBAAI,IAAI,QAAQ,KACX,CAAC,aAAaV,MAAK,uBAAuBS,UAAS,QAAQ;AAC5D,oBAAM,KAAK,GAAG;AAClB,gBAAI,CAAC;AACD,oBAAM,KAAK,IAAI;AAAA,UACtB;AAAA,QACJ,GAAE,UAAU;AACb,YAAI,aAAaA,SAAQ,qBAAqB;AAC1C,gBAAM,KAAK,IAAI;AAAA,QAClB,OACI;AACD,gBAAM,KAAK,GAAG;AAAA,QACjB;AACD,YAAI,EAAE,gBAAgB;AAClB,gBAAM,KAAKzB,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAAA,QAChD;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AACD,mBAAW,QAAQ,YAAY,IAAI,EAAE,KAAKA,MAAK,IAAI,OAAO,aAAa,CAAC;AAAA,MAC5E,KAAK;AACD,mBAAW,QAAQ,YAAY,MAAM;AAAA,MACzC,KAAK;AACD,mBAAW,QAAQ,YAAY,OAAO;AAAA,MAC1C,KAAK;AACD,mBAAW,QAAQ,YAAY,MAAM;AAAA,MACzC,KAAK;AACD,gBAAO,GAAI,QAAQ,YAAY,eAAe,CAAC,KAAK,IAAI,OAAO,EAAE,SAAS,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,GAAGyB,QAAO;AAAA,MACjH,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,eAAe,CAAC,KAAK,EAAE,QAAQ,KAAKA,QAAO;AAAA,MAC9E,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,eAAe,CAAC,KAAK,EAAE,OAAOA,QAAO;AAAA,MACxE,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,eAAe,CAAC,KAAK,EAAE,QAAQ,KAAKA,QAAO;AAAA,MAC9E,KAAK;AACD,gBAAO,GAAI,QAAQ,YAAY,QAAQ,EAAE,OAAOA,QAAO,CAAC;AAAA,MAC5D,KAAK;AAAA,MACL,KAAK;AACD,mBAAW,QAAQ,YAAY,eAAe,CAAC,MAC1C,OAAO,EAAE,UAAU,WAAW,QAAQ,EAAE,OAAOA,QAAO,IAAI,EAAE,QAAQA,QAAO;AAAA,MACpF,KAAK;AACD,eAAOzB,MAAK,KAAK,OAAO,OAAO;AAAA,MACnC,KAAK;AACD,mBAAW,QAAQ,YAAY,eAAe,CAAC,KAAK,QAAQ,EAAE,OAAOyB,QAAO,GAAGA,QAAO;AAAA,MAC1F,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,KAAK,OAAO,EAAE,OAAO,IAAI,GAAGA,QAAO;AAAA,MACtE,KAAK;AACD,YAAI,EAAE,OAAO;AACT,gBAAM,IAAI,MAAM,oDAAoD;AAAA,QACvE;AAGD,gBAAW,GAAA,QAAQ,YAAY,QAAQ,EAAE,OAAOA,QAAO,GAAGA,QAAO;AAAA,MACrE,KAAK;AACD,cAAM,KAAK,EAAE,QAAQ;AACrB,YAAI,SAAS,KAAK,EAAE,QAAQ;AACxB,gBAAM,KAAK,GAAG;AAClB,cAAM,KAAKzB,MAAK,KAAK,OAAO,UAAU,CAAC;AACvC,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,cAAM,KAAKA,MAAK,KAAK,OAAO,UAAU,GAAG,EAAE,QAAQ;AACnD,YAAI,EAAE;AACF,gBAAM,QAAO;AACjB,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,MAAM;AAAA,UACvB;AAAA,UACAA,MAAK,KAAK,OAAO,YAAY;AAAA,UAC7B;AAAA,UACAA,MAAK,KAAK,OAAO,WAAW;AAAA,QAC5C,CAAa;AAAA,MACL,KAAK,iBAAiB;AAClB,cAAM,KAAK,QAAQA,MAAK,KAAK,OAAO,QAAQ,CAAC;AAC7C,YAAI,EAAE,gBAAgB;AAClB,gBAAM,KAAKA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAAA,QAChD;AACD,YAAI,EAAE,eAAe;AACjB,gBAAM,KAAKA,MAAK,KAAK,OAAO,eAAe,CAAC;AAAA,QAC/C;AACD,YAAI,OAAO,EAAE;AACb,YAAI,MAAM;AACN,gBAAM,KAAK,mBAAmBA,OAAMyB,UAAS,KAAK,CAAC;AAAA,QACtD;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK,uBAAuB;AACxB,YAAI,EAAE,SAAS;AACX,gBAAM,KAAK,UAAU;AAAA,QACxB;AACD,cAAM,KAAK,EAAE,MAAM,GAAG;AACtB,YAAI,WAAW;AACf,YAAI,UAAUzB,MAAK,IAAI,SAAU,WAAW;AACxC,cAAI0B,SAAQ,MAAM,SAAS;AAC3B,qBAAW,KAAK,IAAIA,OAAM,QAAQ,QAAQ;AAC1C,iBAAOA;AAAA,QACV,GAAE,cAAc;AACjB,YAAI,aAAa,GAAG;AAChB,gBAAM,MAAK,GAAI,QAAQ,YAAY,IAAI,EAAE,KAAK,OAAO,CAAC;AAAA,QACzD,WACQ,QAAQ,SAAS,GAAG;AACzB,gBAAM,MAAK,GAAI,QAAQ,YAAY,KAAK,EACnC,KAAK,OAAO,EACZ,WAAW,EAAE,KAAK,SAAS,CAAC,CAAC;AAAA,QACrC,OACI;AACD,gBAAM,KAAK,QAAQ,CAAC,CAAC;AAAA,QACxB;AAGD,YAAI,aAAa1B,MAAK;AACtB,YAAI,CAACH,YAAW,aAAa,MAAM,UAAU,KACzC,CAACA,YAAW,eAAe,MAAM,UAAU,KAC3C,EAAEA,YAAW,kBACTA,YAAW,eAAe,MAAM,UAAU,MAC9C,EAAEA,YAAW,qBACTA,YAAW,kBAAkB,MAAM,UAAU,IAAI;AACrD,gBAAM,KAAK,GAAG;AAAA,QACjB;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AACD,eAAO,EAAE,QACH,GAAI,QAAQ,YAAY,KAAK,EAAE,KAAK;AAAA,UAClCG,MAAK,KAAK,OAAO,IAAI;AAAA,UACrBA,MAAK,KAAK,OAAO,MAAM;AAAA,QAC3C,CAAiB,IACCA,MAAK,KAAK,OAAO,IAAI;AAAA,MAC/B,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB;AAAA,UACAA,MAAK,KAAK,OAAO,QAAQ;AAAA,UACzB;AAAA,UACAA,MAAK,KAAK,OAAO,MAAM;AAAA,QACvC,CAAa;AAAA,MACL,KAAK,eAAe;AAChB,YAAI,MAAM,aAAaA,MAAK,KAAK,OAAO,YAAY,GAAGyB,QAAO;AAC9D,cAAM,KAAK,QAAQzB,MAAK,KAAK,OAAO,MAAM,GAAG,KAAK,GAAG;AACrD,YAAI,EAAE;AACF,gBAAM,KAAK,cAAc,GAAG,IAAI,UAAU,UAAU,aAAaA,MAAK,KAAK,OAAO,WAAW,GAAGyB,QAAO,CAAC;AAC5G,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK,gBAAgB;AAEjB,YAAI,OAAOzB,MAAK,KAAK,OAAO,MAAM;AAClC,YAAI,MAAM,KAAK,SAAS,IAAI,QAAQ;AACpC,YAAI,WAAW;AACf,YAAI,YAAW,GAAI,QAAQ,YAAY,GAAG,EACrC,KAAK,CAAC,MAAMA,MAAK,KAAK,OAAO,MAAM,GAAGA,MAAK,KAAK,OAAO,QAAQ,CAAC,CAAC,EACjE,WAAW,SAAS,MAAM;AAC/B,YAAI,QAAW,GAAA,QAAQ,QAAQ,CAAC,UAAU,UAAU,GAAG,CAAC;AACxD,YAAI,SAAS,aAAaA,MAAK,KAAK,OAAO,MAAM,GAAGyB,QAAO;AAC3D,cAAM,KAAK,IAAI;AACf,YAAI,KAAK,SAAS,GAAG;AACjB,gBAAM,KAAK,IAAI;AACf,mBAAS,OAAO;QACnB;AACD,cAAM,KAAK,MAAM;AACjB,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB;AAAA,UACAzB,MAAK,KAAK,OAAO,MAAM;AAAA,UACvB;AAAA,UACA,aAAaA,MAAK,KAAK,OAAO,MAAM,GAAGyB,QAAO;AAAA,QAC9D,CAAa;AAAA,MACL,KAAK;AAED,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB,EAAE,OAAO,eAAe;AAAA,UACxBzB,MAAK,KAAK,OAAO,MAAM;AAAA,UACvB;AAAA,UACAA,MAAK,KAAK,OAAO,OAAO;AAAA,UACxB;AAAA,UACA,aAAaA,MAAK,KAAK,OAAO,MAAM,GAAGyB,QAAO;AAAA,QAC9D,CAAa;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,cAAM,KAAK,MAAM;AACjB,YAAI,EAAE,SAAS,EAAE,SAAS,qBAAqB;AAC3C,gBAAM,KAAK,QAAQ;AAAA,QACtB;AACD,cAAM,KAAK,KAAKzB,MAAK,KAAK,OAAO,MAAM,GAAG,QAAQA,MAAK,KAAK,OAAO,OAAO,GAAG,KAAK,aAAaA,MAAK,KAAK,OAAO,MAAM,GAAGyB,QAAO,CAAC;AACjI,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK,oBAAoB;AACrB,YAAI,aAAa,QAAQ,QAAQ;AAAA,UAC7B;AAAA,UACA,aAAazB,MAAK,KAAK,OAAO,MAAM,GAAGyB,QAAO;AAAA,QAC9D,CAAa;AACD,cAAM,KAAK,MAAM;AACjB,YAAI,cAAc,MAAM;AACpB,gBAAM,KAAK,QAAQ;AAAA;AAEnB,gBAAM,KAAK,SAAS;AACxB,cAAM,KAAK,MAAMzB,MAAK,KAAK,OAAO,MAAM,GAAG,IAAI;AAC/C,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK,gBAAgB;AACjB,YAAI,aAAaA,MAAK,KAAK,SAAU,UAAU;AAAE,iBAAO,uBAAuB,UAAUyB,UAAS,KAAK;AAAA,QAAI,GAAE,MAAM;AACnH,mBAAW,QAAQ,QAAQ,CAAC,UAAU,WAAW,OAAOA,SAAQ,QAAQ,GAAG,KAAK,CAAC;AAAA,MACpF;AAAA,MACD,KAAK;AACD,cAAM,KAAK,OAAO;AAClB,YAAI,EAAE;AACF,gBAAM,KAAK,KAAKzB,MAAK,KAAK,OAAO,OAAO,CAAC;AAC7C,cAAM,KAAK,GAAG;AACd,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,cAAM,KAAK,UAAU;AACrB,YAAI,EAAE;AACF,gBAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,OAAO,CAAC;AAC7C,cAAM,KAAK,GAAG;AACd,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,OAAO;AAAA,UACxB;AAAA,UACAA,MAAK,KAAK,OAAO,MAAM;AAAA,QACvC,CAAa;AAAA,MACL,KAAK;AACD,cAAM,KAAK,QAAQA,MAAK,KAAK,OAAO,OAAO,CAAC;AAC5C,YAAI,EAAE,SAAS;AACX,gBAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,SAAS,CAAC;AAAA,QAC9C,WACQ,EAAE,UAAU;AACjB,UAAAA,MAAK,KAAK,SAAU,aAAa;AAC7B,kBAAM,KAAK,KAAK,MAAM,WAAW,CAAC;AAAA,UACrC,GAAE,UAAU;AAAA,QAChB;AACD,YAAI,EAAE,WAAW;AACb,gBAAM,KAAK,aAAaA,MAAK,KAAK,OAAO,WAAW,CAAC;AAAA,QACxD;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,cAAM,KAAK,QAAQ;AACnB,YAAI,EAAE,OAAO;AACT,gBAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,OAAO,CAAC;AAAA,QAC5C;AACD,YAAI,EAAE,OAAO;AAET,gBAAM,KAAK,QAAQA,MAAK,KAAK,OAAO,OAAO,CAAC;AAAA,QAC/C;AACD,YAAI,EAAE,OAAO;AACT,gBAAM,KAAK,IAAI;AAAA,QAClB;AACD,cAAM,KAAKA,MAAK,KAAK,OAAO,MAAM,CAAC;AACnC,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,mBAAW,QAAQ,QAAQ,CAAC,UAAUA,MAAK,KAAK,OAAO,UAAU,GAAG,GAAG,CAAC;AAAA,MAC5E,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB;AAAA,UACAA,MAAK,KAAK,OAAO,cAAc;AAAA,UAC/B;AAAA,cACI,QAAQ,YAAY,IAAI,EAAE,KAAKA,MAAK,IAAI,OAAO,OAAO,CAAC;AAAA,UAC3D;AAAA,QAChB,CAAa;AAAA,MAEL,KAAK;AACD,YAAI,EAAE;AACF,gBAAM,KAAK,SAASA,MAAK,KAAK,OAAO,MAAM,GAAG,GAAG;AAAA;AAEjD,gBAAM,KAAK,UAAU;AACzB,YAAI,EAAE,WAAW,SAAS,GAAG;AACzB,gBAAM,KAAK,MAAMA,MACZ,KAAK,SAAU,gBAAgB;AAChC,mBAAO,uBAAuB,gBAAgByB,UAAS,KAAK;AAAA,UAC/D,GAAE,YAAY,EACV,OAAOA,SAAQ,QAAQ,CAAC;AAAA,QAChC;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,mBAAW,QAAQ,YAAY,WAAW;AAAA,MAE9C,KAAK;AACD,cAAM,KAAKzB,MAAK,KAAK,OAAO,MAAM,CAAC;AACnC,YAAI,EAAE;AACF,gBAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,OAAO,CAAC;AAC7C,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,gBAAO,GAAI,QAAQ,YAAY,EAAE,MAAMyB,QAAO;AAAA,MAClD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,GAAG,EAAE,KAAK;AAAA,UACrCzB,MAAK,KAAK,OAAO,WAAW;AAAA,UAC5BA,MAAK,KAAK,OAAO,MAAM;AAAA,QACvC,CAAa;AAAA,MACL,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,GAAG,EAAE,KAAK;AAAA,UACrCA,MAAK,KAAK,OAAO,QAAQ;AAAA,UACzBA,MAAK,KAAK,OAAO,UAAU;AAAA,QAC3C,CAAa;AAAA,MACL,KAAK;AACD,mBAAW,QAAQ,QAAQ,CAAC,QAAQA,MAAK,KAAK,OAAO,UAAU,GAAG,GAAG,CAAC;AAAA,MAC1E,KAAK;AACD,mBAAW,QAAQ,QAAQ,CAAC,QAAQA,MAAK,KAAK,OAAO,YAAY,GAAG,GAAG,CAAC;AAAA,MAC5E,KAAK;AACD,mBAAW,QAAQ,QAAQ,CAAC,KAAKA,MAAK,KAAK,OAAO,YAAY,GAAG,GAAG,CAAC;AAAA,MACzE,KAAK;AAAA,MACL,KAAK,eAAe;AAChB,YAAI,kBAAkB,aAAa,EAAE,SAAS,eAAe,YAAY;AACzE,YAAI,kBAAkB,aAAa,EAAE,SAAS,eAAe,YAAY;AACzE,YAAI,eAAeA,MAAK,KAAK,OAAO,eAAe;AACnD,YAAI,EAAE,eAAe,EAAE,aAAa;AAChC,WAAA,GAAI,iBAAiB,SAAS,CAAC,EAAE,eAAe,GAAG,gBAC/C,kBACA,8BACA,EAAE,IAAI;AACV,iBAAO;AAAA,QACV;AACD,YAAI,cAAa,GAAI,QAAQ,QAAQA,MAAK,IAAI,SAAU,WAAW;AAC/D,cAAI,QAAQ,UAAU;AACtB,cAAIH,YAAW,QAAQ,MAAM,KAAK,KAC9B,OAAO,MAAM,UAAU,UAAU;AACjC,gBAAI,KAAK,KAAK,MAAM,KAAK,GAAG;AACxB,qBAAO,MAAM,MAAM,QAAQ,SAAS,EAAE;AAAA,YACzC,WACQ,KAAK,KAAK,MAAM,KAAK,GAAG;AAC7B,qBAAO;AAAA,YACV;AAAA,UACJ;AACD,iBAAO,MAAM,SAAS;AAAA,QACzB,GAAE,UAAU,CAAC,EAAE,WAAW4B,SAAQ,QAAQ;AAC3C,YAAI,eAAezB,MAAK,KAAK,OAAO,eAAe;AACnD,gBAAO,GAAI,QAAQ,QAAQ,CAAC,cAAc,YAAY,YAAY,CAAC;AAAA,MACtE;AAAA,MACD,KAAK,qBAAqB;AACtB,cAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,MAAM,CAAC;AACxC,YAAI,cAAcA,MAAK,KAAK,OAAO,gBAAgB;AACnD,YAAI,YAAY;AACZ,gBAAM,KAAK,WAAW;AAC1B,YAAI,cAAc,CAAA;AAClB,QAAAA,MAAK,KAAK,SAAU,UAAU;AAC1B,sBAAY,KAAK,KAAK,MAAM,QAAQ,CAAC;AAAA,QACxC,GAAE,YAAY;AACf,YAAI,aAAgB,GAAA,QAAQ,QAAQ,WAAW;AAC/C,YAAI,eAAe,UAAU,SAAS,KAAK,UAAU,cAAc,CAAC,IAAIyB,SAAQ;AAChF,YAAI,cAAc;AACd,sBAAY,QAAQ,SAAU,MAAM,GAAG;AACnC,gBAAI,SAAS,KAAK;AACd,eAAA,GAAI,iBAAiB,SAAS,IAAI,MAAM,CAAC;AACzC,0BAAY,CAAC,IAAI;AAAA,YACpB;AAAA,UACrB,CAAiB;AACD,uBAAY,GAAI,QAAQ,QAAQ,WAAW,EAAE,WAAWA,SAAQ,QAAQ;AAAA,QAC3E;AACD,cAAM,KAAK,WAAW,EAAE,cAAc,QAAQ,GAAG;AACjD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AACD,mBAAW,QAAQ,QAAQ,CAAC,MAAMzB,MAAK,KAAK,OAAO,MAAM,GAAG,GAAG,CAAC;AAAA,MACpE,KAAK;AACD,mBAAW,QAAQ,YAAY,IAAI;AAAA,MACvC,KAAK;AACD,mBAAW,QAAQ,YAAY,KAAK;AAAA,MACxC,KAAK;AACD,gBAAO,GAAI,QAAQ,YAAY,EAAE,OAAOyB,QAAO;AAAA,MACnD,KAAK;AACD,mBAAW,QAAQ,YAAY,EAAE;AAAA,MACrC,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBzB,MAAK,KAAK,OAAO,YAAY;AAAA,UAC7B;AAAA,UACAA,MAAK,KAAK,OAAO,YAAY;AAAA,QAC7C,CAAa;AAAA,MACL,KAAK;AACD,YAAI,EAAE,KAAK,WAAW,GAAG;AACrB,qBAAW,QAAQ,YAAY,IAAI;AAAA,QACtC;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB;AAAA,UACAA,MACK,KAAK,SAAU,UAAU;AAAE,mBAAO,uBAAuB,UAAUyB,UAAS,KAAK;AAAA,UAAI,GAAE,MAAM,EAC7F,OAAOA,SAAQ,QAAQ;AAAA,UAC5B;AAAA,QAChB,CAAa;AAAA,MACL,KAAK;AACD,cAAM,KAAK,WAAWzB,MAAK,KAAK,OAAO,YAAY,CAAC;AACpD,YAAI,CAACH,YAAW,iBAAiB,MAAM,EAAE,UAAU;AAC/C,gBAAM,KAAK,GAAG;AAClB,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK,iBAAiB;AAClB,YAAI,EAAE,SAAS;AACX,gBAAM,KAAK,UAAU;AAAA,QACxB;AACD,YAAI,SAAS,EAAE,iBAAiB,EAAE;AAClC,YAAI,OAAO,WAAW,UAAU;AAC5B,gBAAM,KAAK,QAAQ,GAAG;AAAA,QACzB;AACD,YAAI,EAAE,QAAQ;AACV,gBAAM,KAAK,SAAS;AAAA,QACvB;AACD,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,WAAW;AAAA,QACzB;AACD,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,WAAW;AAAA,QACzB;AACD,YAAI,MAAMG,MAAK,KAAK,OAAO,KAAK;AAChC,YAAI,EAAE,UAAU;AACZ,iBAAU,GAAA,QAAQ,QAAQ,CAAC,KAAK,KAAK,GAAG,CAAC;AAAA,QAC5C;AACD,YAAI,EAAE,UAAU;AACZ,iBAAM,GAAI,QAAQ,QAAQ,CAAC,cAAcA,OAAM,KAAK,GAAG,GAAG,CAAC;AAAA,QAC9D;AACD,cAAM,KAAK,GAAG;AACd,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,GAAG;AAAA,QACjB;AACD,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,GAAG;AAAA,QACjB;AACD,YAAI,EAAE,gBAAgB;AAClB,gBAAM,KAAKA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAAA,QAChD;AACD,YAAI,EAAE,OAAO;AACT,gBAAM,KAAK,OAAOA,MAAK,KAAK,OAAO,OAAO,CAAC;AAAA,QAC9C;AACD,cAAM,KAAK,GAAG;AACd,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AACD,YAAI,EAAE,QAAQ;AACV,gBAAM,KAAK,SAAS;AAAA,QACvB;AACD,cAAM,KAAKA,MAAK,KAAK,OAAO,KAAK,CAAC;AAClC,YAAI,EAAE,gBAAgB;AAClB,gBAAM,KAAKA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAAA,QAChD;AACD,YAAI,EAAE,OAAO;AACT,gBAAM,KAAK,OAAOA,MAAK,KAAK,OAAO,OAAO,CAAC;AAAA,QAC9C;AACD,cAAM,KAAK,GAAG;AACd,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK,yBAAyB;AAC1B,cAAM,KAAK,MAAM,OAAO,QAAQ,cAAc,QAAQ,cAAc,CAAE,GAAE,0BAA0B,CAAC,GAAG,KAAK,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;AACnI,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,KAAK,GAAG,GAAG;AAAA,QAC/C,OACI;AACD,gBAAM,KAAKA,MAAK,KAAK,OAAO,KAAK,CAAC;AAAA,QACrC;AACD,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,GAAG;AAAA,QACjB;AACD,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,GAAG;AAAA,QACjB;AACD,YAAI,EAAE,gBAAgB;AAClB,gBAAM,KAAKA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAAA,QAChD;AACD,YAAI,EAAE,OAAO;AACT,gBAAM,KAAK,OAAOA,MAAK,KAAK,OAAO,OAAO,CAAC;AAAA,QAC9C;AACD,cAAM,KAAK,GAAG;AACd,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,YAAI,EAAE,SAAS;AACX,gBAAM,KAAK,UAAU;AAAA,QACxB;AACD,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,WAAW;AAAA,QACzB;AACD,cAAM,KAAK,OAAO;AAClB,YAAI,EAAE,IAAI;AACN,gBAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,IAAI,CAAC;AAAA,QACzC;AACD,YAAI,EAAE,gBAAgB;AAClB,gBAAM,KAAKA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAAA,QAChD;AACD,YAAI,EAAE,YAAY;AAEd,gBAAM,KAAK,aAAaA,MAAK,KAAK,OAAO,YAAY,GAAGA,MAAK,KAAK,OAAO,qBAAqB,CAAC;AAAA,QAClG;AACD,YAAI,EAAE,WAAW,EAAE,QAAQ,SAAS,GAAG;AAEnC,gBAAM,KAAK,cAAa,GAAI,QAAQ,YAAY,IAAI,EAAE,KAAKA,MAAK,IAAI,OAAO,SAAS,CAAC,CAAC;AAAA,QACzF;AACD,YAAI,EAAE,YAAY,KAAK,EAAE,YAAY,EAAE,SAAS,GAAG;AAC/C,gBAAM,KAAK,iBAAgB,GAAI,QAAQ,YAAY,IAAI,EAAE,KAAKA,MAAK,IAAI,OAAO,YAAY,CAAC,CAAC;AAAA,QAC/F;AACD,cAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,MAAM,CAAC;AACxC,YAAI,EAAE,SAAS,gBAAgB;AAC3B,iBAAO,qBAAqBA,OAAM,KAAK;AAAA,QAC1C,OACI;AACD,qBAAW,QAAQ,QAAQ,KAAK;AAAA,QACnC;AAAA,MACL,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,EAAE,MAAM,KAAKyB,QAAO,EAAE;MACzD,KAAK,mBAAmB;AACpB,YAAI,gBAAgBzB,MAAK,IAAI,OAAO,aAAa;AACjD,cAAM,KAAK,GAAG;AACd,QAAAA,MAAK,KAAK,SAAU,WAAW;AAC3B,cAAI,IAAI,UAAU;AAClB,gBAAM,KAAK,MAAM,SAAS,CAAC;AAC3B,cAAI,IAAI,cAAc,QAAQ;AAC1B,kBAAM,KAAK,MAAM,cAAc,CAAC,GAAG,GAAG;AAAA,UACzC;AAAA,QACJ,GAAE,QAAQ;AACX,cAAM,KAAK,GAAG;AACd,gBAAW,GAAA,QAAQ,QAAQ,KAAK,EAAE,eAAc;AAAA,MACnD;AAAA,MACD,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAACA,MAAK,KAAK,OAAO,KAAK,GAAGA,MAAK,KAAK,OAAO,OAAO,CAAC,CAAC;AAAA,MAGnF,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,cAAM,IAAI,MAAM,uBAAuB,KAAK,UAAU,EAAE,IAAI,CAAC;AAAA,MACjE,KAAK;AAAA,MACL,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAAC,OAAM,GAAI,QAAQ,YAAY,EAAE,OAAOyB,QAAO,GAAG,IAAI,CAAC;AAAA,MACtF,KAAK;AAAA,MACL,KAAK;AACD,mBAAW,QAAQ,QAAQ,CAAC,OAAU,GAAA,QAAQ,YAAY,EAAE,OAAOA,QAAO,CAAC,CAAC;AAAA,MAGhF,KAAK;AACD,YAAI,EAAE,gBAAgB;AAClB,cAAI,EAAE,eAAe,SAAS,0BAA0B;AACpD,kBAAM,KAAK,IAAI;AAAA,UAClB;AACD,gBAAM,KAAKzB,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAC7C,qBAAW,QAAQ,QAAQ,KAAK;AAAA,QACnC;AACD,mBAAW,QAAQ,YAAY,EAAE;AAAA,MACrC,KAAK;AAAA,MACL,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,KAAKyB,QAAO;AAAA,MAC/C,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,SAASA,QAAO;AAAA,MACnD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,OAAOA,QAAO;AAAA,MACjD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,SAASA,QAAO;AAAA,MACnD,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAACzB,MAAK,KAAK,OAAO,aAAa,GAAG,IAAI,CAAC;AAAA,MACtE,KAAK,uBAAuB;AACxB,YAAI,YAAYA,MAAK,IAAI,OAAO,OAAO;AACvC,YAAI,UAAS,GAAI,QAAQ,YAAY,IAAI,EAAE,KAAK,SAAS;AACzD,YAAI,YAAY,OAAO,cAAc,CAAC,KAAKyB,SAAQ;AACnD,YAAI,WAAW;AACX,cAAIA,SAAQ,qBAAqB;AAC7B,kBAAM,KAAK,IAAI;AAAA,UAClB,OACI;AACD,kBAAM,KAAK,GAAG;AAAA,UACjB;AAAA,QACJ,OACI;AACD,gBAAM,KAAK,KAAK;AAAA,QACnB;AACD,QAAAzB,MAAK,KAAK,SAAU,UAAU;AAC1B,cAAI,IAAI,SAAS;AACjB,cAAI,OAAO,SAAS;AACpB,cAAI,CAAC,MAAM;AAMP,kBAAM,KAAK,GAAG;AAAA,UACjB,OACI;AACD,gBAAI0B,SAAQ,UAAU,CAAC;AACvB,gBAAI,WAAW;AACX,kBAAI,IAAI;AACJ,sBAAM,KAAK,GAAG;AAAA,YACrB,OACI;AACD,cAAAA,SAAQA,OAAM,OAAOD,SAAQ,QAAQ;AAAA,YACxC;AACD,kBAAM,KAAKC,MAAK;AAChB,gBAAI,IAAI,EAAE,MAAM,SAAS,KACpB,CAAC,aAAaV,MAAK,uBAAuBS,UAAS,QAAQ;AAC5D,oBAAM,KAAK,GAAG;AAClB,gBAAI,CAAC;AACD,oBAAM,KAAK,IAAI;AAAA,UACtB;AAAA,QACJ,GAAE,OAAO;AACV,YAAI,aAAaA,SAAQ,qBAAqB;AAC1C,gBAAM,KAAK,IAAI;AAAA,QAClB,OACI;AACD,gBAAM,KAAK,GAAG;AAAA,QACjB;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,WAAWA,QAAO;AAAA,MACrD,KAAK;AACD,SAAI,GAAA,iBAAiB,SAAS,OAAO,EAAE,UAAU,SAAS;AAC1D,gBAAO,GAAI,QAAQ,YAAY,KAAK,EAAE,OAAOA,QAAO;AAAA,MACxD,KAAK;AACD,cAAM,KAAK,WAAW;AACtB,YAAI,EAAE,WAAW,EAAE,QAAQ,SAAS,GAAG;AACnC,gBAAM,KAAK,cAAa,GAAI,QAAQ,YAAY,IAAI,EAAE,KAAKzB,MAAK,IAAI,OAAO,SAAS,CAAC,CAAC;AAAA,QACzF;AACD,cAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,MAAM,CAAC;AACxC,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,eAAO,qBAAqBA,OAAM;AAAA,UAC9B;AAAA,UACAA,MAAK,KAAK,OAAO,IAAI;AAAA,UACrB;AAAA,QAChB,CAAa;AAAA,MACL,KAAK;AACD,eAAO,qBAAqBA,OAAM;AAAA,UAC9B;AAAA,UACAA,MAAK,KAAK,OAAO,IAAI;AAAA,UACrB;AAAA,UACAA,MAAK,KAAK,OAAO,MAAM;AAAA,QACvC,CAAa;AAAA,MACL,KAAK;AACD,eAAO,qBAAqBA,OAAM;AAAA,UAC9B;AAAA,UACAA,MAAK,KAAK,OAAO,gBAAgB;AAAA,QACjD,CAAa;AAAA,MACL,KAAK;AACD,eAAO,qBAAqBA,OAAM,CAAC,QAAQA,MAAK,KAAK,OAAO,IAAI,GAAG,GAAG,CAAC;AAAA,MAC3E,KAAK;AAAA,MACL,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAAC,YAAY,uBAAuBA,OAAMyB,UAAS,KAAK,CAAC,CAAC;AAAA,MACzF,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB;AAAA,UACAzB,MAAK,KAAK,OAAO,IAAI;AAAA,UACrBA,MAAK,KAAK,OAAO,MAAM;AAAA,QACvC,CAAa;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,kBAAkB;AACnB,YAAI,EAAE,SAAS,oBAAoB,EAAE,cAAc;AAC/C,gBAAM;AAAA,YAAK;AAAA;AAAA,YAEX,EAAE,KAAK,MAAM,GAAG,EAAE,EAAE,YAAW;AAAA,UAAE;AAAA,QACpC;AACD,cAAM,KAAK,SAAY,GAAA,QAAQ,YAAY,IAAI,EAC1C,KAAKA,MAAK,IAAI,OAAO,SAAS,CAAC,EAC/B,OAAOyB,SAAQ,QAAQ,GAAG,KAAK;AACpC,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAACzB,MAAK,KAAK,OAAO,IAAI,GAAG,GAAG,CAAC;AAAA,MAC5D,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,IAAI;AAAA,UACrB;AAAA,UACAA,MAAK,KAAK,OAAO,MAAM;AAAA,UACvB;AAAA,QAChB,CAAa;AAAA,MACL,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,WAAWyB,QAAO;AAAA,MACrD,KAAK;AACD,mBAAW,QAAQ,QAAQ,CAAC,YAAYzB,MAAK,KAAK,OAAO,OAAO,GAAG,GAAG,CAAC;AAAA,MAC3E,KAAK,0BAA0B;AAI3B,YAAI,SAASA,MAAK,cAAc,CAAC;AACjC,YAAI,gCAAgC,EAAEH,YAAW,uBAAuB,MAAM,MAAM,KAC/EA,YAAW,uBAAuB,MAAM,MAAM,KAAK,OAAO,UAC3DA,YAAW,gBAAgB,MAAMG,MAAK,cAAc,CAAC,CAAC;AAC1D,YAAI,aAAa,iCACb,CAACH,YAAW,kBAAkB,MAAM,MAAM,KAC1C,CAACA,YAAW,UAAU,MAAM,MAAM;AACtC,YAAI,YAAY;AACZ,gBAAM,KAAK,IAAI;AAAA,QAClB;AACD,YAAI,oBAAoB,CAAC,CAAC,EAAE;AAC5B,YAAI,cAAc,qBAAqB,EAAE,OAAO,WAAW,KAAK,EAAE,OAAO,CAAC,EAAE;AAC5E,cAAM,KAAK,oBAAoBG,MAAK,KAAK,OAAO,gBAAgB,IAAI,IAAI,cAAc,MAAM,IAAI,oBAAoBA,OAAMyB,UAAS,KAAK,GAAG,cAAc,MAAM,EAAE;AAGjK,YAAI,EAAE,YAAY;AACd,gBAAM,KAAK,gCAAgC,SAAS,MAAMzB,MAAK,KAAK,OAAO,YAAY,CAAC;AAAA,QAC3F;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK,qBAAqB;AACtB,YAAI,OAAOA,MAAK,KAAK,OAAO,MAAM;AAClC,cAAM,KAAK,IAAI;AACf,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,GAAG;AAAA,QACjB;AACD,YAAI,KAAK,MAAM,CAAC,EAAE,MAAM;AACpB,gBAAM,KAAK,IAAI;AAAA,QAClB;AACD,cAAM,KAAKA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAC7C,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,IAAI;AAAA,UACrBA,MAAK,KAAK,OAAO,gBAAgB;AAAA,QACjD,CAAa;AAAA,MACL,KAAK;AACD,cAAM,KAAK,UAAU;AAAA,MAEzB,KAAK;AAAA,MACL,KAAK;AACD,YAAI,EAAE,SAAS;AACX,gBAAM,KAAK,UAAU;AAAA,QACxB;AACD,cAAM,KAAK,cAAcA,MAAK,KAAK,OAAO,IAAI,GAAGA,MAAK,KAAK,OAAO,gBAAgB,GAAG,GAAG;AACxF,YAAI,EAAE,SAAS,KAAK,EAAE,SAAS,EAAE,SAAS,GAAG;AACzC,gBAAM,KAAK,aAAgB,GAAA,QAAQ,YAAY,IAAI,EAAE,KAAKA,MAAK,IAAI,OAAO,SAAS,CAAC,GAAG,GAAG;AAAA,QAC7F;AACD,YAAI,EAAE,MAAM;AACR,gBAAM,KAAKA,MAAK,KAAK,OAAO,MAAM,CAAC;AAAA,QACtC;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AAAA,MACL,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,IAAI;AAAA,UACrBA,MAAK,KAAK,OAAO,gBAAgB;AAAA,QACjD,CAAa;AAAA,MACL,KAAK;AACD,mBAAW,QAAQ,YAAY,KAAK,EAAE,KAAKA,MAAK,IAAI,OAAO,OAAO,CAAC;AAAA,MACvE,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAAC,KAAKA,MAAK,KAAK,OAAO,gBAAgB,CAAC,CAAC;AAAA,MACxE,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,QAAQyB,QAAO;AAAA,MAClD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,QAAQA,QAAO;AAAA,MAClD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,UAAUA,QAAO;AAAA,MACpD,KAAK;AACD,eAAOzB,MAAK,KAAK,OAAO,OAAO;AAAA,MACnC,KAAK;AACD,YAAI,EAAE,QAAQ;AACV,gBAAM,KAAK,SAAS;AAAA,QACvB;AACD,cAAM,KAAK,cAAcA,OAAM,KAAK,GAAG,GAAG;AAC1C,YAAI,EAAE,IAAI;AACN,gBAAM,KAAKA,MAAK,KAAK,OAAO,IAAI,GAAG,IAAI;AAAA,QAC1C;AACD,cAAM,KAAKA,MAAK,KAAK,OAAO,KAAK,GAAG,OAAOA,MAAK,KAAK,OAAO,OAAO,CAAC;AACpE,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB,cAAcA,OAAM,KAAK;AAAA,UACzBA,MAAK,KAAK,OAAO,KAAK;AAAA,UACtB,EAAE,WAAW,MAAM;AAAA,UACnB;AAAA,UACAA,MAAK,KAAK,OAAO,OAAO;AAAA,QACxC,CAAa;AAAA,MACL,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB,EAAE,SAAS,YAAY;AAAA,UACvB;AAAA,UACAA,MAAK,KAAK,OAAO,IAAI;AAAA,UACrB;AAAA,UACA,EAAE,WAAW,MAAM;AAAA,UACnB,EAAE,MAAM,SAAS,2BAA2B,OAAO;AAAA,UACnDA,MAAK,KAAK,OAAO,OAAO;AAAA,QACxC,CAAa;AAAA,MACL,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,eAAe;AAAA,UAChC;AAAA,UACAA,MAAK,KAAK,OAAO,IAAI;AAAA,QACrC,CAAa;AAAA,MACL,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,QAAQ,EAAE,OAAOyB,QAAO,GAAGA,QAAO;AAAA,MACrE,KAAK;AAAA,MACL,KAAK;AACD,SAAI,GAAA,iBAAiB,SAAS,OAAO,EAAE,UAAU,QAAQ;AACzD,gBAAW,GAAA,QAAQ,YAAY,KAAK,UAAU,EAAE,KAAK,GAAGA,QAAO;AAAA,MACnE,KAAK;AACD,gBAAO,GAAI,QAAQ,YAAY,EAAE,KAAKA,QAAO;AAAA,MACjD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,UAAUA,QAAO;AAAA,MACpD,KAAK;AACD,cAAM,KAAK,UAAU;AAAA,MAEzB,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB;AAAA,UACAzB,MAAK,KAAK,OAAO,IAAI;AAAA,UACrBA,MAAK,KAAK,OAAO,gBAAgB;AAAA,UACjC;AAAA,UACAA,MAAK,KAAK,OAAO,OAAO;AAAA,UACxB;AAAA,QAChB,CAAa;AAAA,MACL,KAAK;AACD,cAAM,KAAK,UAAU;AAAA,MAEzB,KAAK;AACD,cAAM,KAAK,gBAAgBA,MAAK,KAAK,OAAO,IAAI,GAAGA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AACrF,YAAI,EAAE,WAAW,GAAG;AAChB,gBAAM,KAAK,MAAMA,MAAK,KAAK,OAAO,WAAW,CAAC;AAAA,QACjD;AACD,YAAI,EAAE,UAAU,GAAG;AACf,gBAAM,KAAK,OAAOA,MAAK,KAAK,OAAO,UAAU,CAAC;AAAA,QACjD;AACD,cAAM,KAAK,GAAG;AACd,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB;AAAA,UACAA,MAAK,KAAK,OAAO,YAAY;AAAA,UAC7BA,MAAK,KAAK,OAAO,gBAAgB;AAAA,UACjC;AAAA,QAChB,CAAa;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB;AAAA,cACI,QAAQ,YAAY,IAAI,EAAE,KAAKA,MAAK,IAAI,OAAO,QAAQ,CAAC;AAAA,UAC5D;AAAA,QAChB,CAAa;AAAA,MACL,KAAK;AACD,YAAI,EAAE,SAAS,QAAQ;AACnB,qBAAW,QAAQ,YAAY,GAAG;AAAA,QACrC;AACD,YAAI,EAAE,SAAS,SAAS;AACpB,qBAAW,QAAQ,YAAY,GAAG;AAAA,QACrC;AACD,mBAAW,QAAQ,YAAY,EAAE;AAAA,MACrC,KAAK;AACD,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,cAAcA,OAAM,KAAK,CAAC;AAAA,QACxC;AACD,cAAM,KAAKA,MAAK,KAAK,OAAO,MAAM,CAAC;AACnC,YAAI,EAAE,OAAO;AACT,gBAAM,KAAKA,MAAK,KAAK,OAAO,OAAO,CAAC;AAAA,QACvC;AACD,YAAI,EAAE,SAAS,GAAG;AACd,gBAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,SAAS,CAAC;AAAA,QAC9C;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,WACvB,GAAI,QAAQ,YAAY,WAAWyB,QAAO;AAAA,UAC1CzB,MAAK,KAAK,OAAO,UAAU;AAAA,QAC3C,CAAa;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,YAAY;AAAA,UAC7B,EAAE,WAAW,OAAO;AAAA,UACpB;AAAA,UACAA,MAAK,KAAK,OAAO,WAAW;AAAA,UAC5B;AAAA,QAChB,CAAa;AAAA,MACL,KAAK;AACD,mBAAW,QAAQ,YAAY,KAAK,EAAE,KAAKA,MAAK,IAAI,OAAO,OAAO,CAAC;AAAA,MACvE,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,QAAQyB,QAAO;AAAA,MAClD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,QAAQA,QAAO;AAAA,MAClD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,UAAUA,QAAO;AAAA,MACpD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,UAAUA,QAAO;AAAA,MAEpD,KAAK;AACD,cAAM,IAAI,MAAM,uBAAuB,KAAK,UAAU,EAAE,IAAI,CAAC;AAAA,MACjE,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,UAAUA,QAAO;AAAA,MACpD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,UAAUA,QAAO;AAAA,MACpD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,UAAUA,QAAO;AAAA,MACpD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,WAAWA,QAAO;AAAA,MACrD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,UAAUA,QAAO;AAAA,MACpD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,UAAUA,QAAO;AAAA,MACpD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,OAAOA,QAAO;AAAA,MACjD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,QAAQA,QAAO;AAAA,MAClD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,aAAaA,QAAO;AAAA,MACvD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,QAAQA,QAAO;AAAA,MAClD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,QAAQA,QAAO;AAAA,MAClD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,aAAaA,QAAO;AAAA,MACvD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,WAAWA,QAAO;AAAA,MACrD,KAAK;AACD,gBAAW,GAAA,QAAQ,YAAY,SAASA,QAAO;AAAA,MACnD,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAACzB,MAAK,KAAK,OAAO,aAAa,GAAG,IAAI,CAAC;AAAA,MACtE,KAAK;AACD,eAAOA,MAAK,KAAK,OAAO,SAAS;AAAA,MACrC,KAAK;AACD,mBAAW,QAAQ,YAAY,KAAK,EAAE,KAAKA,MAAK,IAAI,OAAO,OAAO,CAAC;AAAA,MACvE,KAAK;AACD,mBAAW,QAAQ,YAAY,KAAK,EAAE,KAAKA,MAAK,IAAI,OAAO,OAAO,CAAC;AAAA,MACvE,KAAK;AACD,cAAM,KAAKA,MAAK,KAAK,OAAO,WAAW,GAAG,aAAaA,MAAK,KAAK,OAAO,aAAa,GAAG,OAAOA,MAAK,KAAK,OAAO,UAAU,GAAG,OAAOA,MAAK,KAAK,OAAO,WAAW,CAAC;AACjK,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,cAAM,KAAK,UAAUA,MAAK,KAAK,OAAO,eAAe,CAAC;AACtD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,mBAAW,QAAQ,QAAQ,CAAC,KAAKA,MAAK,KAAK,OAAO,gBAAgB,GAAG,GAAG,CAAC;AAAA,MAC7E,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,gBAAgB;AAAA,UACjC;AAAA,UACA,oBAAoBA,OAAMyB,UAAS,KAAK;AAAA,UACxC;AAAA,UACAzB,MAAK,KAAK,OAAO,kBAAkB,gBAAgB;AAAA,QACnE,CAAa;AAAA,MACL,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB;AAAA,UACAA,MAAK,KAAK,OAAO,gBAAgB;AAAA,UACjC;AAAA,UACA,oBAAoBA,OAAMyB,UAAS,KAAK;AAAA,UACxC;AAAA,UACAzB,MAAK,KAAK,OAAO,kBAAkB,gBAAgB;AAAA,QACnE,CAAa;AAAA,MACL,KAAK,gBAAgB;AACjB,cAAM,KAAK,EAAE,WAAW,cAAc,IAAI,KAAKA,MAAK,KAAK,OAAO,eAAe,GAAG,KAAK,EAAE,WAAW,MAAM,EAAE;AAC5G,YAAI,EAAE,gBAAgB;AAClB,gBAAM,KAAK,MAAMA,MAAK,KAAK,OAAO,gBAAgB,GAAG,GAAG;AAAA,QAC3D;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAAC,QAAW,GAAA,QAAQ,QAAQ,KAAK,EAAE,OAAOyB,SAAQ,QAAQ,GAAG,KAAK,CAAC;AAAA,MACjG;AAAA,MACD,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB;AAAA,cACI,QAAQ,YAAY,IAAI,EAAE,KAAKzB,MAAK,IAAI,OAAO,cAAc,CAAC;AAAA,UAClE;AAAA,QAChB,CAAa;AAAA,MACL,KAAK;AACD,cAAM,KAAKA,MAAK,KAAK,OAAO,OAAO,CAAC;AACpC,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,GAAG;AAAA,QACjB;AACD,cAAM,KAAK,MAAMA,MAAK,KAAK,OAAO,aAAa,CAAC;AAChD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAAC,OAAOA,MAAK,KAAK,OAAO,gBAAgB,CAAC,CAAC;AAAA,MAC1E,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAACA,MAAK,KAAK,OAAO,gBAAgB,GAAG,GAAG,CAAC;AAAA,MACxE,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,YAAY;AAAA,UAC7B;AAAA,UACAA,MAAK,KAAK,OAAO,WAAW;AAAA,UAC5B;AAAA,QAChB,CAAa;AAAA,MACL,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,UAAU;AAAA,UAC3B;AAAA,UACAA,MAAK,KAAK,OAAO,gBAAgB;AAAA,QACjD,CAAa;AAAA,MACL,KAAK,iBAAiB;AAClB,YAAI,WAAc,GAAA,QAAQ,YAAY,IAAI,EAAE,KAAKA,MAAK,IAAI,OAAO,SAAS,EAAE,IAAI,SAAU,QAAQ;AAC9F,cAAI,sBAAsB,MAAM,MAAM,KAAK;AACvC,mBAAO,OAAO,OAAO,GAAG;AAAA,UAC3B;AACD,iBAAO;AAAA,QACV,CAAA,CAAC;AACF,YAAI,QAAQ,WAAW;AACnB,kBAAW,GAAA,QAAQ,YAAY,MAAMyB,QAAO;AAAA,QAC/C;AACD,cAAM,KAAK,OAAO,QAAQ,OAAOA,SAAQ,QAAQ,GAAG,KAAK;AACzD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AACD,cAAM,KAAKzB,MAAK,KAAK,OAAO,IAAI,CAAC;AACjC,YAAI,EAAE,aAAa;AACf,gBAAM,KAAK,OAAOA,MAAK,KAAK,OAAO,aAAa,CAAC;AAAA,QACpD;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAAC,WAAWA,MAAK,KAAK,OAAO,UAAU,CAAC,CAAC;AAAA,MACxE,KAAK;AACD,YAAI,EAAE,eAAe;AACjB,gBAAM,KAAK,EAAE,eAAe,GAAG;AAAA,QAClC;AACD,YAAI,EAAE,QAAQ;AACV,gBAAM,KAAK,SAAS;AAAA,QACvB;AACD,YAAI,EAAE,QAAQ;AACV,gBAAM,KAAK,SAAS;AAAA,QACvB;AACD,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,WAAW;AAAA,QACzB;AACD,cAAM,KAAKA,MAAK,KAAK,OAAO,WAAW,CAAC;AACxC,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,UAAU;AAAA,UAC3BA,MAAK,KAAK,OAAO,gBAAgB;AAAA,QACjD,CAAa;AAAA,MACL,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ,CAACA,MAAK,KAAK,OAAO,MAAM,GAAG,KAAKA,MAAK,KAAK,OAAO,OAAO,CAAC,CAAC;AAAA,MACzF,KAAK;AAAA,MACL,KAAK,yBAAyB;AAC1B,YAAI,aAAaA,MAAK,KAAK,OAAO,YAAY;AAC9C,cAAM,KAAK,YAAY,EAAE,SAAS,0BAA0B,gBAAgB,QAAQA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AACtH,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,YAAY;AAAA,UAC7BA,MAAK,KAAK,OAAO,gBAAgB;AAAA,QACjD,CAAa;AAAA,MACL,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAACA,MAAK,KAAK,OAAO,YAAY,GAAG,GAAG,CAAC;AAAA,MACpE,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAAC,MAAMA,MAAK,KAAK,OAAO,gBAAgB,CAAC,CAAC;AAAA,MACzE,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB,EAAE,WAAW,cAAc;AAAA,UAC3B;AAAA,UACAA,MAAK,IAAI,OAAO,YAAY;AAAA,UAC5B;AAAA,UACAA,MAAK,KAAK,OAAO,gBAAgB;AAAA,QACjD,CAAa;AAAA,MACL,KAAK;AACD,cAAM,KAAK,cAAcA,OAAM,KAAK,GAAG,EAAE,WAAW,cAAc,EAAE;AACpE,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,KAAK,GAAG,GAAG;AAAA,QAC/C,OACI;AACD,gBAAM,KAAKA,MAAK,KAAK,OAAO,KAAK,CAAC;AAAA,QACrC;AACD,cAAM,KAAK,EAAE,WAAW,MAAM,IAAIA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AACpE,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,YAAI,EAAE,SAAS,OAAO;AAClB,gBAAM,KAAK,MAAM;AAAA,QACpB,WACQ,EAAE,SAAS,OAAO;AACvB,gBAAM,KAAK,MAAM;AAAA,QACpB;AACD,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,KAAK,GAAG,GAAG;AAAA,QAC/C,OACI;AACD,gBAAM,KAAKA,MAAK,KAAK,OAAO,KAAK,CAAC;AAAA,QACrC;AACD,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,GAAG;AAAA,QACjB;AACD,cAAM,KAAKA,MAAK,KAAK,OAAO,gBAAgB,GAAG,KAAK,oBAAoBA,OAAMyB,UAAS,KAAK,GAAG,KAAKzB,MAAK,KAAK,OAAO,gBAAgB,CAAC;AACtI,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,YAAI,EAAE,SAAS;AACX,gBAAM,KAAK,UAAU;AAAA,QACxB;AACD,cAAM,KAAKA,MAAK,KAAK,OAAO,eAAe,CAAC;AAC5C,YAAI,EAAE,gBAAgB;AAClB,gBAAM,KAAK,QAAQA,MAAK,KAAK,OAAO,kBAAkB,gBAAgB,CAAC;AAAA,QAC1E;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBA,MAAK,KAAK,OAAO,gBAAgB;AAAA,UACjC;AAAA,UACA,oBAAoBA,OAAMyB,UAAS,KAAK;AAAA,UACxC;AAAA,UACAzB,MAAK,KAAK,OAAO,gBAAgB;AAAA,QACjD,CAAa;AAAA,MACL,KAAK;AACD,YAAI,EAAE,gBAAgB;AAClB,gBAAM,KAAK,OAAOA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAAA,QACvD,OACI;AACD,gBAAM,KAAK,MAAM;AAAA,QACpB;AACD,cAAM,KAAK,KAAK,oBAAoBA,OAAMyB,UAAS,KAAK,GAAG,KAAKzB,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAClG,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB,EAAE,UAAU,aAAa;AAAA,UACzB;AAAA,UACAA,MAAK,KAAK,OAAO,IAAI;AAAA,UACrBA,MAAK,KAAK,OAAO,gBAAgB;AAAA,UACjC;AAAA,UACAA,MAAK,KAAK,OAAO,gBAAgB;AAAA,UACjC;AAAA,QAChB,CAAa;AAAA,MACL,KAAK,mBAAmB;AACpB,cAAM,KAAKA,MAAK,KAAK,OAAO,MAAM,CAAC;AAEnC,YAAI,SAASA,MAAK,cAAc,CAAC;AACjC,YAAI,iBAAiBH,YAAW,aAAa,MAAM,MAAM;AACzD,YAAI,EAAE,YAAY;AACd,gBAAM,KAAK,iBAAiB,SAAS,aAAaG,MAAK,KAAK,OAAO,YAAY,CAAC;AAAA,QACnF;AACD,YAAI,EAAE,SAAS,GAAG;AACd,gBAAM,KAAK,OAAOA,MAAK,KAAK,OAAO,SAAS,CAAC;AAAA,QAChD;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK,mBAAmB;AACpB,cAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,gBAAgB,GAAG,MAAMA,MAAK,KAAK,OAAO,YAAY,CAAC;AACxF,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvB;AAAA,cACI,QAAQ,YAAY,IAAI,EAAE,KAAKA,MAAK,IAAI,OAAO,QAAQ,CAAC;AAAA,UAC5D;AAAA,QAChB,CAAa;AAAA,MACL,KAAK,qBAAqB;AACtB,cAAM,KAAK,EAAE,UAAU,aAAa,IAAI,EAAE,QAAQ,WAAW,IAAI,SAASA,MAAK,KAAK,OAAO,IAAI,CAAC;AAChG,YAAI,eAAc,GAAI,QAAQ,YAAY,KAAK,EAAE,KAAKA,MAAK,IAAI,OAAO,SAAS,CAAC;AAChF,YAAI,YAAY,WAAW;AACvB,gBAAM,KAAK,KAAK;AAAA,QACnB,OACI;AACD,gBAAM,KAAK,QAAQ,YAAY,OAAOyB,SAAQ,QAAQ,GAAG,KAAK;AAAA,QACjE;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK;AACD,gBAAO,GAAI,QAAQ,QAAQ;AAAA,UACvBzB,MAAK,KAAK,OAAO,YAAY;AAAA,UAC7BA,MAAK,KAAK,OAAO,gBAAgB;AAAA,QACjD,CAAa;AAAA,MACL,KAAK,mBAAmB;AACpB,YAAI0B,UAAY,GAAA,QAAQ,YAAY,IAAI,EAAE,KAAK1B,MAAK,IAAI,OAAO,MAAM,EAAE,IAAI,SAAU,SAAS;AAC1F,cAAI,sBAAsB,OAAO,MAAM,KAAK;AACxC,mBAAO,QAAQ,OAAO,GAAG;AAAA,UAC5B;AACD,iBAAO;AAAA,QACV,CAAA,CAAC;AACF,YAAI0B,OAAM,WAAW;AACjB,kBAAW,GAAA,QAAQ,YAAY,MAAMD,QAAO;AAAA,QAC/C;AACD,mBAAW,QAAQ,QAAQ,CAAC,OAAOC,OAAM,OAAOD,SAAQ,QAAQ,GAAG,KAAK,CAAC;AAAA,MAC5E;AAAA,MACD,KAAK;AACD,cAAM,KAAK,WAAWzB,MAAK,KAAK,OAAO,UAAU,GAAG,GAAG;AACvD,YAAI,EAAE,WAAW;AACb,gBAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,WAAW,CAAC;AAAA,QAChD;AACD,YAAI,EAAE,gBAAgB;AAClB,gBAAM,KAAKA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAAA,QAChD;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACpC,KAAK;AACD,YAAI,EAAE,UAAU;AACZ,gBAAM,KAAK,SAAS;AAAA,QACvB;AACD,cAAM,KAAK,WAAWA,MAAK,KAAK,OAAO,IAAI,GAAG,OAAOA,MAAK,KAAK,OAAO,iBAAiB,CAAC;AACxF,eAAO,mBAAsB,GAAA,QAAQ,QAAQ,KAAK,CAAC;AAAA,MACvD,KAAK;AACD,mBAAW,QAAQ,QAAQ,CAAC,YAAYA,MAAK,KAAK,OAAO,YAAY,GAAG,GAAG,CAAC;AAAA,MAChF,KAAK,uBAAuB;AACxB,YAAI,SAASA,MAAK;AAClB,YAAI,OAAO,SAAS,uBAAuB;AACvC,gBAAM,KAAK,GAAG;AAAA,QACjB,OACI;AACD,cAAI,EAAE,SAAS;AACX,kBAAM,KAAK,UAAU;AAAA,UACxB;AACD,cAAI,CAAC,EAAE,QAAQ;AACX,gBAAI,aAAa,EAAE,GAAG,SAAS,mBAC1B,EAAE,GAAG,SAAS,aAAa,OAAO,EAAE,GAAG,UAAU;AACtD,gBAAI,YAAY;AACZ,oBAAM,KAAK,SAAS;AAAA,YACvB,WACQ,EAAE,OAAO,EAAE,IAAI,SAAS,EAAE,GAAG,KAAK;AACvC,kBAAI,SAAS,EAAE,IAAI,MAAM,YAAY,EAAE,IAAI,OAAO,EAAE,GAAG,IAAI,KAAK;AAKhE,kBAAI,OAAO,QAAQ,QAAQ,KAAK,GAAG;AAC/B,sBAAM,KAAK,SAAS;AAAA,cACvB,OACI;AACD,sBAAM,KAAK,YAAY;AAAA,cAC1B;AAAA,YACJ,OACI;AACD,oBAAM,KAAK,YAAY;AAAA,YAC1B;AAAA,UACJ;AAAA,QACJ;AACD,cAAM,KAAKA,MAAK,KAAK,OAAO,IAAI,CAAC;AACjC,YAAI,EAAE,MAAM;AACR,gBAAM,KAAK,GAAG;AACd,gBAAM,KAAKA,MAAK,KAAK,OAAO,MAAM,CAAC;AAAA,QACtC;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK,iBAAiB;AAClB,YAAI,QAAQA,MAAK,KAAK,SAAU,UAAU;AAAE,iBAAO,uBAAuB,UAAUyB,UAAS,KAAK;AAAA,QAAI,GAAE,MAAM;AAC9G,YAAI,MAAM,WAAW;AACjB,gBAAM,KAAK,IAAI;AAAA,QAClB,OACI;AACD,gBAAM,KAAK,OAAO,MAAM,OAAOA,SAAQ,QAAQ,GAAG,KAAK;AAAA,QAC1D;AACD,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MACD,KAAK,6BAA6B;AAC9B,cAAM,KAAKzB,MAAK,KAAK,OAAO,YAAY,GAAGA,MAAK,KAAK,OAAO,gBAAgB,CAAC;AAC7E,mBAAW,QAAQ,QAAQ,KAAK;AAAA,MACnC;AAAA,MAED,KAAK;AACD,gBAAW,GAAA,QAAQ,QAAQ,CAAC,KAAKA,MAAK,KAAK,OAAO,MAAM,CAAC,CAAC;AAAA,MAE9D,KAAK;AACD,mBAAW,QAAQ,YAAY,GAAG;AAAA,MAItC,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL;AACI;AACA,cAAM,IAAI,MAAM,mBAAmB,KAAK,UAAU,EAAE,IAAI,CAAC;AAAA,IAChE;AAAA,EACJ;AACD,WAAS,gBAAgBA,OAAM,WAAW;AACtC,QAAI,QAAQ,CAAA;AACZ,QAAI,OAAOA,MAAK;AAChB,QAAI,KAAK,cACL,KAAK,WAAW,SAAS;AAAA;AAAA,IAGzB,CAACgB,MAAK,2BAA2BhB,KAAI,GAAG;AACxC,MAAAA,MAAK,KAAK,SAAU,eAAe;AAC/B,cAAM,KAAK,UAAU,aAAa,GAAG,IAAI;AAAA,MAC5C,GAAE,YAAY;AAAA,IAClB,WACQgB,MAAK,oBAAoB,IAAI,KAClC,KAAK,eACL,KAAK,YAAY,YAAY;AAG7B,MAAAhB,MAAK,KAAK,SAAU,eAAe;AAC/B,cAAM,KAAK,UAAU,aAAa,GAAG,IAAI;AAAA,MACrD,GAAW,eAAe,YAAY;AAAA,IACjC;AACD,eAAW,QAAQ,QAAQ,KAAK;AAAA,EACnC;AACD,WAAS,uBAAuBA,OAAMyB,UAAS,OAAO;AAClD,QAAI,WAAW,CAAA;AACf,QAAI,aAAa;AACjB,QAAI,eAAe;AACnB,IAAAzB,MAAK,KAAK,SAAU,UAAU;AAC1B,UAAI,OAAO,SAAS;AAGpB,UAAI,CAAC,MAAM;AACP;AAAA,MACH;AAGD,UAAI,KAAK,SAAS,oBACd,EAAE,KAAK,YAAY,KAAK,SAAS,SAAS,IAAI;AAC9C;AAAA,MACH;AACD,UAAIH,YAAW,QAAQ,MAAM,IAAI,GAAG;AAIhC,qBAAa;AAAA,MAChB,WACQA,YAAW,UAAU,MAAM,IAAI,GAAG;AACvC,uBAAe;AAAA,MAClB,OACI;AAKD,iBAAS,OAAO,IAAI;AAAA,MACvB;AAID,eAAS,KAAK;AAAA,QACV,MAAM;AAAA,QACN,SAAS,MAAM,QAAQ;AAAA,MACnC,CAAS;AAAA,IACT,CAAK;AACD,QAAI,YAAY;AACZ,OAAA,GAAI,iBAAiB,SAAS,iBAAiB,OAAO,mHACE;AAAA,IAC3D;AACD,QAAI,oBAAoB;AACxB,QAAI,MAAM,SAAS;AACnB,QAAI,QAAQ,CAAA;AACZ,aAAS,QAAQ,SAAU,MAAM,GAAG;AAChC,UAAI,UAAU,KAAK;AACnB,UAAI,OAAO,KAAK;AAChB,UAAI,YAAY,QAAQ,SAAS;AACjC,UAAI,WAAW,IAAI;AACnB,UAAI,UAAU,IAAI,MAAM;AACxB,UAAI;AACJ,UAAI;AACJ,UAAI6B,SAAQ,QAAQ,KAAK,OAAO,KAAK,IAAI;AACzC,UAAI,UAAUA,UAASD,SAAQ,mBAAmBT,MAAK,WAAW,MAAMU,MAAK;AAC7E,UAAI,UAAU;AACV,YAAI,SAAS;AACT,cAAI,cAAcA,OAAM,WAAW,QAAQ,OAAO,IAAI;AACtD,cAAI,kBAAkB,cAAc,YAAY,OAAO;AACvD,cAAI,aAAa,QAAQ,MAAM,OAAO;AACtC,yBAAe,MAAM,aAAa,CAAC,EAAE,KAAK,IAAI;AAAA,QACjD,OACI;AACD,yBAAe,YAAY,SAAS;AAAA,QACvC;AAAA,MACJ,OACI;AACD,uBAAe;AAAA,MAClB;AACD,UAAI,SAAS;AACT,YAAI,SAAS;AACT,cAAI,WAAWA,OAAM,WAAW,QAAQ,GAAG;AAC3C,cAAI,eAAe,WAAW,SAAS,OAAOA,OAAM;AACpD,cAAI,cAAc,eAAe,QAAQ,IAAI;AAC7C,0BAAgB,MAAM,cAAc,CAAC,EAAE,KAAK,IAAI;AAAA,QACnD,OACI;AACD,0BAAgB,YAAY,SAAS;AAAA,QACxC;AAAA,MACJ,OACI;AACD,wBAAgB;AAAA,MACnB;AACD,YAAM,KAAK,SAAS,mBAAmB,YAAY,GAAG,OAAO;AAC7D,UAAI,SAAS;AACT,4BAAoB;AAAA,MACvB,WACQ,eAAe;AACpB,cAAM,KAAK,aAAa;AAAA,MAC3B;AAAA,IACT,CAAK;AACD,eAAW,QAAQ,QAAQ,KAAK;AAAA,EACnC;AACD,WAAS,SAAS,IAAI,IAAI;AACtB,QAAI,CAAC,MAAM,CAAC,IAAI;AACZ,iBAAW,QAAQ,YAAY,EAAE;AAAA,IACpC;AACD,QAAI,CAAC,IAAI;AACL,iBAAW,QAAQ,YAAY,EAAE;AAAA,IACpC;AACD,QAAI,CAAC,IAAI;AACL,iBAAW,QAAQ,YAAY,EAAE;AAAA,IACpC;AACD,QAAI,eAAkB,GAAA,QAAQ,YAAY,EAAE;AAC5C,QAAI,eAAkB,GAAA,QAAQ,YAAY,EAAE;AAC5C,QAAI,YAAY,SAAS,YAAY,QAAQ;AACzC,aAAO;AAAA,IACV;AACD,WAAO;AAAA,EACV;AACD,WAAS,0BAA0B,MAAM;AACrC,QAAI,QAAQ,CAAA;AACZ,QAAI,KAAK,SAAS;AACd,YAAM,KAAK,UAAU;AAAA,IACxB;AACD,QAAI,SAAS,KAAK,iBAAiB,KAAK;AACxC,QAAI,OAAO,WAAW,UAAU;AAC5B,YAAM,KAAK,QAAQ,GAAG;AAAA,IACzB;AACD,QAAI,KAAK,QAAQ;AACb,YAAM,KAAK,SAAS;AAAA,IACvB;AACD,QAAI,KAAK,UAAU;AACf,YAAM,KAAK,WAAW;AAAA,IACzB;AACD,QAAI,KAAK,UAAU;AACf,YAAM,KAAK,WAAW;AAAA,IACzB;AACD,QAAI,KAAK,UAAU;AACf,YAAM,KAAK,WAAW;AAAA,IACzB;AACD,WAAO;AAAA,EACV;AACD,WAAS,YAAY1B,OAAMyB,UAAS,OAAO;AACvC,QAAI,OAAOzB,MAAK;AAChB,QAAI,OAAO,KAAK;AAChB,QAAI,QAAQ,CAAA;AACZ,QAAI,YAAY,KAAK;AACrB,QAAI,CAACH,YAAW,mBAAmB,MAAM,SAAS,GAAG;AACjD,kBAAY;AAAA,IACf;AACD,UAAM,KAAK,MAAM,OAAO,0BAA0B,IAAI,CAAC;AACvD,QAAI,UAAU,OAAO;AACjB,YAAM,KAAK,QAAQ;AAAA,IACtB;AACD,QAAI,UAAU,WAAW;AACrB,YAAM,KAAK,GAAG;AAAA,IACjB;AACD,QAAI,SAAS,SAAS,SAAS,OAAO;AAClC,YAAM,KAAK,MAAM,GAAG;AAAA,IACvB;AACD,QAAI,MAAMG,MAAK,KAAK,OAAO,KAAK;AAChC,QAAI,KAAK,UAAU;AACf,aAAU,GAAA,QAAQ,QAAQ,CAAC,KAAK,KAAK,GAAG,CAAC;AAAA,IAC5C;AACD,UAAM,KAAK,GAAG;AACd,QAAI,KAAK,UAAU;AACf,YAAM,KAAK,GAAG;AAAA,IACjB;AACD,QAAI,SAAS,WAAW;AACpB,YAAM,KAAKA,MAAK,KAAK,OAAO,gBAAgB,GAAG,KAAK,oBAAoBA,OAAMyB,UAAS,KAAK,GAAG,KAAKzB,MAAK,KAAK,OAAO,YAAY,CAAC;AAClI,UAAI,KAAK,MAAM;AACX,cAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,MAAM,CAAC;AAAA,MAC3C,OACI;AACD,cAAM,KAAK,GAAG;AAAA,MACjB;AAAA,IACJ,OACI;AACD,YAAM,KAAKA,MAAK,KAAK,OAAO,SAAS,gBAAgB,GAAG,KAAKA,MAAK,KAAK,SAAU,WAAW;AAAE,eAAO,oBAAoB,WAAWyB,UAAS,KAAK;AAAA,MAAE,GAAI,OAAO,GAAG,KAAKzB,MAAK,KAAK,OAAO,SAAS,YAAY,CAAC;AAC9M,UAAI,UAAU,MAAM;AAChB,cAAM,KAAK,KAAKA,MAAK,KAAK,OAAO,SAAS,MAAM,CAAC;AAAA,MACpD,OACI;AACD,cAAM,KAAK,GAAG;AAAA,MACjB;AAAA,IACJ;AACD,eAAW,QAAQ,QAAQ,KAAK;AAAA,EACnC;AACD,WAAS,mBAAmBA,OAAMyB,UAAS,OAAO;AAC9C,QAAI,UAAUzB,MAAK,IAAI,OAAO,WAAW;AACzC,QAAI,gBAAgBgB,MAAK,uBAAuBS,UAAS,YAAY;AACrE,QAAI,UAAS,GAAI,QAAQ,YAAY,IAAI,EAAE,KAAK,OAAO;AACvD,QAAI,OAAO,cAAc,CAAC,IAAIA,SAAQ,YAAY;AAC9C,gBAAa,GAAA,QAAQ,YAAY,KAAK,EAAE,KAAK,OAAO;AACpD,cAAO,GAAI,QAAQ,QAAQ;AAAA,QACvB;AAAA,QACA,OAAO,OAAOA,SAAQ,QAAQ;AAAA,QAC9B,gBAAgB,SAAS;AAAA,MACrC,CAAS;AAAA,IACJ;AACD,YAAO,GAAI,QAAQ,QAAQ,CAAC,KAAK,QAAQ,GAAG,CAAC;AAAA,EAChD;AACD,WAAS,oBAAoBzB,OAAMyB,UAAS,OAAO;AAC/C,QAAI,MAAMzB,MAAK;AACf,QAAI;AACJ,QAAI,UAAU,CAAA;AACd,QAAI,IAAI,QAAQ;AACZ,eAAS,IAAI;AACb,gBAAUA,MAAK,IAAI,OAAO,QAAQ;AAAA,IACrC,WACQ,IAAI,YAAY;AACrB,eAAS,IAAI;AACb,gBAAUA,MAAK,IAAI,OAAO,YAAY;AAAA,IACzC;AACD,QAAI,IAAI,UAAU;AACd,MAAAA,MAAK,KAAK,SAAU,aAAa;AAC7B,YAAI,IAAI,YAAY;AACpB,YAAI,IAAI,QAAQ,CAAC;AACjB,YAAI,KAAK,YAAY,YAAY;AAC7B,kBAAQ,CAAC,KAAQ,GAAA,QAAQ,QAAQ,CAAC,GAAG,OAAO,MAAM,WAAW,CAAC,CAAC;AAAA,QAClE;AAAA,MACJ,GAAE,UAAU;AAAA,IAChB;AACD,QAAI,IAAI,MAAM;AACV,cAAQ,SAAS,QAAQ,QAAQ,CAAC,OAAOA,MAAK,KAAK,OAAO,MAAM,CAAC,CAAC,CAAC;AAAA,IACtE;AACD,QAAI,UAAS,GAAI,QAAQ,YAAY,IAAI,EAAE,KAAK,OAAO;AACvD,QAAI,OAAO,SAAS,KAAK,OAAO,cAAc,CAAC,IAAIyB,SAAQ,YAAY;AACnE,gBAAa,GAAA,QAAQ,YAAY,KAAK,EAAE,KAAK,OAAO;AACpD,UAAIT,MAAK,uBAAuBS,UAAS,YAAY,KACjD,CAAC,IAAI,QACL,OAAO,OAAO,SAAS,CAAC,EAAE,SAAS,eAAe;AAClD,kBAAa,GAAA,QAAQ,QAAQ,CAAC,QAAQ,KAAK,CAAC;AAAA,MAC/C,OACI;AACD,kBAAa,GAAA,QAAQ,QAAQ,CAAC,QAAQ,IAAI,CAAC;AAAA,MAC9C;AACD,cAAW,GAAA,QAAQ,QAAQ,CAAC,MAAM,OAAO,OAAOA,SAAQ,QAAQ,CAAC,CAAC;AAAA,IACrE;AACD,WAAO;AAAA,EACV;AACD,WAAS,2BAA2BzB,OAAMyB,UAAS,OAAO;AACtD,QAAI,IAAIzB,MAAK;AACb,QAAI,EAAE,cAAc,EAAE,WAAW,SAAS,GAAG;AACzC,UAAI,QAAQ,CAAC,WAAW;AACxB,UAAI,UAAUA,MAAK,IAAI,OAAO,YAAY;AAC1C,UAAI,QAAO,GAAI,QAAQ,YAAY,IAAI,EAAE,KAAK,OAAO;AACrD,UAAI,KAAK,SAAS,KAAK,KAAK,cAAc,CAAC,IAAIyB,SAAQ,YAAY;AAC/D,cAAM,KAAK,OAAU,GAAA,QAAQ,YAAY,KAAK,EAAE,KAAK,OAAO,EAAE,OAAOA,SAAQ,QAAQ,GAAG,KAAK;AAAA,MAChG,OACI;AACD,cAAM,KAAK,KAAK,MAAM,IAAI;AAAA,MAC7B;AACD,iBAAW,QAAQ,QAAQ,KAAK;AAAA,IACnC;AACD,eAAW,QAAQ,YAAY,EAAE;AAAA,EACpC;AACD,WAAS,uBAAuBzB,OAAMyB,UAAS,OAAO;AAClD,QAAI,OAAOzB,MAAK;AAChB,QAAI,QAAQ,CAAC,SAAS;AACtB,QAAI,KAAK,cAAc,KAAK,eAAe,QAAQ;AAC/C,UAAI,CAAC,KAAK,aAAa;AACnB,cAAM,KAAK,OAAO;AAAA,MACrB;AAAA,IACJ;AACD,QAAI,oBAAoByB,SAAQ;AAChC,IAAA5B,YAAW,YAAY,OAAO,IAAI;AAClC,QAAI,KAAK,SAAS,KAAK,KAAK,SAAS,4BAA4B;AAC7D,YAAM,KAAK,UAAU;AAAA,IACxB;AACD,QAAI,KAAK,aAAa;AAClB,YAAM,KAAKG,MAAK,KAAK,OAAO,aAAa,CAAC;AAAA,IAC7C,WACQ,KAAK,YAAY;AACtB,UAAI,KAAK,WAAW,WAAW,KAC3B,KAAK,WAAW,CAAC,EAAE,SAAS,wBAAwB;AACpD,cAAM,KAAK,GAAG;AAAA,MACjB,WACQ,KAAK,WAAW,WAAW,GAAG;AACnC,cAAM,KAAK,IAAI;AAAA,MAClB,WACQ,KAAK,WAAW,CAAC,EAAE,SAAS,4BACjC,KAAK,WAAW,CAAC,EAAE,SAAS,4BAA4B;AACxD,YAAI,uBAAuB,CAAA;AAC3B,YAAI,qBAAqB,CAAA;AACzB,QAAAA,MAAK,KAAK,SAAU,eAAe;AAC/B,cAAI,OAAO,cAAc;AACzB,cAAI,KAAK,SAAS,4BACd,KAAK,SAAS,4BAA4B;AAC1C,iCAAqB,KAAK,MAAM,aAAa,CAAC;AAAA,UACjD,OACI;AACD,+BAAmB,KAAK,MAAM,aAAa,CAAC;AAAA,UAC/C;AAAA,QACJ,GAAE,YAAY;AACf,6BAAqB,QAAQ,SAAU0B,QAAO,GAAG;AAC7C,cAAI,IAAI,GAAG;AACP,kBAAM,KAAK,IAAI;AAAA,UAClB;AACD,gBAAM,KAAKA,MAAK;AAAA,QAChC,CAAa;AACD,YAAI,mBAAmB,SAAS,GAAG;AAC/B,cAAI,WAAU,GAAI,QAAQ,YAAY,IAAI,EAAE,KAAK,kBAAkB;AACnE,cAAI,QAAQ,cAAc,CAAC,IAAID,SAAQ,YAAY;AAC/C,uBAAU,GAAI,QAAQ,QAAQ;AAAA,kBACtB,QAAQ,YAAY,KAAK,EAAE,KAAK,kBAAkB,EAAE,OAAOA,SAAQ,QAAQ;AAAA,cAC/E;AAAA,YACxB,CAAqB;AAAA,UACJ;AACD,cAAI,qBAAqB,SAAS,GAAG;AACjC,kBAAM,KAAK,IAAI;AAAA,UAClB;AACD,cAAI,QAAQ,SAAS,GAAG;AACpB,kBAAM,KAAK,OAAO,SAAS,KAAK;AAAA,UACnC,WACQA,SAAQ,oBAAoB;AACjC,kBAAM,KAAK,MAAM,SAAS,IAAI;AAAA,UACjC,OACI;AACD,kBAAM,KAAK,KAAK,SAAS,GAAG;AAAA,UAC/B;AAAA,QACJ;AAAA,MACJ,OACI;AACD,cAAM,KAAK,oBAAoB,OAAO,SAAS,QAAQ,YAAY,IAAI,EAAE,KAAKzB,MAAK,IAAI,OAAO,YAAY,CAAC,GAAG,oBAAoB,OAAO,GAAG;AAAA,MAC/I;AACD,UAAI,KAAK,QAAQ;AACb,cAAM,KAAK,UAAUA,MAAK,KAAK,OAAO,QAAQ,GAAG,2BAA2BA,OAAMyB,UAAS,KAAK,CAAC;AAAA,MACpG;AAAA,IACJ;AACD,QAAIC,UAAY,GAAA,QAAQ,QAAQ,KAAK;AACrC,QAAI,sBAAsBA,MAAK,MAAM,OACjC,EAAE,KAAK,gBACF,KAAK,YAAY,SAAS,yBACvB,KAAK,YAAY,SAAS,sBAC1B,KAAK,YAAY,SAAS,yBAC1B,KAAK,YAAY,SAAS,4BAC1B,KAAK,YAAY,SAAS,uBAAuB;AACzD,MAAAA,UAAY,GAAA,QAAQ,QAAQ,CAACA,QAAO,GAAG,CAAC;AAAA,IAC3C;AACD,WAAOA;AAAA,EACV;AACD,WAAS,qBAAqB1B,OAAM,OAAO;AACvC,QAAI,mBAAmBgB,MAAK,2BAA2BhB,KAAI;AAC3D,QAAI,kBAAkB;AAClB,OAAA,GAAI,iBAAiB,SAAS,iBAAiB,SAAS,0BAA0B;AAAA,IACrF,OACI;AAID,YAAM,QAAQ,UAAU;AAAA,IAC3B;AACD,eAAW,QAAQ,QAAQ,KAAK;AAAA,EACnC;AACD,WAAS,cAAcA,OAAM,OAAO;AAChC,WAAOA,MAAK,KAAK,SAAU,cAAc;AACrC,UAAI,QAAQ,aAAa;AACzB,UAAI,OAAO;AACP,YAAI,UAAU,QAAQ;AAClB,qBAAW,QAAQ,YAAY,GAAG;AAAA,QACrC;AACD,YAAI,UAAU,SAAS;AACnB,qBAAW,QAAQ,YAAY,GAAG;AAAA,QACrC;AACD,eAAO,MAAM,YAAY;AAAA,MAC5B;AACD,iBAAW,QAAQ,YAAY,EAAE;AAAA,IACpC,GAAE,UAAU;AAAA,EAChB;AACD,WAAS,aAAa,QAAQyB,UAAS;AACnC,QAAI,OAAO,SAAS;AAChB,cAAO,GAAI,QAAQ,QAAQ,CAAC,KAAK,MAAM,CAAC;AAC5C,eAAW,QAAQ,QAAQ,CAAC,MAAM,kBAAkB,MAAM,EAAE,OAAOA,SAAQ,QAAQ,CAAC,CAAC;AAAA,EACxF;AACD,WAAS,sBAAsBC,QAAO;AAClC,QAAI,MAAMA,OAAM;AAChB,OAAG;AACC,UAAI,KAAKA,OAAM,OAAO,GAAG;AACzB,UAAI,KAAK,KAAK,EAAE;AACZ,eAAO;AAAA,IACnB,SAAaA,OAAM,QAAQ,GAAG;AAAA,EAC7B;AACD,WAAS,cAAcA,QAAO;AAC1B,WAAO,sBAAsBA,MAAK,MAAM;AAAA,EAC3C;AACD,WAAS,WAAW,KAAK;AACrB,WAAO,IAAI,QAAQ,SAAS,SAAU,GAAG;AAAE,aAAQ,MAAM,MAAM,MAAM;AAAA,IAAO,CAAA;AAAA,EAC/E;AACD,WAAS,eAAe,MAAM;AAC1B,QAAI,QAAQzC,OAAM,cAAc,MAAM,OAAO;AAC7C,QAAI,QAAQA,OAAM,cAAc,MAAM,OAAO;AAC7C,QAAI,SAAS,OAAO,MAAM,QAAQ,YAAY,SAAS,MAAM,UAAU;AACnE,aAAO,MAAM;AAAA,IAChB;AACD,QAAI,KAAK,SAAS,WAAW;AACzB,UAAI,MAAM,KAAK;AACf,UAAI,OAAO,QAAQ,YAAY,SAAS,KAAK;AACzC,eAAO;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AACD,WAAS,gBAAgB,KAAK;AAC1B,WAAO,KAAK,UAAU,GAAG,EAAE,QAAQ,mBAAmB,SAAU,GAAG;AAC/D,aAAO,QAAQ,EAAE,WAAW,CAAC,EAAE,SAAS,EAAE;AAAA,IAClD,CAAK;AAAA,EACJ;AACD,WAAS,QAAQ,KAAKwC,UAAS;AAC3B,aAAS,OAAO,GAAG;AACnB,YAAQA,SAAQ,OAAK;AAAA,MACjB,KAAK,QAAQ;AACT,YAAI,SAAS,gBAAgB,GAAG;AAChC,YAAI,SAAS,WAAW,gBAAgB,WAAW,GAAG,CAAC,CAAC;AACxD,eAAO,OAAO,SAAS,OAAO,SAAS,SAAS;AAAA,MACnD;AAAA,MACD,KAAK;AACD,eAAO,WAAW,gBAAgB,WAAW,GAAG,CAAC,CAAC;AAAA,MACtD,KAAK;AAAA,MACL;AACI,eAAO,gBAAgB,GAAG;AAAA,IACjC;AAAA,EACJ;AACD,WAAS,kBAAkBC,QAAO;AAC9B,QAAI,MAAM,sBAAsBA,MAAK;AACrC,QAAI,CAAC,OAAO,OAAO,QAAQ,GAAG,IAAI;AAC9B,cAAO,GAAI,QAAQ,QAAQ,CAACA,QAAO,GAAG,CAAC;AAC3C,WAAOA;AAAA,EACX;;;;ACx1EA,SAAO,eAAclE,UAAU,cAAc,EAAE,OAAO,KAAI,CAAE;AAC5D,EAAAA,SAAA,MAAcA,uBAAsBA,SAAgB,QAAAA,SAAA,QAAgBA,iBAAgBA,SAAgB,QAAA;AACpG,MAAI,UAAU;AACd,MAAI,OAAO,QAAQ,gBAAgB,UAAa;AAChD,MAAIyB,SAAQ,QAAQ,aAAaZ,YAAoB,CAAA;AACrD,EAAAb,SAAA,QAAgByB;AAChB,MAAI,WAAWX;AACf,SAAO,eAAed,UAAS,SAAS,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,WAAO,SAAS;AAAA,EAAM,EAAI,CAAA;AACzG,MAAI,YAAYgB;AAchB,MAAI,cAAcH;AAClB,SAAO,eAAeb,UAAS,SAAS,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,WAAO,YAAY;AAAA,EAAM,EAAI,CAAA;AAK5G,WAAS,MAAM,MAAMiE,UAAS;AAC1B,WAAO,IAAI,UAAU,QAAQA,QAAO,EAAE,MAAM,IAAI;AAAA,EACnD;AACD,EAAAjE,SAAA,QAAgB;AAIhB,WAAS,YAAY,MAAMiE,UAAS;AAChC,WAAO,IAAI,UAAU,QAAQA,QAAO,EAAE,iBAAiB,IAAI;AAAA,EAC9D;AACD,EAAAjE,SAAA,cAAsB;AAItB,WAAS,IAAI,aAAaiE,UAAS;AAC/B,WAAO,QAAQ,QAAQ,KAAK,CAAC,GAAG,aAAaA,QAAO;AAAA,EACvD;AACD,EAAAjE,SAAA,MAAc;AACd,WAAS,QAAQwC,OAAM,aAAayB,UAAS;AACzC,SAAK,QAAQ,SAASzB,OAAM,SAAS,SAAU,KAAKwB,OAAM;AACtD,UAAI,KAAK;AACL,gBAAQ,MAAM,GAAG;AACjB;AAAA,MACH;AACD,gBAAUA,OAAM,aAAaC,QAAO;AAAA,IAC5C,CAAK;AAAA,EACJ;AACD,WAAS,iBAAiBoH,SAAQ;AAC9B,YAAQ,OAAO,MAAMA,OAAM;AAAA,EAC9B;AACD,WAAS,UAAUrH,OAAM,aAAaC,UAAS;AAC3C,QAAI,YAAaA,YAAWA,SAAQ,aAAc;AAClD,iBAAgB,GAAA,SAAS,OAAOD,OAAMC,QAAO,GAAG,SAAU,MAAM;AAC5D,gBAAU,MAAM,MAAMA,QAAO,EAAE,IAAI;AAAA,IAC3C,CAAK;AAAA,EACL;;AC/DA,MAAA,EAAA,OAAuB,IAAA,QAAA,QAAA;AAQvB,MAAM,MAAM,QAAQ;AAKpB,MAAqB,aAAa,OAAO;AAAA,EAAzC;AAAA;AACE,sCAAa;AAEb;AAAA,sCAAa;AAEb;AAAA,6CAAoBqH,SAAO,SAAS;AAAA,MAClC,WAAW;AAAA,MACX,MAAM;AAAA,MACN,aAAa;AAAA,IAAA,CACd;AAED;AAAA,mCAAUA,SAAO,SAAS;AAAA,MACxB,WAAW;AAAA,MACX,MAAM;AAAA,MACN,aAAa;AAAA,IAAA,CACd;AAED;AAAA,qCAAY;AA4BZ;AAAA,sCAAa,CAAA;AA8Cb;AAAA,uCAAwB,CAAA;AAAA;AAAA,EAxExB,MAAM,SAAS;AACL,YAAA,IAAI,UAAU,IAAI;AAG1B,eAAW,OAAO;AAClB,SAAK,WAAW;AAAA,MACd;AAAA;AAAA,QAEE,OAAO,WAAW;AAAA;AAAA,IAAA;AAIjB,SAAA,SAAS,GAAG,kBAAkB,MAAM;AACvC,WAAK,cAAc;IAAC,CACrB;AAGI,SAAA,aAAa,YAAY,KAAK,YAAY,KAAK,IAAI,GAAG,KAAK,UAAU;AAC1E,SAAK,WAAW,KAAK,MAAM,cAAc,KAAK,UAAU,CAAC;AAGhD,aAAA,KAAK,UAAU,IAAI,eAAe;AACtC,SAAA,WAAW,KAAK,MAAM,SAAS,KAAK,UAAU,OAAO,eAAe,CAAC;AAAA,EAC5E;AAAA,EAIA,MAAM,WAAW;AACf,SAAK,WAAW,QAAQ,CAAC,OAAO,GAAI,CAAA;AAAA,EACtC;AAAA;AAAA,EAGA,MAAM,cAAc;AAClB,QAAI,KAAK,WAAW;AAElB;AAAA,IACF;AACM,UAAA,UACJ,CAAC,GAAG,SAAS,iBAAiB,eAAe,CAAC,EAAE,OAAO,CAAC,OAAO;AACzD,UAAA,EAAE,cAAc,cAAc;AACzB,eAAA;AAAA,MACT;AACI,UAAA,GAAG,QAAQ,UAAU,KAAK,YAAY,SAAS,GAAG,QAAQ,MAAM,GAAG;AAE9D,eAAA;AAAA,MACT;AACO,aAAA;AAAA,IAAA,CACR,EACD,IAAI,CAAC,OAAO;AACN,YAAA,KAAK,GAAG,QAAQ;AACf,aAAA;AAAA,IAAA,CACR;AAGD,QAAI,CAAC,KAAK,kBAAkB,MAAW,KAAA,QAAQ,WAAW,GAAG;AAC3D;AAAA,IACF;AAEI,QAAA;AACF,WAAK,YAAY;AACX,YAAA,YAAY,MAAM,eAAe,OAAO;AAE1C,UAAA,aAAa,UAAU,SAAS,GAAG;AAC/B,cAAA,QAAQ,IAAI,UAAU,IAAI,KAAK,SAAS,KAAK,IAAI,CAAC,CAAC;AAAA,MAC3D;AAAA,aACO,OAAO;AACd,UAAI,QAAQ,KAAK;AAAA,IAAA,UACjB;AACA,WAAK,YAAY;AAAA,IACnB;AAAA,EACF;AAAA;AAAA,EAIA,MAAM,aAAa,UAAkB;AACnC,UAAM,SAAS,MAAM,eAAe,CAAC,QAAQ,CAAC;AAC9C,WAAO,KAAK,SAAS,OAAO,CAAC,CAAC;AAAA,EAChC;AAAA,EACA,MAAM,SAAS,OAAoB;AAEjC,UAAM,OAAO;AAAA,EAAgB,MAAM,OAAO;AAAA;AACpC,UAAA,MAAMC,aAAa,IAAI;AACvB,UAAA,IAAIC,OAAa,MAAA;AAEvB,UAAM,OAAc,IAAI,QAAQ,KAAK,CAAC,EAAE,WAAW,KAAK;AACxD,QAAI,KAAK,KAAK,CAAC,SAAS,KAAK,SAAS,iBAAiB,EAAG;AAAA,SACnD;AACC,YAAA,UAAU,KAAK;AAChB,UAAA,QAAQ,OAAO,uBAAwB;AAE1C,aAAK,KAAK,EAAE,gBAAgB,QAAQ,UAAU,CAAC;AAAA,MACjD;AAAA,IACF;AACA,UAAM,SAASC,OAAAA,MAAa,GAAG,EAAE;AACjC,QAAI,YAAY,MAAM,KAAK,MAAM,EAAE;AAEnC,UAAM,UAAU;AAChB,QAAI,OAAO,OAAO,IAAI,KAAK,QAAQ,SAAS;AAC1C,WAAK,QAAQ,IAAI,OAAO,OAAO,CAAC;AAAA,IAClC;AAIA,QAAI,kBAAkB,MAAM;AACxB,QAAA,gBAAgB,KAAK,eAAe,GAAG;AACzC,wBAAkB,gBAAgB,QAAQ,iBAAiB,YAAY,OAAO,GAAG;AAAA,IAAA,OAC5E;AACL,wBAAkB,gBAAgB,QAAQ,MAAM,aAAa,OAAO,GAAG;AAAA,IACzE;AACM,UAAA,mBAAmB,OAAO,SAAS;AACrC,QAAA,0BAA0B,KAAK,eAAe,GAAG;AACnD,wBAAkB,gBAAgB;AAAA,QAChC;AAAA,QACA,sBAAsB,WAAW,gBAAgB,CAAC;AAAA,MAAA;AAAA,IACpD,OACK;AACL,wBAAkB,gBAAgB;AAAA,QAChC;AAAA,QACA,uBAAuB,WAAW,gBAAgB,CAAC;AAAA,MAAA;AAAA,IAEvD;AAGM,UAAA,YAAY,YAAY,OAAO,mBAAmB,OAAO,eAAe,GAAG,MAAM,EAAE;AACrF,QAAA,cAAc,EAAE,IAAI,MAAM,IAAI,MAAM,MAAM,SAAS,UAAA,CAAW;AAE7D,SAAA,YAAY,KAAK,MAAM,EAAE;AACvB,WAAA;AAAA,EACT;AACF;AAEA,SAAS,oBAAoB;AACrB,QAAA,0BAAU;AACT,SAAA;AAAA,IACL,IAAI,YAAY;AAAA,IAChB,IAAI,aAAa;AAAA,IACjB,IAAI,QAAQ;AAAA,IACZ,IAAI,SAAS;AAAA,IACb,IAAI,WAAW;AAAA,IACf,IAAI,WAAW;AAAA,EAEd,EAAA,IAAI,CAAC,SAAS,KAAK,SAAW,EAAA,SAAS,GAAG,GAAG,CAAC,EAC9C,KAAK,EAAE;AACZ;AACA,SAAS,WAAW,KAAa;AAC/B,SAAO,IAAI,QAAQ,cAAc,SAAU,OAAO;AACzC,WAAA;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,MAAM;AAAA,MACN,KAAK;AAAA,EAAA,CACR;AACH;;","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77]}